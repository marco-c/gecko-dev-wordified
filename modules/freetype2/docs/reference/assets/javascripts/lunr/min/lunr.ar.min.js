!
function
(
e
r
)
{
"
function
"
=
=
typeof
define
&
&
define
.
amd
?
define
(
r
)
:
"
object
"
=
=
typeof
exports
?
module
.
exports
=
r
(
)
:
r
(
)
(
e
.
lunr
)
}
(
this
function
(
)
{
return
function
(
e
)
{
if
(
void
0
=
=
=
e
)
throw
new
Error
(
"
Lunr
is
not
present
.
Please
include
/
require
Lunr
before
this
script
.
"
)
;
if
(
void
0
=
=
=
e
.
stemmerSupport
)
throw
new
Error
(
"
Lunr
stemmer
support
is
not
present
.
Please
include
/
require
Lunr
stemmer
support
before
this
script
.
"
)
;
e
.
ar
=
function
(
)
{
this
.
pipeline
.
reset
(
)
this
.
pipeline
.
add
(
e
.
ar
.
trimmer
e
.
ar
.
stopWordFilter
e
.
ar
.
stemmer
)
this
.
searchPipeline
&
&
(
this
.
searchPipeline
.
reset
(
)
this
.
searchPipeline
.
add
(
e
.
ar
.
stemmer
)
)
}
e
.
ar
.
wordCharacters
=
"
-
"
e
.
ar
.
trimmer
=
e
.
trimmerSupport
.
generateTrimmer
(
e
.
ar
.
wordCharacters
)
e
.
Pipeline
.
registerFunction
(
e
.
ar
.
trimmer
"
trimmer
-
ar
"
)
e
.
ar
.
stemmer
=
function
(
)
{
var
e
=
this
;
return
e
.
result
=
!
1
e
.
preRemoved
=
!
1
e
.
sufRemoved
=
!
1
e
.
pre
=
{
pre1
:
"
"
pre2
:
"
"
pre3
:
"
"
pre4
:
"
"
}
e
.
suf
=
{
suf1
:
"
"
suf2
:
"
"
suf3
:
"
"
suf4
:
"
"
}
e
.
patterns
=
JSON
.
parse
(
'
{
"
pt43
"
:
[
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
1
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
"
m
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
1
"
m
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
2
"
m
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
2
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
"
m
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
"
m
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
"
m
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
2
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
2
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
"
m
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
"
m
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
]
}
]
"
pt53
"
:
[
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
2
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
2
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
"
m
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
5
"
m
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
2
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
"
m
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
"
m
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
5
"
m
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
3
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
"
m
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
1
"
m
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
2
"
m
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
"
m
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
5
"
m
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
2
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
"
m
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
5
"
m
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
2
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
"
m
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
1
"
m
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
2
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
"
m
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
5
"
m
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
"
m
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
5
"
m
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
}
]
}
]
"
pt63
"
:
[
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
"
m
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
5
}
{
"
c
"
:
"
"
"
l
"
:
6
"
m
"
:
5
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
3
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
"
m
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
5
}
{
"
c
"
:
"
"
"
l
"
:
6
"
m
"
:
5
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
5
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
4
}
]
}
]
"
pt54
"
:
[
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
"
m
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
"
m
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
"
m
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
5
}
{
"
c
"
:
"
"
"
l
"
:
6
"
m
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
]
"
mPt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
"
m
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
"
m
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
3
"
m
"
:
3
}
{
"
c
"
:
"
"
"
l
"
:
4
"
m
"
:
4
}
{
"
c
"
:
"
"
"
l
"
:
5
}
{
"
c
"
:
"
"
"
l
"
:
6
"
m
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
2
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
2
}
]
}
]
"
pt64
"
:
[
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
4
}
]
}
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
]
}
]
"
pt73
"
:
[
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
1
}
{
"
c
"
:
"
"
"
l
"
:
2
}
{
"
c
"
:
"
"
"
l
"
:
5
}
]
}
]
"
pt75
"
:
[
{
"
pt
"
:
[
{
"
c
"
:
"
"
"
l
"
:
0
}
{
"
c
"
:
"
"
"
l
"
:
5
}
]
}
]
}
'
)
e
.
execArray
=
[
"
cleanWord
"
"
removeDiacritics
"
"
cleanAlef
"
"
removeStopWords
"
"
normalizeHamzaAndAlef
"
"
removeStartWaw
"
"
removePre432
"
"
removeEndTaa
"
"
wordCheck
"
]
e
.
stem
=
function
(
)
{
var
r
=
0
;
for
(
e
.
result
=
!
1
e
.
preRemoved
=
!
1
e
.
sufRemoved
=
!
1
;
r
<
e
.
execArray
.
length
&
&
1
!
=
e
.
result
;
)
e
.
result
=
e
[
e
.
execArray
[
r
]
]
(
)
r
+
+
}
e
.
setCurrent
=
function
(
r
)
{
e
.
word
=
r
}
e
.
getCurrent
=
function
(
)
{
return
e
.
word
}
e
.
cleanWord
=
function
(
)
{
var
r
=
new
RegExp
(
"
[
^
-
]
"
)
;
return
e
.
word
=
e
.
word
.
replace
(
"
"
"
"
)
!
!
r
.
test
(
"
"
)
}
e
.
removeDiacritics
=
function
(
)
{
new
RegExp
(
"
[
-
]
"
)
;
return
e
.
word
=
e
.
word
.
replace
(
/
[
\
u064b
-
\
u065b
]
/
gi
"
"
)
!
1
}
e
.
cleanAlef
=
function
(
)
{
var
r
=
new
RegExp
(
"
[
]
"
)
;
return
e
.
word
=
e
.
word
.
replace
(
r
"
"
)
!
1
}
e
.
removeStopWords
=
function
(
)
{
if
(
"
"
.
split
(
"
"
)
.
indexOf
(
e
.
word
)
>
=
0
)
return
!
0
}
e
.
normalizeHamzaAndAlef
=
function
(
)
{
return
e
.
word
=
e
.
word
.
replace
(
"
"
"
"
)
e
.
word
=
e
.
word
.
replace
(
"
"
"
"
)
e
.
word
=
e
.
word
.
replace
(
/
(
[
\
u0627
]
)
\
1
+
/
gi
"
"
)
!
1
}
e
.
removeEndTaa
=
function
(
)
{
return
!
(
e
.
word
.
length
>
2
)
|
|
(
e
.
word
=
e
.
word
.
replace
(
/
[
\
u0627
]
/
"
"
)
e
.
word
=
e
.
word
.
replace
(
"
"
"
"
)
!
1
)
}
e
.
removeStartWaw
=
function
(
)
{
return
e
.
word
.
length
>
3
&
&
"
"
=
=
e
.
word
[
0
]
&
&
"
"
=
=
e
.
word
[
1
]
&
&
(
e
.
word
=
e
.
word
.
slice
(
1
)
)
!
1
}
e
.
removePre432
=
function
(
)
{
var
r
=
e
.
word
;
if
(
e
.
word
.
length
>
=
7
)
{
var
t
=
new
RegExp
(
"
^
(
"
+
e
.
pre
.
pre4
.
split
(
"
"
)
.
join
(
"
|
"
)
+
"
)
"
)
;
e
.
word
=
e
.
word
.
replace
(
t
"
"
)
}
if
(
e
.
word
=
=
r
&
&
e
.
word
.
length
>
=
6
)
{
var
c
=
new
RegExp
(
"
^
(
"
+
e
.
pre
.
pre3
.
split
(
"
"
)
.
join
(
"
|
"
)
+
"
)
"
)
;
e
.
word
=
e
.
word
.
replace
(
c
"
"
)
}
if
(
e
.
word
=
=
r
&
&
e
.
word
.
length
>
=
5
)
{
var
l
=
new
RegExp
(
"
^
(
"
+
e
.
pre
.
pre2
.
split
(
"
"
)
.
join
(
"
|
"
)
+
"
)
"
)
;
e
.
word
=
e
.
word
.
replace
(
l
"
"
)
}
return
r
!
=
e
.
word
&
&
(
e
.
preRemoved
=
!
0
)
!
1
}
e
.
patternCheck
=
function
(
r
)
{
for
(
var
t
=
0
;
t
<
r
.
length
;
t
+
+
)
{
for
(
var
c
=
!
0
l
=
0
;
l
<
r
[
t
]
.
pt
.
length
;
l
+
+
)
{
var
o
=
r
[
t
]
.
pt
[
l
]
.
c
.
split
(
"
"
)
n
=
!
1
;
if
(
o
.
forEach
(
function
(
c
)
{
e
.
word
[
r
[
t
]
.
pt
[
l
]
.
l
]
=
=
c
&
&
(
n
=
!
0
)
}
)
!
n
)
{
c
=
!
1
;
break
}
}
if
(
1
=
=
c
)
{
if
(
r
[
t
]
.
mPt
)
{
for
(
var
p
=
[
]
m
=
0
;
m
<
r
[
t
]
.
mPt
.
length
;
m
+
+
)
null
!
=
r
[
t
]
.
mPt
[
m
]
.
m
?
p
[
r
[
t
]
.
mPt
[
m
]
.
l
]
=
e
.
word
[
r
[
t
]
.
mPt
[
m
]
.
m
]
:
p
[
r
[
t
]
.
mPt
[
m
]
.
l
]
=
r
[
t
]
.
mPt
[
m
]
.
c
;
e
.
word
=
p
.
join
(
"
"
)
}
e
.
result
=
!
0
;
break
}
}
}
e
.
removePre1
=
function
(
)
{
var
r
=
e
.
word
;
if
(
0
=
=
e
.
preRemoved
&
&
e
.
word
.
length
>
3
)
{
var
t
=
new
RegExp
(
"
^
(
"
+
e
.
pre
.
pre1
.
split
(
"
"
)
.
join
(
"
|
"
)
+
"
)
"
)
;
e
.
word
=
e
.
word
.
replace
(
t
"
"
)
}
return
r
!
=
e
.
word
&
&
(
e
.
preRemoved
=
!
0
)
!
1
}
e
.
removeSuf1
=
function
(
)
{
var
r
=
e
.
word
;
if
(
0
=
=
e
.
sufRemoved
&
&
e
.
word
.
length
>
3
)
{
var
t
=
new
RegExp
(
"
(
"
+
e
.
suf
.
suf1
.
split
(
"
"
)
.
join
(
"
|
"
)
+
"
)
"
)
;
e
.
word
=
e
.
word
.
replace
(
t
"
"
)
}
return
r
!
=
e
.
word
&
&
(
e
.
sufRemoved
=
!
0
)
!
1
}
e
.
removeSuf432
=
function
(
)
{
var
r
=
e
.
word
;
if
(
e
.
word
.
length
>
=
6
)
{
var
t
=
new
RegExp
(
"
(
"
+
e
.
suf
.
suf4
.
split
(
"
"
)
.
join
(
"
|
"
)
+
"
)
"
)
;
e
.
word
=
e
.
word
.
replace
(
t
"
"
)
}
if
(
e
.
word
=
=
r
&
&
e
.
word
.
length
>
=
5
)
{
var
c
=
new
RegExp
(
"
(
"
+
e
.
suf
.
suf3
.
split
(
"
"
)
.
join
(
"
|
"
)
+
"
)
"
)
;
e
.
word
=
e
.
word
.
replace
(
c
"
"
)
}
if
(
e
.
word
=
=
r
&
&
e
.
word
.
length
>
=
4
)
{
var
l
=
new
RegExp
(
"
(
"
+
e
.
suf
.
suf2
.
split
(
"
"
)
.
join
(
"
|
"
)
+
"
)
"
)
;
e
.
word
=
e
.
word
.
replace
(
l
"
"
)
}
return
r
!
=
e
.
word
&
&
(
e
.
sufRemoved
=
!
0
)
!
1
}
e
.
wordCheck
=
function
(
)
{
for
(
var
r
=
(
e
.
word
[
e
.
removeSuf432
e
.
removeSuf1
e
.
removePre1
]
)
t
=
0
c
=
!
1
;
e
.
word
.
length
>
=
7
&
&
!
e
.
result
&
&
t
<
r
.
length
;
)
7
!
=
e
.
word
.
length
|
|
c
?
(
r
[
t
]
(
)
t
+
+
c
=
!
1
)
:
(
e
.
checkPattern73
(
)
c
=
!
0
)
;
var
l
=
[
e
.
checkPattern63
e
.
removeSuf432
e
.
removeSuf1
e
.
removePre1
e
.
checkPattern64
]
;
for
(
t
=
0
;
6
=
=
e
.
word
.
length
&
&
!
e
.
result
&
&
t
<
l
.
length
;
)
l
[
t
]
(
)
t
+
+
;
var
o
=
[
e
.
checkPattern53
e
.
removeSuf432
e
.
removeSuf1
e
.
removePre1
e
.
checkPattern54
]
;
for
(
t
=
0
;
5
=
=
e
.
word
.
length
&
&
!
e
.
result
&
&
t
<
o
.
length
;
)
o
[
t
]
(
)
t
+
+
;
var
n
=
[
e
.
checkPattern43
e
.
removeSuf1
e
.
removePre1
e
.
removeSuf432
]
;
for
(
t
=
0
;
4
=
=
e
.
word
.
length
&
&
!
e
.
result
&
&
t
<
n
.
length
;
)
n
[
t
]
(
)
t
+
+
;
return
!
0
}
e
.
checkPattern43
=
function
(
)
{
e
.
patternCheck
(
e
.
patterns
.
pt43
)
}
e
.
checkPattern53
=
function
(
)
{
e
.
patternCheck
(
e
.
patterns
.
pt53
)
}
e
.
checkPattern54
=
function
(
)
{
e
.
patternCheck
(
e
.
patterns
.
pt54
)
}
e
.
checkPattern63
=
function
(
)
{
e
.
patternCheck
(
e
.
patterns
.
pt63
)
}
e
.
checkPattern64
=
function
(
)
{
e
.
patternCheck
(
e
.
patterns
.
pt64
)
}
e
.
checkPattern73
=
function
(
)
{
e
.
patternCheck
(
e
.
patterns
.
pt73
)
}
function
(
r
)
{
return
"
function
"
=
=
typeof
r
.
update
?
r
.
update
(
function
(
r
)
{
return
e
.
setCurrent
(
r
)
e
.
stem
(
)
e
.
getCurrent
(
)
}
)
:
(
e
.
setCurrent
(
r
)
e
.
stem
(
)
e
.
getCurrent
(
)
)
}
}
(
)
e
.
Pipeline
.
registerFunction
(
e
.
ar
.
stemmer
"
stemmer
-
ar
"
)
e
.
ar
.
stopWordFilter
=
e
.
generateStopWordFilter
(
"
"
.
split
(
"
"
)
)
e
.
Pipeline
.
registerFunction
(
e
.
ar
.
stopWordFilter
"
stopWordFilter
-
ar
"
)
}
}
)
;
