#
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
#
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
#
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
from
__future__
import
absolute_import
print_function
unicode_literals
from
voluptuous
import
(
    
Required
    
Extra
)
from
taskgraph
.
transforms
.
base
import
TransformSequence
from
taskgraph
.
transforms
.
tests
import
test_description_schema
from
taskgraph
.
util
.
schema
import
Schema
transforms
=
TransformSequence
(
)
raptor_description_schema
=
Schema
(
{
    
Required
(
'
test
-
name
'
)
:
test_description_schema
[
'
test
-
name
'
]
    
Required
(
'
test
-
platform
'
)
:
test_description_schema
[
'
test
-
platform
'
]
    
Required
(
'
require
-
signed
-
extensions
'
)
:
test_description_schema
[
'
require
-
signed
-
extensions
'
]
    
#
Any
unrecognized
keys
will
be
validated
against
the
test_description_schema
.
    
Extra
:
object
}
)
transforms
.
add_validate
(
raptor_description_schema
)
transforms
.
add
def
add_extra_options
(
config
tests
)
:
    
for
test
in
tests
:
        
extra_options
=
test
.
setdefault
(
'
mozharness
'
{
}
)
.
setdefault
(
'
extra
-
options
'
[
]
)
        
if
test
[
'
require
-
signed
-
extensions
'
]
:
            
extra_options
.
append
(
'
-
-
is
-
release
-
build
'
)
        
#
add
urlparams
based
on
platform
test
names
and
projects
        
testurlparams_by_platform_and_project
=
{
            
"
android
-
hw
-
g5
"
:
[
                
{
                    
"
branches
"
:
[
]
#
For
all
branches
                    
"
testnames
"
:
[
"
youtube
-
playback
"
]
                    
"
urlparams
"
:
[
                        
#
param
used
for
excluding
youtube
-
playback
tests
from
executing
                        
#
it
excludes
the
tests
with
videos
>
1080p
                        
"
exclude
=
1
2
9
10
17
18
21
22
26
28
30
32
39
40
47
"
                        
"
48
55
56
63
64
71
72
79
80
83
84
89
90
95
96
"
                    
]
                
}
            
]
        
}
        
for
platform
testurlparams_by_project_definitions
\
                
in
testurlparams_by_platform_and_project
.
items
(
)
:
            
if
test
[
'
test
-
platform
'
]
.
startswith
(
platform
)
:
                
#
For
every
platform
it
may
have
several
definitions
                
for
testurlparams_by_project
in
testurlparams_by_project_definitions
:
                    
#
The
test
should
contain
at
least
one
defined
testname
                    
if
any
(
                        
testname
in
test
[
'
test
-
name
'
]
                        
for
testname
in
testurlparams_by_project
[
'
testnames
'
]
                    
)
:
                        
branches
=
testurlparams_by_project
[
'
branches
'
]
                        
if
(
                            
branches
=
=
[
]
or
                            
config
.
params
.
get
(
'
project
'
)
in
branches
or
                            
config
.
params
.
is_try
(
)
and
'
try
'
in
branches
                        
)
:
                            
params_query
=
'
&
'
.
join
(
testurlparams_by_project
[
'
urlparams
'
]
)
                            
add_extra_params_option
=
"
-
-
test
-
url
-
params
=
{
}
"
.
format
(
params_query
)
                            
extra_options
.
append
(
add_extra_params_option
)
        
yield
test
