#
!
/
bin
/
bash
set
-
x
-
e
-
v
#
This
script
is
for
building
clang
.
ORIGPWD
=
"
PWD
"
JSON_CONFIG
=
"
1
"
cd
GECKO_PATH
.
taskcluster
/
scripts
/
misc
/
tooltool
-
download
.
sh
if
[
-
d
"
GECKO_PATH
/
binutils
/
bin
"
]
;
then
export
PATH
=
"
GECKO_PATH
/
binutils
/
bin
:
PATH
"
fi
case
"
JSON_CONFIG
"
in
*
macosx64
*
)
#
these
variables
are
used
in
build
-
clang
.
py
export
CROSS_CCTOOLS_PATH
=
GECKO_PATH
/
cctools
export
CROSS_SYSROOT
=
GECKO_PATH
/
MacOSX10
.
11
.
sdk
export
PATH
=
PATH
:
CROSS_CCTOOLS_PATH
/
bin
;
;
*
win64
*
)
UPLOAD_DIR
=
ORIGPWD
/
public
/
build
#
Set
up
all
the
Visual
Studio
paths
.
.
taskcluster
/
scripts
/
misc
/
vs
-
setup
.
sh
#
LLVM_ENABLE_DIA_SDK
is
set
if
the
directory
"
ENV
{
VSINSTALLDIR
}
DIA
SDK
"
#
exists
.
export
VSINSTALLDIR
=
"
{
VSPATH
}
/
"
#
Add
git
.
exe
to
the
path
export
PATH
=
"
(
pwd
)
/
cmd
:
{
PATH
}
"
export
PATH
=
"
(
cd
cmake
&
&
pwd
)
/
bin
:
{
PATH
}
"
export
PATH
=
"
(
cd
ninja
&
&
pwd
)
/
bin
:
{
PATH
}
"
;
;
*
linux64
*
|
*
android
*
)
;
;
*
)
echo
Cannot
figure
out
build
configuration
for
JSON_CONFIG
exit
1
;
;
esac
#
gets
a
bit
too
verbose
here
set
+
x
python3
build
/
build
-
clang
/
build
-
clang
.
py
-
c
1
set
-
x
#
Put
a
tarball
in
the
artifacts
dir
mkdir
-
p
UPLOAD_DIR
cp
clang
*
.
tar
.
*
UPLOAD_DIR
