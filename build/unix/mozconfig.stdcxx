case
"
PERFHERDER_EXTRA_OPTIONS
"
in
base
-
toolchains
*
)
#
Don
'
t
enable
stdc
+
+
compat
on
base
toolchain
builds
because
that
'
s
only
really
strictly
#
needed
on
shippable
builds
although
there
are
technical
constraints
that
make
it
sometimes
#
necessary
but
those
don
'
t
apply
to
base
toolchain
builds
.
#
On
the
flip
side
GCC
base
toolchain
builds
would
need
extra
compatibility
hacks
that
are
#
not
worth
implementing
so
not
enabling
stdc
+
+
compat
is
simpler
.
;
;
*
)
#
Avoid
dependency
on
libstdc
+
+
4
.
7
export
MOZ_STDCXX_COMPAT
=
1
;
;
esac
TOOLTOOL_DIR
=
{
TOOLTOOL_DIR
:
-
topsrcdir
}
#
Depending
whether
GCC
was
built
on
a
RedHat
-
based
or
a
Debian
-
based
system
#
the
directory
containing
32
-
bits
libraries
can
be
either
(
respectively
)
#
lib
or
lib32
.
The
directory
for
64
-
bits
libraries
is
always
lib64
.
if
[
-
f
"
MOZ_FETCHES_DIR
/
gcc
/
lib64
/
libstdc
+
+
.
so
"
]
;
then
#
We
put
both
32
-
bits
and
64
-
bits
library
path
in
LD_LIBRARY_PATH
:
ld
.
so
#
will
prefer
the
files
in
the
32
-
bits
path
when
loading
32
-
bits
executables
#
and
the
files
in
the
64
-
bits
path
when
loading
64
-
bits
executables
.
#
We
also
put
both
possible
32
-
bits
library
paths
.
LD_LIBRARY_PATH
=
{
LD_LIBRARY_PATH
:
+
LD_LIBRARY_PATH
:
}
MOZ_FETCHES_DIR
/
gcc
/
lib64
:
MOZ_FETCHES_DIR
/
gcc
/
lib32
:
MOZ_FETCHES_DIR
/
gcc
/
lib
elif
[
-
f
"
MOZ_FETCHES_DIR
/
clang
/
lib
/
libstdc
+
+
.
so
"
]
;
then
LD_LIBRARY_PATH
=
{
LD_LIBRARY_PATH
:
+
LD_LIBRARY_PATH
:
}
MOZ_FETCHES_DIR
/
clang
/
lib
:
MOZ_FETCHES_DIR
/
clang
/
lib32
fi
mk_add_options
"
export
LD_LIBRARY_PATH
=
LD_LIBRARY_PATH
"
