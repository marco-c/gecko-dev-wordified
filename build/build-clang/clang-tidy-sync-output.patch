diff
-
-
git
a
/
extra
/
clang
-
tidy
/
tool
/
run
-
clang
-
tidy
.
py
b
/
extra
/
clang
-
tidy
/
tool
/
run
-
clang
-
tidy
.
py
index
d9d827b0
.
.
36ac4e38
100755
-
-
-
a
/
extra
/
clang
-
tidy
/
tool
/
run
-
clang
-
tidy
.
py
+
+
+
b
/
extra
/
clang
-
tidy
/
tool
/
run
-
clang
-
tidy
.
py
-
111
7
+
111
7
def
apply_fixes
(
args
tmpdir
)
:
subprocess
.
call
(
invocation
)
-
def
run_tidy
(
args
tmpdir
build_path
queue
)
:
+
def
run_tidy
(
args
tmpdir
build_path
queue
lock
)
:
"
"
"
Takes
filenames
out
of
queue
and
runs
clang
-
tidy
on
them
.
"
"
"
while
True
:
name
=
queue
.
get
(
)
-
119
8
+
119
12
def
run_tidy
(
args
tmpdir
build_path
queue
)
:
tmpdir
build_path
args
.
header_filter
args
.
extra_arg
args
.
extra_arg_before
args
.
quiet
)
-
sys
.
stdout
.
write
(
'
'
.
join
(
invocation
)
+
'
\
n
'
)
-
subprocess
.
call
(
invocation
)
+
proc
=
subprocess
.
Popen
(
invocation
stdout
=
subprocess
.
PIPE
stderr
=
subprocess
.
PIPE
)
+
output
err
=
proc
.
communicate
(
)
+
with
lock
:
+
sys
.
stdout
.
write
(
'
'
.
join
(
invocation
)
+
'
\
n
'
+
output
+
'
\
n
'
)
+
if
len
(
err
)
:
+
sys
.
stderr
.
write
(
err
+
'
\
n
'
)
queue
.
task_done
(
)
-
204
9
+
208
10
def
main
(
)
:
try
:
#
Spin
up
a
bunch
of
tidy
-
launching
threads
.
queue
=
Queue
.
Queue
(
max_task
)
+
lock
=
threading
.
Lock
(
)
for
_
in
range
(
max_task
)
:
t
=
threading
.
Thread
(
target
=
run_tidy
-
args
=
(
args
tmpdir
build_path
queue
)
)
+
args
=
(
args
tmpdir
build_path
queue
lock
)
)
t
.
daemon
=
True
t
.
start
(
)
