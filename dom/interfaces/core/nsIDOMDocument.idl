/
*
-
*
-
Mode
:
IDL
;
tab
-
width
:
2
;
indent
-
tabs
-
mode
:
nil
;
c
-
basic
-
offset
:
2
-
*
-
*
/
/
*
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
*
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
*
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
*
/
#
include
"
nsIDOMNode
.
idl
"
%
{
C
+
+
#
include
"
jspubtd
.
h
"
/
/
windows
.
h
#
defines
CreateEvent
#
ifdef
CreateEvent
#
undef
CreateEvent
#
endif
%
}
interface
mozIDOMWindowProxy
;
interface
nsIDOMNodeIterator
;
interface
nsIDOMNodeFilter
;
interface
nsIDOMTreeWalker
;
/
*
*
*
The
nsIDOMDocument
interface
represents
the
entire
HTML
or
XML
document
.
*
Conceptually
it
is
the
root
of
the
document
tree
and
provides
the
*
primary
access
to
the
document
'
s
data
.
*
Since
elements
text
nodes
comments
processing
instructions
etc
.
*
cannot
exist
outside
the
context
of
a
Document
the
nsIDOMDocument
*
interface
also
contains
the
factory
methods
needed
to
create
these
*
objects
.
*
*
For
more
information
on
this
interface
please
see
*
http
:
/
/
dvcs
.
w3
.
org
/
hg
/
domcore
/
raw
-
file
/
tip
/
Overview
.
html
*
/
[
uuid
(
b15fa0f4
-
97c1
-
4388
-
af62
-
2ceff7a89bdf
)
]
interface
nsIDOMDocument
:
nsIDOMNode
{
readonly
attribute
nsIDOMDOMImplementation
implementation
;
/
/
Introduced
in
DOM
Level
3
:
readonly
attribute
DOMString
inputEncoding
;
/
/
Introduced
in
DOM
Level
3
:
readonly
attribute
DOMString
documentURI
;
/
/
Alias
introduced
for
all
documents
in
recent
DOM
standards
readonly
attribute
DOMString
URL
;
/
*
*
*
Create
a
range
*
*
see
http
:
/
/
html5
.
org
/
specs
/
dom
-
range
.
html
#
dom
-
document
-
createrange
*
/
nsIDOMRange
createRange
(
)
;
[
optional_argc
]
nsIDOMNodeIterator
createNodeIterator
(
in
nsIDOMNode
root
[
optional
]
in
unsigned
long
whatToShow
[
optional
]
in
nsIDOMNodeFilter
filter
)
raises
(
DOMException
)
;
/
/
HTML
/
*
*
*
The
window
associated
with
this
document
.
*
*
see
<
http
:
/
/
www
.
whatwg
.
org
/
html
/
#
dom
-
document
-
defaultview
>
*
/
readonly
attribute
mozIDOMWindowProxy
defaultView
;
/
*
*
*
see
<
http
:
/
/
www
.
whatwg
.
org
/
html
/
#
dom
-
document
-
characterset
>
*
/
readonly
attribute
DOMString
characterSet
;
/
*
*
*
see
<
http
:
/
/
www
.
whatwg
.
org
/
html
/
#
dom
-
document
-
dir
>
*
/
attribute
DOMString
dir
;
/
*
*
*
see
<
http
:
/
/
www
.
whatwg
.
org
/
html
/
#
dom
-
document
-
readystate
>
*
/
readonly
attribute
DOMString
readyState
;
/
*
*
*
see
<
http
:
/
/
www
.
whatwg
.
org
/
html
/
#
dom
-
document
-
lastmodified
>
*
/
readonly
attribute
DOMString
lastModified
;
/
*
*
*
see
<
http
:
/
/
www
.
whatwg
.
org
/
html
/
#
dom
-
document
-
referrer
>
*
/
readonly
attribute
DOMString
referrer
;
/
*
*
*
see
<
http
:
/
/
www
.
whatwg
.
org
/
html
/
#
dom
-
document
-
hasfocus
>
*
/
boolean
hasFocus
(
)
;
/
*
*
*
see
<
http
:
/
/
www
.
whatwg
.
org
/
html
/
#
dom
-
document
-
activeelement
>
*
/
readonly
attribute
nsIDOMElement
activeElement
;
/
/
CSSOM
-
View
/
*
*
*
Returns
the
element
from
the
caller
'
s
document
at
the
given
point
*
relative
to
the
upper
-
left
-
most
point
in
the
(
possibly
scrolled
)
*
window
or
frame
.
*
*
If
the
element
at
the
given
point
belongs
to
another
document
(
such
as
*
an
iframe
'
s
subdocument
)
the
element
in
the
calling
document
'
s
DOM
*
(
e
.
g
.
the
iframe
)
is
returned
.
If
the
element
at
the
given
point
is
*
anonymous
or
XBL
generated
content
such
as
a
textbox
'
s
scrollbars
then
*
the
first
non
-
anonymous
parent
element
(
that
is
the
textbox
)
is
returned
.
*
*
This
method
returns
null
if
either
coordinate
is
negative
or
if
the
*
specified
point
lies
outside
the
visible
bounds
of
the
document
.
*
*
Callers
from
XUL
documents
should
wait
until
the
onload
event
has
fired
*
before
calling
this
method
.
*
*
see
<
http
:
/
/
dev
.
w3
.
org
/
csswg
/
cssom
-
view
/
#
dom
-
document
-
elementfrompoint
>
*
/
nsIDOMElement
elementFromPoint
(
in
float
x
in
float
y
)
;
/
*
*
*
True
if
this
document
is
synthetic
:
stand
alone
image
video
audio
file
*
etc
.
*
/
readonly
attribute
boolean
mozSyntheticDocument
;
/
*
*
*
Returns
the
script
element
whose
script
is
currently
being
processed
.
*
*
see
<
https
:
/
/
developer
.
mozilla
.
org
/
en
/
DOM
/
document
.
currentScript
>
*
/
readonly
attribute
nsIDOMElement
currentScript
;
/
*
*
*
Use
the
given
DOM
element
as
the
source
image
of
target
|
-
moz
-
element
(
)
|
.
*
*
This
function
introduces
a
new
special
ID
(
called
"
image
element
ID
"
)
*
which
is
only
used
by
|
-
moz
-
element
(
)
|
and
associates
it
with
the
given
*
DOM
element
.
Image
elements
ID
'
s
have
the
higher
precedence
than
general
*
HTML
id
'
s
so
if
|
document
.
mozSetImageElement
(
<
id
>
<
element
>
)
|
is
called
*
|
-
moz
-
element
(
#
<
id
>
)
|
uses
|
<
element
>
|
as
the
source
image
even
if
there
*
is
another
element
with
id
attribute
=
|
<
id
>
|
.
To
unregister
an
image
*
element
ID
|
<
id
>
|
call
|
document
.
mozSetImageElement
(
<
id
>
null
)
|
.
*
*
Example
:
*
<
script
>
*
canvas
=
document
.
createElement
(
"
canvas
"
)
;
*
canvas
.
setAttribute
(
"
width
"
100
)
;
*
canvas
.
setAttribute
(
"
height
"
100
)
;
*
/
/
draw
to
canvas
*
document
.
mozSetImageElement
(
"
canvasbg
"
canvas
)
;
*
<
/
script
>
*
<
div
style
=
"
background
-
image
:
-
moz
-
element
(
#
canvasbg
)
;
"
>
<
/
div
>
*
*
param
aImageElementId
an
image
element
ID
to
associate
with
*
|
aImageElement
|
*
param
aImageElement
a
DOM
element
to
be
used
as
the
source
image
of
*
|
-
moz
-
element
(
#
aImageElementId
)
|
.
If
this
is
null
the
function
will
*
unregister
the
image
element
ID
|
aImageElementId
|
.
*
*
see
<
https
:
/
/
developer
.
mozilla
.
org
/
en
/
DOM
/
document
.
mozSetImageElement
>
*
/
void
mozSetImageElement
(
in
DOMString
aImageElementId
in
nsIDOMElement
aImageElement
)
;
/
*
*
*
Retrieve
the
location
of
the
caret
position
(
DOM
node
and
character
*
offset
within
that
node
)
given
a
point
.
*
*
param
x
Horizontal
point
at
which
to
determine
the
caret
position
in
*
page
coordinates
.
*
param
y
Vertical
point
at
which
to
determine
the
caret
position
in
*
page
coordinates
.
*
/
nsISupports
/
*
CaretPosition
*
/
caretPositionFromPoint
(
in
float
x
in
float
y
)
;
/
*
*
*
Visibility
API
implementation
.
*
/
readonly
attribute
boolean
hidden
;
readonly
attribute
DOMString
visibilityState
;
}
;
