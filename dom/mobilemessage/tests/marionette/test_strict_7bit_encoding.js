/
*
Any
copyright
is
dedicated
to
the
Public
Domain
.
*
http
:
/
/
creativecommons
.
org
/
publicdomain
/
zero
/
1
.
0
/
*
/
MARIONETTE_TIMEOUT
=
60000
;
/
/
Copied
from
ril_consts
.
js
.
Some
entries
are
commented
out
in
ril_const
.
js
/
/
but
we
still
want
to
test
them
here
.
const
GSM_SMS_STRICT_7BIT_CHARMAP
=
{
"
\
u0024
"
:
"
\
u0024
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00a5
"
:
"
\
u00a5
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00c0
"
:
"
\
u0041
"
/
/
"
"
=
>
"
A
"
"
\
u00c1
"
:
"
\
u0041
"
/
/
"
"
=
>
"
A
"
"
\
u00c2
"
:
"
\
u0041
"
/
/
"
"
=
>
"
A
"
"
\
u00c4
"
:
"
\
u00c4
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00c5
"
:
"
\
u00c5
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00c6
"
:
"
\
u00c6
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00c7
"
:
"
\
u00c7
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00c8
"
:
"
\
u0045
"
/
/
"
"
=
>
"
E
"
"
\
u00c9
"
:
"
\
u00c9
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00ca
"
:
"
\
u0045
"
/
/
"
"
=
>
"
E
"
"
\
u00cb
"
:
"
\
u0045
"
/
/
"
"
=
>
"
E
"
"
\
u00cc
"
:
"
\
u0049
"
/
/
"
"
=
>
"
I
"
"
\
u00cd
"
:
"
\
u0049
"
/
/
"
"
=
>
"
I
"
"
\
u00ce
"
:
"
\
u0049
"
/
/
"
"
=
>
"
I
"
"
\
u00cf
"
:
"
\
u0049
"
/
/
"
"
=
>
"
I
"
"
\
u00d1
"
:
"
\
u00d1
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00d2
"
:
"
\
u004f
"
/
/
"
"
=
>
"
O
"
"
\
u00d3
"
:
"
\
u004f
"
/
/
"
"
=
>
"
O
"
"
\
u00d4
"
:
"
\
u004f
"
/
/
"
"
=
>
"
O
"
"
\
u00d6
"
:
"
\
u00d6
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00d9
"
:
"
\
u0055
"
/
/
"
"
=
>
"
U
"
"
\
u00da
"
:
"
\
u0055
"
/
/
"
"
=
>
"
U
"
"
\
u00db
"
:
"
\
u0055
"
/
/
"
"
=
>
"
U
"
"
\
u00dc
"
:
"
\
u00dc
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00df
"
:
"
\
u00df
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00e0
"
:
"
\
u00e0
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00e1
"
:
"
\
u0061
"
/
/
"
"
=
>
"
a
"
"
\
u00e2
"
:
"
\
u0061
"
/
/
"
"
=
>
"
a
"
"
\
u00e4
"
:
"
\
u00e4
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00e5
"
:
"
\
u00e5
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00e6
"
:
"
\
u00e6
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00e7
"
:
"
\
u00c7
"
/
/
"
"
=
>
"
"
"
\
u00e8
"
:
"
\
u00e8
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00e9
"
:
"
\
u00e9
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00ea
"
:
"
\
u0065
"
/
/
"
"
=
>
"
e
"
"
\
u00eb
"
:
"
\
u0065
"
/
/
"
"
=
>
"
e
"
"
\
u00ec
"
:
"
\
u00ec
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00ed
"
:
"
\
u0069
"
/
/
"
"
=
>
"
i
"
"
\
u00ee
"
:
"
\
u0069
"
/
/
"
"
=
>
"
i
"
"
\
u00ef
"
:
"
\
u0069
"
/
/
"
"
=
>
"
i
"
"
\
u00f1
"
:
"
\
u00f1
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00f2
"
:
"
\
u00f2
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00f3
"
:
"
\
u006f
"
/
/
"
"
=
>
"
o
"
"
\
u00f4
"
:
"
\
u006f
"
/
/
"
"
=
>
"
o
"
"
\
u00f6
"
:
"
\
u00f6
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00f8
"
:
"
\
u00f8
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00f9
"
:
"
\
u00f9
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00fa
"
:
"
\
u0075
"
/
/
"
"
=
>
"
u
"
"
\
u00fb
"
:
"
\
u0075
"
/
/
"
"
=
>
"
u
"
"
\
u00fc
"
:
"
\
u00fc
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u00fe
"
:
"
\
u0074
"
/
/
"
"
=
>
"
t
"
"
\
u0100
"
:
"
\
u0041
"
/
/
"
"
=
>
"
A
"
"
\
u0101
"
:
"
\
u0061
"
/
/
"
"
=
>
"
a
"
"
\
u0106
"
:
"
\
u0043
"
/
/
"
"
=
>
"
C
"
"
\
u0107
"
:
"
\
u0063
"
/
/
"
"
=
>
"
c
"
"
\
u010c
"
:
"
\
u0043
"
/
/
"
"
=
>
"
C
"
"
\
u010d
"
:
"
\
u0063
"
/
/
"
"
=
>
"
c
"
"
\
u010f
"
:
"
\
u0064
"
/
/
"
"
=
>
"
d
"
"
\
u0110
"
:
"
\
u0044
"
/
/
"
"
=
>
"
D
"
"
\
u0111
"
:
"
\
u0064
"
/
/
"
"
=
>
"
d
"
"
\
u0112
"
:
"
\
u0045
"
/
/
"
"
=
>
"
E
"
"
\
u0113
"
:
"
\
u0065
"
/
/
"
"
=
>
"
e
"
"
\
u0118
"
:
"
\
u0045
"
/
/
"
"
=
>
"
E
"
"
\
u0119
"
:
"
\
u0065
"
/
/
"
"
=
>
"
e
"
"
\
u012a
"
:
"
\
u0049
"
/
/
"
"
=
>
"
I
"
"
\
u012b
"
:
"
\
u0069
"
/
/
"
"
=
>
"
i
"
"
\
u012e
"
:
"
\
u0049
"
/
/
"
"
=
>
"
I
"
"
\
u012f
"
:
"
\
u0069
"
/
/
"
"
=
>
"
i
"
"
\
u0141
"
:
"
\
u004c
"
/
/
"
"
=
>
"
L
"
"
\
u0142
"
:
"
\
u006c
"
/
/
"
"
=
>
"
l
"
"
\
u0143
"
:
"
\
u004e
"
/
/
"
"
=
>
"
N
"
"
\
u0144
"
:
"
\
u006e
"
/
/
"
"
=
>
"
n
"
"
\
u0147
"
:
"
\
u004e
"
/
/
"
"
=
>
"
N
"
"
\
u0148
"
:
"
\
u006e
"
/
/
"
"
=
>
"
n
"
"
\
u014c
"
:
"
\
u004f
"
/
/
"
"
=
>
"
O
"
"
\
u014d
"
:
"
\
u006f
"
/
/
"
"
=
>
"
o
"
"
\
u0152
"
:
"
\
u004f
"
/
/
"
"
=
>
"
O
"
"
\
u0153
"
:
"
\
u006f
"
/
/
"
"
=
>
"
o
"
"
\
u0158
"
:
"
\
u0052
"
/
/
"
"
=
>
"
R
"
"
\
u0159
"
:
"
\
u0072
"
/
/
"
"
=
>
"
r
"
"
\
u0160
"
:
"
\
u0053
"
/
/
"
"
=
>
"
S
"
"
\
u0161
"
:
"
\
u0073
"
/
/
"
"
=
>
"
s
"
"
\
u0165
"
:
"
\
u0074
"
/
/
"
"
=
>
"
t
"
"
\
u016a
"
:
"
\
u0055
"
/
/
"
"
=
>
"
U
"
"
\
u016b
"
:
"
\
u0075
"
/
/
"
"
=
>
"
u
"
"
\
u0178
"
:
"
\
u0059
"
/
/
"
"
=
>
"
Y
"
"
\
u0179
"
:
"
\
u005a
"
/
/
"
"
=
>
"
Z
"
"
\
u017a
"
:
"
\
u007a
"
/
/
"
"
=
>
"
z
"
"
\
u017b
"
:
"
\
u005a
"
/
/
"
"
=
>
"
Z
"
"
\
u017c
"
:
"
\
u007a
"
/
/
"
"
=
>
"
z
"
"
\
u017d
"
:
"
\
u005a
"
/
/
"
"
=
>
"
Z
"
"
\
u017e
"
:
"
\
u007a
"
/
/
"
"
=
>
"
z
"
"
\
u025b
"
:
"
\
u0045
"
/
/
"
"
=
>
"
E
"
"
\
u0398
"
:
"
\
u0398
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
"
\
u20a4
"
:
"
\
u00a3
"
/
/
"
"
=
>
"
"
"
\
u20ac
"
:
"
\
u20ac
"
/
/
"
"
=
>
"
"
already
in
default
alphabet
}
;
/
/
Emulator
will
loop
back
the
outgoing
SMS
if
the
phone
number
equals
to
its
/
/
control
port
which
is
5554
for
the
first
emulator
instance
.
const
SELF
=
"
5554
"
;
SpecialPowers
.
setBoolPref
(
"
dom
.
sms
.
enabled
"
true
)
;
SpecialPowers
.
addPermission
(
"
sms
"
true
document
)
;
let
sms
=
window
.
navigator
.
mozSms
;
ok
(
sms
instanceof
MozSmsManager
)
;
let
tasks
=
{
/
/
List
of
test
fuctions
.
Each
of
them
should
call
|
tasks
.
next
(
)
|
when
/
/
completed
or
|
tasks
.
finish
(
)
|
to
jump
to
the
last
one
.
_tasks
:
[
]
_nextTaskIndex
:
0
push
:
function
push
(
func
)
{
this
.
_tasks
.
push
(
func
)
;
}
next
:
function
next
(
)
{
let
index
=
this
.
_nextTaskIndex
+
+
;
let
task
=
this
.
_tasks
[
index
]
;
try
{
task
(
)
;
}
catch
(
ex
)
{
ok
(
false
"
test
task
[
"
+
index
+
"
]
throws
:
"
+
ex
)
;
/
/
Run
last
task
as
clean
up
if
possible
.
if
(
index
!
=
this
.
_tasks
.
length
-
1
)
{
this
.
finish
(
)
;
}
}
}
finish
:
function
finish
(
)
{
this
.
_tasks
[
this
.
_tasks
.
length
-
1
]
(
)
;
}
run
:
function
run
(
)
{
this
.
next
(
)
;
}
}
;
function
testStrict7BitEncodingHelper
(
sent
received
)
{
/
/
The
log
message
contains
unicode
and
Marionette
seems
unable
to
process
/
/
it
and
throws
:
|
UnicodeEncodeError
:
'
ascii
'
codec
can
'
t
encode
character
/
/
u
'
\
xa5
'
in
position
14
:
ordinal
not
in
range
(
128
)
|
.
/
/
/
/
log
(
"
Testing
'
"
+
sent
+
"
'
=
>
'
"
+
received
+
"
'
"
)
;
let
count
=
0
;
function
done
(
step
)
{
count
+
=
step
;
if
(
count
>
=
2
)
{
window
.
setTimeout
(
tasks
.
next
.
bind
(
tasks
)
0
)
;
}
}
sms
.
addEventListener
(
"
received
"
function
onReceived
(
event
)
{
event
.
target
.
removeEventListener
(
"
received
"
onReceived
)
;
let
message
=
event
.
message
;
is
(
message
.
body
received
"
received
message
.
body
"
)
;
done
(
1
)
;
}
)
;
let
request
=
sms
.
send
(
SELF
sent
)
;
request
.
addEventListener
(
"
success
"
function
onRequestSuccess
(
event
)
{
let
message
=
event
.
target
.
result
;
is
(
message
.
body
sent
"
sent
message
.
body
"
)
;
done
(
1
)
;
}
)
;
request
.
addEventListener
(
"
error
"
function
onRequestError
(
event
)
{
ok
(
false
"
Can
'
t
send
message
out
!
!
!
"
)
;
done
(
2
)
;
}
)
;
}
/
/
Bug
877141
-
If
you
send
several
spaces
together
in
a
sms
the
other
/
/
dipositive
receives
a
"
*
"
for
each
space
.
/
/
/
/
This
function
is
called
twice
with
strict
7bit
encoding
enabled
or
/
/
disabled
.
Expect
the
same
result
in
both
sent
and
received
text
and
with
/
/
either
strict
7bit
encoding
enabled
or
disabled
.
function
testBug877141
(
)
{
log
(
"
Testing
bug
877141
"
)
;
let
sent
=
"
1
2
3
"
;
testStrict7BitEncodingHelper
(
sent
sent
)
;
}
tasks
.
push
(
function
(
)
{
log
(
"
Testing
with
dom
.
sms
.
strict7BitEncoding
enabled
"
)
;
SpecialPowers
.
setBoolPref
(
"
dom
.
sms
.
strict7BitEncoding
"
true
)
;
tasks
.
next
(
)
;
}
)
;
/
/
Test
for
combined
string
.
tasks
.
push
(
function
(
)
{
let
sent
=
"
"
received
=
"
"
;
for
(
let
c
in
GSM_SMS_STRICT_7BIT_CHARMAP
)
{
sent
+
=
c
;
received
+
=
GSM_SMS_STRICT_7BIT_CHARMAP
[
c
]
;
}
testStrict7BitEncodingHelper
(
sent
received
)
;
}
)
;
/
/
When
strict7BitEncoding
is
enabled
we
should
replace
characters
that
/
/
can
'
t
be
encoded
with
GSM
7
-
Bit
alphabets
with
'
*
'
.
tasks
.
push
(
function
(
)
{
/
/
"
Happy
New
Year
"
in
Chinese
.
let
sent
=
"
\
u65b0
\
u5e74
\
u5feb
\
u6a02
"
received
=
"
*
*
*
*
"
;
testStrict7BitEncodingHelper
(
sent
received
)
;
}
)
;
tasks
.
push
(
testBug877141
)
;
tasks
.
push
(
function
(
)
{
log
(
"
Testing
with
dom
.
sms
.
strict7BitEncoding
disabled
"
)
;
SpecialPowers
.
setBoolPref
(
"
dom
.
sms
.
strict7BitEncoding
"
false
)
;
tasks
.
next
(
)
;
}
)
;
/
/
Test
for
combined
string
.
tasks
.
push
(
function
(
)
{
let
sent
=
"
"
;
for
(
let
c
in
GSM_SMS_STRICT_7BIT_CHARMAP
)
{
sent
+
=
c
;
}
testStrict7BitEncodingHelper
(
sent
sent
)
;
}
)
;
tasks
.
push
(
function
(
)
{
/
/
"
Happy
New
Year
"
in
Chinese
.
let
sent
=
"
\
u65b0
\
u5e74
\
u5feb
\
u6a02
"
;
testStrict7BitEncodingHelper
(
sent
sent
)
;
}
)
;
tasks
.
push
(
testBug877141
)
;
/
/
WARNING
:
All
tasks
should
be
pushed
before
this
!
!
!
tasks
.
push
(
function
cleanUp
(
)
{
SpecialPowers
.
removePermission
(
"
sms
"
document
)
;
SpecialPowers
.
clearUserPref
(
"
dom
.
sms
.
enabled
"
)
;
SpecialPowers
.
clearUserPref
(
"
dom
.
sms
.
strict7BitEncoding
"
)
;
finish
(
)
;
}
)
;
tasks
.
run
(
)
;
