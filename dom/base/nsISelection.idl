/
*
-
*
-
Mode
:
C
+
+
;
tab
-
width
:
4
;
indent
-
tabs
-
mode
:
nil
;
c
-
basic
-
offset
:
4
-
*
-
*
/
/
*
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
*
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
*
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
*
/
#
include
"
nsISupports
.
idl
"
/
*
THIS
IS
A
PUBLIC
INTERFACE
*
/
interface
nsIDOMNode
;
interface
nsINode
;
%
{
C
+
+
namespace
mozilla
{
namespace
dom
{
class
Selection
;
}
/
/
namespace
dom
}
/
/
namespace
mozilla
%
}
/
*
*
*
Interface
for
manipulating
and
querying
the
current
selected
range
*
of
nodes
within
the
document
.
*
*
version
1
.
0
*
/
[
shim
(
Selection
)
uuid
(
e0a4d4b3
-
f34e
-
44bd
-
b1f2
-
4e3bde9b6915
)
]
interface
nsISelection
:
nsISupports
{
/
*
*
*
Extends
the
selection
by
moving
the
selection
end
to
the
specified
node
and
offset
*
preserving
the
selection
begin
position
.
The
new
selection
end
result
will
always
*
be
from
the
anchorNode
to
the
new
focusNode
regardless
of
direction
.
*
param
parentNode
The
node
where
the
selection
will
be
extended
to
*
param
offset
Where
in
node
to
place
the
offset
in
the
new
selection
end
*
/
void
extend
(
in
nsIDOMNode
parentNode
in
long
offset
)
;
[
noscript
]
void
extendNative
(
in
nsINode
parentNode
in
long
offset
)
;
/
*
*
*
Adds
all
children
of
the
specified
node
to
the
selection
.
*
param
parentNode
the
parent
of
the
children
to
be
added
to
the
selection
.
*
/
void
selectAllChildren
(
in
nsIDOMNode
parentNode
)
;
/
*
*
*
Modifies
the
selection
.
Note
that
the
parameters
are
case
-
insensitive
.
*
*
param
alter
can
be
one
of
{
"
move
"
"
extend
"
}
*
-
"
move
"
collapses
the
selection
to
the
end
of
the
selection
and
*
applies
the
movement
direction
/
granularity
to
the
collapsed
*
selection
.
*
-
"
extend
"
leaves
the
start
of
the
selection
unchanged
and
applies
*
movement
direction
/
granularity
to
the
end
of
the
selection
.
*
param
direction
can
be
one
of
{
"
forward
"
"
backward
"
"
left
"
"
right
"
}
*
param
granularity
can
be
one
of
{
"
character
"
"
word
"
*
"
line
"
"
lineboundary
"
}
*
*
returns
NS_ERROR_NOT_IMPLEMENTED
if
the
granularity
is
"
sentence
"
*
"
sentenceboundary
"
"
paragraph
"
"
paragraphboundary
"
or
*
"
documentboundary
"
.
Returns
NS_ERROR_INVALID_ARG
if
alter
direction
*
or
granularity
has
an
unrecognized
value
.
*
/
void
modify
(
in
DOMString
alter
in
DOMString
direction
in
DOMString
granularity
)
;
%
{
C
+
+
/
*
*
*
AsSelection
(
)
returns
a
pointer
to
Selection
class
.
*
*
In
order
to
avoid
circular
dependency
issues
this
method
is
defined
*
in
mozilla
/
dom
/
Selection
.
h
.
Consumers
need
to
#
include
that
header
.
*
/
inline
mozilla
:
:
dom
:
:
Selection
*
AsSelection
(
)
;
%
}
}
;
