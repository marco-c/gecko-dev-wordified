#
-
*
-
Mode
:
python
;
c
-
basic
-
offset
:
4
;
indent
-
tabs
-
mode
:
nil
;
tab
-
width
:
40
-
*
-
#
vim
:
set
filetype
=
python
:
#
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
#
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
#
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
IPDL_SOURCES
+
=
[
"
PMediaDecoderParams
.
ipdlh
"
"
PRemoteCDM
.
ipdl
"
"
PRemoteDecoder
.
ipdl
"
"
PRemoteEncoder
.
ipdl
"
]
PREPROCESSED_IPDL_SOURCES
+
=
[
"
PRDD
.
ipdl
"
"
PRemoteMediaManager
.
ipdl
"
]
EXPORTS
.
mozilla
+
=
[
"
MediaActorUtils
.
h
"
"
RDDChild
.
h
"
"
RDDParent
.
h
"
"
RDDProcessHost
.
h
"
"
RDDProcessImpl
.
h
"
"
RDDProcessManager
.
h
"
"
RemoteCDMChild
.
h
"
"
RemoteCDMParent
.
h
"
"
RemoteDecoderChild
.
h
"
"
RemoteDecoderModule
.
h
"
"
RemoteDecoderParent
.
h
"
"
RemoteDecodeUtils
.
h
"
"
RemoteEncoderModule
.
h
"
"
RemoteImageHolder
.
h
"
"
RemoteMediaData
.
h
"
"
RemoteMediaDataDecoder
.
h
"
"
RemoteMediaDataEncoderChild
.
h
"
"
RemoteMediaDataEncoderParent
.
h
"
"
RemoteMediaManagerChild
.
h
"
"
RemoteMediaManagerParent
.
h
"
"
ShmemRecycleAllocator
.
h
"
]
EXPORTS
.
mozilla
.
dom
+
=
[
"
MediaIPCUtils
.
h
"
"
MFCDMSerializers
.
h
"
]
SOURCES
+
=
[
"
RDDChild
.
cpp
"
"
RDDParent
.
cpp
"
"
RDDProcessHost
.
cpp
"
"
RDDProcessImpl
.
cpp
"
"
RDDProcessManager
.
cpp
"
"
RemoteAudioDecoder
.
cpp
"
"
RemoteCDMChild
.
cpp
"
"
RemoteDecoderChild
.
cpp
"
"
RemoteDecoderModule
.
cpp
"
"
RemoteDecoderParent
.
cpp
"
"
RemoteDecodeUtils
.
cpp
"
"
RemoteEncoderModule
.
cpp
"
"
RemoteImageHolder
.
cpp
"
"
RemoteMediaData
.
cpp
"
"
RemoteMediaDataDecoder
.
cpp
"
"
RemoteMediaDataEncoderChild
.
cpp
"
"
RemoteMediaDataEncoderParent
.
cpp
"
"
RemoteMediaManagerChild
.
cpp
"
"
RemoteMediaManagerParent
.
cpp
"
"
RemoteVideoDecoder
.
cpp
"
]
if
CONFIG
[
"
MOZ_WMF_MEDIA_ENGINE
"
]
:
IPDL_SOURCES
+
=
[
"
PMFMediaEngine
.
ipdl
"
]
SOURCES
+
=
[
"
MFMediaEngineChild
.
cpp
"
"
MFMediaEngineParent
.
cpp
"
"
MFMediaEngineUtils
.
cpp
"
]
EXPORTS
.
mozilla
+
=
[
"
MFMediaEngineChild
.
h
"
"
MFMediaEngineParent
.
h
"
"
MFMediaEngineUtils
.
h
"
]
LOCAL_INCLUDES
+
=
[
"
.
.
/
platforms
/
wmf
"
]
if
CONFIG
[
"
MOZ_WMF_CDM
"
]
:
IPDL_SOURCES
+
=
[
"
PMFCDM
.
ipdl
"
]
EXPORTS
.
mozilla
+
=
[
"
MFCDMChild
.
h
"
"
MFCDMParent
.
h
"
]
UNIFIED_SOURCES
+
=
[
"
MFCDMChild
.
cpp
"
]
SOURCES
+
=
[
"
MFCDMParent
.
cpp
"
]
LOCAL_INCLUDES
+
=
[
"
.
.
/
eme
/
mediafoundation
"
]
#
so
we
can
include
nsMacUtilsImpl
.
h
in
RDDParent
.
cpp
for
sandboxing
LOCAL_INCLUDES
+
=
[
"
/
xpcom
/
base
"
]
if
CONFIG
[
"
MOZ_SYSTEM_AV1
"
]
:
CXXFLAGS
+
=
CONFIG
[
"
MOZ_SYSTEM_LIBAOM_CFLAGS
"
]
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
#
Add
libFuzzer
configuration
directives
include
(
"
/
tools
/
fuzzing
/
libfuzzer
-
config
.
mozbuild
"
)
FINAL_LIBRARY
=
"
xul
"
