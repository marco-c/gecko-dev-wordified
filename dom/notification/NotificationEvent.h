/
*
-
*
-
Mode
:
C
+
+
;
tab
-
width
:
2
;
indent
-
tabs
-
mode
:
nil
;
c
-
basic
-
offset
:
2
-
*
-
*
/
/
*
vim
:
set
ts
=
2
sw
=
2
sts
=
2
et
cindent
:
*
/
/
*
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
*
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
*
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
*
/
/
*
THIS
FILE
IS
AUTOGENERATED
FROM
NotificationEvent
.
webidl
BY
Codegen
.
py
-
DO
NOT
EDIT
*
/
#
ifndef
DOM_NOTIFICATIONEVENT_H_
#
define
DOM_NOTIFICATIONEVENT_H_
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
dom
/
BindingUtils
.
h
"
#
include
"
mozilla
/
dom
/
NotificationEventBinding
.
h
"
#
include
"
mozilla
/
dom
/
ServiceWorkerEvents
.
h
"
struct
JSContext
;
namespace
mozilla
:
:
dom
{
class
NotificationEvent
:
public
ExtendableEvent
{
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS_INHERITED
(
NotificationEvent
ExtendableEvent
)
protected
:
virtual
~
NotificationEvent
(
)
;
explicit
NotificationEvent
(
mozilla
:
:
dom
:
:
EventTarget
*
aOwner
)
;
RefPtr
<
Notification
>
mNotification
;
nsString
mAction
;
public
:
NotificationEvent
*
AsNotificationEvent
(
)
override
;
JSObject
*
WrapObjectInternal
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
already_AddRefed
<
NotificationEvent
>
Constructor
(
mozilla
:
:
dom
:
:
EventTarget
*
aOwner
const
nsAString
&
aType
const
NotificationEventInit
&
aEventInitDict
)
;
static
already_AddRefed
<
NotificationEvent
>
Constructor
(
const
GlobalObject
&
aGlobal
const
nsAString
&
aType
const
NotificationEventInit
&
aEventInitDict
)
;
Notification
*
Notification_
(
)
const
;
void
GetAction
(
nsString
&
aRetVal
)
const
;
}
;
}
/
/
namespace
mozilla
:
:
dom
#
endif
/
/
DOM_NOTIFICATIONEVENT_H_
