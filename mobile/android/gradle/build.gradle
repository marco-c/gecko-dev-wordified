allprojects
{
/
/
Expose
the
per
-
object
-
directory
configuration
to
all
projects
.
ext
{
mozconfig
=
gradle
.
mozconfig
topsrcdir
=
gradle
.
mozconfig
.
topsrcdir
topobjdir
=
gradle
.
mozconfig
.
topobjdir
}
repositories
{
jcenter
(
)
}
}
buildDir
"
{
topobjdir
}
/
mobile
/
android
/
gradle
/
build
"
buildscript
{
repositories
{
jcenter
(
)
/
/
For
spoon
-
gradle
-
plugin
SNAPSHOT
release
.
This
needs
to
go
before
/
/
the
snapshots
repository
otherwise
we
find
a
remote
1
.
0
.
3
-
SNAPSHOT
/
/
that
doesn
'
t
include
nalexander
'
s
local
changes
.
maven
{
url
"
file
:
/
/
{
topsrcdir
}
/
mobile
/
android
/
gradle
/
m2repo
"
}
/
/
For
spoon
SNAPSHOT
releases
.
maven
{
url
'
https
:
/
/
oss
.
sonatype
.
org
/
content
/
repositories
/
snapshots
'
}
}
dependencies
{
/
/
Unit
testing
support
was
added
in
1
.
1
.
0
.
IntelliJ
14
.
1
.
4
and
Android
/
/
Studio
1
.
2
.
1
.
1
appear
to
work
fine
with
plugin
version
1
.
3
.
0
.
classpath
'
com
.
android
.
tools
.
build
:
gradle
:
1
.
3
.
0
'
classpath
(
'
com
.
stanfy
.
spoon
:
spoon
-
gradle
-
plugin
:
1
.
0
.
3
-
SNAPSHOT
'
)
{
/
/
Without
these
we
get
errors
linting
.
exclude
module
:
'
guava
'
}
}
}
task
generateCodeAndResources
(
type
:
Exec
)
{
workingDir
"
{
topobjdir
}
"
commandLine
mozconfig
.
substs
.
GMAKE
args
'
-
C
'
args
"
{
topobjdir
}
/
mobile
/
android
/
base
"
args
'
gradle
-
targets
'
/
/
Only
show
the
output
if
something
went
wrong
.
ignoreExitValue
=
true
standardOutput
=
new
ByteArrayOutputStream
(
)
errorOutput
=
standardOutput
doLast
{
if
(
execResult
.
exitValue
!
=
0
)
{
throw
new
GradleException
(
"
Process
'
{
commandLine
}
'
finished
with
non
-
zero
exit
value
{
execResult
.
exitValue
}
:
\
n
\
n
{
standardOutput
.
toString
(
)
}
"
)
}
}
}
afterEvaluate
{
subprojects
{
if
(
!
hasProperty
(
'
android
'
)
)
{
return
}
android
.
applicationVariants
.
all
{
checkManifest
.
dependsOn
rootProject
.
generateCodeAndResources
}
android
.
libraryVariants
.
all
{
checkManifest
.
dependsOn
rootProject
.
generateCodeAndResources
}
}
}
apply
plugin
:
'
idea
'
idea
{
project
{
languageLevel
=
'
1
.
7
'
}
}
