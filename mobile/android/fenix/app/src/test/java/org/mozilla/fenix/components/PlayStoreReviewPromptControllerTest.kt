/
*
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
*
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
*
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
*
/
package
org
.
mozilla
.
fenix
.
components
import
mozilla
.
components
.
support
.
test
.
robolectric
.
testContext
import
org
.
junit
.
Assert
.
assertEquals
import
org
.
junit
.
Assert
.
assertNull
import
org
.
junit
.
Rule
import
org
.
junit
.
Test
import
org
.
junit
.
runner
.
RunWith
import
org
.
mozilla
.
fenix
.
GleanMetrics
.
ReviewPrompt
import
org
.
mozilla
.
fenix
.
helpers
.
FenixGleanTestRule
import
org
.
robolectric
.
RobolectricTestRunner
import
java
.
text
.
SimpleDateFormat
import
java
.
util
.
Date
import
java
.
util
.
Locale
RunWith
(
RobolectricTestRunner
:
:
class
)
class
PlayStoreReviewPromptControllerTest
{
get
:
Rule
val
gleanTestRule
=
FenixGleanTestRule
(
testContext
)
Test
fun
reviewPromptWasDisplayed
(
)
{
testRecordReviewPromptEventRecordsTheExpectedData
(
"
isNoOp
=
false
"
"
true
"
)
}
Test
fun
reviewPromptWasNotDisplayed
(
)
{
testRecordReviewPromptEventRecordsTheExpectedData
(
"
isNoOp
=
true
"
"
false
"
)
}
Test
fun
reviewPromptDisplayStateUnknown
(
)
{
testRecordReviewPromptEventRecordsTheExpectedData
(
expected
=
"
error
"
)
}
private
fun
testRecordReviewPromptEventRecordsTheExpectedData
(
reviewInfoArg
:
String
=
"
"
expected
:
String
)
{
val
numberOfAppLaunches
=
1
val
reviewInfoAsString
=
"
ReviewInfo
{
pendingIntent
=
PendingIntent
{
5b613b1
:
android
.
os
.
BinderProxy
46c8096
}
reviewInfoArg
}
"
val
datetime
=
Date
(
TEST_TIME_NOW
)
val
formattedNowLocalDatetime
=
SIMPLE_DATE_FORMAT
.
format
(
datetime
)
assertNull
(
ReviewPrompt
.
promptAttempt
.
testGetValue
(
)
)
recordReviewPromptEvent
(
reviewInfoAsString
numberOfAppLaunches
datetime
)
val
reviewPromptData
=
ReviewPrompt
.
promptAttempt
.
testGetValue
(
)
!
!
.
last
(
)
.
extra
!
!
assertEquals
(
expected
reviewPromptData
[
"
prompt_was_displayed
"
]
)
assertEquals
(
numberOfAppLaunches
reviewPromptData
[
"
number_of_app_launches
"
]
!
!
.
toInt
(
)
)
assertEquals
(
formattedNowLocalDatetime
reviewPromptData
[
"
local_datetime
"
]
)
}
companion
object
{
private
const
val
TEST_TIME_NOW
=
1598416882805L
private
val
SIMPLE_DATE_FORMAT
by
lazy
{
SimpleDateFormat
(
"
yyyy
-
MM
-
dd
'
T
'
HH
:
mm
:
ss
"
Locale
.
getDefault
(
)
)
}
}
}
