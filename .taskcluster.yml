#
This
file
is
handled
by
mozilla
-
taskcluster
;
see
#
https
:
/
/
docs
.
taskcluster
.
net
/
reference
/
integrations
/
mozilla
-
taskcluster
/
docs
/
taskcluster
-
yml
version
:
1
tasks
:
let
:
#
sometimes
the
push
user
is
just
ffxbld
or
the
like
but
we
want
an
email
-
like
field
.
.
ownerEmail
:
{
if
:
'
"
"
in
push
.
owner
'
then
:
'
{
push
.
owner
}
'
else
:
'
{
push
.
owner
}
noreply
.
mozilla
.
org
'
}
in
:
-
taskId
:
'
{
as_slugid
(
"
decision
"
)
}
'
taskGroupId
:
'
{
as_slugid
(
"
decision
"
)
}
'
#
same
as
tsakId
;
this
is
how
automation
identifies
a
decision
tsak
schedulerId
:
'
gecko
-
level
-
{
repository
.
level
}
'
created
:
{
fromNow
:
'
'
}
deadline
:
{
fromNow
:
'
1
day
'
}
expires
:
{
fromNow
:
'
1
year
1
second
'
}
#
1
second
so
artifacts
expire
first
despite
rounding
errors
metadata
:
owner
:
"
{
ownerEmail
}
"
source
:
"
{
repository
.
url
}
/
raw
-
file
/
{
push
.
revision
}
/
.
taskcluster
.
yml
"
name
:
"
Gecko
Decision
Task
"
description
:
|
The
task
that
creates
all
of
the
other
tasks
in
the
task
graph
provisionerId
:
"
aws
-
provisioner
-
v1
"
workerType
:
"
gecko
-
decision
"
tags
:
createdForUser
:
"
{
ownerEmail
}
"
routes
:
-
"
index
.
gecko
.
v2
.
{
repository
.
project
}
.
latest
.
firefox
.
decision
"
-
"
index
.
gecko
.
v2
.
{
repository
.
project
}
.
pushlog
-
id
.
{
push
.
pushlog_id
}
.
decision
"
-
"
tc
-
treeherder
.
v2
.
{
repository
.
project
}
.
{
push
.
revision
}
.
{
push
.
pushlog_id
}
"
-
"
tc
-
treeherder
-
stage
.
v2
.
{
repository
.
project
}
.
{
push
.
revision
}
.
{
push
.
pushlog_id
}
"
-
"
notify
.
email
.
{
ownerEmail
}
.
on
-
failed
"
-
"
notify
.
email
.
{
ownerEmail
}
.
on
-
exception
"
scopes
:
-
'
assume
:
repo
:
{
repository
.
url
[
8
:
-
1
]
}
:
*
'
-
'
queue
:
route
:
notify
.
email
.
{
ownerEmail
}
.
*
'
dependencies
:
[
]
requires
:
all
-
completed
priority
:
lowest
retries
:
5
payload
:
env
:
#
checkout
-
gecko
uses
these
to
check
out
the
source
;
the
inputs
#
to
mach
taskgraph
decision
are
all
on
the
command
line
.
GECKO_BASE_REPOSITORY
:
'
https
:
/
/
hg
.
mozilla
.
org
/
mozilla
-
unified
'
GECKO_HEAD_REPOSITORY
:
'
{
repository
.
url
}
'
GECKO_HEAD_REF
:
'
{
push
.
revision
}
'
GECKO_HEAD_REV
:
'
{
push
.
revision
}
'
GECKO_COMMIT_MSG
:
'
{
push
.
comment
}
'
HG_STORE_PATH
:
/
home
/
worker
/
checkouts
/
hg
-
store
cache
:
level
-
{
repository
.
level
}
-
checkouts
:
/
home
/
worker
/
checkouts
features
:
taskclusterProxy
:
true
chainOfTrust
:
true
#
Note
:
This
task
is
built
server
side
without
the
context
or
tooling
that
#
exist
in
tree
so
we
must
hard
code
the
hash
#
XXX
Changing
this
will
break
Chain
of
Trust
without
an
associated
puppet
and
#
scriptworker
patch
!
image
:
'
taskcluster
/
decision
:
0
.
1
.
8
sha256
:
195d8439c8e90d59311d877bd2a8964849b2e43bfc6c234092618518d8b2891b
'
maxRunTime
:
1800
#
TODO
use
mozilla
-
unified
for
the
base
repository
once
the
tc
-
vcs
#
tar
.
gz
archives
are
created
or
tc
-
vcs
isn
'
t
being
used
.
command
:
-
/
home
/
worker
/
bin
/
run
-
task
-
'
-
-
vcs
-
checkout
=
/
home
/
worker
/
checkouts
/
gecko
'
-
'
-
-
'
-
bash
-
-
cx
-
>
cd
/
home
/
worker
/
checkouts
/
gecko
&
&
ln
-
s
/
home
/
worker
/
artifacts
artifacts
&
&
.
/
mach
-
-
log
-
no
-
times
taskgraph
decision
-
-
pushlog
-
id
=
'
{
push
.
pushlog_id
}
'
-
-
pushdate
=
'
{
push
.
pushdate
}
'
-
-
project
=
'
{
repository
.
project
}
'
-
-
message
=
"
GECKO_COMMIT_MSG
"
-
-
owner
=
'
{
ownerEmail
}
'
-
-
level
=
'
{
repository
.
level
}
'
-
-
base
-
repository
=
"
GECKO_BASE_REPOSITORY
"
-
-
head
-
repository
=
"
GECKO_HEAD_REPOSITORY
"
-
-
head
-
ref
=
"
GECKO_HEAD_REF
"
-
-
head
-
rev
=
"
GECKO_HEAD_REV
"
artifacts
:
'
public
'
:
type
:
'
directory
'
path
:
'
/
home
/
worker
/
artifacts
'
expires
:
{
fromNow
:
'
1
year
'
}
extra
:
treeherder
:
symbol
:
D
