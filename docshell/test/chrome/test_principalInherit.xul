<
?
xml
version
=
"
1
.
0
"
?
>
<
!
-
-
Any
copyright
is
dedicated
to
the
Public
Domain
.
-
http
:
/
/
creativecommons
.
org
/
publicdomain
/
zero
/
1
.
0
/
-
-
>
<
?
xml
-
stylesheet
href
=
"
chrome
:
/
/
global
/
skin
"
type
=
"
text
/
css
"
?
>
<
?
xml
-
stylesheet
href
=
"
chrome
:
/
/
mochikit
/
content
/
tests
/
SimpleTest
/
test
.
css
"
type
=
"
text
/
css
"
?
>
<
!
-
-
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
719994
-
-
>
<
window
title
=
"
Test
principal
inheriting
"
xmlns
=
"
http
:
/
/
www
.
mozilla
.
org
/
keymaster
/
gatekeeper
/
there
.
is
.
only
.
xul
"
>
<
script
src
=
"
chrome
:
/
/
mochikit
/
content
/
tests
/
SimpleTest
/
SimpleTest
.
js
"
>
<
/
script
>
<
body
xmlns
=
"
http
:
/
/
www
.
w3
.
org
/
1999
/
xhtml
"
>
<
p
id
=
"
display
"
>
<
/
p
>
<
div
id
=
"
content
"
style
=
"
display
:
none
"
>
<
/
div
>
<
pre
id
=
"
test
"
>
<
/
pre
>
<
/
body
>
<
script
class
=
"
testbody
"
type
=
"
application
/
javascript
"
>
<
!
[
CDATA
[
/
*
*
Test
for
Bug
719994
*
*
/
SimpleTest
.
waitForExplicitFinish
(
)
;
var
gFrame
;
/
/
This
test
file
is
loaded
in
a
type
=
content
docshell
whose
principal
is
/
/
the
system
principal
.
/
/
Using
data
:
URIs
here
instead
of
javascript
:
URIs
since
javascript
:
URIs
/
/
fail
to
load
when
there
'
s
no
principal
to
load
them
against
.
This
only
/
/
matters
when
these
tests
fail
(
produces
better
error
messages
)
.
var
tests
=
[
function
testInitiation
(
cb
)
{
gFrame
=
document
.
createXULElement
(
"
iframe
"
)
;
gFrame
.
setAttribute
(
"
type
"
"
content
"
)
;
document
.
documentElement
.
appendChild
(
gFrame
)
;
cb
(
)
;
}
function
testInheritFromCurrent_system
(
cb
)
{
loadListener
(
gFrame
function
(
)
{
is
(
window
.
inheritedSystem
undefined
"
load
in
type
=
content
iframe
shouldn
'
t
inherit
system
principal
from
current
document
"
)
;
cb
(
)
;
}
true
)
;
gFrame
.
setAttribute
(
"
src
"
"
data
:
text
/
html
<
script
>
parent
.
inheritedSystem
=
true
;
<
/
script
>
"
)
;
}
]
;
addLoadEvent
(
function
onLoad
(
)
{
ok
(
Components
.
stack
"
this
test
must
be
run
with
the
system
principal
"
)
;
nextTest
(
)
;
}
)
;
function
loadListener
(
target
func
)
{
target
.
addEventListener
(
"
load
"
function
lis
(
)
{
target
.
removeEventListener
(
"
load
"
lis
true
)
;
func
(
)
;
}
true
)
;
}
function
nextTest
(
)
{
if
(
tests
.
length
)
{
let
test
=
tests
.
shift
(
)
;
SimpleTest
.
executeSoon
(
function
(
)
{
info
(
"
running
"
+
test
.
name
)
;
test
(
nextTest
)
;
}
)
;
}
else
SimpleTest
.
executeSoon
(
SimpleTest
.
finish
)
;
}
]
]
>
<
/
script
>
<
/
window
>
