/
*
-
*
-
Mode
:
C
;
tab
-
width
:
8
;
indent
-
tabs
-
mode
:
nil
;
c
-
basic
-
offset
:
4
-
*
-
*
*
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
*
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
*
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
*
/
#
include
"
nsISupports
.
idl
"
#
include
"
nsIURI
.
idl
"
/
*
*
*
This
interface
allows
the
security
manager
to
query
custom
per
-
addon
security
*
policy
.
*
/
[
scriptable
uuid
(
8a034ef9
-
9d14
-
4c5d
-
8319
-
06c1ab574baa
)
]
interface
nsIAddonPolicyService
:
nsISupports
{
/
*
*
*
Returns
true
if
unprivileged
code
associated
with
the
given
addon
may
load
*
data
from
|
aURI
|
.
*
/
boolean
addonMayLoadURI
(
in
AString
aAddonId
in
nsIURI
aURI
)
;
/
*
*
*
Returns
true
if
a
given
extension
:
/
/
URI
is
web
-
accessible
.
*
/
boolean
extensionURILoadableByAnyone
(
in
nsIURI
aURI
)
;
/
*
*
*
Maps
an
extension
URI
to
the
ID
of
the
addon
it
belongs
to
.
*
/
AString
extensionURIToAddonId
(
in
nsIURI
aURI
)
;
}
;
/
*
*
*
This
interface
exposes
functionality
related
to
add
-
on
content
policy
*
enforcement
.
*
/
[
scriptable
uuid
(
7a4fe60b
-
9131
-
45f5
-
83f3
-
dc63b5d71a5d
)
]
interface
nsIAddonContentPolicy
:
nsISupports
{
/
*
*
*
Checks
a
custom
content
security
policy
string
to
ensure
that
it
meets
*
minimum
security
requirements
.
Returns
null
for
valid
policies
or
a
*
string
describing
the
error
for
invalid
policies
.
*
/
AString
validateAddonCSP
(
in
AString
aPolicyString
)
;
}
;
