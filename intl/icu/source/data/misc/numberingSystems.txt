/
/
2016
and
later
:
Unicode
Inc
.
and
others
.
/
/
License
&
terms
of
use
:
http
:
/
/
www
.
unicode
.
org
/
copyright
.
html
#
License
numberingSystems
:
table
(
nofallback
)
{
numberingSystems
{
adlm
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
ahom
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
arab
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
arabext
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
armn
{
algorithmic
:
int
{
1
}
desc
{
"
%
armenian
-
upper
"
}
radix
:
int
{
10
}
}
armnlow
{
algorithmic
:
int
{
1
}
desc
{
"
%
armenian
-
lower
"
}
radix
:
int
{
10
}
}
bali
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
beng
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
bhks
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
brah
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
cakm
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
cham
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
cyrl
{
algorithmic
:
int
{
1
}
desc
{
"
%
cyrillic
-
lower
"
}
radix
:
int
{
10
}
}
deva
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
ethi
{
algorithmic
:
int
{
1
}
desc
{
"
%
ethiopic
"
}
radix
:
int
{
10
}
}
fullwide
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
geor
{
algorithmic
:
int
{
1
}
desc
{
"
%
georgian
"
}
radix
:
int
{
10
}
}
grek
{
algorithmic
:
int
{
1
}
desc
{
"
%
greek
-
upper
"
}
radix
:
int
{
10
}
}
greklow
{
algorithmic
:
int
{
1
}
desc
{
"
%
greek
-
lower
"
}
radix
:
int
{
10
}
}
gujr
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
guru
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
hanidays
{
algorithmic
:
int
{
1
}
desc
{
"
zh
/
SpelloutRules
/
%
spellout
-
numbering
-
days
"
}
radix
:
int
{
10
}
}
hanidec
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
hans
{
algorithmic
:
int
{
1
}
desc
{
"
zh
/
SpelloutRules
/
%
spellout
-
cardinal
"
}
radix
:
int
{
10
}
}
hansfin
{
algorithmic
:
int
{
1
}
desc
{
"
zh
/
SpelloutRules
/
%
spellout
-
cardinal
-
financial
"
}
radix
:
int
{
10
}
}
hant
{
algorithmic
:
int
{
1
}
desc
{
"
zh_Hant
/
SpelloutRules
/
%
spellout
-
cardinal
"
}
radix
:
int
{
10
}
}
hantfin
{
algorithmic
:
int
{
1
}
desc
{
"
zh_Hant
/
SpelloutRules
/
%
spellout
-
cardinal
-
financial
"
}
radix
:
int
{
10
}
}
hebr
{
algorithmic
:
int
{
1
}
desc
{
"
%
hebrew
"
}
radix
:
int
{
10
}
}
hmng
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
java
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
jpan
{
algorithmic
:
int
{
1
}
desc
{
"
ja
/
SpelloutRules
/
%
spellout
-
cardinal
"
}
radix
:
int
{
10
}
}
jpanfin
{
algorithmic
:
int
{
1
}
desc
{
"
ja
/
SpelloutRules
/
%
spellout
-
cardinal
-
financial
"
}
radix
:
int
{
10
}
}
kali
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
khmr
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
knda
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
lana
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
lanatham
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
laoo
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
latn
{
algorithmic
:
int
{
0
}
desc
{
"
0123456789
"
}
radix
:
int
{
10
}
}
lepc
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
limb
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mathbold
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mathdbl
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mathmono
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mathsanb
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mathsans
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mlym
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
modi
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mong
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mroo
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mtei
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mymr
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mymrshan
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
mymrtlng
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
newa
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
nkoo
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
olck
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
orya
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
osma
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
roman
{
algorithmic
:
int
{
1
}
desc
{
"
%
roman
-
upper
"
}
radix
:
int
{
10
}
}
romanlow
{
algorithmic
:
int
{
1
}
desc
{
"
%
roman
-
lower
"
}
radix
:
int
{
10
}
}
saur
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
shrd
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
sind
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
sinh
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
sora
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
sund
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
takr
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
talu
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
taml
{
algorithmic
:
int
{
1
}
desc
{
"
%
tamil
"
}
radix
:
int
{
10
}
}
tamldec
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
telu
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
thai
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
tibt
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
tirh
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
vaii
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
wara
{
algorithmic
:
int
{
0
}
desc
{
"
"
}
radix
:
int
{
10
}
}
}
}
