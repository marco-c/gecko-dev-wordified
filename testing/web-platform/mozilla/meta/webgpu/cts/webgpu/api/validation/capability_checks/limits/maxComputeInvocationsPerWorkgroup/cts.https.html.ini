[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
capability_checks
limits
maxComputeInvocationsPerWorkgroup
:
createComputePipeline
at_over
:
*
]
implementation
-
status
:
backlog
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
async
=
false
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
async
=
true
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
async
=
false
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
async
=
true
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
async
=
false
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
async
=
true
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
async
=
false
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
async
=
true
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
async
=
false
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
async
=
true
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
async
=
false
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
async
=
true
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
async
=
false
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
async
=
true
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
async
=
false
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
async
=
true
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
async
=
false
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
async
=
true
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
async
=
false
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
async
=
true
]
