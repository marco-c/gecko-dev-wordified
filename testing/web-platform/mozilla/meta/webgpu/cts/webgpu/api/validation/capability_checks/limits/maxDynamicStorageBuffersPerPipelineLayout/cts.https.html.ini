[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
capability_checks
limits
maxDynamicStorageBuffersPerPipelineLayout
:
createBindGroupLayout
at_over
:
*
]
tags
:
[
webgpu
webgpu
-
long
]
implementation
-
status
:
if
os
=
=
"
linux
"
:
backlog
if
os
=
=
"
mac
"
:
backlog
expected
:
if
os
=
=
"
linux
"
:
[
OK
CRASH
]
if
os
=
=
"
mac
"
:
[
OK
CRASH
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
1
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
2
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
2
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
3
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
4
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
4
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
5
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
6
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
6
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
7
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
1
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
2
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
2
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
3
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
4
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
4
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
5
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
6
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
6
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
7
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
1
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
2
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
2
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
3
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
4
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
4
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
5
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
6
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
6
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
7
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
1
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
2
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
2
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
3
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
4
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
4
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
5
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
6
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
6
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
7
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
1
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
2
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
2
;
type
=
"
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
3
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
4
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
4
;
type
=
"
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
5
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
6
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
6
;
type
=
"
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
7
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
1
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
2
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
2
;
type
=
"
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
3
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
4
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
4
;
type
=
"
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
5
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
6
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
6
;
type
=
"
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
7
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
1
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
2
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
2
;
type
=
"
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
3
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
4
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
4
;
type
=
"
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
5
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
6
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
6
;
type
=
"
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
visibility
=
7
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
1
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
2
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
2
;
type
=
"
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
3
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
4
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
4
;
type
=
"
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
5
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
6
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
6
;
type
=
"
storage
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
visibility
=
7
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
1
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
2
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
2
;
type
=
"
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
3
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
4
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
4
;
type
=
"
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
5
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
6
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
6
;
type
=
"
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
visibility
=
7
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
1
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
2
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
2
;
type
=
"
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
3
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
4
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
4
;
type
=
"
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
5
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
6
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
6
;
type
=
"
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
visibility
=
7
;
type
=
"
read
-
only
-
storage
"
]
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
capability_checks
limits
maxDynamicStorageBuffersPerPipelineLayout
:
createPipelineLayout
at_over
:
*
]
implementation
-
status
:
if
os
=
=
"
linux
"
and
not
debug
:
backlog
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
OK
TIMEOUT
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
type
=
"
storage
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
type
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
type
=
"
storage
"
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
type
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
type
=
"
storage
"
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
type
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
type
=
"
storage
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
type
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
type
=
"
storage
"
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
type
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
type
=
"
storage
"
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
type
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
type
=
"
storage
"
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
type
=
"
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
type
=
"
read
-
only
-
storage
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
type
=
"
storage
"
]
