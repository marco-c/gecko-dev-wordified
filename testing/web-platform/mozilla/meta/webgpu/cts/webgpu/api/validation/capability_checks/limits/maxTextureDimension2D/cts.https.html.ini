[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
capability_checks
limits
maxTextureDimension2D
:
configure
at_over
:
*
]
tags
:
[
webgpu
webgpu
-
long
]
implementation
-
status
:
backlog
expected
:
if
os
=
=
"
mac
"
and
not
debug
:
[
OK
CRASH
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
offscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
onscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
offscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
onscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
offscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
onscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
offscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
onscreen
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
capability_checks
limits
maxTextureDimension2D
:
createTexture
at_over
:
*
]
implementation
-
status
:
backlog
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
]
expected
:
FAIL
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
]
expected
:
FAIL
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
]
expected
:
FAIL
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
capability_checks
limits
maxTextureDimension2D
:
getCurrentTexture
at_over
:
*
]
tags
:
[
webgpu
webgpu
-
long
]
implementation
-
status
:
backlog
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
OK
CRASH
]
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
offscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
onscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
offscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
atDefault
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
onscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
atMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
betweenDefaultAndMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
offscreen
"
]
[
:
limitTest
=
"
overMaximum
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
onscreen
"
]
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
offscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
atLimit
"
;
canvasType
=
"
onscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
offscreen
"
]
expected
:
FAIL
[
:
limitTest
=
"
underDefault
"
;
testValueName
=
"
overLimit
"
;
canvasType
=
"
onscreen
"
]
expected
:
FAIL
