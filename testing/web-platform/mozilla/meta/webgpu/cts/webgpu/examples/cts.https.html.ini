[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
async
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
builder_cases
:
*
]
implementation
-
status
:
backlog
[
:
x
=
1
;
y
=
1
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
x
=
1
;
y
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
x
=
2
;
y
=
1
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
x
=
2
;
y
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
builder_cases_subcases
:
*
]
implementation
-
status
:
backlog
[
:
x
=
1
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
x
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
builder_subcases
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
builder_subcases_short
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
plain_cases
:
*
]
implementation
-
status
:
backlog
[
:
x
=
-
10
;
y
=
-
10
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
x
=
2
;
y
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
plain_cases_private
:
*
]
implementation
-
status
:
backlog
[
:
x
=
-
10
;
y
=
18
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
x
=
2
;
y
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
gpu
async
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
gpu
buffers
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
gpu
with_texture_compression
bc
:
*
]
implementation
-
status
:
backlog
[
:
textureCompressionBC
=
false
]
expected
:
FAIL
[
:
textureCompressionBC
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
gpu
with_texture_compression
etc2
:
*
]
implementation
-
status
:
backlog
[
:
textureCompressionETC2
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
textureCompressionETC2
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
not_implemented_yet
with_plan
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
not_implemented_yet
without_plan
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
test_name
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
