[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
abstract_float_matching
:
*
]
implementation
-
status
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
abstract_float_nonmatching_vec2
:
*
]
implementation
-
status
:
backlog
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
abstract_float_nonmatching_vec3
:
*
]
implementation
-
status
:
backlog
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
abstract_float_nonmatching_vec4
:
*
]
implementation
-
status
:
backlog
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
f16_matching
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
expected
:
if
os
=
=
"
mac
"
:
ERROR
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
f16_nonmatching_vec2
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
expected
:
if
os
=
=
"
mac
"
:
ERROR
[
:
inputSource
=
"
const
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
]
[
:
inputSource
=
"
storage_rw
"
]
[
:
inputSource
=
"
uniform
"
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
f16_nonmatching_vec3
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
expected
:
if
os
=
=
"
mac
"
:
ERROR
[
:
inputSource
=
"
const
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
]
[
:
inputSource
=
"
storage_rw
"
]
[
:
inputSource
=
"
uniform
"
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
f16_nonmatching_vec4
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
expected
:
if
os
=
=
"
mac
"
:
ERROR
[
:
inputSource
=
"
const
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
]
[
:
inputSource
=
"
storage_rw
"
]
[
:
inputSource
=
"
uniform
"
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
f32_matching
:
*
]
implementation
-
status
:
backlog
expected
:
ERROR
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
f32_nonmatching_vec2
:
*
]
implementation
-
status
:
backlog
expected
:
ERROR
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
]
[
:
inputSource
=
"
storage_rw
"
]
[
:
inputSource
=
"
uniform
"
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
f32_nonmatching_vec3
:
*
]
implementation
-
status
:
backlog
expected
:
ERROR
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
]
[
:
inputSource
=
"
storage_rw
"
]
[
:
inputSource
=
"
uniform
"
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
mix
:
f32_nonmatching_vec4
:
*
]
implementation
-
status
:
backlog
expected
:
ERROR
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
]
[
:
inputSource
=
"
storage_rw
"
]
[
:
inputSource
=
"
uniform
"
]
