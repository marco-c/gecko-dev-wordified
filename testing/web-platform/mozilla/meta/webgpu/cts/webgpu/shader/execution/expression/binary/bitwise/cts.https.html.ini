[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_and
:
*
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_and_compound
:
*
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_exclusive_or
:
*
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_exclusive_or_compound
:
*
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_or
:
*
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
abstract
-
int
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_or_compound
:
*
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
