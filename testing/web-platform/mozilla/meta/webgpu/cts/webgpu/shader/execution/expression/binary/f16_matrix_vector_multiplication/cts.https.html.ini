[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f16_matrix_vector_multiplication
:
matrix_vector
:
*
]
implementation
-
status
:
backlog
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f16_matrix_vector_multiplication
:
vector_matrix
:
*
]
implementation
-
status
:
backlog
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f16_matrix_vector_multiplication
:
vector_matrix_compound
:
*
]
implementation
-
status
:
backlog
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
dim
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
dim
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_r
"
;
dim
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
dim
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
dim
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
storage_rw
"
;
dim
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
dim
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
dim
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
:
inputSource
=
"
uniform
"
;
dim
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
