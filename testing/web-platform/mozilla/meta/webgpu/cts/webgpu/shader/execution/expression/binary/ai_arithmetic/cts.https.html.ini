[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
addition
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
addition_scalar_vector
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
addition_vector_scalar
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
division
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
division_scalar_vector
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
division_vector_scalar
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
multiplication
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
multiplication_scalar_vector
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
multiplication_vector_scalar
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
remainder
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
remainder_scalar_vector
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
remainder_vector_scalar
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
subtraction
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
subtraction_scalar_vector
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize_rhs
=
4
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
ai_arithmetic
:
subtraction_vector_scalar
:
*
]
implementation
-
status
:
if
os
=
=
"
mac
"
:
backlog
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
2
]
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize_lhs
=
4
]
