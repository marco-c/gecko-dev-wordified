[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_assignment
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_call
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_case
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_case_break
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_compound_statement
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_continuing
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_default_case
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_default_case_break
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_diagnostic
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_discard
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_enable
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_fn_const_assert
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_fn_const_decl
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_fn_var_decl
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_for
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_for_break
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_func_decl
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_if
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_if_else
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_let_decl
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_loop
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_loop_break
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_loop_break_if
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_loop_continue
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_member
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_module_const_decl
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_module_var_decl
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_requires
:
*
]
[
:
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_return
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_struct_decl
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_switch
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_type_alias_decl
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_while
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_while_break
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
after_while_continue
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
compound_statement_multiple
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
compound_statement_single
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
function_body_multiple
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
function_body_single
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
module_scope_multiple
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
parse
semicolon
:
module_scope_single
:
*
]
implementation
-
status
:
backlog
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
