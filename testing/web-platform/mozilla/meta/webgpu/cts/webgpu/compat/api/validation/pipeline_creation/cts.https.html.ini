[
cts
.
https
.
html
?
q
=
webgpu
:
compat
api
validation
pipeline_creation
:
depth_textures
:
*
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
compute
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
compute
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
vertex
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
vertex
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
compute
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
compute
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
vertex
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
vertex
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
compute
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
compute
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
vertex
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
vertex
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
compute
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
compute
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
vertex
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec2f
(
0
)
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
vertex
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec3f
(
0
)
)
"
;
textureType
=
"
texture_depth_cube
"
;
stage
=
"
compute
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec3f
(
0
)
)
"
;
textureType
=
"
texture_depth_cube
"
;
stage
=
"
compute
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec3f
(
0
)
)
"
;
textureType
=
"
texture_depth_cube
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec3f
(
0
)
)
"
;
textureType
=
"
texture_depth_cube
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec3f
(
0
)
)
"
;
textureType
=
"
texture_depth_cube
"
;
stage
=
"
vertex
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureGather
(
t
%
20s
%
20vec3f
(
0
)
)
"
;
textureType
=
"
texture_depth_cube
"
;
stage
=
"
vertex
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec2f
(
0
)
)
"
;
textureType
=
"
texture_2d
%
3Cf32
%
3E
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec2f
(
0
)
)
"
;
textureType
=
"
texture_2d
%
3Cf32
%
3E
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec2f
(
0
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec2f
(
0
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec2f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec2f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec2f
(
0
)
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec2f
(
0
)
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec3f
(
0
)
)
"
;
textureType
=
"
texture_depth_cube
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureSample
(
t
%
20s
%
20vec3f
(
0
)
)
"
;
textureType
=
"
texture_depth_cube
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureSampleLevel
(
t
%
20s
%
20vec2f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureSampleLevel
(
t
%
20s
%
20vec2f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureSampleLevel
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
200
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureSampleLevel
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
200
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureSampleLevel
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureSampleLevel
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d_array
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureSampleLevel
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureSampleLevel
(
t
%
20s
%
20vec2f
(
0
)
%
200
%
20vec2i
(
0
%
200
)
)
"
;
textureType
=
"
texture_depth_2d
"
;
stage
=
"
fragment
"
;
async
=
true
]
[
:
sampleWGSL
=
"
textureSampleLevel
(
t
%
20s
%
20vec3f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_cube
"
;
stage
=
"
fragment
"
;
async
=
false
]
[
:
sampleWGSL
=
"
textureSampleLevel
(
t
%
20s
%
20vec3f
(
0
)
%
200
)
"
;
textureType
=
"
texture_depth_cube
"
;
stage
=
"
fragment
"
;
async
=
true
]
