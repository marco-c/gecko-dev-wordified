[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_encoder
:
subresources
buffer_usage_in_one_render_pass_with_two_draws
:
*
]
[
:
usage0
=
"
index
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_misc
:
subresources
buffer_usages_in_copy_and_pass
:
*
]
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
index
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
indexedIndirect
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
indirect
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
indirect
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
read
-
only
-
storage
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
read
-
only
-
storage
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
storage
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
storage
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
uniform
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
uniform
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
vertex
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
index
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
indexedIndirect
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
indirect
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
indirect
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
read
-
only
-
storage
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
read
-
only
-
storage
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
storage
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
storage
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
uniform
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
uniform
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
vertex
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_misc
:
subresources
reset_buffer_usage_before_dispatch
:
*
]
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_misc
:
subresources
reset_buffer_usage_before_draw
:
*
]
[
:
usage0
=
"
index
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
bindings_in_bundle
:
*
]
[
:
type0
=
"
multisampled
-
texture
"
;
type1
=
"
multisampled
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
multisampled
-
texture
"
;
type1
=
"
render
-
target
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
render
-
target
"
;
type1
=
"
multisampled
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
render
-
target
"
;
type1
=
"
sampled
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
render
-
target
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
sampled
-
texture
"
;
type1
=
"
render
-
target
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
sampled
-
texture
"
;
type1
=
"
sampled
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
sampled
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
render
-
target
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
sampled
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
replaced_binding
:
*
]
[
:
compute
=
false
;
callDrawOrDispatch
=
false
;
entry
=
{
"
storageTexture
"
:
{
"
access
"
:
"
write
-
only
"
"
format
"
:
"
rgba8unorm
"
}
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
callDrawOrDispatch
=
false
;
entry
=
{
"
texture
"
:
{
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
callDrawOrDispatch
=
true
;
entry
=
{
"
storageTexture
"
:
{
"
access
"
:
"
write
-
only
"
"
format
"
:
"
rgba8unorm
"
}
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
callDrawOrDispatch
=
true
;
entry
=
{
"
texture
"
:
{
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
callDrawOrDispatch
=
false
;
entry
=
{
"
storageTexture
"
:
{
"
access
"
:
"
write
-
only
"
"
format
"
:
"
rgba8unorm
"
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
callDrawOrDispatch
=
false
;
entry
=
{
"
texture
"
:
{
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
callDrawOrDispatch
=
true
;
entry
=
{
"
storageTexture
"
:
{
"
access
"
:
"
write
-
only
"
"
format
"
:
"
rgba8unorm
"
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
callDrawOrDispatch
=
true
;
entry
=
{
"
texture
"
:
{
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
scope
basic
render
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
scope
dispatch
:
*
]
[
:
dispatch
=
"
direct
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dispatch
=
"
indirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dispatch
=
"
none
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
scope
pass_boundary
compute
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
scope
pass_boundary
render
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
shader_stages_and_visibility
attachment_write
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
shader_stages_and_visibility
storage_write
:
*
]
[
:
compute
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
subresources_and_binding_types_combination_for_aspect
:
*
]
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth16unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth24plus
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth24plus
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth32float
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
depth16unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
depth24plus
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
depth24plus
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
depth32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
depth32float
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
depth16unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
depth24plus
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
depth24plus
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
depth32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
depth32float
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
depth16unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
depth24plus
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
depth24plus
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
depth32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
depth32float
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth16unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth24plus
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth24plus
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth32float
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
subresources_and_binding_types_combination_for_color
:
*
]
[
:
compute
=
false
;
type0
=
"
render
-
target
"
;
type1
=
"
render
-
target
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
type0
=
"
sampled
-
texture
"
;
type1
=
"
render
-
target
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
type0
=
"
sampled
-
texture
"
;
type1
=
"
sampled
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
type0
=
"
sampled
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
render
-
target
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
type0
=
"
sampled
-
texture
"
;
type1
=
"
sampled
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
type0
=
"
sampled
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
unused_bindings_in_pipeline
:
*
]
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_render_common
:
subresources
color_attachment_and_bind_group
:
*
]
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
0
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
colorAttachmentLevel
=
1
;
colorAttachmentLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
;
bgUsage
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_render_common
:
subresources
color_attachments
:
*
]
[
:
layer0
=
0
;
level0
=
0
;
layer1
=
0
;
level1
=
0
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
0
;
level0
=
0
;
layer1
=
0
;
level1
=
0
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
0
;
level0
=
0
;
layer1
=
0
;
level1
=
1
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
0
;
level0
=
0
;
layer1
=
1
;
level1
=
0
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
0
;
level0
=
0
;
layer1
=
1
;
level1
=
0
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
0
;
level0
=
0
;
layer1
=
1
;
level1
=
1
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
0
;
level0
=
1
;
layer1
=
0
;
level1
=
0
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
0
;
level0
=
1
;
layer1
=
0
;
level1
=
1
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
0
;
level0
=
1
;
layer1
=
0
;
level1
=
1
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
0
;
level0
=
1
;
layer1
=
1
;
level1
=
0
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
0
;
level0
=
1
;
layer1
=
1
;
level1
=
1
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
0
;
level0
=
1
;
layer1
=
1
;
level1
=
1
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
0
;
layer1
=
0
;
level1
=
0
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
0
;
layer1
=
0
;
level1
=
0
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
0
;
layer1
=
0
;
level1
=
1
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
0
;
layer1
=
1
;
level1
=
0
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
0
;
layer1
=
1
;
level1
=
0
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
0
;
layer1
=
1
;
level1
=
1
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
1
;
layer1
=
0
;
level1
=
0
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
1
;
layer1
=
0
;
level1
=
1
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
1
;
layer1
=
0
;
level1
=
1
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
1
;
layer1
=
1
;
level1
=
0
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
1
;
layer1
=
1
;
level1
=
1
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
layer0
=
1
;
level0
=
1
;
layer1
=
1
;
level1
=
1
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_render_common
:
subresources
depth_stencil_attachment_and_bind_group
:
*
]
[
:
dsLevel
=
0
;
dsLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
0
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
0
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
0
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
1
;
bgLevel
=
0
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
1
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
0
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
dsLevel
=
1
;
dsLayer
=
1
;
bgLevel
=
1
;
bgLevelCount
=
2
;
bgLayer
=
1
;
bgLayerCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_render_common
:
subresources
depth_stencil_texture_in_bind_groups
:
*
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
TIMEOUT
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
depth
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
depth
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
:
view0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
view1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
aspect0
=
"
stencil
-
only
"
;
aspect1
=
"
stencil
-
only
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
NOTRUN
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_render_common
:
subresources
multiple_bind_groups
:
*
]
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
storage
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
storage
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
0
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
1
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
bg0Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg0Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Levels
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bg1Layers
=
{
"
base
"
:
1
"
count
"
:
2
}
;
bgUsage0
=
"
texture
"
;
bgUsage1
=
"
texture
"
;
inSamePass
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_render_misc
:
subresources
set_bind_group_on_same_index_color_texture
:
*
]
[
:
useDifferentTextureAsTexture2
=
false
;
baseLayer2
=
0
;
view2Binding
=
"
storage
"
;
hasConflict
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
useDifferentTextureAsTexture2
=
false
;
baseLayer2
=
0
;
view2Binding
=
"
storage
"
;
hasConflict
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
useDifferentTextureAsTexture2
=
false
;
baseLayer2
=
0
;
view2Binding
=
"
texture
"
;
hasConflict
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
useDifferentTextureAsTexture2
=
false
;
baseLayer2
=
0
;
view2Binding
=
"
texture
"
;
hasConflict
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
useDifferentTextureAsTexture2
=
false
;
baseLayer2
=
1
;
view2Binding
=
"
storage
"
;
hasConflict
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
useDifferentTextureAsTexture2
=
false
;
baseLayer2
=
1
;
view2Binding
=
"
storage
"
;
hasConflict
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
useDifferentTextureAsTexture2
=
false
;
baseLayer2
=
1
;
view2Binding
=
"
texture
"
;
hasConflict
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
useDifferentTextureAsTexture2
=
false
;
baseLayer2
=
1
;
view2Binding
=
"
texture
"
;
hasConflict
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
useDifferentTextureAsTexture2
=
true
;
baseLayer2
=
0
;
view2Binding
=
"
texture
"
;
hasConflict
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
useDifferentTextureAsTexture2
=
true
;
baseLayer2
=
0
;
view2Binding
=
"
texture
"
;
hasConflict
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_render_misc
:
subresources
set_bind_group_on_same_index_depth_stencil_texture
:
*
]
[
:
bindAspect
=
"
depth
-
only
"
;
depthStencilReadOnly
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bindAspect
=
"
depth
-
only
"
;
depthStencilReadOnly
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bindAspect
=
"
stencil
-
only
"
;
depthStencilReadOnly
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
bindAspect
=
"
stencil
-
only
"
;
depthStencilReadOnly
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_render_misc
:
subresources
set_unused_bind_group
:
*
]
[
:
inRenderPass
=
false
;
hasConflict
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inRenderPass
=
false
;
hasConflict
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inRenderPass
=
true
;
hasConflict
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inRenderPass
=
true
;
hasConflict
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_render_misc
:
subresources
texture_usages_in_copy_and_render_pass
:
*
]
[
:
usage0
=
"
color
-
attachment
"
;
usage1
=
"
copy
-
dst
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
color
-
attachment
"
;
usage1
=
"
copy
-
src
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
color
-
attachment
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
copy
-
dst
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
copy
-
src
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
color
-
attachment
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
copy
-
dst
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
copy
-
src
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
copy
-
dst
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
copy
-
src
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
texture
"
;
usage1
=
"
copy
-
dst
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
texture
"
;
usage1
=
"
copy
-
src
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
shader_module
entry_point
:
compute
:
*
]
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
ma
%
20in
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
main
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
main
%
20
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
main
%
5Cn
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
main
%
5Cu0000
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
main
%
5Cu0000a
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
mian
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
main_t12V3
"
;
stageEntryPoint
=
"
_main_t12V3
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
main_t12V3
"
;
stageEntryPoint
=
"
main_t12V3
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
main_t12V3
"
;
stageEntryPoint
=
"
main_t12V5
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
mainmain
"
;
stageEntryPoint
=
"
foo
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
mainmain
"
;
stageEntryPoint
=
"
mainmain
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
mian
"
;
stageEntryPoint
=
"
main
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
mian
"
;
stageEntryPoint
=
"
mian
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
s
%
C3
%
A9quen
%
C3
%
A7age
"
;
stageEntryPoint
=
"
s
%
C3
%
A9quen
%
C3
%
A7age
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
shaderModuleEntryPoint
=
"
s
%
C3
%
A9quen
%
C3
%
A7age
"
;
stageEntryPoint
=
"
se
%
CC
%
81quen
%
C3
%
A7age
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
ma
%
20in
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
main
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
main
%
20
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
main
%
5Cn
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
main
%
5Cu0000
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
main
%
5Cu0000a
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
main
"
;
stageEntryPoint
=
"
mian
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
main_t12V3
"
;
stageEntryPoint
=
"
_main_t12V3
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
main_t12V3
"
;
stageEntryPoint
=
"
main_t12V3
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
main_t12V3
"
;
stageEntryPoint
=
"
main_t12V5
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
mainmain
"
;
stageEntryPoint
=
"
foo
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
mainmain
"
;
stageEntryPoint
=
"
mainmain
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
mian
"
;
stageEntryPoint
=
"
main
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
mian
"
;
stageEntryPoint
=
"
mian
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
s
%
C3
%
A9quen
%
C3
%
A7age
"
;
stageEntryPoint
=
"
s
%
C3
%
A9quen
%
C3
%
A7age
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
shaderModuleEntryPoint
=
"
s
%
C3
%
A9quen
%
C3
%
A7age
"
;
stageEntryPoint
=
"
se
%
CC
%
81quen
%
C3
%
A7age
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
