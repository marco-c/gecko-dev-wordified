[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
abs
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
abs
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
acos
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
acos
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
acos
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
acosh
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
acosh
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
acosh
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
win
"
and
not
debug
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
all
:
bool
:
*
]
[
:
inputSource
=
"
const
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
overload
=
"
scalar
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
overload
=
"
vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
overload
=
"
scalar
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
overload
=
"
vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
overload
=
"
scalar
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
overload
=
"
vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
overload
=
"
vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
any
:
bool
:
*
]
[
:
inputSource
=
"
const
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
overload
=
"
scalar
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
overload
=
"
vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
overload
=
"
scalar
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
overload
=
"
vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
overload
=
"
scalar
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
overload
=
"
vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
overload
=
"
vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
arrayLength
:
binding_subregion
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
arrayLength
:
multiple_elements
:
*
]
[
:
buffer_size
=
1004
;
type
=
"
ElemStruct
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
ElemStruct_ExplicitPadding
"
;
stride
=
32
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
ElemStruct_ImplicitPadding
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
array
%
3Cf16
4
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
array
%
3Cf32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
array
%
3Ci32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
array
%
3Cu32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
atomic
%
3Ci32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
atomic
%
3Cu32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
f16
"
;
stride
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
f32
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
i32
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat2x2
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat2x2
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat2x3
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat2x3
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat2x4
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat2x4
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat3x2
%
3Cf16
%
3E
"
;
stride
=
12
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat3x2
%
3Cf32
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat3x3
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat3x3
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat3x4
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat3x4
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat4x2
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat4x2
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat4x3
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat4x3
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
win
"
and
not
debug
:
FAIL
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat4x4
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
mat4x4
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
u32
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec2
%
3Cf16
%
3E
"
;
stride
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec2
%
3Cf32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec2
%
3Ci32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec2
%
3Cu32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec3
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec3
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec3
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec3
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec4
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec4
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec4
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1004
;
type
=
"
vec4
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
ElemStruct
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
ElemStruct_ExplicitPadding
"
;
stride
=
32
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
ElemStruct_ImplicitPadding
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
array
%
3Cf16
4
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
array
%
3Cf32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
array
%
3Ci32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
array
%
3Cu32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
atomic
%
3Ci32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
atomic
%
3Cu32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
f16
"
;
stride
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
f32
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
i32
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat2x2
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat2x2
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat2x3
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat2x3
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat2x4
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat2x4
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat3x2
%
3Cf16
%
3E
"
;
stride
=
12
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat3x2
%
3Cf32
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat3x3
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat3x3
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat3x4
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat3x4
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat4x2
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat4x2
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat4x3
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat4x3
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat4x4
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
mat4x4
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
u32
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec2
%
3Cf16
%
3E
"
;
stride
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec2
%
3Cf32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec2
%
3Ci32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec2
%
3Cu32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec3
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec3
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec3
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec3
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec4
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec4
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec4
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
1048576
;
type
=
"
vec4
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
ElemStruct
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
ElemStruct_ExplicitPadding
"
;
stride
=
32
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
ElemStruct_ImplicitPadding
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
array
%
3Cf16
4
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
array
%
3Cf32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
array
%
3Ci32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
array
%
3Cu32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
atomic
%
3Ci32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
atomic
%
3Cu32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
f16
"
;
stride
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
f32
"
;
stride
=
4
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
i32
"
;
stride
=
4
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat2x2
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat2x2
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat2x3
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat2x3
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat2x4
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat2x4
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat3x2
%
3Cf16
%
3E
"
;
stride
=
12
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat3x2
%
3Cf32
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat3x3
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat3x3
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat3x4
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat3x4
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat4x2
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat4x2
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat4x3
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat4x3
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat4x4
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
mat4x4
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
u32
"
;
stride
=
4
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec2
%
3Cf16
%
3E
"
;
stride
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec2
%
3Cf32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec2
%
3Ci32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec2
%
3Cu32
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec3
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec3
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec3
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec3
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec4
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec4
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec4
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
buffer_size
=
640
;
type
=
"
vec4
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
arrayLength
:
read_only
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
arrayLength
:
single_element
:
*
]
[
:
type
=
"
ElemStruct
"
;
stride
=
4
]
expected
:
FAIL
[
:
type
=
"
ElemStruct_ExplicitPadding
"
;
stride
=
32
]
expected
:
FAIL
[
:
type
=
"
ElemStruct_ImplicitPadding
"
;
stride
=
16
]
expected
:
FAIL
[
:
type
=
"
array
%
3Cf16
4
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
array
%
3Cf32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
type
=
"
array
%
3Ci32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
type
=
"
array
%
3Cu32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
type
=
"
atomic
%
3Ci32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
type
=
"
atomic
%
3Cu32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
type
=
"
f16
"
;
stride
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
f32
"
;
stride
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
stride
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat2x2
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat2x2
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
type
=
"
mat2x3
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat2x3
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat2x4
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat2x4
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
win
"
and
not
debug
:
FAIL
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat3x2
%
3Cf16
%
3E
"
;
stride
=
12
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat3x2
%
3Cf32
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat3x3
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat3x3
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat3x4
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat3x4
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat4x2
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat4x2
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
type
=
"
mat4x3
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat4x3
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat4x4
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
mat4x4
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
win
"
and
not
debug
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
stride
=
4
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
vec2
%
3Cf16
%
3E
"
;
stride
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
vec2
%
3Cf32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Ci32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Cu32
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
vec3
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
vec3
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
vec3
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
vec4
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
vec4
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
arrayLength
:
struct_member
:
*
]
[
:
member_offset
=
0
;
type
=
"
ElemStruct
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
ElemStruct_ExplicitPadding
"
;
stride
=
32
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
ElemStruct_ImplicitPadding
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
array
%
3Cf16
4
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
array
%
3Cf32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
array
%
3Ci32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
array
%
3Cu32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
atomic
%
3Ci32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
atomic
%
3Cu32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
f16
"
;
stride
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
f32
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
i32
"
;
stride
=
4
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat2x2
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat2x2
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat2x3
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat2x3
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat2x4
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat2x4
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
win
"
and
not
debug
:
FAIL
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat3x2
%
3Cf16
%
3E
"
;
stride
=
12
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat3x2
%
3Cf32
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat3x3
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat3x3
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat3x4
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat3x4
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat4x2
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat4x2
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat4x3
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat4x3
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat4x4
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
mat4x4
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
u32
"
;
stride
=
4
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec2
%
3Cf16
%
3E
"
;
stride
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec2
%
3Cf32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec2
%
3Ci32
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
win
"
and
not
debug
:
FAIL
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec2
%
3Cu32
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec3
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec3
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec3
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec3
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec4
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec4
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec4
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
0
;
type
=
"
vec4
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
ElemStruct
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
ElemStruct_ExplicitPadding
"
;
stride
=
32
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
ElemStruct_ImplicitPadding
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
array
%
3Cf16
4
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
array
%
3Cf32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
array
%
3Ci32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
array
%
3Cu32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
atomic
%
3Ci32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
atomic
%
3Cu32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
f16
"
;
stride
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
f32
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
i32
"
;
stride
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat2x2
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat2x2
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat2x3
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat2x3
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat2x4
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat2x4
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat3x2
%
3Cf16
%
3E
"
;
stride
=
12
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat3x2
%
3Cf32
%
3E
"
;
stride
=
24
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat3x3
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat3x3
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
win
"
and
not
debug
:
FAIL
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat3x4
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat3x4
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat4x2
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat4x2
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat4x3
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat4x3
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat4x4
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
mat4x4
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
u32
"
;
stride
=
4
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec2
%
3Cf16
%
3E
"
;
stride
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec2
%
3Cf32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec2
%
3Ci32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec2
%
3Cu32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec3
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec3
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec3
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec3
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec4
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec4
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec4
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
20
;
type
=
"
vec4
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
ElemStruct
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
ElemStruct_ExplicitPadding
"
;
stride
=
32
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
ElemStruct_ImplicitPadding
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
array
%
3Cf16
4
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
array
%
3Cf32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
array
%
3Ci32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
array
%
3Cu32
4
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
atomic
%
3Ci32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
atomic
%
3Cu32
%
3E
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
f16
"
;
stride
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
f32
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
i32
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat2x2
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat2x2
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat2x3
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat2x3
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
and
debug
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat2x4
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat2x4
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat3x2
%
3Cf16
%
3E
"
;
stride
=
12
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat3x2
%
3Cf32
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat3x3
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat3x3
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat3x4
%
3Cf16
%
3E
"
;
stride
=
24
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat3x4
%
3Cf32
%
3E
"
;
stride
=
48
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
win
"
and
not
debug
:
FAIL
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat4x2
%
3Cf16
%
3E
"
;
stride
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat4x2
%
3Cf32
%
3E
"
;
stride
=
32
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat4x3
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat4x3
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat4x4
%
3Cf16
%
3E
"
;
stride
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
mat4x4
%
3Cf32
%
3E
"
;
stride
=
64
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
u32
"
;
stride
=
4
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec2
%
3Cf16
%
3E
"
;
stride
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec2
%
3Cf32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec2
%
3Ci32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec2
%
3Cu32
%
3E
"
;
stride
=
8
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec3
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec3
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec3
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec3
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec4
%
3Cf16
%
3E
"
;
stride
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec4
%
3Cf32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec4
%
3Ci32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
:
member_offset
=
4
;
type
=
"
vec4
%
3Cu32
%
3E
"
;
stride
=
16
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
asin
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
asin
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
asin
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
asinh
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
asinh
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
asinh
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
atan2
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
atan
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
atan
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
atan
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
