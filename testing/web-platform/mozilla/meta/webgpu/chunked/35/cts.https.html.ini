[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_addition
:
scalar
:
*
]
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_addition
:
scalar_vector
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_addition
:
vector
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_addition
:
vector_scalar
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_comparison
:
equals
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_comparison
:
greater_equals
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_comparison
:
greater_than
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_comparison
:
less_equals
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_comparison
:
less_than
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_comparison
:
not_equals
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_matrix_addition
:
matrix
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_matrix_subtraction
:
matrix
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_multiplication
:
scalar
:
*
]
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_multiplication
:
scalar_vector
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_multiplication
:
vector
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_multiplication
:
vector_scalar
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_subtraction
:
scalar
:
*
]
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_subtraction
:
scalar_vector
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_subtraction
:
vector
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
af_subtraction
:
vector_scalar
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_and
:
*
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_and_compound
:
*
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_exclusive_or
:
*
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_or
:
*
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_or_compound
:
*
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
[
PASS
FAIL
]
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
