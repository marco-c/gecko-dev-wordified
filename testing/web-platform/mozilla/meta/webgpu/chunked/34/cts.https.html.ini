[
cts
.
https
.
html
?
q
=
webgpu
:
compat
api
validation
texture
createTexture
:
unsupportedTextureViewFormats
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
compat
api
validation
texture
cubeArray
:
cube_array
:
*
]
[
:
dimension
=
"
cube
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
dimension
=
"
cube
-
array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
async
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
builder_cases
:
*
]
[
:
x
=
1
;
y
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
x
=
1
;
y
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
x
=
2
;
y
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
x
=
2
;
y
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
builder_cases_subcases
:
*
]
[
:
x
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
x
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
builder_subcases
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
builder_subcases_short
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
plain_cases
:
*
]
[
:
x
=
-
10
;
y
=
-
10
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
x
=
2
;
y
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
plain_cases_private
:
*
]
[
:
x
=
-
10
;
y
=
18
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
x
=
2
;
y
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
basic
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
gpu
async
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
gpu
buffers
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
gpu
with_texture_compression
bc
:
*
]
[
:
textureCompressionBC
=
false
]
expected
:
FAIL
[
:
textureCompressionBC
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
gpu
with_texture_compression
etc2
:
*
]
[
:
textureCompressionETC2
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
textureCompressionETC2
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
not_implemented_yet
with_plan
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
not_implemented_yet
without_plan
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
test_name
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
BufferUsage
count
:
*
]
[
:
]
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
BufferUsage
values
:
*
]
[
:
key
=
"
COPY_DST
"
]
[
:
key
=
"
COPY_SRC
"
]
[
:
key
=
"
INDEX
"
]
[
:
key
=
"
INDIRECT
"
]
[
:
key
=
"
MAP_READ
"
]
[
:
key
=
"
MAP_WRITE
"
]
[
:
key
=
"
QUERY_RESOLVE
"
]
[
:
key
=
"
STORAGE
"
]
[
:
key
=
"
UNIFORM
"
]
[
:
key
=
"
VERTEX
"
]
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
ColorWrite
count
:
*
]
[
:
]
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
ColorWrite
values
:
*
]
[
:
key
=
"
ALL
"
]
[
:
key
=
"
ALPHA
"
]
[
:
key
=
"
BLUE
"
]
[
:
key
=
"
GREEN
"
]
[
:
key
=
"
RED
"
]
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
ShaderStage
count
:
*
]
[
:
]
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
ShaderStage
values
:
*
]
[
:
key
=
"
COMPUTE
"
]
[
:
key
=
"
FRAGMENT
"
]
[
:
key
=
"
VERTEX
"
]
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
TextureUsage
count
:
*
]
[
:
]
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
TextureUsage
values
:
*
]
[
:
key
=
"
COPY_DST
"
]
[
:
key
=
"
COPY_SRC
"
]
[
:
key
=
"
RENDER_ATTACHMENT
"
]
[
:
key
=
"
STORAGE_BINDING
"
]
[
:
key
=
"
TEXTURE_BINDING
"
]
