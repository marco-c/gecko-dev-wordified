[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
fragment_state
:
pipeline_output_targets
blend
:
*
]
[
:
isAsync
=
false
;
format
=
"
bgra8unorm
"
;
componentCount
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
bgra8unorm
"
;
componentCount
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
bgra8unorm
"
;
componentCount
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
bgra8unorm
"
;
componentCount
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r8unorm
"
;
componentCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r8unorm
"
;
componentCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r8unorm
"
;
componentCount
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r8unorm
"
;
componentCount
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg8unorm
"
;
componentCount
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg8unorm
"
;
componentCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg8unorm
"
;
componentCount
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg8unorm
"
;
componentCount
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba8unorm
"
;
componentCount
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba8unorm
"
;
componentCount
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba8unorm
"
;
componentCount
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba8unorm
"
;
componentCount
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
bgra8unorm
"
;
componentCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
bgra8unorm
"
;
componentCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
bgra8unorm
"
;
componentCount
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
bgra8unorm
"
;
componentCount
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r8unorm
"
;
componentCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r8unorm
"
;
componentCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r8unorm
"
;
componentCount
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r8unorm
"
;
componentCount
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg8unorm
"
;
componentCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg8unorm
"
;
componentCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg8unorm
"
;
componentCount
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg8unorm
"
;
componentCount
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba8unorm
"
;
componentCount
=
1
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba8unorm
"
;
componentCount
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba8unorm
"
;
componentCount
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba8unorm
"
;
componentCount
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
fragment_state
:
pipeline_output_targets
:
*
]
[
:
isAsync
=
false
;
format
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
bgra8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
bgra8unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r16float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r16sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r16uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r32sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r32uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r8sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r8uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
r8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg16float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg16sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg16uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg32sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg32uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg8sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg8uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rg8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgb10a2uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgb10a2unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba16float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba16sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba16uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba32sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba32uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba8sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba8uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
format
=
"
rgba8unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
bgra8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
bgra8unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r16float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r16sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r16uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r32sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r32uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r8sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r8uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
r8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg16float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg16sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg16uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg32sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg32uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg8sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg8uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rg8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgb10a2uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgb10a2unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba16float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba16sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba16uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba32sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba32uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba8sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba8uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
format
=
"
rgba8unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
fragment_state
:
targets_write_mask
:
*
]
[
:
isAsync
=
false
;
writeMask
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
writeMask
=
15
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
writeMask
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
writeMask
=
2147483649
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
writeMask
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
writeMask
=
15
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
writeMask
=
16
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
writeMask
=
2147483649
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
inter_stage
:
interpolation_sampling
:
*
]
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
flat
)
"
;
input
=
"
%
40interpolate
(
flat
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
linear
%
20center
)
"
;
input
=
"
%
40interpolate
(
linear
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
perspective
)
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
perspective
)
"
;
input
=
"
%
40interpolate
(
perspective
%
20center
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
perspective
)
"
;
input
=
"
%
40interpolate
(
perspective
%
20sample
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
perspective
%
20center
)
"
;
input
=
"
%
40interpolate
(
perspective
%
20centroid
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
perspective
%
20center
)
"
;
input
=
"
%
40interpolate
(
perspective
%
20sample
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
perspective
%
20centroid
)
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
flat
)
"
;
input
=
"
%
40interpolate
(
flat
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
linear
%
20center
)
"
;
input
=
"
%
40interpolate
(
linear
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
perspective
)
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
perspective
)
"
;
input
=
"
%
40interpolate
(
perspective
%
20center
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
perspective
)
"
;
input
=
"
%
40interpolate
(
perspective
%
20sample
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
perspective
%
20center
)
"
;
input
=
"
%
40interpolate
(
perspective
%
20centroid
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
perspective
%
20center
)
"
;
input
=
"
%
40interpolate
(
perspective
%
20sample
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
perspective
%
20centroid
)
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
inter_stage
:
interpolation_type
:
*
]
[
:
isAsync
=
false
;
output
=
"
"
;
input
=
"
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
"
;
input
=
"
%
40interpolate
(
linear
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
"
;
input
=
"
%
40interpolate
(
perspective
%
20center
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
flat
)
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
linear
)
"
;
input
=
"
%
40interpolate
(
flat
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
linear
)
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
linear
%
20center
)
"
;
input
=
"
%
40interpolate
(
linear
%
20center
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
perspective
)
"
;
input
=
"
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
%
40interpolate
(
perspective
)
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
"
;
input
=
"
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
"
;
input
=
"
%
40interpolate
(
linear
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
"
;
input
=
"
%
40interpolate
(
perspective
%
20center
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
flat
)
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
linear
)
"
;
input
=
"
%
40interpolate
(
flat
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
linear
)
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
linear
%
20center
)
"
;
input
=
"
%
40interpolate
(
linear
%
20center
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
perspective
)
"
;
input
=
"
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
%
40interpolate
(
perspective
)
"
;
input
=
"
%
40interpolate
(
perspective
)
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
inter_stage
:
location
mismatch
:
*
]
[
:
isAsync
=
false
;
outputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
"
%
40location
(
1
)
%
20__
:
%
20f32
"
\
]
;
inputs
=
[
"
%
40location
(
1
)
%
20__
:
%
20f32
"
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
outputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
;
inputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
outputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
;
inputs
=
[
"
%
40location
(
1
)
%
20__
:
%
20f32
"
\
]
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
outputs
=
[
"
%
40location
(
1
)
%
20__
:
%
20f32
"
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
;
inputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
"
%
40location
(
1
)
%
20__
:
%
20f32
"
\
]
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
outputs
=
[
"
%
40location
(
1
)
%
20__
:
%
20f32
"
\
]
;
inputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
outputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
"
%
40location
(
1
)
%
20__
:
%
20f32
"
\
]
;
inputs
=
[
"
%
40location
(
1
)
%
20__
:
%
20f32
"
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
outputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
;
inputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
outputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
;
inputs
=
[
"
%
40location
(
1
)
%
20__
:
%
20f32
"
\
]
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
outputs
=
[
"
%
40location
(
1
)
%
20__
:
%
20f32
"
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
;
inputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
"
%
40location
(
1
)
%
20__
:
%
20f32
"
\
]
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
outputs
=
[
"
%
40location
(
1
)
%
20__
:
%
20f32
"
\
]
;
inputs
=
[
"
%
40location
(
0
)
%
20__
:
%
20f32
"
\
]
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
inter_stage
:
location
subset
:
*
]
[
:
isAsync
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
inter_stage
:
location
superset
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
inter_stage
:
max_components_count
input
:
*
]
[
:
isAsync
=
false
;
numScalarDelta
=
-
2
;
useExtraBuiltinInputs
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
numScalarDelta
=
-
3
;
useExtraBuiltinInputs
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
numScalarDelta
=
0
;
useExtraBuiltinInputs
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
numScalarDelta
=
0
;
useExtraBuiltinInputs
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
numScalarDelta
=
1
;
useExtraBuiltinInputs
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
numScalarDelta
=
-
2
;
useExtraBuiltinInputs
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
numScalarDelta
=
-
3
;
useExtraBuiltinInputs
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
numScalarDelta
=
0
;
useExtraBuiltinInputs
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
numScalarDelta
=
0
;
useExtraBuiltinInputs
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
numScalarDelta
=
1
;
useExtraBuiltinInputs
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
inter_stage
:
max_components_count
output
:
*
]
[
:
isAsync
=
false
;
numScalarDelta
=
-
1
;
topology
=
"
point
-
list
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
numScalarDelta
=
0
;
topology
=
"
point
-
list
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
numScalarDelta
=
0
;
topology
=
"
triangle
-
list
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
numScalarDelta
=
1
;
topology
=
"
triangle
-
list
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
numScalarDelta
=
-
1
;
topology
=
"
point
-
list
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
numScalarDelta
=
0
;
topology
=
"
point
-
list
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
numScalarDelta
=
0
;
topology
=
"
triangle
-
list
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
numScalarDelta
=
1
;
topology
=
"
triangle
-
list
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
inter_stage
:
max_shader_variable_location
:
*
]
[
:
isAsync
=
false
;
locationDelta
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
locationDelta
=
-
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
locationDelta
=
0
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
locationDelta
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
locationDelta
=
-
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
locationDelta
=
0
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
inter_stage
:
type
:
*
]
[
:
isAsync
=
false
;
output
=
"
f32
"
;
input
=
"
f32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
f32
"
;
input
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
i32
"
;
input
=
"
f32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
i32
"
;
input
=
"
u32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
u32
"
;
input
=
"
f32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
u32
"
;
input
=
"
i32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
vec2
%
3Cf32
%
3E
"
;
input
=
"
f32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
vec2
%
3Cf32
%
3E
"
;
input
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
vec2
%
3Cf32
%
3E
"
;
input
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
output
=
"
vec3
%
3Cf32
%
3E
"
;
input
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
f32
"
;
input
=
"
f32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
f32
"
;
input
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
i32
"
;
input
=
"
f32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
i32
"
;
input
=
"
u32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
u32
"
;
input
=
"
f32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
u32
"
;
input
=
"
i32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
vec2
%
3Cf32
%
3E
"
;
input
=
"
f32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
vec2
%
3Cf32
%
3E
"
;
input
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
vec2
%
3Cf32
%
3E
"
;
input
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
output
=
"
vec3
%
3Cf32
%
3E
"
;
input
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
misc
:
basic
:
*
]
[
:
isAsync
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
misc
:
pipeline_layout
device_mismatch
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
misc
:
vertex_state_only
:
*
]
[
:
isAsync
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
multisample_state
:
alpha_to_coverage
count
:
*
]
[
:
isAsync
=
false
;
alphaToCoverageEnabled
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
alphaToCoverageEnabled
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
alphaToCoverageEnabled
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
alphaToCoverageEnabled
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
multisample_state
:
alpha_to_coverage
sample_mask
:
*
]
[
:
isAsync
=
false
;
alphaToCoverageEnabled
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
alphaToCoverageEnabled
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
alphaToCoverageEnabled
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
alphaToCoverageEnabled
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
multisample_state
:
count
:
*
]
[
:
isAsync
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
identifier
fragment
:
*
]
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
%
E6
%
95
%
B0
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
1
"
:
1
"
1000
"
:
1
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
1
"
:
1
"
b
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
1
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
2
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
a
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
b
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
r
%
5Cu0000
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
s
%
C3
%
A9quen
%
C3
%
A7age
"
:
0
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
xxx
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
%
E6
%
95
%
B0
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
1
"
:
1
"
1000
"
:
1
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
1
"
:
1
"
b
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
1
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
2
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
a
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
b
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
r
%
5Cu0000
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
s
%
C3
%
A9quen
%
C3
%
A7age
"
:
0
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
xxx
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
identifier
vertex
:
*
]
[
:
isAsync
=
false
;
vertexConstants
=
{
"
%
E6
%
95
%
B0
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
1
"
:
1
"
1000
"
:
1
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
1
"
:
1
"
z
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
1
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
2
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
se
%
CC
%
81quen
%
C3
%
A7age
"
:
0
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
w
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
x
%
5Cu0000
"
:
1
"
y
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
xxx
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
z
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
%
E6
%
95
%
B0
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
1
"
:
1
"
1000
"
:
1
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
1
"
:
1
"
z
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
1
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
2
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
se
%
CC
%
81quen
%
C3
%
A7age
"
:
0
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
w
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
x
%
5Cu0000
"
:
1
"
y
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
xxx
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
z
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
uninitialized
fragment
:
*
]
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
r
"
:
1
"
b
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
"
b
"
:
1
"
a
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
r
"
:
1
"
b
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
"
b
"
:
1
"
a
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
uninitialized
vertex
:
*
]
[
:
isAsync
=
false
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
"
z
"
:
1
"
w
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
x
"
:
1
"
z
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
"
z
"
:
1
"
w
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
x
"
:
1
"
z
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
value
type_error
fragment
:
*
]
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
"
_nan_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
"
_neginfinity_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
"
_posinfinity_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
"
_nan_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
"
_neginfinity_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
"
_posinfinity_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
value
type_error
vertex
:
*
]
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
"
_nan_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
"
_neginfinity_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
"
_posinfinity_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
"
_nan_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
"
_neginfinity_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
"
_posinfinity_
"
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
value
validation_error
vertex
:
*
]
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cb
"
:
-
2147483649
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cb
"
:
1
.
7976931348623157e
%
2B308
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
-
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
-
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
ci
"
:
-
2147483648
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
ci
"
:
-
2147483649
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
ci
"
:
2147483647
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
ci
"
:
2147483648
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cu
"
:
-
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cu
"
:
0
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cu
"
:
4294967295
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cu
"
:
4294967296
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cb
"
:
-
2147483649
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cb
"
:
1
.
7976931348623157e
%
2B308
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
-
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
-
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
ci
"
:
-
2147483648
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
ci
"
:
-
2147483649
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
ci
"
:
2147483647
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
ci
"
:
2147483648
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cu
"
:
-
1
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cu
"
:
0
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cu
"
:
4294967295
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cu
"
:
4294967296
}
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
