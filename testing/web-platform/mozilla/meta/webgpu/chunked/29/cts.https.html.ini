[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
shader_module
:
device_mismatch
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
multisample_state
:
count
:
*
]
[
:
isAsync
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
value
type_error
vertex
:
*
]
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
"
_nan_
"
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
"
_posinfinity_
"
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
"
_neginfinity_
"
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
"
_nan_
"
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
"
_posinfinity_
"
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
"
_neginfinity_
"
}
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
multisample_state
:
alpha_to_coverage
sample_mask
:
*
]
[
:
isAsync
=
false
;
alphaToCoverageEnabled
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
alphaToCoverageEnabled
=
true
]
expected
:
FAIL
[
:
isAsync
=
true
;
alphaToCoverageEnabled
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
alphaToCoverageEnabled
=
true
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
identifier
vertex
:
*
]
[
:
isAsync
=
true
;
vertexConstants
=
{
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
1
"
:
1
"
1000
"
:
1
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
x
%
5Cu0000
"
:
1
"
y
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
xxx
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
1
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
2
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
z
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
w
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
1
"
:
1
"
z
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
%
E6
%
95
%
B0
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
se
%
CC
%
81quen
%
C3
%
A7age
"
:
0
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
1
"
:
1
"
1000
"
:
1
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
x
%
5Cu0000
"
:
1
"
y
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
xxx
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
1
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
2
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
z
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
w
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
1
"
:
1
"
z
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
%
E6
%
95
%
B0
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
se
%
CC
%
81quen
%
C3
%
A7age
"
:
0
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
value
validation_error
f16
fragment
:
*
]
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf16
"
:
-
65504
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf16
"
:
-
65520
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf16
"
:
65504
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf16
"
:
65520
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf16
"
:
-
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf16
"
:
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf16
"
:
-
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf16
"
:
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf16
"
:
-
65504
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf16
"
:
-
65520
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf16
"
:
65504
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf16
"
:
65520
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf16
"
:
-
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf16
"
:
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf16
"
:
-
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf16
"
:
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
value
validation_error
fragment
:
*
]
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cu
"
:
0
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cu
"
:
-
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cu
"
:
4294967295
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cu
"
:
4294967296
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
ci
"
:
-
2147483648
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
ci
"
:
-
2147483649
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
ci
"
:
2147483647
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
ci
"
:
2147483648
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
-
3
.
4028234663852886e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
-
3
.
4028235677973366e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
3
.
4028234663852886e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
3
.
4028235677973366e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cb
"
:
1
.
7976931348623157e
%
2B308
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cb
"
:
-
2147483649
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cu
"
:
0
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cu
"
:
-
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cu
"
:
4294967295
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cu
"
:
4294967296
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
ci
"
:
-
2147483648
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
ci
"
:
-
2147483649
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
ci
"
:
2147483647
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
ci
"
:
2147483648
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
-
3
.
4028234663852886e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
-
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
3
.
4028234663852886e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cb
"
:
1
.
7976931348623157e
%
2B308
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cb
"
:
-
2147483649
}
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
max_vertex_attribute_limit
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
misc
:
basic
:
*
]
[
:
isAsync
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
misc
:
pipeline_layout
device_mismatch
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
shader_module
:
invalid
vertex
:
*
]
[
:
isAsync
=
true
;
isVertexShaderValid
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
isVertexShaderValid
=
false
]
expected
:
FAIL
[
:
isAsync
=
false
;
isVertexShaderValid
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
isVertexShaderValid
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
max_vertex_buffer_limit
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
primitive_state
:
unclipped_depth
:
*
]
[
:
isAsync
=
false
;
unclippedDepth
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
unclippedDepth
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
unclippedDepth
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
unclippedDepth
=
true
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
identifier
fragment
:
*
]
[
:
isAsync
=
true
;
fragmentConstants
=
{
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
1
"
:
1
"
1000
"
:
1
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
r
%
5Cu0000
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
xxx
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
1
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
2
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
b
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
a
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
1
"
:
1
"
b
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
%
E6
%
95
%
B0
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
s
%
C3
%
A9quen
%
C3
%
A7age
"
:
0
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
1
"
:
1
"
1000
"
:
1
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
r
%
5Cu0000
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
xxx
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
1
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
2
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
b
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
a
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
1
"
:
1
"
b
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
%
E6
%
95
%
B0
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
s
%
C3
%
A9quen
%
C3
%
A7age
"
:
0
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
misc
:
vertex_state_only
:
*
]
[
:
isAsync
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
uninitialized
fragment
:
*
]
[
:
isAsync
=
true
;
fragmentConstants
=
{
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
r
"
:
1
"
b
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
"
b
"
:
1
"
a
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
r
"
:
1
"
b
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
r
"
:
1
"
g
"
:
1
"
b
"
:
1
"
a
"
:
1
}
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
vertex_buffer_array_stride_limit_alignment
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
multisample_state
:
alpha_to_coverage
count
:
*
]
[
:
isAsync
=
false
;
alphaToCoverageEnabled
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
alphaToCoverageEnabled
=
true
]
expected
:
FAIL
[
:
isAsync
=
true
;
alphaToCoverageEnabled
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
alphaToCoverageEnabled
=
true
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
uninitialized
vertex
:
*
]
[
:
isAsync
=
true
;
vertexConstants
=
{
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
x
"
:
1
"
z
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
"
z
"
:
1
"
w
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
x
"
:
1
"
z
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
x
"
:
1
"
y
"
:
1
"
z
"
:
1
"
w
"
:
1
}
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
value
validation_error
vertex
:
*
]
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cu
"
:
0
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cu
"
:
-
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cu
"
:
4294967295
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cu
"
:
4294967296
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
ci
"
:
-
2147483648
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
ci
"
:
-
2147483649
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
ci
"
:
2147483647
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
ci
"
:
2147483648
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
-
3
.
4028234663852886e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
-
3
.
4028235677973366e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
3
.
4028234663852886e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf
"
:
3
.
4028235677973366e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cb
"
:
1
.
7976931348623157e
%
2B308
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cb
"
:
-
2147483649
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cu
"
:
0
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cu
"
:
-
1
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cu
"
:
4294967295
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cu
"
:
4294967296
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
ci
"
:
-
2147483648
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
ci
"
:
-
2147483649
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
ci
"
:
2147483647
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
ci
"
:
2147483648
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
-
3
.
4028234663852886e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
-
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
3
.
4028234663852886e
%
2B38
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf
"
:
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cb
"
:
1
.
7976931348623157e
%
2B308
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cb
"
:
-
2147483649
}
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
shader_module
:
invalid
fragment
:
*
]
[
:
isAsync
=
true
;
isFragmentShaderValid
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
isFragmentShaderValid
=
false
]
expected
:
FAIL
[
:
isAsync
=
false
;
isFragmentShaderValid
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
isFragmentShaderValid
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
value
type_error
fragment
:
*
]
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
"
_nan_
"
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
"
_posinfinity_
"
}
]
expected
:
FAIL
[
:
isAsync
=
true
;
fragmentConstants
=
{
"
cf
"
:
"
_neginfinity_
"
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
1
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
"
_nan_
"
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
"
_posinfinity_
"
}
]
expected
:
FAIL
[
:
isAsync
=
false
;
fragmentConstants
=
{
"
cf
"
:
"
_neginfinity_
"
}
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
overrides
:
value
validation_error
f16
vertex
:
*
]
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf16
"
:
-
65504
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf16
"
:
-
65520
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf16
"
:
65504
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf16
"
:
65520
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf16
"
:
-
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf16
"
:
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf16
"
:
-
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
vertexConstants
=
{
"
cf16
"
:
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf16
"
:
-
65504
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf16
"
:
-
65520
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf16
"
:
65504
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf16
"
:
65520
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf16
"
:
-
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf16
"
:
3
.
4028234663852886e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf16
"
:
-
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
vertexConstants
=
{
"
cf16
"
:
3
.
4028235677973366e
%
2B38
}
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
max_vertex_buffer_array_stride_limit
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
primitive_state
:
strip_index_format
:
*
]
[
:
isAsync
=
false
;
topology
=
"
_undef_
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
_undef_
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
_undef_
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
point
-
list
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
point
-
list
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
point
-
list
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
line
-
list
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
line
-
list
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
line
-
list
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
line
-
strip
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
line
-
strip
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
line
-
strip
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
triangle
-
list
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
triangle
-
list
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
triangle
-
list
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
triangle
-
strip
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
triangle
-
strip
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
false
;
topology
=
"
triangle
-
strip
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
_undef_
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
_undef_
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
_undef_
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
point
-
list
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
point
-
list
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
point
-
list
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
line
-
list
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
line
-
list
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
line
-
list
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
line
-
strip
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
line
-
strip
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
line
-
strip
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
triangle
-
list
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
triangle
-
list
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
triangle
-
list
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
triangle
-
strip
"
;
stripIndexFormat
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
triangle
-
strip
"
;
stripIndexFormat
=
"
uint16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
isAsync
=
true
;
topology
=
"
triangle
-
strip
"
;
stripIndexFormat
=
"
uint32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
