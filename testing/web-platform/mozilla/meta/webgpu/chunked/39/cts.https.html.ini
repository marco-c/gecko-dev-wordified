[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_multiplication
:
vector_scalar_compound
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
3
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
and
debug
:
[
FAIL
PASS
]
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_addition
:
matrix_compound
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
and
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_matrix_multiplication
:
matrix_matrix
:
*
]
expected
:
if
os
=
=
"
mac
"
:
OK
if
os
=
=
"
linux
"
:
[
TIMEOUT
OK
]
TIMEOUT
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
if
os
=
=
"
mac
"
:
FAIL
[
FAIL
PASS
]
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
if
os
=
=
"
win
"
:
[
FAIL
TIMEOUT
NOTRUN
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
if
os
=
=
"
win
"
:
[
FAIL
TIMEOUT
NOTRUN
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
if
os
=
=
"
win
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
if
os
=
=
"
win
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
if
os
=
=
"
win
"
:
[
FAIL
TIMEOUT
NOTRUN
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
if
os
=
=
"
win
"
:
[
FAIL
TIMEOUT
NOTRUN
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
FAIL
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
FAIL
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
FAIL
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
FAIL
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
FAIL
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
FAIL
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
mac
"
:
FAIL
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
mac
"
:
FAIL
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
mac
"
:
FAIL
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
mac
"
:
FAIL
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
[
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
[
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
PASS
TIMEOUT
]
[
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
[
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
2
;
y_cols
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
NOTRUN
FAIL
TIMEOUT
]
[
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
NOTRUN
FAIL
TIMEOUT
]
[
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
NOTRUN
FAIL
TIMEOUT
]
[
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
3
;
y_cols
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
NOTRUN
FAIL
TIMEOUT
]
[
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
NOTRUN
FAIL
TIMEOUT
]
[
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
NOTRUN
FAIL
TIMEOUT
]
[
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
4
;
y_cols
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
NOTRUN
FAIL
TIMEOUT
]
[
NOTRUN
TIMEOUT
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_scalar_multiplication
:
matrix_scalar
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_subtraction
:
matrix
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
win
"
and
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_division
:
vector_scalar
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
3
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
3
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_multiplication
:
vector_scalar
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_vector_multiplication
:
vector_matrix_compound
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
4
]
expected
:
if
debug
and
os
=
=
"
win
"
:
[
FAIL
PASS
]
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_matrix_multiplication
:
matrix_matrix_compound
:
*
]
expected
:
if
os
=
=
"
win
"
and
debug
:
TIMEOUT
if
os
=
=
"
win
"
and
not
debug
:
[
OK
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
OK
TIMEOUT
]
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
2
;
x_rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
3
;
x_rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
common_dim
=
4
;
x_rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
2
;
x_rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
3
;
x_rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
common_dim
=
4
;
x_rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
2
;
x_rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
3
;
x_rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
common_dim
=
4
;
x_rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
2
;
x_rows
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
NOTRUN
TIMEOUT
]
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
3
;
x_rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
FAIL
PASS
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
FAIL
PASS
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
common_dim
=
4
;
x_rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
FAIL
NOTRUN
TIMEOUT
]
if
os
=
=
"
linux
"
:
[
FAIL
NOTRUN
TIMEOUT
]
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_division
:
vector_scalar_compound
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
3
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_addition
:
matrix
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_division
:
scalar_compound
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_scalar_multiplication
:
scalar_matrix
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_remainder
:
vector
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
PASS
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
PASS
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
PASS
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_remainder
:
scalar_compound
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
linux
"
:
PASS
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
linux
"
:
PASS
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
linux
"
:
PASS
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_division
:
scalar_vector
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_multiplication
:
scalar
:
*
]
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_multiplication
:
scalar_vector
:
*
]
[
:
inputSource
=
"
const
"
;
dim
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
3
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
dim
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
dim
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_subtraction
:
matrix_compound
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
and
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_vector_multiplication
:
matrix_vector
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_multiplication
:
scalar_compound
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_vector_multiplication
:
vector_matrix
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_multiplication
:
vector
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_matrix_scalar_multiplication
:
matrix_scalar_compound
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
not
debug
and
os
=
=
"
win
"
:
[
FAIL
PASS
]
if
not
debug
and
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
f32_remainder
:
scalar
:
*
]
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
]
expected
:
if
os
=
=
"
linux
"
:
PASS
FAIL
[
:
inputSource
=
"
storage_r
"
]
expected
:
if
os
=
=
"
linux
"
:
PASS
FAIL
[
:
inputSource
=
"
storage_rw
"
]
expected
:
if
os
=
=
"
linux
"
:
PASS
FAIL
