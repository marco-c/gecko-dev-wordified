[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
round
:
integer_argument
:
*
]
[
:
type
=
"
f32
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
round
:
values
:
*
]
[
:
stage
=
"
constant
"
;
type
=
"
abstract
-
float
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
saturate
:
integer_argument
:
*
]
[
:
type
=
"
f32
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
saturate
:
values
:
*
]
[
:
stage
=
"
constant
"
;
type
=
"
abstract
-
float
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
sign
:
unsigned_integer_argument
:
*
]
[
:
type
=
"
f32
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
sign
:
values
:
*
]
[
:
stage
=
"
constant
"
;
type
=
"
abstract
-
float
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
i32
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
i32
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
sin
:
integer_argument
:
*
]
[
:
type
=
"
f32
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
sin
:
values
:
*
]
[
:
stage
=
"
constant
"
;
type
=
"
abstract
-
float
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
sinh
:
integer_argument
:
*
]
[
:
type
=
"
f32
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
sinh
:
values
:
*
]
[
:
stage
=
"
constant
"
;
type
=
"
abstract
-
float
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
sqrt
:
integer_argument
:
*
]
[
:
type
=
"
f32
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
sqrt
:
values
:
*
]
[
:
stage
=
"
constant
"
;
type
=
"
abstract
-
float
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
tan
:
integer_argument
:
*
]
[
:
type
=
"
f32
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec2
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec3
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Ci32
%
3E
"
]
expected
:
FAIL
[
:
type
=
"
vec4
%
3Cu32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
expression
call
builtin
tan
:
values
:
*
]
[
:
stage
=
"
constant
"
;
type
=
"
abstract
-
float
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cabstract
-
float
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
constant
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
f32
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec2
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec3
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf16
%
3E
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
override
"
;
type
=
"
vec4
%
3Cf32
%
3E
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
functions
alias_analysis
:
aliasing_inside_function
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
functions
alias_analysis
:
member_accessors
:
*
]
[
:
a_use
=
"
assign
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
functions
alias_analysis
:
one_pointer_one_module_scope
:
*
]
[
:
a_use
=
"
assign
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
bitcast
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
builtin_arg
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
convert
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
increment
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
index_access
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
let_init
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
return
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
switch_cond
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
unary_minus
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
var_init
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
functions
alias_analysis
:
same_pointer_read_and_write
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
functions
alias_analysis
:
subcalls
:
*
]
[
:
a_use
=
"
assign
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
assign
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
binary_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
a_use
=
"
no_access
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
functions
alias_analysis
:
two_pointers
:
*
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
TIMEOUT
if
os
=
=
"
linux
"
:
TIMEOUT
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
assign
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
convert
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
increment
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
index_access
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
let_init
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
no_access
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
return
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
function
"
;
a_use
=
"
var_init
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
assign
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
binary_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
bitcast
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
builtin_arg
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_lhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
compound_assign_rhs
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
convert
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
increment
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
index_access
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
let_init
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
no_access
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
return
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
switch_cond
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
unary_minus
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
assign
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
assign
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
binary_lhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
binary_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
bitcast
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
builtin_arg
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_lhs
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
compound_assign_rhs
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
convert
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
convert
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
increment
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
increment
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
index_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
index_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
let_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
let_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
no_access
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
no_access
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
return
"
;
aliased
=
false
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
return
"
;
aliased
=
true
]
expected
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
switch_cond
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
unary_minus
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
var_init
"
;
aliased
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
address_space
=
"
private
"
;
a_use
=
"
var_init
"
;
b_use
=
"
var_init
"
;
aliased
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
functions
restrictions
:
entry_point_call_target
:
*
]
[
:
stage
=
"
%
40compute
%
20
%
40workgroup_size
(
1
1
1
)
"
;
entry_point
=
"
with
"
]
expected
:
FAIL
[
:
stage
=
"
%
40compute
%
20
%
40workgroup_size
(
1
1
1
)
"
;
entry_point
=
"
without
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
%
40fragment
"
;
entry_point
=
"
with
"
]
expected
:
FAIL
[
:
stage
=
"
%
40fragment
"
;
entry_point
=
"
without
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
%
40vertex
"
;
entry_point
=
"
with
"
]
expected
:
FAIL
[
:
stage
=
"
%
40vertex
"
;
entry_point
=
"
without
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
functions
restrictions
:
function_parameter_matching
:
*
]
expected
:
if
os
=
=
"
win
"
:
TIMEOUT
if
os
=
=
"
linux
"
:
TIMEOUT
[
:
decl
=
"
array1
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array1
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array2
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array3
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array4
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
array5
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
array1_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
array2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
array3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
array4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
array5_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
bool_literal
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_array1
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_array2
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_array3
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_array4
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_array5
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_bool
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_constructible
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_f32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_i32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_mat2x2
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_mat2x3
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_mat2x4
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_mat3x2
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_mat3x3
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_mat3x4
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_mat4x2
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_mat4x3
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_mat4x4
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_u32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_vec2
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_vec3
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
f_vec4
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_array1
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_array2
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_array3
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_array4
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_array5
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_bool
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_constructible
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_f32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_i32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_mat2x2
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_mat2x3
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_mat2x4
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_mat3x2
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_mat3x3
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_mat3x4
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_mat4x2
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_mat4x3
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_mat4x4
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_u32
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_vec2
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_vec3
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
g_vec4
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
i32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr1
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr10
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr11
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr12
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr2
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr3
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr4
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr5
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr6
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr7
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr8
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
ptr9
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
sampler
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
sampler_comparison
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
struct1_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
struct2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
texture_depth
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
texture_external
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
texture_multisampled
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
texture_sample
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
texture_storage
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
u32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
bool
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f16
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
array1_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
array2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
array3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
array4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
array5_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
bool_literal
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_array1
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_array2
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_array3
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_array4
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_array5
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_bool
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_constructible
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_f32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_i32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_mat2x2
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_mat2x3
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_mat2x4
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_mat3x2
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_mat3x3
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_mat3x4
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_mat4x2
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_mat4x3
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_mat4x4
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_u32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_vec2
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_vec3
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
f_vec4
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_array1
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_array2
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_array3
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_array4
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_array5
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_bool
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_constructible
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_f32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_i32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_mat2x2
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_mat2x3
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_mat2x4
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_mat3x2
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_mat3x3
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_mat3x4
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_mat4x2
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_mat4x3
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_mat4x4
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_u32
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_vec2
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_vec3
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
g_vec4
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
i32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr1
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr10
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr11
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr12
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr2
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr3
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr4
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr5
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr6
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr7
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr8
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
ptr9
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
sampler
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
sampler_comparison
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
struct1_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
struct2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
texture_depth
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
texture_external
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
texture_multisampled
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
texture_sample
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
texture_storage
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
u32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
f32
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
array1_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
array2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
array3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
array4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
array5_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
bool_literal
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_array1
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_array2
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_array3
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_array4
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_array5
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_bool
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_constructible
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_f32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_i32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_mat2x2
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_mat2x3
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_mat2x4
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_mat3x2
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_mat3x3
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_mat3x4
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_mat4x2
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_mat4x3
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_mat4x4
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_u32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_vec2
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_vec3
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
f_vec4
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_array1
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_array2
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_array3
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_array4
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_array5
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_bool
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_constructible
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_f32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_i32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_mat2x2
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_mat2x3
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_mat2x4
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_mat3x2
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_mat3x3
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_mat3x4
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_mat4x2
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_mat4x3
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_mat4x4
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_u32
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_vec2
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_vec3
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
g_vec4
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
i32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr1
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr10
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr11
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr12
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr2
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr3
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr4
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr5
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr6
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr7
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr8
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
ptr9
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
sampler
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
sampler_comparison
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
struct1_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
struct2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
texture_depth
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
texture_external
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
texture_multisampled
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
texture_sample
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
texture_storage
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
u32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
i32
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x2
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x3
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat2x4
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x2
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x3
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat3x4
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x2
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x3
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
mat4x4
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr1
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr2
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr3
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
ptr4
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
sampler_comparison
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct1
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
struct2
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_depth
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_multisampled
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_sample
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
texture_storage
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
array1_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
array2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
array3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
array4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
array5_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
bool_literal
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_array1
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_array2
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_array3
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_array4
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_array5
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_bool
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_constructible
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_f32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_i32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_mat2x2
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_mat2x3
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_mat2x4
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_mat3x2
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_mat3x3
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_mat3x4
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_mat4x2
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_mat4x3
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_mat4x4
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_u32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_vec2
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_vec3
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
f_vec4
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_array1
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_array2
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_array3
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_array4
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_array5
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_bool
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_constructible
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_f32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_i32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_index_bool
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_index_f32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_index_i32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_index_u32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_mat2x2
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_mat2x3
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_mat2x4
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_mat3x2
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_mat3x3
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_mat3x4
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_mat4x2
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_mat4x3
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_mat4x4
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_u32
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_vec2
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_vec3
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
g_vec4
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
i32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr1
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr10
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr11
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr12
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr2
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr3
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr4
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr5
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr6
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr7
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr8
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
ptr9
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
sampler
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
sampler_comparison
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
struct1_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
struct2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
texture_depth
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
texture_external
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
texture_multisampled
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
texture_sample
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
texture_storage
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
u32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
u32
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
array1_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
array2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
array3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
bool_literal
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
and
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
i32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
u32_literal
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec2
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec3
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
abstract_float_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
abstract_int_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
array1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
array2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
array3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
array4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
array5_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
bool_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
f_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_array1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_array2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_array3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_array4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_array5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_array_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_array_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_array_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_array_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_constructible
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_index_bool
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_index_f32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_index_i32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_index_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_mat2x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_mat2x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_mat2x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_mat3x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_mat3x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_mat3x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_mat4x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_mat4x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_mat4x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_struct_with_array
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_u32
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_vec2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_vec3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
g_vec4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
i32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
mat2x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
mat2x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
mat2x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
mat3x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
mat3x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
mat3x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
mat4x2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
mat4x3_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
mat4x4_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr1
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr10
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr11
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr12
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr5
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr6
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr7
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr8
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
ptr9
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
sampler
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
struct1_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
struct2_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
texture_external
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
u32_literal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec2_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec2_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec2b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec2f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec2i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec2u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec3_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec3_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec3b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec3f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec3i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec3u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec4_abstract_float
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec4_abstract_int
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec4b_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec4f_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec4i_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
decl
=
"
vec4
"
;
arg
=
"
vec4u_constructor
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
linux
"
:
[
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
functions
restrictions
:
function_parameter_types
:
*
]
[
:
case
=
"
array1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
array2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
array3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
array4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
array5
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
atomic_struct
"
]
expected
:
FAIL
[
:
case
=
"
atomic_u32
"
]
expected
:
FAIL
[
:
case
=
"
bool
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
f32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
i32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
mat2x2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
mat2x3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
mat2x4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
mat3x2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
mat3x3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
mat3x4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
mat4x2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
mat4x3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
mat4x4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
override_array
"
]
expected
:
FAIL
[
:
case
=
"
ptr1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
ptr10
"
]
expected
:
FAIL
[
:
case
=
"
ptr12
"
]
expected
:
FAIL
[
:
case
=
"
ptr13
"
]
expected
:
FAIL
[
:
case
=
"
ptr14
"
]
expected
:
FAIL
[
:
case
=
"
ptr15
"
]
expected
:
FAIL
[
:
case
=
"
ptr16
"
]
expected
:
FAIL
[
:
case
=
"
ptr17
"
]
expected
:
FAIL
[
:
case
=
"
ptr2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
ptr3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
ptr4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
ptr5
"
]
expected
:
FAIL
[
:
case
=
"
ptr6
"
]
expected
:
FAIL
[
:
case
=
"
ptr7
"
]
expected
:
FAIL
[
:
case
=
"
ptr8
"
]
expected
:
FAIL
[
:
case
=
"
ptr9
"
]
expected
:
FAIL
[
:
case
=
"
ptrWorkgroupAtomic
"
]
expected
:
FAIL
[
:
case
=
"
ptrWorkgroupNestedAtomic
"
]
expected
:
FAIL
[
:
case
=
"
runtime_array
"
]
expected
:
FAIL
[
:
case
=
"
runtime_struct
"
]
expected
:
FAIL
[
:
case
=
"
sampler
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
sampler_comparison
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
struct1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
struct2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
texture_depth
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
texture_multisampled
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
texture_sample
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
texture_storage
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
u32
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
vec2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
vec3
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
vec4
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
functions
restrictions
:
function_return_types
:
*
]
[
:
case
=
"
array1
"
]
expected
:
FAIL
[
:
case
=
"
array2
"
]
expected
:
FAIL
[
:
case
=
"
array3
"
]
expected
:
FAIL
[
:
case
=
"
array4
"
]
expected
:
FAIL
[
:
case
=
"
array5
"
]
expected
:
FAIL
[
:
case
=
"
atomic_struct
"
]
expected
:
FAIL
[
:
case
=
"
atomic_u32
"
]
expected
:
FAIL
[
:
case
=
"
bool
"
]
expected
:
FAIL
[
:
case
=
"
f16
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
f32
"
]
expected
:
FAIL
[
:
case
=
"
i32
"
]
expected
:
FAIL
[
:
case
=
"
mat2x2
"
]
expected
:
FAIL
[
:
case
=
"
mat2x3
"
]
expected
:
FAIL
[
:
case
=
"
mat2x4
"
]
expected
:
FAIL
[
:
case
=
"
mat3x2
"
]
expected
:
FAIL
[
:
case
=
"
mat3x3
"
]
expected
:
FAIL
[
:
case
=
"
mat3x4
"
]
expected
:
FAIL
[
:
case
=
"
mat4x2
"
]
expected
:
FAIL
[
:
case
=
"
mat4x3
"
]
expected
:
FAIL
[
:
case
=
"
mat4x4
"
]
expected
:
FAIL
[
:
case
=
"
override_array
"
]
expected
:
FAIL
[
:
case
=
"
ptr
"
]
expected
:
FAIL
[
:
case
=
"
runtime_array
"
]
expected
:
FAIL
[
:
case
=
"
runtime_struct
"
]
expected
:
FAIL
[
:
case
=
"
sampler
"
]
expected
:
FAIL
[
:
case
=
"
sampler_comparison
"
]
expected
:
FAIL
[
:
case
=
"
struct1
"
]
expected
:
FAIL
[
:
case
=
"
struct2
"
]
expected
:
FAIL
[
:
case
=
"
texture_depth
"
]
expected
:
FAIL
[
:
case
=
"
texture_multisampled
"
]
expected
:
FAIL
[
:
case
=
"
texture_sample
"
]
expected
:
FAIL
[
:
case
=
"
texture_storage
"
]
expected
:
FAIL
[
:
case
=
"
u32
"
]
expected
:
FAIL
[
:
case
=
"
vec2
"
]
expected
:
FAIL
[
:
case
=
"
vec3
"
]
expected
:
FAIL
[
:
case
=
"
vec4
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
validation
functions
restrictions
:
vertex_returns_position
:
*
]
[
:
case
=
"
bare_position
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
nested_position
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
case
=
"
no_bare_position
"
]
expected
:
FAIL
[
:
case
=
"
no_nested_position
"
]
expected
:
FAIL
