[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
cmds
render
setVertexBuffer
:
offset_and_size_oob
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
cmds
render
state_tracking
:
all_needed_index_buffer_should_be_bound
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
cmds
render
state_tracking
:
all_needed_vertex_buffer_should_be_bound
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
cmds
render
state_tracking
:
vertex_buffers_do_not_inherit_between_render_passes
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
cmds
render
state_tracking
:
vertex_buffers_inherit_from_previous_pipeline
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
cmds
setBindGroup
:
bind_group
device_mismatch
:
*
]
[
:
encoderType
=
"
compute
%
20pass
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
cmds
setBindGroup
:
buffer_dynamic_offsets
:
*
]
[
:
type
=
"
read
-
only
-
storage
"
;
encoderType
=
"
compute
%
20pass
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
read
-
only
-
storage
"
;
encoderType
=
"
render
%
20bundle
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
read
-
only
-
storage
"
;
encoderType
=
"
render
%
20pass
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
storage
"
;
encoderType
=
"
compute
%
20pass
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
storage
"
;
encoderType
=
"
render
%
20bundle
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
storage
"
;
encoderType
=
"
render
%
20pass
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
uniform
"
;
encoderType
=
"
compute
%
20pass
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
uniform
"
;
encoderType
=
"
render
%
20bundle
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
type
=
"
uniform
"
;
encoderType
=
"
render
%
20pass
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
cmds
setBindGroup
:
dynamic_offsets_match_expectations_in_pass_encoder
:
*
]
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
0
1024
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
0
1024
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
0
4294967295
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
0
4294967295
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
0
512
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
0
512
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
1
2
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
1
2
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
1024
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
1024
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
256
0
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
256
0
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
256
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
256
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
256
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
256
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
4294967295
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
4294967295
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
512
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
512
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
dynamicOffsets
=
[
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
0
1024
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
0
1024
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
0
4294967295
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
0
4294967295
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
0
512
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
0
512
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
1
2
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
1
2
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
1024
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
1024
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
256
0
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
256
0
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
256
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
256
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
256
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
256
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
4294967295
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
4294967295
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
512
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
512
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
dynamicOffsets
=
[
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
0
1024
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
0
1024
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
0
4294967295
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
0
4294967295
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
0
512
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
0
512
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
1
2
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
1
2
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
1024
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
1024
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
256
0
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
256
0
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
256
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
256
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
256
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
256
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
4294967295
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
4294967295
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
512
0
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
512
0
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
\
]
;
useU32array
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
dynamicOffsets
=
[
\
]
;
useU32array
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
cmds
setBindGroup
:
dynamic_offsets_passed_but_not_expected
:
*
]
[
:
encoderType
=
"
compute
%
20pass
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
cmds
setBindGroup
:
state_and_binding_index
:
*
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
OK
CRASH
]
[
:
encoderType
=
"
compute
%
20pass
"
;
state
=
"
destroyed
"
;
resourceType
=
"
buffer
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
state
=
"
destroyed
"
;
resourceType
=
"
texture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
state
=
"
invalid
"
;
resourceType
=
"
buffer
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
state
=
"
invalid
"
;
resourceType
=
"
texture
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
state
=
"
valid
"
;
resourceType
=
"
buffer
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
compute
%
20pass
"
;
state
=
"
valid
"
;
resourceType
=
"
texture
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
state
=
"
destroyed
"
;
resourceType
=
"
buffer
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
state
=
"
destroyed
"
;
resourceType
=
"
texture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
state
=
"
invalid
"
;
resourceType
=
"
buffer
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
state
=
"
invalid
"
;
resourceType
=
"
texture
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
state
=
"
valid
"
;
resourceType
=
"
buffer
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20bundle
"
;
state
=
"
valid
"
;
resourceType
=
"
texture
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
state
=
"
destroyed
"
;
resourceType
=
"
buffer
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
state
=
"
destroyed
"
;
resourceType
=
"
texture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
state
=
"
invalid
"
;
resourceType
=
"
buffer
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
state
=
"
invalid
"
;
resourceType
=
"
texture
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
state
=
"
valid
"
;
resourceType
=
"
buffer
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
encoderType
=
"
render
%
20pass
"
;
state
=
"
valid
"
;
resourceType
=
"
texture
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
cmds
setBindGroup
:
u32array_start_and_length
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
createRenderBundleEncoder
:
attachment_state
empty_color_formats
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
createRenderBundleEncoder
:
attachment_state
limits
maxColorAttachmentBytesPerSample
aligned
:
*
]
[
:
format
=
"
bgra8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bgra8unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r16float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r16sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r16uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r8sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r8uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r8unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg16float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg16sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg16uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg8sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg8uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg8unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgb10a2uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgb10a2unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
createRenderBundleEncoder
:
attachment_state
limits
maxColorAttachmentBytesPerSample
unaligned
:
*
]
[
:
formats
=
[
"
r32float
"
"
rgba8unorm
"
"
rgba32float
"
"
r8unorm
"
"
r8unorm
"
\
]
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
formats
=
[
"
r8unorm
"
"
r32float
"
"
rgba8unorm
"
"
rgba32float
"
"
r8unorm
"
\
]
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
createRenderBundleEncoder
:
attachment_state
limits
maxColorAttachments
:
*
]
expected
:
if
os
=
=
"
linux
"
and
not
debug
:
[
OK
CRASH
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
createRenderBundleEncoder
:
depth_stencil_readonly
:
*
]
[
:
depthStencilFormat
=
"
depth16unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
depthStencilFormat
=
"
depth24plus
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
depthStencilFormat
=
"
depth24plus
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
depthStencilFormat
=
"
depth32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
depthStencilFormat
=
"
depth32float
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
depthStencilFormat
=
"
stencil8
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
createRenderBundleEncoder
:
depth_stencil_readonly_with_undefined_depth
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
createRenderBundleEncoder
:
valid_texture_formats
:
*
]
[
:
format
=
"
astc
-
10x10
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
10x10
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
10x5
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
10x5
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
10x6
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
10x6
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
10x8
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
10x8
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
12x10
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
12x10
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
12x12
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
12x12
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
4x4
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
4x4
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
5x4
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
5x4
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
5x5
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
5x5
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
6x5
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
6x5
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
6x6
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
6x6
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
8x5
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
8x5
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
8x6
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
8x6
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
8x8
-
unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
astc
-
8x8
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc1
-
rgba
-
unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc1
-
rgba
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc2
-
rgba
-
unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc2
-
rgba
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc3
-
rgba
-
unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc3
-
rgba
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc4
-
r
-
snorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc4
-
r
-
unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc5
-
rg
-
snorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc5
-
rg
-
unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc6h
-
rgb
-
float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc6h
-
rgb
-
ufloat
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc7
-
rgba
-
unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bc7
-
rgba
-
unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bgra8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
bgra8unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
depth16unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
depth24plus
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
depth24plus
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
depth32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
depth32float
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
eac
-
r11snorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
eac
-
r11unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
eac
-
rg11snorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
eac
-
rg11unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
etc2
-
rgb8a1unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
etc2
-
rgb8a1unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
etc2
-
rgb8unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
etc2
-
rgb8unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
etc2
-
rgba8unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
etc2
-
rgba8unorm
-
srgb
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r16float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r16sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r16uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r8sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r8snorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r8uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg11b10ufloat
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg16float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg16sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg16uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg8sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg8snorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg8uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgb10a2uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgb10a2unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgb9e5ufloat
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8sint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8snorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8uint
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8unorm
-
srgb
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
encoder_open_state
:
compute_pass_commands
:
*
]
[
:
command
=
"
dispatchWorkgroups
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
dispatchWorkgroupsIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
insertDebugMarker
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
popDebugGroup
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
pushDebugGroup
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setBindGroup
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setPipeline
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
encoder_open_state
:
non_pass_commands
:
*
]
[
:
command
=
"
beginComputePass
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
beginRenderPass
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
clearBuffer
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
copyBufferToBuffer
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
copyBufferToTexture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
copyTextureToBuffer
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
copyTextureToTexture
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
insertDebugMarker
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
popDebugGroup
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
pushDebugGroup
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
resolveQuerySet
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
writeTimestamp
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
encoder_open_state
:
render_bundle_commands
:
*
]
[
:
command
=
"
draw
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
drawIndexed
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
drawIndexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
drawIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
insertDebugMarker
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
popDebugGroup
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
pushDebugGroup
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setBindGroup
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setIndexBuffer
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setPipeline
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setVertexBuffer
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
encoder_open_state
:
render_pass_commands
:
*
]
[
:
command
=
"
beginOcclusionQuery
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
draw
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
drawIndexed
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
drawIndexedIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
drawIndirect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
endOcclusionQuery
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
executeBundles
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
insertDebugMarker
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
popDebugGroup
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
pushDebugGroup
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setBindGroup
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setBlendConstant
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setIndexBuffer
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setPipeline
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setScissorRect
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setStencilReference
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setVertexBuffer
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
command
=
"
setViewport
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
encoder_state
:
call_after_successful_finish
:
*
]
[
:
callCmd
=
"
beginComputePass
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
callCmd
=
"
beginRenderPass
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
callCmd
=
"
insertDebugMarker
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
encoder_state
:
pass_end_invalid_order
:
*
]
[
:
pass0Type
=
"
compute
"
;
pass1Type
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
pass0Type
=
"
compute
"
;
pass1Type
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
pass0Type
=
"
render
"
;
pass1Type
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
pass0Type
=
"
render
"
;
pass1Type
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
encoding
encoder_state
:
pass_end_none
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
