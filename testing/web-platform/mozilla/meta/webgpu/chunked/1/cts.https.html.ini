[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestAdapter
:
requestAdapter
:
*
]
[
:
powerPreference
=
"
_undef_
"
;
forceFallbackAdapter
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
powerPreference
=
"
_undef_
"
;
forceFallbackAdapter
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
powerPreference
=
"
_undef_
"
;
forceFallbackAdapter
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
powerPreference
=
"
high
-
performance
"
;
forceFallbackAdapter
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
powerPreference
=
"
high
-
performance
"
;
forceFallbackAdapter
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
powerPreference
=
"
high
-
performance
"
;
forceFallbackAdapter
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
powerPreference
=
"
low
-
power
"
;
forceFallbackAdapter
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
powerPreference
=
"
low
-
power
"
;
forceFallbackAdapter
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
powerPreference
=
"
low
-
power
"
;
forceFallbackAdapter
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestAdapter
:
requestAdapter_no_parameters
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestAdapterInfo
:
adapter_info
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestAdapterInfo
:
adapter_info_with_hints
:
*
]
[
:
]
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestDevice
:
default
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestDevice
:
features
known
:
*
]
[
:
feature
=
"
bgra8unorm
-
storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
feature
=
"
depth
-
clip
-
control
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
feature
=
"
depth32float
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
feature
=
"
float32
-
filterable
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
feature
=
"
indirect
-
first
-
instance
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
feature
=
"
rg11b10ufloat
-
renderable
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
feature
=
"
shader
-
f16
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
feature
=
"
texture
-
compression
-
astc
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
feature
=
"
texture
-
compression
-
bc
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
feature
=
"
texture
-
compression
-
etc2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
feature
=
"
timestamp
-
query
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestDevice
:
features
unknown
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestDevice
:
invalid
:
*
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
OK
TIMEOUT
]
if
os
=
=
"
win
"
and
not
debug
:
TIMEOUT
if
os
=
=
"
linux
"
and
not
debug
:
TIMEOUT
[
:
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
FAIL
TIMEOUT
NOTRUN
]
if
os
=
=
"
win
"
and
not
debug
:
TIMEOUT
if
os
=
=
"
linux
"
and
not
debug
:
TIMEOUT
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestDevice
:
limit
better_than_supported
:
*
]
[
:
limit
=
"
maxBindGroups
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxBindGroupsPlusVertexBuffers
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxBindingsPerBindGroup
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxBufferSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxColorAttachmentBytesPerSample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxColorAttachments
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeInvocationsPerWorkgroup
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupSizeX
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupSizeY
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupSizeZ
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupStorageSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupsPerDimension
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxDynamicStorageBuffersPerPipelineLayout
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxDynamicUniformBuffersPerPipelineLayout
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxInterStageShaderComponents
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxInterStageShaderVariables
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxSampledTexturesPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxSamplersPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxStorageBufferBindingSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxStorageBuffersPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxStorageTexturesPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureArrayLayers
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureDimension1D
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureDimension2D
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureDimension3D
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxUniformBufferBindingSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxUniformBuffersPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxVertexAttributes
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxVertexBufferArrayStride
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxVertexBuffers
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
minStorageBufferOffsetAlignment
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
minUniformBufferOffsetAlignment
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestDevice
:
limit
worse_than_default
:
*
]
[
:
limit
=
"
maxBindGroups
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxBindGroupsPlusVertexBuffers
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxBindingsPerBindGroup
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxBufferSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxColorAttachmentBytesPerSample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxColorAttachments
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeInvocationsPerWorkgroup
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupSizeX
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupSizeY
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupSizeZ
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupStorageSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupsPerDimension
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxDynamicStorageBuffersPerPipelineLayout
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxDynamicUniformBuffersPerPipelineLayout
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxInterStageShaderComponents
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxInterStageShaderVariables
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxSampledTexturesPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxSamplersPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxStorageBufferBindingSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxStorageBuffersPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxStorageTexturesPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureArrayLayers
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureDimension1D
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureDimension2D
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureDimension3D
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxUniformBufferBindingSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxUniformBuffersPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxVertexAttributes
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxVertexBufferArrayStride
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxVertexBuffers
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
minStorageBufferOffsetAlignment
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
minUniformBufferOffsetAlignment
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestDevice
:
limits
supported
:
*
]
[
:
limit
=
"
maxBindGroups
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxBindGroupsPlusVertexBuffers
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxBindingsPerBindGroup
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxBufferSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxColorAttachmentBytesPerSample
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxColorAttachments
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeInvocationsPerWorkgroup
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupSizeX
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupSizeY
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupSizeZ
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupStorageSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxComputeWorkgroupsPerDimension
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxDynamicStorageBuffersPerPipelineLayout
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxDynamicUniformBuffersPerPipelineLayout
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxInterStageShaderComponents
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxInterStageShaderVariables
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxSampledTexturesPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxSamplersPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxStorageBufferBindingSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxStorageBuffersPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxStorageTexturesPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureArrayLayers
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureDimension1D
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureDimension2D
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxTextureDimension3D
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxUniformBufferBindingSize
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxUniformBuffersPerShaderStage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxVertexAttributes
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxVertexBufferArrayStride
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
maxVertexBuffers
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
minStorageBufferOffsetAlignment
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
limit
=
"
minUniformBufferOffsetAlignment
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestDevice
:
limits
unknown
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
adapter
requestDevice
:
stale
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
map
:
mapAsync
mapState
:
*
]
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
READ
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
false
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
false
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
mapModeType
=
"
WRITE
"
;
beforeUnmap
=
true
;
beforeDestroy
=
true
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
map
:
mapAsync
read
typedArrayAccess
:
*
]
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
map
:
mapAsync
read
:
*
]
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
map
:
mapAsync
write
unchanged_ranges_preserved
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
map
:
mapAsync
write
:
*
]
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
map
:
mappedAtCreation
mapState
:
*
]
[
:
usageType
=
"
invalid
"
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
invalid
"
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
read
"
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
afterUnmap
=
false
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
afterUnmap
=
false
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
afterUnmap
=
true
;
afterDestroy
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usageType
=
"
write
"
;
afterUnmap
=
true
;
afterDestroy
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
map
:
mappedAtCreation
:
*
]
[
:
mappable
=
false
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mappable
=
true
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
map
:
remapped_for_write
:
*
]
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
default
-
expand
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
explicit
-
expand
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
default
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
explicit
-
expand
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
mapAsyncRegionLeft
=
"
minimal
"
;
mapAsyncRegionRight
=
"
minimal
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
map_ArrayBuffer
:
postMessage
:
*
]
[
:
transfer
=
false
;
mapMode
=
"
READ
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
transfer
=
false
;
mapMode
=
"
WRITE
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
transfer
=
true
;
mapMode
=
"
READ
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
transfer
=
true
;
mapMode
=
"
WRITE
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
map_detach
:
while_mapped
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
map_oom
:
mappedAtCreation
:
*
]
[
:
oom
=
false
;
size
=
16
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
oom
=
true
;
size
=
137438953472
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
oom
=
true
;
size
=
9007199254740984
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
buffers
threading
:
serialize
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
