[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureGather
:
depth_2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureGather
:
depth_3d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureGather
:
depth_array_2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureGather
:
depth_array_3d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureGather
:
sampled_array_3d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureGatherCompare
:
array_2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureGatherCompare
:
array_3d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureGatherCompare
:
sampled_array_2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureGatherCompare
:
sampled_array_3d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureLoad
:
arrayed
:
*
]
[
:
texture_type
=
"
texture_2d_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_depth_2d_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureLoad
:
depth
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureLoad
:
external
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureLoad
:
multisampled
:
*
]
[
:
texture_type
=
"
texture_depth_multisampled_2d
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_multisampled_2d
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureLoad
:
sampled_1d
:
*
]
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureLoad
:
sampled_2d
:
*
]
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureLoad
:
sampled_3d
:
*
]
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
in
-
bounds
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
i32
"
;
coords
=
"
z
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
in
-
bounds
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
x
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
y
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
max
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
max
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
max
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
max
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
max
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
max
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
max
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
max
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
min
-
boundary
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
min
-
boundary
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
min
-
boundary
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
min
-
boundary
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
min
-
wrap
"
;
level
=
"
numlevels
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
min
-
wrap
"
;
level
=
"
numlevels
-
1
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
min
-
wrap
"
;
level
=
-
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
C
=
"
u32
"
;
coords
=
"
z
-
min
-
wrap
"
;
level
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureNumLayers
:
arrayed
:
*
]
[
:
texture_type
=
"
texture_depth_2d_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_depth_cube_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureNumLayers
:
sampled
:
*
]
[
:
texture_type
=
"
texture_2d_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_cube_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureNumLayers
:
storage
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureNumLevels
:
depth
:
*
]
[
:
texture_type
=
"
texture_depth_2d
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_depth_2d_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_depth_cube
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_depth_cube_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureNumLevels
:
sampled
:
*
]
[
:
texture_type
=
"
texture_1d
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_2d
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_2d_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_3d
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_cube
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_cube_array
%
60
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureNumSamples
:
depth
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureNumSamples
:
sampled
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSample
:
control_flow
:
*
]
[
:
stage
=
"
compute
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
fragment
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
vertex
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSample
:
stage
:
*
]
[
:
stage
=
"
compute
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
fragment
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
stage
=
"
vertex
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
