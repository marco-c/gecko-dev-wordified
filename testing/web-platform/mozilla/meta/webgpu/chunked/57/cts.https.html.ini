[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleCompareLevel
:
2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleCompareLevel
:
3d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleCompareLevel
:
arrayed_2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleCompareLevel
:
arrayed_3d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleGrad
:
sampled_2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleGrad
:
sampled_3d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleGrad
:
sampled_array_2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleGrad
:
sampled_array_3d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleLevel
:
depth_2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleLevel
:
depth_3d_coords
:
*
]
[
:
texture_type
=
"
texture_depth_cube
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_depth_cube_array
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleLevel
:
depth_array_2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleLevel
:
sampled_2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleLevel
:
sampled_3d_coords
:
*
]
[
:
texture_type
=
"
texture_3d
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
texture_type
=
"
texture_cube
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleLevel
:
sampled_array_2d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureSampleLevel
:
sampled_array_3d_coords
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureStore
:
store_1d_coords
:
*
]
[
:
format
=
"
r32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8snorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureStore
:
store_2d_coords
:
*
]
[
:
format
=
"
r32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8snorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureStore
:
store_3d_coords
:
*
]
[
:
format
=
"
r32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8snorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
textureStore
:
store_array_2d_coords
:
*
]
[
:
format
=
"
r32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
r32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rg32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba16uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32float
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba32uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8sint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8snorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8uint
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
rgba8unorm
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
transpose
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
transpose
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
transpose
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
2
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
3
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
win
"
and
not
debug
:
FAIL
if
os
=
=
"
linux
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
2
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
3
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
3
;
rows
=
4
]
expected
:
if
os
=
=
"
win
"
and
debug
:
FAIL
if
os
=
=
"
win
"
and
not
debug
:
[
PASS
FAIL
]
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
cols
=
4
;
rows
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
trunc
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
trunc
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
trunc
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
linux
"
and
not
debug
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
