[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
many_attributes_overlapping
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
vertex_attribute_contained_in_stride
:
*
]
[
:
format
=
"
float16x2
"
]
expected
:
FAIL
[
:
format
=
"
float16x4
"
]
expected
:
FAIL
[
:
format
=
"
float32
"
]
expected
:
FAIL
[
:
format
=
"
float32x2
"
]
expected
:
FAIL
[
:
format
=
"
float32x3
"
]
expected
:
FAIL
[
:
format
=
"
float32x4
"
]
expected
:
FAIL
[
:
format
=
"
sint16x2
"
]
expected
:
FAIL
[
:
format
=
"
sint16x4
"
]
expected
:
FAIL
[
:
format
=
"
sint32
"
]
expected
:
FAIL
[
:
format
=
"
sint32x2
"
]
expected
:
FAIL
[
:
format
=
"
sint32x3
"
]
expected
:
FAIL
[
:
format
=
"
sint32x4
"
]
expected
:
FAIL
[
:
format
=
"
sint8x2
"
]
expected
:
FAIL
[
:
format
=
"
sint8x4
"
]
expected
:
FAIL
[
:
format
=
"
snorm16x2
"
]
expected
:
FAIL
[
:
format
=
"
snorm16x4
"
]
expected
:
FAIL
[
:
format
=
"
snorm8x2
"
]
expected
:
FAIL
[
:
format
=
"
snorm8x4
"
]
expected
:
FAIL
[
:
format
=
"
uint16x2
"
]
expected
:
FAIL
[
:
format
=
"
uint16x4
"
]
expected
:
FAIL
[
:
format
=
"
uint32
"
]
expected
:
FAIL
[
:
format
=
"
uint32x2
"
]
expected
:
FAIL
[
:
format
=
"
uint32x3
"
]
expected
:
FAIL
[
:
format
=
"
uint32x4
"
]
expected
:
FAIL
[
:
format
=
"
uint8x2
"
]
expected
:
FAIL
[
:
format
=
"
uint8x4
"
]
expected
:
FAIL
[
:
format
=
"
unorm16x2
"
]
expected
:
FAIL
[
:
format
=
"
unorm16x4
"
]
expected
:
FAIL
[
:
format
=
"
unorm8x2
"
]
expected
:
FAIL
[
:
format
=
"
unorm8x4
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
vertex_attribute_offset_alignment
:
*
]
[
:
format
=
"
float16x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float16x2
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x2
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
float16x2
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float16x2
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x2
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
float16x2
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
2048
;
offset
=
2036
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
2048
;
offset
=
2038
]
expected
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
2048
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
256
;
offset
=
244
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
256
;
offset
=
246
]
expected
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x4
"
;
arrayStride
=
256
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
2048
;
offset
=
2036
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
2048
;
offset
=
2038
]
expected
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
2048
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
256
;
offset
=
244
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
256
;
offset
=
246
]
expected
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x2
"
;
arrayStride
=
256
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
2048
;
offset
=
12
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
2048
;
offset
=
2030
]
expected
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
2048
;
offset
=
2032
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
2048
;
offset
=
2034
]
expected
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
2048
;
offset
=
2036
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
2048
;
offset
=
6
]
expected
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
256
;
offset
=
12
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
256
;
offset
=
238
]
expected
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
256
;
offset
=
240
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
256
;
offset
=
242
]
expected
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
256
;
offset
=
244
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
;
arrayStride
=
256
;
offset
=
6
]
expected
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
2048
;
offset
=
16
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
2048
;
offset
=
2024
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
2048
;
offset
=
2028
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
2048
;
offset
=
2030
]
expected
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
2048
;
offset
=
2032
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
2048
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
256
;
offset
=
16
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
256
;
offset
=
232
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
256
;
offset
=
236
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
256
;
offset
=
238
]
expected
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
256
;
offset
=
240
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
;
arrayStride
=
256
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
2048
;
offset
=
2036
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
2048
;
offset
=
2038
]
expected
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
2048
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
256
;
offset
=
244
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
256
;
offset
=
246
]
expected
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x4
"
;
arrayStride
=
256
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
2048
;
offset
=
2036
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
2048
;
offset
=
2038
]
expected
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
2048
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
256
;
offset
=
244
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
256
;
offset
=
246
]
expected
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x2
"
;
arrayStride
=
256
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
2048
;
offset
=
12
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
2048
;
offset
=
2030
]
expected
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
2048
;
offset
=
2032
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
2048
;
offset
=
2034
]
expected
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
2048
;
offset
=
2036
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
2048
;
offset
=
6
]
expected
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
256
;
offset
=
12
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
256
;
offset
=
238
]
expected
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
256
;
offset
=
240
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
256
;
offset
=
242
]
expected
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
256
;
offset
=
244
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
;
arrayStride
=
256
;
offset
=
6
]
expected
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
2048
;
offset
=
16
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
2048
;
offset
=
2024
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
2048
;
offset
=
2028
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
2048
;
offset
=
2030
]
expected
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
2048
;
offset
=
2032
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
2048
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
256
;
offset
=
16
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
256
;
offset
=
232
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
256
;
offset
=
236
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
256
;
offset
=
238
]
expected
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
256
;
offset
=
240
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
;
arrayStride
=
256
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
2048
;
offset
=
1
]
expected
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
2048
;
offset
=
2045
]
expected
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
2048
;
offset
=
2046
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
256
;
offset
=
1
]
expected
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
256
;
offset
=
253
]
expected
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
256
;
offset
=
254
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
2048
;
offset
=
2036
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
2048
;
offset
=
2038
]
expected
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
2048
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
256
;
offset
=
244
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
256
;
offset
=
246
]
expected
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x4
"
;
arrayStride
=
256
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
2048
;
offset
=
1
]
expected
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
2048
;
offset
=
2045
]
expected
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
2048
;
offset
=
2046
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
256
;
offset
=
1
]
expected
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
256
;
offset
=
253
]
expected
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
256
;
offset
=
254
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
2048
;
offset
=
2036
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
2048
;
offset
=
2038
]
expected
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
2048
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
256
;
offset
=
244
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
256
;
offset
=
246
]
expected
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x4
"
;
arrayStride
=
256
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
2048
;
offset
=
2036
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
2048
;
offset
=
2038
]
expected
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
2048
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
256
;
offset
=
244
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
256
;
offset
=
246
]
expected
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x2
"
;
arrayStride
=
256
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
2048
;
offset
=
12
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
2048
;
offset
=
2030
]
expected
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
2048
;
offset
=
2032
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
2048
;
offset
=
2034
]
expected
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
2048
;
offset
=
2036
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
2048
;
offset
=
6
]
expected
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
256
;
offset
=
12
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
256
;
offset
=
238
]
expected
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
256
;
offset
=
240
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
256
;
offset
=
242
]
expected
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
256
;
offset
=
244
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
;
arrayStride
=
256
;
offset
=
6
]
expected
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
2048
;
offset
=
16
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
2048
;
offset
=
2024
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
2048
;
offset
=
2028
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
2048
;
offset
=
2030
]
expected
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
2048
;
offset
=
2032
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
2048
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
256
;
offset
=
16
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
256
;
offset
=
232
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
256
;
offset
=
236
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
256
;
offset
=
238
]
expected
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
256
;
offset
=
240
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
;
arrayStride
=
256
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
2048
;
offset
=
1
]
expected
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
2048
;
offset
=
2045
]
expected
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
2048
;
offset
=
2046
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
256
;
offset
=
1
]
expected
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
256
;
offset
=
253
]
expected
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
256
;
offset
=
254
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
2048
;
offset
=
2036
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
2048
;
offset
=
2038
]
expected
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
2048
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
256
;
offset
=
244
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
256
;
offset
=
246
]
expected
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x4
"
;
arrayStride
=
256
;
offset
=
8
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
2048
;
offset
=
1
]
expected
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
2048
;
offset
=
2045
]
expected
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
2048
;
offset
=
2046
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
256
;
offset
=
1
]
expected
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
256
;
offset
=
253
]
expected
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
256
;
offset
=
254
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
2048
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
2048
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
2048
;
offset
=
2040
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
2048
;
offset
=
2042
]
expected
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
2048
;
offset
=
2044
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
2048
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
256
;
offset
=
0
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
256
;
offset
=
2
]
expected
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
256
;
offset
=
248
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
256
;
offset
=
250
]
expected
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
256
;
offset
=
252
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x4
"
;
arrayStride
=
256
;
offset
=
4
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
vertex_attribute_shaderLocation_limit
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
vertex_attribute_shaderLocation_unique
:
*
]
[
:
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
vertex_shader_input_location_in_vertex_state
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
vertex_shader_input_location_limit
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
render_pipeline
vertex_state
:
vertex_shader_type_matches_attribute_format
:
*
]
[
:
format
=
"
float16x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float16x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32
"
]
expected
:
FAIL
[
:
format
=
"
float32x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
float32x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint16x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32
"
]
expected
:
FAIL
[
:
format
=
"
sint32x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint32x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
sint8x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm16x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
snorm8x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint16x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32
"
]
expected
:
FAIL
[
:
format
=
"
uint32x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x3
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint32x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
uint8x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm16x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x2
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
format
=
"
unorm8x4
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_encoder
:
subresources
buffer_usage_in_compute_pass_with_two_dispatches
:
*
]
[
:
usage0
=
"
indirect
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
uniform
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_encoder
:
subresources
buffer_usage_in_one_compute_pass_with_no_dispatch
:
*
]
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_encoder
:
subresources
buffer_usage_in_one_compute_pass_with_one_dispatch
:
*
]
[
:
usage0AccessibleInDispatch
=
false
;
usage1AccessibleInDispatch
=
false
;
dispatchBeforeUsage1
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0AccessibleInDispatch
=
false
;
usage1AccessibleInDispatch
=
false
;
dispatchBeforeUsage1
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0AccessibleInDispatch
=
false
;
usage1AccessibleInDispatch
=
true
;
dispatchBeforeUsage1
=
false
]
expected
:
FAIL
[
:
usage0AccessibleInDispatch
=
true
;
usage1AccessibleInDispatch
=
false
;
dispatchBeforeUsage1
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0AccessibleInDispatch
=
true
;
usage1AccessibleInDispatch
=
false
;
dispatchBeforeUsage1
=
true
]
expected
:
FAIL
[
:
usage0AccessibleInDispatch
=
true
;
usage1AccessibleInDispatch
=
true
;
dispatchBeforeUsage1
=
false
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_encoder
:
subresources
buffer_usage_in_one_render_pass_with_no_draw
:
*
]
[
:
usage0
=
"
index
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
index
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
uniform
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
vertex
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_encoder
:
subresources
buffer_usage_in_one_render_pass_with_one_draw
:
*
]
[
:
usage0
=
"
index
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
index
"
]
expected
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
uniform
"
]
expected
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
vertex
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
index
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
uniform
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
vertex
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
index
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
uniform
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
vertex
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
and
debug
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_encoder
:
subresources
buffer_usage_in_one_render_pass_with_two_draws
:
*
]
[
:
usage0
=
"
index
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
index
"
]
expected
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
uniform
"
]
expected
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
vertex
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
index
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
uniform
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
vertex
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
index
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
uniform
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
vertex
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_misc
:
subresources
buffer_usages_in_copy_and_pass
:
*
]
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
index
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
indexedIndirect
"
;
pass
=
"
render
"
]
expected
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
indirect
"
;
pass
=
"
compute
"
]
expected
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
indirect
"
;
pass
=
"
render
"
]
expected
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
read
-
only
-
storage
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
read
-
only
-
storage
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
storage
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
storage
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
uniform
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
uniform
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
dst
"
;
usage1
=
"
vertex
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
index
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
indexedIndirect
"
;
pass
=
"
render
"
]
expected
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
indirect
"
;
pass
=
"
compute
"
]
expected
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
indirect
"
;
pass
=
"
render
"
]
expected
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
read
-
only
-
storage
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
read
-
only
-
storage
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
storage
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
storage
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
uniform
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
uniform
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
copy
-
src
"
;
usage1
=
"
vertex
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
FAIL
[
:
usage0
=
"
indexedIndirect
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
compute
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
compute
"
]
expected
:
FAIL
[
:
usage0
=
"
indirect
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
compute
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
copy
-
dst
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
copy
-
src
"
;
pass
=
"
render
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_misc
:
subresources
reset_buffer_usage_before_dispatch
:
*
]
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
buffer
in_pass_misc
:
subresources
reset_buffer_usage_before_draw
:
*
]
[
:
usage0
=
"
index
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
index
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
read
-
only
-
storage
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
index
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
uniform
"
]
expected
:
FAIL
[
:
usage0
=
"
storage
"
;
usage1
=
"
vertex
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
uniform
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
index
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
indexedIndirect
"
]
expected
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
indirect
"
]
expected
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
read
-
only
-
storage
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
storage
"
]
expected
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
uniform
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage0
=
"
vertex
"
;
usage1
=
"
vertex
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
bindings_in_bundle
:
*
]
[
:
type0
=
"
multisampled
-
texture
"
;
type1
=
"
multisampled
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
multisampled
-
texture
"
;
type1
=
"
render
-
target
"
]
expected
:
FAIL
[
:
type0
=
"
render
-
target
"
;
type1
=
"
multisampled
-
texture
"
]
expected
:
FAIL
[
:
type0
=
"
render
-
target
"
;
type1
=
"
sampled
-
texture
"
]
expected
:
FAIL
[
:
type0
=
"
render
-
target
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
FAIL
[
:
type0
=
"
sampled
-
texture
"
;
type1
=
"
render
-
target
"
]
expected
:
FAIL
[
:
type0
=
"
sampled
-
texture
"
;
type1
=
"
sampled
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
type0
=
"
sampled
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
FAIL
[
:
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
render
-
target
"
]
expected
:
FAIL
[
:
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
sampled
-
texture
"
]
expected
:
FAIL
[
:
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
replaced_binding
:
*
]
[
:
compute
=
false
;
callDrawOrDispatch
=
false
;
entry
=
{
"
storageTexture
"
:
{
"
access
"
:
"
write
-
only
"
"
format
"
:
"
rgba8unorm
"
}
}
]
expected
:
FAIL
[
:
compute
=
false
;
callDrawOrDispatch
=
false
;
entry
=
{
"
texture
"
:
{
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
callDrawOrDispatch
=
true
;
entry
=
{
"
storageTexture
"
:
{
"
access
"
:
"
write
-
only
"
"
format
"
:
"
rgba8unorm
"
}
}
]
expected
:
FAIL
[
:
compute
=
false
;
callDrawOrDispatch
=
true
;
entry
=
{
"
texture
"
:
{
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
callDrawOrDispatch
=
false
;
entry
=
{
"
storageTexture
"
:
{
"
access
"
:
"
write
-
only
"
"
format
"
:
"
rgba8unorm
"
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
callDrawOrDispatch
=
false
;
entry
=
{
"
texture
"
:
{
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
callDrawOrDispatch
=
true
;
entry
=
{
"
storageTexture
"
:
{
"
access
"
:
"
write
-
only
"
"
format
"
:
"
rgba8unorm
"
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
callDrawOrDispatch
=
true
;
entry
=
{
"
texture
"
:
{
}
}
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
scope
dispatch
:
*
]
[
:
dispatch
=
"
direct
"
]
expected
:
FAIL
[
:
dispatch
=
"
indirect
"
]
expected
:
FAIL
[
:
dispatch
=
"
none
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
shader_stages_and_visibility
attachment_write
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
shader_stages_and_visibility
storage_write
:
*
]
[
:
compute
=
false
]
expected
:
FAIL
[
:
compute
=
true
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
subresources_and_binding_types_combination_for_aspect
:
*
]
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth16unorm
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth24plus
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth24plus
-
stencil8
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth32float
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth32float
-
stencil8
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
stencil8
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
depth16unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
depth24plus
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
depth24plus
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
depth32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
depth32float
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
false
;
binding1InBundle
=
true
;
format
=
"
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
depth16unorm
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
depth24plus
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
depth24plus
-
stencil8
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
depth32float
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
depth32float
-
stencil8
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
false
;
format
=
"
stencil8
"
]
expected
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
depth16unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
depth24plus
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
depth24plus
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
depth32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
depth32float
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
binding0InBundle
=
true
;
binding1InBundle
=
true
;
format
=
"
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth16unorm
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth24plus
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth24plus
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth32float
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
depth32float
-
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
binding0InBundle
=
false
;
binding1InBundle
=
false
;
format
=
"
stencil8
"
]
expected
:
if
os
=
=
"
win
"
:
FAIL
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
subresources_and_binding_types_combination_for_color
:
*
]
[
:
compute
=
false
;
type0
=
"
render
-
target
"
;
type1
=
"
render
-
target
"
]
expected
:
FAIL
[
:
compute
=
false
;
type0
=
"
sampled
-
texture
"
;
type1
=
"
render
-
target
"
]
expected
:
FAIL
[
:
compute
=
false
;
type0
=
"
sampled
-
texture
"
;
type1
=
"
sampled
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
false
;
type0
=
"
sampled
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
FAIL
[
:
compute
=
false
;
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
render
-
target
"
]
expected
:
FAIL
[
:
compute
=
false
;
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
type0
=
"
sampled
-
texture
"
;
type1
=
"
sampled
-
texture
"
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
type0
=
"
sampled
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
FAIL
[
:
compute
=
true
;
type0
=
"
writeonly
-
storage
-
texture
"
;
type1
=
"
writeonly
-
storage
-
texture
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
resource_usages
texture
in_pass_encoder
:
unused_bindings_in_pipeline
:
*
]
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
FAIL
[
:
compute
=
false
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
false
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
false
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
common
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
after
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
before
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
middle
"
;
callDrawOrDispatch
=
true
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
false
]
expected
:
if
os
=
=
"
win
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
compute
=
true
;
useBindGroup0
=
true
;
useBindGroup1
=
true
;
setBindGroupsOrder
=
"
reversed
"
;
setPipeline
=
"
none
"
;
callDrawOrDispatch
=
true
]
expected
:
FAIL
