[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
ColorWrite
values
:
*
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bool_logical
:
or
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bool_logical
:
equals
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_or
:
*
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
ShaderStage
values
:
*
]
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
TextureUsage
values
:
*
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bool_logical
:
and
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
evaluation_order
:
binary_mixed
:
*
]
[
:
name
=
"
ArithAndLogical
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
:
FAIL
[
:
name
=
"
LogicalAndArith
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
name
=
"
ArithAndLogical_ShortCircuit
"
]
expected
:
FAIL
[
:
name
=
"
LogicalAndArith_ShortCircuit
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
examples
:
gpu
with_texture_compression
etc2
:
*
]
#
TODO
:
Currently
has
issues
being
followed
up
with
;
see
<
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1836479
>
.
disabled
:
true
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
evaluation_order
:
index_accessor
:
*
]
[
:
name
=
"
LeftSE
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
:
FAIL
[
:
name
=
"
RightSE
"
]
expected
:
[
FAIL
PASS
]
[
:
name
=
"
BothSE
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
evaluation_order
:
call
:
*
]
[
:
name
=
"
OneSE
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
:
FAIL
[
:
name
=
"
AllSE
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
name
=
"
MiddleNotSE
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_and
:
*
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bitwise
:
bitwise_exclusive_or
:
*
]
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
i32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
type
=
"
u32
"
;
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
evaluation_order
:
binary_arith
:
*
]
[
:
name
=
"
BothSE
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
:
FAIL
[
:
name
=
"
LeftSE
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
name
=
"
RightSE
"
]
expected
:
FAIL
[
:
name
=
"
ThreeSE
"
]
expected
:
FAIL
[
:
name
=
"
LeftmostSE
"
]
expected
:
FAIL
[
:
name
=
"
RightmostSE
"
]
expected
:
FAIL
[
:
name
=
"
MiddleSE
"
]
expected
:
FAIL
[
:
name
=
"
LiteralAndSEAndVar
"
]
expected
:
FAIL
[
:
name
=
"
VarAndSEAndLiteral
"
]
expected
:
FAIL
[
:
name
=
"
SEAndVarAndLiteral
"
]
expected
:
FAIL
[
:
name
=
"
VarAndLiteralAndSE
"
]
expected
:
FAIL
[
:
name
=
"
MemberAccessAndSE
"
]
expected
:
FAIL
[
:
name
=
"
SEAndMemberAccess
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
BufferUsage
count
:
*
]
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
TextureUsage
count
:
*
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
evaluation_order
:
assignment
:
*
]
[
:
name
=
"
ToArray1D
"
]
expected
:
FAIL
[
:
name
=
"
ToArray2D
"
]
expected
:
FAIL
[
:
name
=
"
ToArrayFromArray
"
]
expected
:
FAIL
[
:
name
=
"
ToArrayIndexedByArrayIndexedBySE
"
]
expected
:
FAIL
[
:
name
=
"
ToVec_BothSE
"
]
expected
:
FAIL
[
:
name
=
"
ToVec_LeftSE
"
]
expected
:
FAIL
[
:
name
=
"
ToVec_RightSE
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bool_logical
:
and_short_circuit
:
*
]
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
ShaderStage
count
:
*
]
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
ColorWrite
count
:
*
]
[
cts
.
https
.
html
?
q
=
webgpu
:
idl
constants
flags
:
BufferUsage
values
:
*
]
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
evaluation_order
:
member_accessor
:
*
]
[
:
name
=
"
Vec
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
:
FAIL
[
:
name
=
"
Struct
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
binary
bool_logical
:
or_short_circuit
:
*
]
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
evaluation_order
:
binary_logical
:
*
]
[
:
name
=
"
BothSE
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
:
FAIL
[
:
name
=
"
LeftSE
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
name
=
"
RightSE
"
]
expected
:
FAIL
[
:
name
=
"
LeftmostSE
"
]
expected
:
FAIL
[
:
name
=
"
RightmostSE
"
]
expected
:
FAIL
[
:
name
=
"
MiddleSE
"
]
expected
:
FAIL
[
:
name
=
"
ShortCircuit_And_LhsOnly
"
]
expected
:
FAIL
[
:
name
=
"
ShortCircuit_And_LhsAndRhs
"
]
expected
:
FAIL
[
:
name
=
"
ShortCircuit_Or_LhsOnly
"
]
expected
:
FAIL
[
:
name
=
"
ShortCircuit_Or_LhsAndRhs
"
]
expected
:
FAIL
[
:
name
=
"
NoShortCircuit_And
"
]
expected
:
FAIL
[
:
name
=
"
NoShortCircuit_Or
"
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
evaluation_order
:
type_constructor
:
*
]
[
:
name
=
"
Struct
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
os
=
=
"
win
"
:
FAIL
[
:
name
=
"
Array1D
"
]
expected
:
FAIL
[
:
name
=
"
Array2D
"
]
expected
:
FAIL
