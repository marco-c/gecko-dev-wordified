[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
destroy
:
while_mapped
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
mapping
:
mapAsync
state
destroyed
:
*
]
#
TODO
:
Currently
has
issues
being
followed
up
with
;
see
<
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1836479
>
.
disabled
:
true
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
vertex_state
index_format
:
index_format
setIndexBuffer_before_setPipeline
:
*
]
[
:
setIndexBufferBeforeSetPipeline
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
setIndexBufferBeforeSetPipeline
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
vertex_state
index_format
:
index_format
uint32
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
mapping
:
mapAsync
usage
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
create
:
size
:
*
]
[
:
mappedAtCreation
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
mappedAtCreation
=
true
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
mapping
:
mapAsync
state
mapped
:
*
]
#
TODO
:
Currently
has
issues
being
followed
up
with
;
see
<
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1836479
>
.
disabled
:
true
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
mapping
:
mapAsync
invalidBuffer
:
*
]
#
TODO
:
Currently
has
issues
being
followed
up
with
;
see
<
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1836479
>
.
disabled
:
true
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
create
:
usage
:
*
]
expected
:
if
os
=
=
"
linux
"
:
[
OK
TIMEOUT
]
[
:
usage1
=
32
;
usage2
=
128
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32
;
usage2
=
256
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32
;
usage2
=
512
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32
;
usage2
=
32768
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
0
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
1
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
8
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
16
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
32
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
64
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
128
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
256
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
512
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
64
;
usage2
=
32768
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
0
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
1
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
8
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
16
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
32
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
64
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
128
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
256
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
512
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
128
;
usage2
=
32768
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
0
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
1
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
8
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
16
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
32
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
64
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
128
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
256
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
512
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
256
;
usage2
=
32768
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
0
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
1
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
8
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
16
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
32
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
64
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
128
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
256
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
512
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
512
;
usage2
=
32768
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
0
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
1
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
4
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
8
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
16
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
32
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
64
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
128
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
256
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
512
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32768
;
usage2
=
32768
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
TIMEOUT
NOTRUN
]
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
64
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
128
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
256
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
512
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
0
;
usage2
=
32768
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
64
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
128
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
256
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
512
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
1
;
usage2
=
32768
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
64
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
128
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
256
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
512
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
2
;
usage2
=
32768
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
64
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
128
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
256
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
512
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
4
;
usage2
=
32768
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
64
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
128
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
256
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
512
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
8
;
usage2
=
32768
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
64
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
128
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
256
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
512
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
16
;
usage2
=
32768
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32
;
usage2
=
0
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32
;
usage2
=
1
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32
;
usage2
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32
;
usage2
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32
;
usage2
=
8
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32
;
usage2
=
16
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32
;
usage2
=
32
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
usage1
=
32
;
usage2
=
64
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
mapping
:
mapAsync
state
mappingPending
:
*
]
#
TODO
:
Currently
has
issues
being
followed
up
with
;
see
<
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1836479
>
.
disabled
:
true
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
mapping
:
mapAsync
offsetAndSizeAlignment
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
create
:
limit
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
mapping
:
mapAsync
earlyRejection
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
mapping
:
mapAsync
offsetAndSizeOOB
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
create
:
createBuffer_invalid_and_oom
:
*
]
[
:
]
#
TODO
:
Currently
has
issues
being
followed
up
with
;
see
<
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1836479
>
.
disabled
:
if
os
=
=
"
linux
"
:
true
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
mapping
:
mapAsync
state
mappedAtCreation
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
vertex_state
index_format
:
index_format
change_pipeline_after_setIndexBuffer
:
*
]
[
:
setPipelineBeforeSetIndexBuffer
=
false
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
setPipelineBeforeSetIndexBuffer
=
true
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
destroy
:
twice
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
vertex_state
index_format
:
primitive_restart
:
*
]
[
:
indexFormat
=
"
uint16
"
;
primitiveTopology
=
"
triangle
-
list
"
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
indexFormat
=
"
uint16
"
;
primitiveTopology
=
"
triangle
-
strip
"
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
indexFormat
=
"
uint32
"
;
primitiveTopology
=
"
point
-
list
"
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
indexFormat
=
"
uint32
"
;
primitiveTopology
=
"
triangle
-
list
"
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
indexFormat
=
"
uint32
"
;
primitiveTopology
=
"
triangle
-
strip
"
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
indexFormat
=
"
uint16
"
;
primitiveTopology
=
"
line
-
list
"
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
indexFormat
=
"
uint32
"
;
primitiveTopology
=
"
line
-
strip
"
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
indexFormat
=
"
uint16
"
;
primitiveTopology
=
"
point
-
list
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
indexFormat
=
"
uint16
"
;
primitiveTopology
=
"
line
-
strip
"
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
:
indexFormat
=
"
uint32
"
;
primitiveTopology
=
"
line
-
list
"
]
expected
:
if
os
=
=
"
linux
"
:
[
PASS
FAIL
]
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
destroy
:
all_usages
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
vertex_state
index_format
:
index_format
setIndexBuffer_different_formats
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
mapping
:
mapAsync
abort_over_invalid_error
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
mapping
:
mapAsync
sizeUnspecifiedOOB
:
*
]
[
:
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
operation
vertex_state
index_format
:
index_format
uint16
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
api
validation
buffer
destroy
:
error_buffer
:
*
]
[
:
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
