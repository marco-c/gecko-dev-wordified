[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
sign
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
reverseBits
:
i32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
(
os
=
=
"
win
"
)
and
not
debug
:
[
PASS
FAIL
]
[
FAIL
PASS
]
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
saturate
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
(
os
=
=
"
win
"
)
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
quantizeToF16
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
refract
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
reflect
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
refract
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
radians
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
[
FAIL
PASS
]
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
(
os
=
=
"
win
"
)
and
not
debug
:
[
PASS
FAIL
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
reverseBits
:
u32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
(
os
=
=
"
win
"
)
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
reflect
:
f32_vec4
:
*
]
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
radians
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
reflect
:
f32_vec3
:
*
]
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
round
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
refract
:
f32_vec3
:
*
]
#
TODO
:
Currently
has
issues
being
followed
up
with
;
see
<
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1836479
>
.
disabled
:
true
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
select
:
vector
:
*
]
[
:
inputSource
=
"
const
"
;
component
=
"
b
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
b
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
b
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
f
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
f
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
f
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
i
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
i
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
i
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
u
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
u
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
u
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
b
"
;
overload
=
"
vec3
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
b
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
f
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
f
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
f
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
i
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
i
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
i
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
u
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
u
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
u
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
b
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
b
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
f
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
f
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
f
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
i
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
i
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
i
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
u
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
u
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
u
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
b
"
;
overload
=
"
vec3
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
b
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
f
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
f
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
f
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
i
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
i
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
i
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
u
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
u
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
u
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
b
"
;
overload
=
"
vec2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
b
"
;
overload
=
"
vec2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
b
"
;
overload
=
"
vec2
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
refract
:
f32_vec4
:
*
]
#
TODO
:
Currently
has
issues
being
followed
up
with
;
see
<
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1836479
>
.
disabled
:
true
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
round
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
select
:
scalar
:
*
]
[
:
inputSource
=
"
const
"
;
component
=
"
b
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
b
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
b
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
b
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
f
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
f
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
f
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
f
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
i
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
i
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
i
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
i
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
u
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
u
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
u
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
component
=
"
u
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
b
"
;
overload
=
"
vec2
"
]
expected
:
[
FAIL
PASS
]
[
:
inputSource
=
"
uniform
"
;
component
=
"
b
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
b
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
f
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
f
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
f
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
f
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
i
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
i
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
i
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
i
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
u
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
u
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
u
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
u
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
b
"
;
overload
=
"
vec2
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
(
os
=
=
"
win
"
)
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
b
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
b
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
f
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
f
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
f
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
f
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
i
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
i
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
i
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
i
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
u
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
u
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
u
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
u
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
b
"
;
overload
=
"
vec2
"
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
(
os
=
=
"
win
"
)
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
b
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
b
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
f
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
f
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
f
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
f
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
i
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
i
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
i
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
i
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
u
"
;
overload
=
"
scalar
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
u
"
;
overload
=
"
vec2
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
u
"
;
overload
=
"
vec3
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
u
"
;
overload
=
"
vec4
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
component
=
"
b
"
;
overload
=
"
scalar
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
component
=
"
b
"
;
overload
=
"
scalar
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
component
=
"
b
"
;
overload
=
"
scalar
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
reflect
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
refract
:
f32_vec2
:
*
]
#
TODO
:
Currently
has
issues
being
followed
up
with
;
see
<
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1836479
>
.
disabled
:
true
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
reflect
:
f32_vec2
:
*
]
[
:
inputSource
=
"
const
"
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
saturate
:
abstract_float
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
round
:
f32
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
if
(
os
=
=
"
win
"
)
and
not
debug
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
linux
"
:
[
FAIL
PASS
]
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
radians
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
cts
.
https
.
html
?
q
=
webgpu
:
shader
execution
expression
call
builtin
saturate
:
f16
:
*
]
[
:
inputSource
=
"
const
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
const
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
uniform
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_r
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
"
_undef_
"
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
2
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
3
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
[
:
inputSource
=
"
storage_rw
"
;
vectorize
=
4
]
expected
:
if
os
=
=
"
mac
"
:
FAIL
