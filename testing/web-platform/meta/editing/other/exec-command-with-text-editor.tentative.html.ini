[
exec
-
command
-
with
-
text
-
editor
.
tentative
.
html
]
[
In
<
input
>
execCommand
(
"
getHTML
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
getHTML
"
false
null
)
a
[
b
\
]
c
)
:
getHTML
value
should
be
"
b
"
when
<
input
>
has
focus
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
getHTML
"
false
null
)
a
[
b
\
]
c
)
:
getHTML
value
should
be
"
ere
<
b
>
is
<
/
b
>
T
"
when
<
input
>
does
not
have
focus
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
<
input
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
deleteByCut
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLInputElement
\
]
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
copy
"
false
null
)
a
[
bc
\
]
d
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
copy
"
false
null
)
a
[
bc
\
]
d
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
paste
"
false
null
)
a
[
\
]
c
)
:
The
command
should
be
supported
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
paste
"
false
null
)
a
[
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
delete
"
false
null
)
ab
[
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
delete
"
false
null
)
ab
[
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
delete
"
false
null
)
ab
[
\
]
c
)
:
<
input
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
delete
"
false
null
)
ab
[
\
]
c
)
:
input
.
inputType
should
be
deleteContentBackward
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
delete
"
false
null
)
ab
[
\
]
c
)
:
input
.
target
should
be
[
object
HTMLInputElement
\
]
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
delete
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
delete
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
delete
"
false
null
)
a
[
b
\
]
c
)
:
<
input
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
delete
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
deleteContentBackward
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
delete
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLInputElement
\
]
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
b
\
]
c
)
:
<
input
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
deleteContentForward
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLInputElement
\
]
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
\
]
bc
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
\
]
bc
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
\
]
bc
)
:
<
input
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
\
]
bc
)
:
input
.
inputType
should
be
deleteContentForward
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
\
]
bc
)
:
input
.
target
should
be
[
object
HTMLInputElement
\
]
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
selectall
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
selectall
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
selectall
"
false
null
)
a
[
b
\
]
c
)
:
<
input
>
.
value
should
be
"
[
abc
\
]
"
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
undo
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
undo
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
undo
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
historyUndo
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
undo
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLInputElement
\
]
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
<
input
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
historyRedo
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLInputElement
\
]
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
<
input
>
.
value
should
be
"
ainserted
[
\
]
c
"
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
insertText
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLInputElement
\
]
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
inserttext
"
false
*
*
inserted
*
*
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
inserttext
"
false
*
*
inserted
*
*
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
inserttext
"
false
*
*
inserted
*
*
)
a
[
b
\
]
c
)
:
<
input
>
.
value
should
be
"
a
*
*
inserted
*
*
[
\
]
c
"
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
inserttext
"
false
*
*
inserted
*
*
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
insertText
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
inserttext
"
false
*
*
inserted
*
*
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLInputElement
\
]
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
contentReadOnly
state
should
be
true
when
<
input
>
has
focus
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
readonly
property
should
be
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
contentReadOnly
"
false
false
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
contentReadOnly
"
false
false
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
defaultParagraphSeparator
"
false
p
)
a
[
b
\
]
c
)
:
defaultParagraphSeparator
value
should
be
"
p
"
when
<
input
>
has
focus
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
defaultParagraphSeparator
"
false
p
)
a
[
b
\
]
c
)
:
defaultParagraphSeparator
value
should
be
"
p
"
when
<
input
>
does
not
have
focus
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
defaultParagraphSeparator
"
false
div
)
a
[
b
\
]
c
)
:
defaultParagraphSeparator
value
should
be
"
div
"
when
<
input
>
has
focus
]
expected
:
FAIL
[
In
<
input
>
execCommand
(
"
defaultParagraphSeparator
"
false
div
)
a
[
b
\
]
c
)
:
defaultParagraphSeparator
value
should
be
"
div
"
when
<
input
>
does
not
have
focus
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
getHTML
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
getHTML
"
false
null
)
a
[
b
\
]
c
)
:
getHTML
value
should
be
"
b
"
when
<
textarea
>
has
focus
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
getHTML
"
false
null
)
a
[
b
\
]
c
)
:
getHTML
value
should
be
"
ere
<
b
>
is
<
/
b
>
T
"
when
<
textarea
>
does
not
have
focus
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
deleteByCut
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
copy
"
false
null
)
a
[
bc
\
]
d
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
copy
"
false
null
)
a
[
bc
\
]
d
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
paste
"
false
null
)
a
[
\
]
c
)
:
The
command
should
be
supported
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
paste
"
false
null
)
a
[
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
delete
"
false
null
)
ab
[
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
delete
"
false
null
)
ab
[
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
delete
"
false
null
)
ab
[
\
]
c
)
:
<
textarea
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
delete
"
false
null
)
ab
[
\
]
c
)
:
input
.
inputType
should
be
deleteContentBackward
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
delete
"
false
null
)
ab
[
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
delete
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
delete
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
delete
"
false
null
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
delete
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
deleteContentBackward
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
delete
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
deleteContentForward
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
\
]
bc
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
\
]
bc
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
\
]
bc
)
:
<
textarea
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
\
]
bc
)
:
input
.
inputType
should
be
deleteContentForward
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
forwarddelete
"
false
null
)
a
[
\
]
bc
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
selectall
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
selectall
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
selectall
"
false
null
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
[
abc
\
]
"
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
undo
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
undo
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
undo
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
historyUndo
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
undo
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
historyRedo
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
ainserted
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
insertText
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
inserttext
"
false
*
*
inserted
*
*
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
inserttext
"
false
*
*
inserted
*
*
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
inserttext
"
false
*
*
inserted
*
*
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
a
*
*
inserted
*
*
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
inserttext
"
false
*
*
inserted
*
*
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
insertText
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
inserttext
"
false
*
*
inserted
*
*
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
insertparagraph
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
insertparagraph
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
insertparagraph
"
false
null
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
a
\
n
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
insertparagraph
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
insertParagraph
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
insertparagraph
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
insertlinebreak
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
insertlinebreak
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
insertlinebreak
"
false
null
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
a
\
n
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
insertlinebreak
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
insertLineBreak
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
insertlinebreak
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
contentReadOnly
state
should
be
true
when
<
textarea
>
has
focus
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
readonly
property
should
be
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
contentReadOnly
"
false
false
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
contentReadOnly
"
false
false
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
defaultParagraphSeparator
"
false
p
)
a
[
b
\
]
c
)
:
defaultParagraphSeparator
value
should
be
"
p
"
when
<
textarea
>
has
focus
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
defaultParagraphSeparator
"
false
p
)
a
[
b
\
]
c
)
:
defaultParagraphSeparator
value
should
be
"
p
"
when
<
textarea
>
does
not
have
focus
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
defaultParagraphSeparator
"
false
div
)
a
[
b
\
]
c
)
:
defaultParagraphSeparator
value
should
be
"
div
"
when
<
textarea
>
has
focus
]
expected
:
FAIL
[
In
<
textarea
>
execCommand
(
"
defaultParagraphSeparator
"
false
div
)
a
[
b
\
]
c
)
:
defaultParagraphSeparator
value
should
be
"
div
"
when
<
textarea
>
does
not
have
focus
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
<
input
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
deleteByCut
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLInputElement
\
]
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
copy
"
false
null
)
a
[
bc
\
]
d
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
copy
"
false
null
)
a
[
bc
\
]
d
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
paste
"
false
null
)
a
[
\
]
c
)
:
The
command
should
be
supported
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
paste
"
false
null
)
a
[
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
undo
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
<
input
>
.
value
should
be
"
ainserted
[
\
]
c
"
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
insertText
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLInputElement
\
]
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
contentReadOnly
state
should
be
true
when
<
input
>
has
focus
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
readonly
property
should
be
true
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
a
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
deleteByCut
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
cut
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
copy
"
false
null
)
a
[
bc
\
]
d
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
copy
"
false
null
)
a
[
bc
\
]
d
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
paste
"
false
null
)
a
[
\
]
c
)
:
The
command
should
be
supported
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
paste
"
false
null
)
a
[
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
redo
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
ainserted
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
insertText
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
insertparagraph
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
insertparagraph
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
insertparagraph
"
false
null
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
a
\
n
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
insertparagraph
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
insertParagraph
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
insertparagraph
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
insertlinebreak
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
insertlinebreak
"
false
null
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
insertlinebreak
"
false
null
)
a
[
b
\
]
c
)
:
<
textarea
>
.
value
should
be
"
a
\
n
[
\
]
c
"
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
insertlinebreak
"
false
null
)
a
[
b
\
]
c
)
:
input
.
inputType
should
be
insertLineBreak
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
insertlinebreak
"
false
null
)
a
[
b
\
]
c
)
:
input
.
target
should
be
[
object
HTMLTextAreaElement
\
]
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
contentReadOnly
state
should
be
true
when
<
textarea
>
has
focus
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
readonly
property
should
be
true
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
inserthtml
"
false
<
b
>
inserted
<
/
b
>
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
false
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
input
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
false
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
undo
"
false
null
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
true
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
false
)
a
[
b
\
]
c
)
:
The
command
should
be
enabled
]
expected
:
FAIL
[
In
<
textarea
>
in
contenteditable
execCommand
(
"
contentReadOnly
"
false
false
)
a
[
b
\
]
c
)
:
execCommand
(
)
should
return
true
]
expected
:
FAIL
