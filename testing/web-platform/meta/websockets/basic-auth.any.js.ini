[
basic
-
auth
.
https
.
any
.
serviceworker
.
html
]
expected
:
TIMEOUT
[
basic
-
auth
.
any
.
serviceworker
.
html
]
[
HTTP
basic
authentication
should
work
with
WebSockets
]
expected
:
FAIL
[
basic
-
auth
.
any
.
html
?
wpt_flags
=
h2
]
expected
:
if
debug
and
(
os
=
=
"
linux
"
)
and
not
swgl
and
webrender
and
not
fission
:
[
"
CRASH
"
"
ERROR
"
"
TIMEOUT
"
]
if
debug
and
(
os
=
=
"
linux
"
)
and
not
swgl
and
webrender
and
fission
:
[
"
CRASH
"
"
OK
"
"
TIMEOUT
"
]
if
debug
and
(
os
=
=
"
linux
"
)
and
not
swgl
and
not
webrender
:
[
"
CRASH
"
"
OK
"
"
TIMEOUT
"
]
if
not
debug
and
not
webrender
and
(
os
=
=
"
win
"
)
and
(
processor
=
=
"
x86
"
)
:
[
"
OK
"
"
TIMEOUT
"
]
if
debug
and
(
os
=
=
"
linux
"
)
and
swgl
:
CRASH
if
not
debug
and
not
webrender
and
(
os
=
=
"
linux
"
)
:
[
"
OK
"
"
TIMEOUT
"
]
if
debug
and
(
os
=
=
"
android
"
)
:
CRASH
if
debug
and
(
os
=
=
"
win
"
)
:
CRASH
if
debug
and
(
os
=
=
"
mac
"
)
:
CRASH
[
HTTP
basic
authentication
should
work
with
WebSockets
]
expected
:
if
os
=
=
"
linux
"
:
[
"
PASS
"
"
FAIL
"
]
if
not
debug
and
not
webrender
and
(
os
=
=
"
win
"
)
and
(
processor
=
=
"
x86
"
)
:
[
"
PASS
"
"
TIMEOUT
"
]
[
basic
-
auth
.
any
.
sharedworker
.
html
?
wpt_flags
=
h2
]
expected
:
if
debug
and
(
os
=
=
"
linux
"
)
and
webrender
and
not
fission
and
not
swgl
:
[
"
CRASH
"
"
OK
"
"
ERROR
"
"
TIMEOUT
"
]
if
debug
and
(
os
=
=
"
linux
"
)
and
webrender
and
not
fission
and
swgl
:
[
"
CRASH
"
"
OK
"
"
TIMEOUT
"
]
if
debug
and
(
os
=
=
"
linux
"
)
and
webrender
and
fission
:
[
"
CRASH
"
"
ERROR
"
"
TIMEOUT
"
]
if
not
debug
and
(
os
=
=
"
win
"
)
and
(
processor
=
=
"
x86
"
)
:
[
"
TIMEOUT
"
"
OK
"
]
if
not
debug
and
(
os
=
=
"
linux
"
)
and
not
webrender
:
[
"
OK
"
"
TIMEOUT
"
]
if
debug
and
(
os
=
=
"
android
"
)
and
not
webrender
:
CRASH
if
debug
and
(
os
=
=
"
android
"
)
and
webrender
:
[
"
CRASH
"
"
OK
"
]
if
debug
and
(
os
=
=
"
linux
"
)
and
not
webrender
:
[
"
CRASH
"
"
ERROR
"
]
if
debug
and
(
os
=
=
"
win
"
)
:
CRASH
if
debug
and
(
os
=
=
"
mac
"
)
:
CRASH
[
basic
-
auth
.
any
.
sharedworker
.
html
?
wss
]
[
basic
-
auth
.
any
.
serviceworker
.
html
?
wss
]
[
basic
-
auth
.
any
.
worker
.
html
?
wpt_flags
=
h2
]
expected
:
if
debug
and
(
os
=
=
"
linux
"
)
and
webrender
and
not
swgl
:
[
"
CRASH
"
"
TIMEOUT
"
]
if
debug
and
(
os
=
=
"
linux
"
)
and
webrender
and
swgl
:
CRASH
if
debug
and
(
os
=
=
"
linux
"
)
and
not
webrender
:
[
"
CRASH
"
"
ERROR
"
]
if
not
debug
and
(
os
=
=
"
linux
"
)
and
not
fission
:
[
"
OK
"
"
TIMEOUT
"
]
if
not
debug
and
(
os
=
=
"
win
"
)
and
(
processor
=
=
"
x86
"
)
:
[
"
TIMEOUT
"
"
OK
"
]
if
debug
and
(
os
=
=
"
mac
"
)
:
CRASH
if
debug
and
(
os
=
=
"
android
"
)
:
CRASH
if
debug
and
(
os
=
=
"
win
"
)
:
CRASH
[
HTTP
basic
authentication
should
work
with
WebSockets
]
expected
:
if
(
os
=
=
"
linux
"
)
and
webrender
and
not
fission
:
[
"
PASS
"
"
FAIL
"
"
TIMEOUT
"
]
if
(
os
=
=
"
linux
"
)
and
webrender
and
fission
:
[
"
PASS
"
"
FAIL
"
]
if
(
os
=
=
"
linux
"
)
and
not
webrender
:
[
"
PASS
"
"
FAIL
"
]
[
basic
-
auth
.
any
.
html
?
wss
]
[
basic
-
auth
.
any
.
worker
.
html
?
wss
]
[
basic
-
auth
.
any
.
serviceworker
.
html
?
wpt_flags
=
h2
]
expected
:
if
debug
and
(
os
=
=
"
linux
"
)
and
webrender
and
not
fission
and
not
swgl
:
[
"
CRASH
"
"
OK
"
"
ERROR
"
"
TIMEOUT
"
]
if
debug
and
(
os
=
=
"
linux
"
)
and
webrender
and
not
fission
and
swgl
:
CRASH
if
debug
and
(
os
=
=
"
linux
"
)
and
webrender
and
fission
:
[
"
CRASH
"
"
ERROR
"
"
TIMEOUT
"
]
if
debug
and
(
os
=
=
"
linux
"
)
and
not
webrender
:
[
"
CRASH
"
"
TIMEOUT
"
]
if
not
debug
and
(
os
=
=
"
win
"
)
and
(
processor
=
=
"
x86
"
)
:
[
"
OK
"
"
TIMEOUT
"
]
if
not
debug
and
(
os
=
=
"
linux
"
)
and
not
fission
:
[
"
OK
"
"
TIMEOUT
"
]
if
debug
and
(
os
=
=
"
android
"
)
:
CRASH
if
debug
and
(
os
=
=
"
mac
"
)
:
CRASH
if
debug
and
(
os
=
=
"
win
"
)
:
CRASH
[
HTTP
basic
authentication
should
work
with
WebSockets
]
expected
:
if
(
os
=
=
"
linux
"
)
and
webrender
and
not
fission
:
[
"
PASS
"
"
FAIL
"
"
TIMEOUT
"
]
if
(
os
=
=
"
linux
"
)
and
webrender
and
fission
:
[
"
PASS
"
"
FAIL
"
]
if
(
os
=
=
"
linux
"
)
and
not
webrender
:
[
"
PASS
"
"
FAIL
"
]
