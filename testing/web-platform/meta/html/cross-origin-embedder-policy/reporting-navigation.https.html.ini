[
reporting
-
navigation
.
https
.
html
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
-
report
-
only
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
with
empty
frame
:
true
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
-
report
-
only
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
true
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
-
report
-
only
require
-
corp
)
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
true
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
-
report
-
only
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
false
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
with
empty
frame
:
false
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
-
report
-
only
require
-
corp
)
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
false
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
-
report
-
only
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
with
empty
frame
:
false
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
true
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
false
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
(
none
)
with
empty
frame
:
false
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
-
report
-
only
require
-
corp
)
target
:
(
none
)
with
empty
frame
:
false
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
with
empty
frame
:
true
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
-
report
-
only
require
-
corp
)
target
:
(
none
)
with
empty
frame
:
true
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
(
none
)
with
empty
frame
:
true
]
expected
:
TIMEOUT
[
parent
:
(
none
)
target
:
(
none
)
with
empty
frame
:
false
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
(
none
)
target
:
(
none
)
with
empty
frame
:
true
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
(
none
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
with
empty
frame
:
false
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
(
none
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
with
empty
frame
:
true
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
(
none
)
target
:
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
false
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
(
none
)
target
:
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
true
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
(
none
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
false
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
(
none
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
true
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
false
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
true
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
-
report
-
only
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
false
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
-
report
-
only
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
with
empty
frame
:
true
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
|
header
(
x
-
frame
-
options
deny
)
with
empty
frame
:
false
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
|
header
(
x
-
frame
-
options
deny
)
with
empty
frame
:
true
]
expected
:
TIMEOUT
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
|
header
(
content
-
security
-
policy
frame
-
ancestors
'
none
'
)
with
empty
frame
:
false
]
expected
:
if
release_or_beta
:
FAIL
[
parent
:
|
header
(
cross
-
origin
-
embedder
-
policy
require
-
corp
)
target
:
|
header
(
cross
-
origin
-
resource
-
policy
cross
-
origin
)
|
header
(
content
-
security
-
policy
frame
-
ancestors
'
none
'
)
with
empty
frame
:
true
]
expected
:
if
release_or_beta
:
FAIL
