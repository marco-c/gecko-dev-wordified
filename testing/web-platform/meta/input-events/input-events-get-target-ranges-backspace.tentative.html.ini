[
input
-
events
-
get
-
target
-
ranges
-
backspace
.
tentative
.
html
]
max
-
asserts
:
11
#
The
assertion
in
nsTableCellFrame
:
:
DecorateForSelection
(
)
hits
randomly
.
min
-
asserts
:
0
#
An
assertion
in
the
constructor
of
TextFragmentData
hits
twice
or
not
.
prefs
:
[
editor
.
hr_element
.
allow_to_delete_from_following_line
:
true
]
[
Alt
+
Backspace
at
"
<
p
>
abc
def
[
\
]
ghi
<
/
p
>
"
]
expected
:
if
(
os
=
=
"
win
"
)
:
FAIL
PASS
[
Meta
+
Backspace
at
"
<
p
>
abc
[
\
]
def
<
/
p
>
"
]
expected
:
FAIL
[
Shift
+
Backspace
at
"
<
p
>
abc
[
\
]
def
<
/
p
>
"
]
expected
:
FAIL
[
Control
+
Backspace
at
"
<
p
>
abc
[
\
]
def
<
/
p
>
"
]
expected
:
FAIL
[
Alt
+
Backspace
at
"
<
p
>
abc
[
\
]
def
<
/
p
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
p
>
abc
<
/
p
>
<
pre
>
[
\
]
def
<
/
pre
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
p
>
a
[
\
]
bc
<
/
p
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
p
>
a
<
span
>
b
[
\
]
<
/
span
>
c
<
/
p
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
p
>
abc
<
br
>
<
br
>
<
/
p
>
<
p
>
[
\
]
def
<
/
p
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
p
>
abc
<
br
>
<
/
p
>
<
p
>
[
\
]
def
<
/
p
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
p
>
a
<
span
>
b
<
/
span
>
[
\
]
c
<
/
p
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
div
>
abc
<
br
>
<
hr
>
[
\
]
def
<
/
div
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
div
>
abc
<
ul
>
<
li
>
[
\
]
def
<
/
li
>
<
/
ul
>
ghi
<
/
div
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
div
>
abc
<
ul
>
<
li
>
[
\
]
def
<
/
li
>
<
/
ul
>
ghi
<
/
div
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
div
>
abc
[
<
ul
>
<
li
>
\
]
def
<
/
li
>
<
/
ul
>
ghi
<
/
div
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
p
>
abc
[
<
/
p
>
<
p
>
}
<
br
>
<
/
p
>
"
]
expected
:
FAIL
[
Backspace
at
"
<
p
>
abc
<
span
contenteditable
=
\
"
false
\
"
>
def
<
/
span
>
[
\
]
ghi
<
/
p
>
"
]
expected
:
FAIL
