[
start
.
any
.
serviceworker
.
html
]
[
underlying
sink
'
s
write
or
close
should
not
be
called
if
start
throws
]
expected
:
FAIL
[
controller
.
error
(
)
during
start
should
cause
writes
to
fail
]
expected
:
FAIL
[
underlying
sink
'
s
write
or
close
should
not
be
invoked
if
the
promise
returned
by
start
is
rejected
]
expected
:
FAIL
[
controller
.
error
(
)
during
async
start
should
cause
existing
writes
to
fail
]
expected
:
FAIL
[
returning
a
thenable
from
start
(
)
should
work
]
expected
:
FAIL
[
underlying
sink
'
s
write
should
not
be
called
until
start
finishes
]
expected
:
FAIL
[
underlying
sink
'
s
close
should
not
be
called
until
start
finishes
]
expected
:
FAIL
[
when
start
(
)
rejects
writer
promises
should
reject
in
standard
order
]
expected
:
FAIL
[
start
.
any
.
sharedworker
.
html
]
[
underlying
sink
'
s
write
or
close
should
not
be
called
if
start
throws
]
expected
:
FAIL
[
controller
.
error
(
)
during
start
should
cause
writes
to
fail
]
expected
:
FAIL
[
underlying
sink
'
s
write
or
close
should
not
be
invoked
if
the
promise
returned
by
start
is
rejected
]
expected
:
FAIL
[
controller
.
error
(
)
during
async
start
should
cause
existing
writes
to
fail
]
expected
:
FAIL
[
returning
a
thenable
from
start
(
)
should
work
]
expected
:
FAIL
[
underlying
sink
'
s
write
should
not
be
called
until
start
finishes
]
expected
:
FAIL
[
underlying
sink
'
s
close
should
not
be
called
until
start
finishes
]
expected
:
FAIL
[
when
start
(
)
rejects
writer
promises
should
reject
in
standard
order
]
expected
:
FAIL
[
start
.
any
.
html
]
[
underlying
sink
'
s
write
or
close
should
not
be
called
if
start
throws
]
expected
:
FAIL
[
controller
.
error
(
)
during
start
should
cause
writes
to
fail
]
expected
:
FAIL
[
underlying
sink
'
s
write
or
close
should
not
be
invoked
if
the
promise
returned
by
start
is
rejected
]
expected
:
FAIL
[
controller
.
error
(
)
during
async
start
should
cause
existing
writes
to
fail
]
expected
:
FAIL
[
returning
a
thenable
from
start
(
)
should
work
]
expected
:
FAIL
[
underlying
sink
'
s
write
should
not
be
called
until
start
finishes
]
expected
:
FAIL
[
underlying
sink
'
s
close
should
not
be
called
until
start
finishes
]
expected
:
FAIL
[
when
start
(
)
rejects
writer
promises
should
reject
in
standard
order
]
expected
:
FAIL
[
start
.
any
.
worker
.
html
]
[
underlying
sink
'
s
write
or
close
should
not
be
called
if
start
throws
]
expected
:
FAIL
[
controller
.
error
(
)
during
start
should
cause
writes
to
fail
]
expected
:
FAIL
[
underlying
sink
'
s
write
or
close
should
not
be
invoked
if
the
promise
returned
by
start
is
rejected
]
expected
:
FAIL
[
controller
.
error
(
)
during
async
start
should
cause
existing
writes
to
fail
]
expected
:
FAIL
[
returning
a
thenable
from
start
(
)
should
work
]
expected
:
FAIL
[
underlying
sink
'
s
write
should
not
be
called
until
start
finishes
]
expected
:
FAIL
[
underlying
sink
'
s
close
should
not
be
called
until
start
finishes
]
expected
:
FAIL
[
when
start
(
)
rejects
writer
promises
should
reject
in
standard
order
]
expected
:
FAIL
