[
bad
-
buffers
-
and
-
views
.
any
.
serviceworker
.
html
]
[
ReadableStream
with
byte
source
:
read
(
)
ing
from
a
closed
stream
still
transfers
the
buffer
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
read
(
)
ing
from
a
stream
with
queued
chunks
still
transfers
the
buffer
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
an
already
-
detached
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
a
zero
-
length
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
a
zero
-
length
view
on
a
non
-
zero
-
length
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
an
already
-
detached
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
a
zero
-
length
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
a
zero
-
length
view
on
a
non
-
zero
-
length
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respond
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respond
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
is
zero
-
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
is
zero
-
length
on
a
non
-
zero
-
length
buffer
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
a
different
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
has
a
larger
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
is
zero
-
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
is
non
-
zero
-
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
a
different
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueue
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueue
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
bad
-
buffers
-
and
-
views
.
any
.
html
]
[
ReadableStream
with
byte
source
:
read
(
)
ing
from
a
closed
stream
still
transfers
the
buffer
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
read
(
)
ing
from
a
stream
with
queued
chunks
still
transfers
the
buffer
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
an
already
-
detached
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
a
zero
-
length
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
a
zero
-
length
view
on
a
non
-
zero
-
length
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
an
already
-
detached
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
a
zero
-
length
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
a
zero
-
length
view
on
a
non
-
zero
-
length
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respond
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respond
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
is
zero
-
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
is
zero
-
length
on
a
non
-
zero
-
length
buffer
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
a
different
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
has
a
larger
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
is
zero
-
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
is
non
-
zero
-
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
a
different
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueue
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueue
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
bad
-
buffers
-
and
-
views
.
any
.
worker
.
html
]
[
ReadableStream
with
byte
source
:
read
(
)
ing
from
a
closed
stream
still
transfers
the
buffer
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
read
(
)
ing
from
a
stream
with
queued
chunks
still
transfers
the
buffer
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
an
already
-
detached
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
a
zero
-
length
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
a
zero
-
length
view
on
a
non
-
zero
-
length
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
an
already
-
detached
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
a
zero
-
length
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
a
zero
-
length
view
on
a
non
-
zero
-
length
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respond
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respond
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
is
zero
-
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
is
zero
-
length
on
a
non
-
zero
-
length
buffer
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
a
different
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
has
a
larger
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
is
zero
-
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
is
non
-
zero
-
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
a
different
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueue
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueue
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
bad
-
buffers
-
and
-
views
.
any
.
sharedworker
.
html
]
[
ReadableStream
with
byte
source
:
read
(
)
ing
from
a
closed
stream
still
transfers
the
buffer
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
read
(
)
ing
from
a
stream
with
queued
chunks
still
transfers
the
buffer
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
an
already
-
detached
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
a
zero
-
length
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueuing
a
zero
-
length
view
on
a
non
-
zero
-
length
buffer
throws
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
an
already
-
detached
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
a
zero
-
length
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
reading
into
a
zero
-
length
view
on
a
non
-
zero
-
length
buffer
rejects
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respond
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respond
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
is
zero
-
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
is
zero
-
length
on
a
non
-
zero
-
length
buffer
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
a
different
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
has
a
larger
length
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
is
zero
-
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
is
non
-
zero
-
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
respondWithNewView
(
)
throws
if
the
supplied
view
'
s
buffer
has
a
different
length
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueue
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
readable
state
)
]
expected
:
if
not
domstreams
:
FAIL
[
ReadableStream
with
byte
source
:
enqueue
(
)
throws
if
the
BYOB
request
'
s
buffer
has
been
detached
(
in
the
closed
state
)
]
expected
:
if
not
domstreams
:
FAIL
