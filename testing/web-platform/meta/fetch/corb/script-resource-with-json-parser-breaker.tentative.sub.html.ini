[
script
-
resource
-
with
-
json
-
parser
-
breaker
.
tentative
.
sub
.
html
]
prefs
:
[
browser
.
opaqueResponseBlocking
:
true
]
expected
:
if
(
os
=
=
"
android
"
)
and
fission
:
[
OK
TIMEOUT
]
[
CORB
-
blocks
'
text
/
json
'
that
starts
with
the
following
JSON
parser
breaker
:
{
}
&
&
]
expected
:
FAIL
[
CORB
-
blocks
'
text
/
xml
'
that
starts
with
the
following
JSON
parser
breaker
:
{
}
&
&
]
expected
:
FAIL
[
CORB
-
blocks
'
text
/
html
'
that
starts
with
the
following
JSON
parser
breaker
:
)
\
]
}
'
]
expected
:
FAIL
[
CORB
-
blocks
'
text
/
json
'
that
starts
with
the
following
JSON
parser
breaker
:
{
}
&
&
]
expected
:
FAIL
[
CORB
-
blocks
'
application
/
javascript
'
that
starts
with
the
following
JSON
parser
breaker
:
)
\
]
}
'
]
expected
:
FAIL
[
CORB
-
blocks
'
text
/
html
'
that
starts
with
the
following
JSON
parser
breaker
:
{
}
&
&
]
expected
:
FAIL
[
CORB
-
blocks
'
text
/
xml
'
that
starts
with
the
following
JSON
parser
breaker
:
{
}
&
&
]
expected
:
FAIL
[
CORB
-
blocks
'
text
/
html
'
that
starts
with
the
following
JSON
parser
breaker
:
{
}
&
&
]
expected
:
FAIL
[
CORB
-
blocks
'
text
/
xml
'
that
starts
with
the
following
JSON
parser
breaker
:
)
\
]
}
'
]
expected
:
FAIL
[
CORB
-
blocks
'
text
/
plain
'
that
starts
with
the
following
JSON
parser
breaker
:
)
\
]
}
'
]
expected
:
FAIL
[
CORB
-
blocks
'
text
/
json
'
that
starts
with
the
following
JSON
parser
breaker
:
)
\
]
}
'
]
expected
:
FAIL
[
CORB
-
blocks
'
application
/
javascript
'
that
starts
with
the
following
JSON
parser
breaker
:
{
}
&
&
]
expected
:
FAIL
[
CORB
-
blocks
'
text
/
plain
'
that
starts
with
the
following
JSON
parser
breaker
:
{
}
&
&
]
expected
:
FAIL
[
CORB
-
blocks
'
text
/
plain
'
that
starts
with
the
following
JSON
parser
breaker
:
{
}
&
&
]
expected
:
FAIL
[
CORB
-
blocks
'
application
/
javascript
'
that
starts
with
the
following
JSON
parser
breaker
:
{
}
&
&
]
expected
:
FAIL
