[
lfedcm
-
identity
.
create
-
store
-
collect
.
tentative
.
sub
.
https
.
html
]
expected
:
[
ERROR
TIMEOUT
]
[
Collecting
from
no
providers
yields
a
promise
with
null
resolution
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Basic
same
-
origin
identity
credential
collect
suceeds
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Credentials
can
be
collected
silently
but
preventSilentAccess
is
respected
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Cross
-
origin
identity
credential
collection
is
correctly
filtered
when
the
type
does
not
match
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Basic
valid
credential
creation
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Basic
invalid
credential
creation
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Basic
identity
credential
store
suceeds
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Basic
same
-
origin
identity
credential
collect
with
effectiveQueryURL
suceeds
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Basic
same
-
origin
identity
credential
collect
with
origin
inferred
from
loginURL
succeeds
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Basic
same
-
origin
identity
credential
collect
with
effectiveQueryURL
and
no
ACAO
works
because
CORS
is
not
needed
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Cross
-
origin
identity
credential
collection
is
correctly
filtered
when
there
is
no
effective
argument
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Cross
-
origin
identity
credential
collection
is
correctly
filtered
when
the
effective
origin
is
not
the
relying
party
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Cross
-
origin
identity
credential
collection
is
correctly
returned
when
the
effective
origin
is
the
relying
party
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Cross
-
origin
identity
credential
collection
is
correctly
filtered
when
the
endpoint
doesn
'
t
have
CORS
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Cross
-
origin
identity
credential
collection
is
correctly
returned
when
the
endpoint
returns
success
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
[
Cross
-
origin
identity
credential
collection
is
correctly
returned
when
the
type
matches
]
expected
:
[
FAIL
NOTRUN
TIMEOUT
]
