[
idb
-
explicit
-
commit
.
any
.
worker
.
html
]
[
Ensure
that
calling
commit
on
a
committed
transaction
throws
.
]
expected
:
FAIL
[
Ensure
a
committed
transaction
is
blocked
immediately
.
]
expected
:
FAIL
[
Ensure
explicitly
committed
data
can
be
read
back
out
.
]
expected
:
FAIL
[
Ensure
a
committed
transaction
is
blocked
in
future
request
callbacks
.
]
expected
:
FAIL
[
Ensure
that
any
errors
in
callbacks
won
'
t
stop
an
explicit
commit
from
continuing
.
]
expected
:
FAIL
[
Ensure
that
calling
abort
on
a
committed
transaction
throws
and
data
is
still
committed
.
]
expected
:
FAIL
[
Ensure
that
puts
issued
after
commit
don
'
t
put
anything
.
]
expected
:
FAIL
[
Ensure
that
calling
commit
on
an
aborted
transaction
throws
.
]
expected
:
FAIL
[
Calling
txn
.
commit
(
)
when
txn
is
inActive
should
throw
.
]
expected
:
TIMEOUT
[
A
committed
transaction
is
blocked
in
future
request
callbacks
.
]
expected
:
FAIL
[
Calling
commit
on
a
committed
transaction
throws
.
]
expected
:
FAIL
[
Explicitly
committed
data
can
be
read
back
out
.
]
expected
:
FAIL
[
Calling
abort
on
a
committed
transaction
throws
and
data
is
still
committed
.
]
expected
:
FAIL
[
Puts
issued
after
commit
do
not
put
anything
.
]
expected
:
FAIL
[
Calling
commit
on
an
aborted
transaction
throws
.
]
expected
:
FAIL
[
Calling
txn
.
commit
(
)
when
txn
is
inactive
should
throw
.
]
expected
:
FAIL
[
A
committed
transaction
is
blocked
immediately
.
]
expected
:
FAIL
[
commit
(
)
on
a
version
change
transaction
does
not
cause
errors
.
]
expected
:
FAIL
[
Puts
issued
after
commit
are
not
fulfilled
.
]
expected
:
FAIL
[
Calling
abort
on
a
committed
transaction
throws
and
does
not
prevent
persisting
the
data
.
]
expected
:
FAIL
[
A
committed
transaction
becomes
inactive
immediately
.
]
expected
:
FAIL
[
A
committed
transaction
is
inactive
in
future
request
callbacks
.
]
expected
:
FAIL
[
idb
-
explicit
-
commit
.
any
.
html
]
[
Ensure
that
calling
commit
on
a
committed
transaction
throws
.
]
expected
:
FAIL
[
Ensure
a
committed
transaction
is
blocked
immediately
.
]
expected
:
FAIL
[
Ensure
explicitly
committed
data
can
be
read
back
out
.
]
expected
:
FAIL
[
Ensure
a
committed
transaction
is
blocked
in
future
request
callbacks
.
]
expected
:
FAIL
[
Ensure
that
any
errors
in
callbacks
won
'
t
stop
an
explicit
commit
from
continuing
.
]
expected
:
FAIL
[
Ensure
that
calling
abort
on
a
committed
transaction
throws
and
data
is
still
committed
.
]
expected
:
FAIL
[
Ensure
that
puts
issued
after
commit
don
'
t
put
anything
.
]
expected
:
FAIL
[
Ensure
that
calling
commit
on
an
aborted
transaction
throws
.
]
expected
:
FAIL
[
Calling
txn
.
commit
(
)
when
txn
is
inActive
should
throw
.
]
expected
:
TIMEOUT
[
A
committed
transaction
is
blocked
in
future
request
callbacks
.
]
expected
:
FAIL
[
Calling
commit
on
a
committed
transaction
throws
.
]
expected
:
FAIL
[
Explicitly
committed
data
can
be
read
back
out
.
]
expected
:
FAIL
[
Calling
abort
on
a
committed
transaction
throws
and
data
is
still
committed
.
]
expected
:
FAIL
[
Puts
issued
after
commit
do
not
put
anything
.
]
expected
:
FAIL
[
Calling
commit
on
an
aborted
transaction
throws
.
]
expected
:
FAIL
[
Calling
txn
.
commit
(
)
when
txn
is
inactive
should
throw
.
]
expected
:
FAIL
[
A
committed
transaction
is
blocked
immediately
.
]
expected
:
FAIL
[
commit
(
)
on
a
version
change
transaction
does
not
cause
errors
.
]
expected
:
FAIL
[
Puts
issued
after
commit
are
not
fulfilled
.
]
expected
:
FAIL
[
Calling
abort
on
a
committed
transaction
throws
and
does
not
prevent
persisting
the
data
.
]
expected
:
FAIL
[
A
committed
transaction
becomes
inactive
immediately
.
]
expected
:
FAIL
[
A
committed
transaction
is
inactive
in
future
request
callbacks
.
]
expected
:
FAIL
