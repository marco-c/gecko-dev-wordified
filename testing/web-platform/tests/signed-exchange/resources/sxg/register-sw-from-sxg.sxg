sxg1
-
b3
Rhttps
:
/
/
web
-
platform
.
test
:
8444
/
signed
-
exchange
/
resources
/
register
-
sw
-
from
-
sxg
.
html
label
;
sig
=
*
MEYCIQCgnf7CkvscStAfmSmp2CGBGV1DrPYmLM
+
ZNqjvswhOuQIhAOyvazED7Tv4EgBRHYqjnXDOul
+
XMGm9tE9YrebBYvWF
*
;
validity
-
url
=
"
https
:
/
/
web
-
platform
.
test
:
8444
/
resource
.
validity
.
msg
"
;
integrity
=
"
digest
/
mi
-
sha256
-
03
"
;
cert
-
url
=
"
https
:
/
/
web
-
platform
.
test
:
8444
/
signed
-
exchange
/
resources
/
127
.
0
.
0
.
1
.
sxg
.
pem
.
cbor
"
;
cert
-
sha256
=
*
pSU9uXfd5lWRlkZm
+
zehaLxXfWhBbIeJGPFAvM
+
9hFs
=
*
;
date
=
1522540800
;
expires
=
1523145600
FdigestX9mi
-
sha256
-
03
=
QLe
/
3ai1HaFolr1sV2DMwaB7zpAiVGbM1M5fdZC6aKg
=
G
:
statusC200Lcontent
-
typeX
text
/
html
;
charset
=
utf
-
8Pcontent
-
encodingLmi
-
sha256
-
03
d
<
!
DOCTYPE
html
>
<
script
src
=
"
sxg
-
util
.
js
"
>
<
/
script
>
<
script
>
window
.
addEventListener
(
'
message
'
asyn
nz
f
V
'
x
%
8
c
(
event
)
=
>
{
try
{
const
scope
=
'
.
/
scope
/
'
+
location
.
href
;
await
registerServiceWorker
}
w
-
7
]
+
Oh
*
AndWaitUntilActivated
(
'
.
/
service
-
worker
.
js
'
scope
)
const
iframe
=
await
withIframe
(
scoqv
U
0
p8
w
GRi
Q
s
&
6pe
'
inner_iframe
'
)
;
event
.
data
.
port
.
postMessage
(
{
location
:
document
.
location
.
href
+
vy
rK
9
x
PM
W
K
-
D8
is_fallback
:
false
err
:
undefined
iframe_body
:
iframe
.
contentWindow
.
document
.
6
)
o
D
VC7
body
.
innerHTML
}
)
;
}
catch
(
err
)
{
event
.
data
.
port
.
postMessage
(
{
location
:
document
.
locx
C
d
=
_
1
A
<
&
>
L
8ation
.
href
is_fallback
:
false
err
:
err
.
toString
(
)
}
)
;
}
}
false
)
;
<
/
script
>
+
Q
vZV
RQ
W
0
{
V
