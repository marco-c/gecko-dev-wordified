{
"
results
"
:
[
{
"
test
"
:
"
/
remote
-
playback
/
cancel
-
watch
-
availability
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
calling
cancelWatchAvailability
(
)
with
an
id
does
remove
the
callback
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Test
that
calling
cancelWatchAvailability
(
)
without
an
id
removes
all
the
callbacks
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
disable
-
remote
-
playback
-
cancel
-
watch
-
availability
-
throws
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
calling
cancelWatchAvailability
(
)
when
disableRemotePlayback
attribute
is
set
throws
an
exception
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
disable
-
remote
-
playback
-
prompt
-
throws
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
calling
prompt
(
)
when
disableRemotePlayback
attribute
is
set
throws
an
exception
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
disable
-
remote
-
playback
-
watch
-
availability
-
throws
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
calling
watchAvailability
(
)
when
disableRemotePlayback
attribute
is
set
throws
an
exception
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
idlharness
.
window
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
idl_test
setup
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
idl_test
validation
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Partial
interface
HTMLMediaElement
:
original
interface
defined
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Partial
interface
HTMLMediaElement
:
member
names
are
unique
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
HTMLElement
includes
GlobalEventHandlers
:
member
names
are
unique
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
HTMLElement
includes
DocumentAndElementEventHandlers
:
member
names
are
unique
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
HTMLElement
includes
ElementContentEditable
:
member
names
are
unique
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
HTMLElement
includes
HTMLOrSVGElement
:
member
names
are
unique
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Element
includes
ParentNode
:
member
names
are
unique
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Element
includes
NonDocumentTypeChildNode
:
member
names
are
unique
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Element
includes
ChildNode
:
member
names
are
unique
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Element
includes
Slottable
:
member
names
are
unique
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
existence
and
properties
of
interface
object
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
object
length
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
object
name
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
existence
and
properties
of
interface
prototype
object
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
existence
and
properties
of
interface
prototype
object
'
s
\
"
constructor
\
"
property
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
existence
and
properties
of
interface
prototype
object
'
s
unscopables
property
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
operation
watchAvailability
(
RemotePlaybackAvailabilityCallback
)
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
operation
cancelWatchAvailability
(
optional
long
)
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
attribute
state
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
attribute
onconnecting
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
attribute
onconnect
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
attribute
ondisconnect
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
operation
prompt
(
)
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
must
be
primary
interface
of
media
.
remote
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Stringification
of
media
.
remote
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
media
.
remote
must
inherit
property
\
"
watchAvailability
(
RemotePlaybackAvailabilityCallback
)
\
"
with
the
proper
type
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
calling
watchAvailability
(
RemotePlaybackAvailabilityCallback
)
on
media
.
remote
with
too
few
arguments
must
throw
TypeError
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
media
.
remote
must
inherit
property
\
"
cancelWatchAvailability
(
optional
long
)
\
"
with
the
proper
type
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
calling
cancelWatchAvailability
(
optional
long
)
on
media
.
remote
with
too
few
arguments
must
throw
TypeError
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
media
.
remote
must
inherit
property
\
"
state
\
"
with
the
proper
type
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
media
.
remote
must
inherit
property
\
"
onconnecting
\
"
with
the
proper
type
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
media
.
remote
must
inherit
property
\
"
onconnect
\
"
with
the
proper
type
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
media
.
remote
must
inherit
property
\
"
ondisconnect
\
"
with
the
proper
type
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
RemotePlayback
interface
:
media
.
remote
must
inherit
property
\
"
prompt
(
)
\
"
with
the
proper
type
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
HTMLMediaElement
interface
:
attribute
remote
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
HTMLMediaElement
interface
:
attribute
disableRemotePlayback
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
prompt
-
in
-
detached
-
iframe
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Calling
remote
.
prompt
(
)
in
a
detached
context
should
throw
InvalidAccessError
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
watch
-
availability
-
callback
-
parameter
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
the
callback
is
called
with
boolean
parameter
when
calling
watchAvailability
(
)
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
watch
-
availability
-
initial
-
callback
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
the
callback
is
called
once
watchAvailability
(
)
resolves
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
watch
-
availability
-
promise
-
return
-
callback
-
id
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
the
promise
returns
the
callback
id
when
calling
watchAvailability
(
)
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
event
-
handlers
-
manual
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
all
event
handlers
are
called
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Prompt
to
connect
device
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
prompt
-
and
-
cancel
-
selection
-
manual
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
promise
is
rejected
when
user
cancels
device
selection
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
prompt
-
and
-
select
-
device
-
manual
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
promise
is
resolved
when
user
selects
a
device
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Prompt
resolves
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
prompt
-
and
-
watch
-
availability
-
no
-
device
-
manual
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
watchAvailability
returned
false
when
there
is
no
device
for
the
user
to
select
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
prompt
-
and
-
watch
-
availability
-
with
-
device
-
manual
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
watchAvailability
returned
true
when
user
selects
device
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
remote
-
video
-
control
-
pausing
-
manual
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
if
video
is
playing
on
remote
device
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Prompt
resolves
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
remote
-
video
-
control
-
seek
-
manual
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
if
video
is
playing
on
remote
device
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Prompt
resolves
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
remote
-
video
-
playback
-
manual
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
if
video
is
playing
on
remote
device
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Prompt
resolves
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
state
-
attribute
-
changes
-
when
-
selecting
-
device
-
manual
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
the
remote
playback
state
changes
when
selecting
a
device
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Prompt
call
resolves
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
{
"
test
"
:
"
/
remote
-
playback
/
state
-
attribute
-
changes
-
with
-
event
-
handlers
-
manual
.
html
"
"
subtests
"
:
[
{
"
name
"
:
"
Test
that
remote
playback
state
changes
when
connecting
and
disconnecting
.
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Prompt
to
connect
device
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
{
"
name
"
:
"
Prompt
to
disconnect
device
"
"
status
"
:
"
PASS
"
"
message
"
:
null
}
]
"
status
"
:
"
OK
"
"
message
"
:
null
}
]
}
