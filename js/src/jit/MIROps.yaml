#
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
#
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
#
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
#
[
SMDOC
]
MIR
Opcodes
#
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
#
This
file
defines
all
MIR
opcodes
.
It
is
parsed
by
GenerateMIRFiles
.
py
#
at
build
time
to
create
MIROpsGenerated
.
h
.
Each
opcode
consists
of
a
#
name
and
a
set
of
attributes
that
are
described
below
.
A
few
of
the
#
attributes
below
allow
setting
the
value
to
"
custom
"
meaning
the
#
method
will
be
declared
for
the
MIR
op
but
will
need
to
be
implemented
#
in
C
+
+
(
typically
done
in
MIR
.
cpp
)
.
Unless
marked
as
required
attributes
#
are
optional
.
#
#
name
[
required
]
#
=
=
=
=
#
Opcode
name
.
#
Possible
values
:
#
-
opcode
string
:
used
as
the
name
for
MIR
opcode
.
#
#
gen_boilerplate
#
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
#
Used
to
decide
to
generate
MIR
boilerplate
.
#
-
true
(
default
)
:
auto
generate
boilerplate
for
this
MIR
opcode
#
-
false
:
do
not
generate
boilerplate
for
this
MIR
opcode
#
#
operands
#
=
=
=
=
=
=
=
=
#
A
list
of
operands
for
the
MIR
op
class
constructor
.
#
The
operand
kind
is
specified
from
the
one
of
the
kinds
from
#
the
MIRType
enum
in
IonTypes
.
h
.
The
specified
types
for
the
#
operands
will
decide
the
type
policy
for
the
instruction
.
#
#
The
naming
of
operands
is
how
the
NAMED_OPERANDS
macro
will
define
#
its
operands
.
#
#
For
example
:
#
object
:
Object
#
id
:
Value
#
value
:
Object
#
#
Will
result
in
an
instruction
having
the
type
policy
of
:
#
MixPolicy
<
ObjectPolicy
<
0
>
BoxPolicy
<
1
>
ObjectPolicy
<
2
>
>
#
and
a
named
operands
definition
that
looks
like
the
following
:
#
NAMED_OPERANDS
(
(
0
object
)
(
1
idValue
)
(
2
value
)
)
#
#
-
attribute
not
specified
(
default
)
:
no
code
generated
#
-
operand
list
:
MIRTypes
(
See
MIRType
in
jit
/
IonTypes
.
h
)
#
#
type_policy
#
=
=
=
=
=
=
=
=
=
=
=
=
#
If
this
attribute
is
present
then
the
type
policy
for
that
opcode
will
be
#
NoTypePolicy
.
This
is
used
for
opcode
that
should
have
no
type
policy
.
#
-
attribute
not
specified
(
default
)
:
no
code
generated
type
policy
#
is
based
off
of
operands
#
-
none
:
defines
the
type
policy
as
opcode
'
s
NoTypePolicy
#
#
result_type
#
=
=
=
=
=
=
=
=
=
=
=
#
Defines
the
result
type
of
the
MIR
opcode
.
#
-
attribute
not
specified
(
default
)
:
no
code
is
generated
#
-
MIRType
string
:
Will
add
a
call
to
setResultType
to
the
opcode
constructor
.
#
This
will
set
the
MIR
opcodes
result
type
to
whatever
the
#
specified
MIRType
is
(
See
MIRType
in
jit
/
IonTypes
.
h
)
.
#
#
guard
#
=
=
=
=
=
#
Set
if
the
opcode
is
a
guard
instruction
and
is
used
for
checks
in
optimizations
#
such
as
range
analysis
and
value
numbering
.
#
-
attribute
not
specified
(
default
)
:
no
code
generated
#
-
true
:
adds
setGuard
to
opcode
constructor
#
#
movable
#
=
=
=
=
=
=
=
#
Defines
the
movable
MIR
flag
for
movable
instructions
.
This
is
used
for
knowing
#
if
we
can
hoist
an
instruction
.
#
-
attribute
not
specified
(
default
)
:
no
code
generated
#
-
true
:
adds
setMovable
call
in
opcode
constructor
#
#
folds_to
#
=
=
=
=
=
=
=
=
#
The
foldsTo
method
is
used
for
determining
if
an
instruction
can
be
folded
into
#
simpler
instruction
or
for
constant
folding
depending
on
its
operands
.
#
-
no
attribute
present
(
default
)
:
no
code
generated
no
constants
to
fold
#
-
custom
:
custom
C
+
+
implementation
#
#
congruent_to
#
=
=
=
=
=
=
=
=
=
=
=
=
#
Used
by
ValueNumbering
to
determine
if
two
values
are
congruent
.
#
-
attribute
not
specified
(
default
)
:
no
code
generated
congruentTo
(
foo
)
returns
#
false
#
-
if_operands_equal
:
congruentTo
(
foo
)
will
return
congruentIfOperandsEqual
(
foo
)
#
-
custom
:
custom
C
+
+
implementation
#
#
alias_set
#
=
=
=
=
=
=
=
=
=
#
Defines
the
getAliasSet
function
for
a
MIR
op
.
The
alias
set
is
used
for
alias
#
analysis
.
The
default
alias
set
is
Any
.
#
-
attribute
not
specified
(
default
)
:
no
code
generated
alias
set
is
Any
#
-
none
:
this
is
the
most
common
case
this
is
will
set
the
alias
set
to
None
.
#
-
custom
:
custom
C
+
+
implementation
in
MIR
.
cpp
#
#
clone
#
=
=
=
=
=
#
Allows
cloning
for
that
MIR
op
.
#
-
attribute
not
specified
(
default
)
:
no
code
generated
#
-
true
:
allows
cloning
#
#
TODO
(
no
-
TI
)
:
try
to
remove
this
instruction
.
-
name
:
Start
#
Instruction
marking
on
entrypoint
for
on
-
stack
replacement
.
#
OSR
may
occur
at
loop
headers
(
at
JSOp
:
:
LoopHead
)
.
#
There
is
at
most
one
MOsrEntry
per
MIRGraph
.
-
name
:
OsrEntry
result_type
:
Pointer
-
name
:
Nop
alias_set
:
none
clone
:
true
-
name
:
LimitedTruncate
gen_boilerplate
:
false
-
name
:
Constant
gen_boilerplate
:
false
-
name
:
WasmNullConstant
gen_boilerplate
:
false
-
name
:
WasmFloatConstant
gen_boilerplate
:
false
-
name
:
Parameter
gen_boilerplate
:
false
-
name
:
Callee
gen_boilerplate
:
false
-
name
:
IsConstructing
result_type
:
Boolean
movable
:
true
congruent_to
:
if_operands_equal
alias_set
:
none
-
name
:
TableSwitch
gen_boilerplate
:
false
-
name
:
Goto
gen_boilerplate
:
false
-
name
:
Test
gen_boilerplate
:
false
-
name
:
Return
gen_boilerplate
:
false
-
name
:
Throw
gen_boilerplate
:
false
-
name
:
NewArray
gen_boilerplate
:
false
-
name
:
NewArrayDynamicLength
gen_boilerplate
:
false
-
name
:
NewTypedArray
gen_boilerplate
:
false
-
name
:
NewTypedArrayDynamicLength
gen_boilerplate
:
false
-
name
:
NewTypedArrayFromArray
gen_boilerplate
:
false
-
name
:
NewTypedArrayFromArrayBuffer
gen_boilerplate
:
false
-
name
:
NewObject
gen_boilerplate
:
false
-
name
:
NewPlainObject
gen_boilerplate
:
false
-
name
:
NewArrayObject
gen_boilerplate
:
false
-
name
:
NewIterator
gen_boilerplate
:
false
-
name
:
ObjectState
gen_boilerplate
:
false
-
name
:
ArrayState
gen_boilerplate
:
false
-
name
:
MutateProto
gen_boilerplate
:
false
-
name
:
InitPropGetterSetter
gen_boilerplate
:
false
-
name
:
InitElemGetterSetter
operands
:
object
:
Object
id
:
Value
value
:
Object
-
name
:
Call
gen_boilerplate
:
false
-
name
:
ApplyArgs
gen_boilerplate
:
false
-
name
:
ApplyArgsObj
gen_boilerplate
:
false
-
name
:
ApplyArray
gen_boilerplate
:
false
-
name
:
ConstructArray
gen_boilerplate
:
false
-
name
:
Bail
gen_boilerplate
:
false
-
name
:
Unreachable
gen_boilerplate
:
false
#
This
op
serves
as
a
way
to
force
the
encoding
of
a
snapshot
even
if
there
#
is
no
resume
point
using
it
.
This
is
useful
to
run
MAssertRecoveredOnBailout
#
assertions
.
-
name
:
EncodeSnapshot
guard
:
true
-
name
:
AssertRecoveredOnBailout
gen_boilerplate
:
false
-
name
:
AssertFloat32
gen_boilerplate
:
false
-
name
:
Compare
gen_boilerplate
:
false
-
name
:
SameValueDouble
operands
:
left
:
Double
right
:
Double
result_type
:
Boolean
movable
:
true
congruent_to
:
if_operands_equal
alias_set
:
none
clone
:
true
-
name
:
SameValue
operands
:
left
:
Value
right
:
Value
result_type
:
Boolean
movable
:
true
congruent_to
:
if_operands_equal
alias_set
:
none
clone
:
true
-
name
:
Box
gen_boilerplate
:
false
-
name
:
Unbox
gen_boilerplate
:
false
-
name
:
AssertRange
gen_boilerplate
:
false
-
name
:
AssertClass
gen_boilerplate
:
false
-
name
:
AssertShape
gen_boilerplate
:
false
-
name
:
CreateThisWithTemplate
gen_boilerplate
:
false
-
name
:
CreateThis
gen_boilerplate
:
false
-
name
:
CreateArgumentsObject
gen_boilerplate
:
false
-
name
:
CreateInlinedArgumentsObject
gen_boilerplate
:
false
-
name
:
GetInlinedArgument
gen_boilerplate
:
false
-
name
:
GetArgumentsObjectArg
gen_boilerplate
:
false
-
name
:
SetArgumentsObjectArg
gen_boilerplate
:
false
-
name
:
LoadArgumentsObjectArg
gen_boilerplate
:
false
-
name
:
ArgumentsObjectLength
gen_boilerplate
:
false
-
name
:
GuardArgumentsObjectFlags
gen_boilerplate
:
false
#
Given
a
MIRType
:
:
Value
A
and
a
MIRType
:
:
Object
B
:
#
If
the
Value
may
be
safely
unboxed
to
an
Object
return
Object
(
A
)
.
#
Otherwise
return
B
.
#
Used
to
implement
return
behavior
for
inlined
constructors
.
-
name
:
ReturnFromCtor
operands
:
value
:
Value
object
:
Object
result_type
:
Object
folds_to
:
custom
congruent_to
:
if_operands_equal
alias_set
:
none
-
name
:
ToDouble
gen_boilerplate
:
false
-
name
:
ToFloat32
gen_boilerplate
:
false
-
name
:
WasmUnsignedToDouble
gen_boilerplate
:
false
-
name
:
WasmUnsignedToFloat32
gen_boilerplate
:
false
-
name
:
WrapInt64ToInt32
gen_boilerplate
:
false
-
name
:
ExtendInt32ToInt64
gen_boilerplate
:
false
-
name
:
WasmBuiltinTruncateToInt64
gen_boilerplate
:
false
-
name
:
WasmTruncateToInt64
gen_boilerplate
:
false
-
name
:
WasmTruncateToInt32
gen_boilerplate
:
false
#
Store
a
JS
Value
that
can
'
t
be
represented
as
an
AnyRef
pointer
into
an
#
object
that
holds
the
value
(
opaquely
)
as
such
a
pointer
.
-
name
:
WasmBoxValue
operands
:
def
:
Value
type_policy
:
none
result_type
:
RefOrNull
congruent_to
:
if_operands_equal
alias_set
:
none
-
name
:
WasmAnyRefFromJSObject
operands
:
def
:
Object
type_policy
:
none
result_type
:
RefOrNull
congruent_to
:
if_operands_equal
alias_set
:
none
-
name
:
Int32ToIntPtr
gen_boilerplate
:
false
-
name
:
NonNegativeIntPtrToInt32
gen_boilerplate
:
false
-
name
:
IntPtrToDouble
gen_boilerplate
:
false
-
name
:
AdjustDataViewLength
gen_boilerplate
:
false
-
name
:
Int64ToFloatingPoint
gen_boilerplate
:
false
-
name
:
BuiltinInt64ToFloatingPoint
gen_boilerplate
:
false
-
name
:
ToNumberInt32
gen_boilerplate
:
false
-
name
:
ToIntegerInt32
gen_boilerplate
:
false
-
name
:
TruncateToInt32
gen_boilerplate
:
false
-
name
:
WasmBuiltinTruncateToInt32
gen_boilerplate
:
false
-
name
:
ToBigInt
gen_boilerplate
:
false
-
name
:
ToInt64
gen_boilerplate
:
false
-
name
:
TruncateBigIntToInt64
gen_boilerplate
:
false
-
name
:
Int64ToBigInt
gen_boilerplate
:
false
-
name
:
ToString
gen_boilerplate
:
false
-
name
:
BitNot
gen_boilerplate
:
false
-
name
:
TypeOf
gen_boilerplate
:
false
-
name
:
ToAsyncIter
operands
:
iterator
:
Object
nextMethod
:
Value
result_type
:
Object
-
name
:
ToPropertyKeyCache
operands
:
input
:
Value
result_type
:
Value
-
name
:
BitAnd
gen_boilerplate
:
false
-
name
:
BitOr
gen_boilerplate
:
false
-
name
:
BitXor
gen_boilerplate
:
false
-
name
:
Lsh
gen_boilerplate
:
false
-
name
:
Rsh
gen_boilerplate
:
false
-
name
:
Ursh
gen_boilerplate
:
false
-
name
:
SignExtendInt32
gen_boilerplate
:
false
-
name
:
SignExtendInt64
gen_boilerplate
:
false
-
name
:
MinMax
gen_boilerplate
:
false
-
name
:
MinMaxArray
gen_boilerplate
:
false
-
name
:
Abs
gen_boilerplate
:
false
-
name
:
Clz
gen_boilerplate
:
false
-
name
:
Ctz
gen_boilerplate
:
false
-
name
:
Popcnt
gen_boilerplate
:
false
-
name
:
Sqrt
gen_boilerplate
:
false
-
name
:
CopySign
gen_boilerplate
:
false
-
name
:
Atan2
gen_boilerplate
:
false
-
name
:
Hypot
gen_boilerplate
:
false
-
name
:
Pow
gen_boilerplate
:
false
-
name
:
PowHalf
gen_boilerplate
:
false
-
name
:
Random
gen_boilerplate
:
false
-
name
:
Sign
gen_boilerplate
:
false
-
name
:
MathFunction
gen_boilerplate
:
false
-
name
:
Add
gen_boilerplate
:
false
-
name
:
Sub
gen_boilerplate
:
false
-
name
:
Mul
gen_boilerplate
:
false
-
name
:
Div
gen_boilerplate
:
false
-
name
:
WasmBuiltinDivI64
gen_boilerplate
:
false
-
name
:
Mod
gen_boilerplate
:
false
-
name
:
WasmBuiltinModD
gen_boilerplate
:
false
-
name
:
WasmBuiltinModI64
gen_boilerplate
:
false
-
name
:
BigIntAdd
gen_boilerplate
:
false
-
name
:
BigIntSub
gen_boilerplate
:
false
-
name
:
BigIntMul
gen_boilerplate
:
false
-
name
:
BigIntDiv
gen_boilerplate
:
false
-
name
:
BigIntMod
gen_boilerplate
:
false
-
name
:
BigIntPow
gen_boilerplate
:
false
-
name
:
BigIntBitAnd
gen_boilerplate
:
false
-
name
:
BigIntBitOr
gen_boilerplate
:
false
-
name
:
BigIntBitXor
gen_boilerplate
:
false
-
name
:
BigIntLsh
gen_boilerplate
:
false
-
name
:
BigIntRsh
gen_boilerplate
:
false
-
name
:
BigIntIncrement
gen_boilerplate
:
false
-
name
:
BigIntDecrement
gen_boilerplate
:
false
-
name
:
BigIntNegate
gen_boilerplate
:
false
-
name
:
BigIntBitNot
gen_boilerplate
:
false
-
name
:
Concat
gen_boilerplate
:
false
-
name
:
CharCodeAt
gen_boilerplate
:
false
-
name
:
FromCharCode
gen_boilerplate
:
false
-
name
:
FromCodePoint
gen_boilerplate
:
false
-
name
:
StringConvertCase
gen_boilerplate
:
false
-
name
:
StringSplit
gen_boilerplate
:
false
-
name
:
BoxNonStrictThis
gen_boilerplate
:
false
-
name
:
ImplicitThis
gen_boilerplate
:
false
#
Load
an
arrow
function
'
s
|
new
.
target
|
value
.
-
name
:
ArrowNewTarget
operands
:
callee
:
Object
result_type
:
Value
movable
:
true
congruent_to
:
if_operands_equal
#
An
arrow
function
'
s
lexical
|
this
|
value
is
immutable
.
alias_set
:
none
-
name
:
Phi
gen_boilerplate
:
false
-
name
:
Beta
gen_boilerplate
:
false
-
name
:
NaNToZero
gen_boilerplate
:
false
-
name
:
OsrValue
gen_boilerplate
:
false
-
name
:
OsrEnvironmentChain
gen_boilerplate
:
false
-
name
:
OsrArgumentsObject
gen_boilerplate
:
false
-
name
:
OsrReturnValue
gen_boilerplate
:
false
-
name
:
BinaryCache
gen_boilerplate
:
false
-
name
:
UnaryCache
operands
:
input
:
Value
result_type
:
Value
#
Checks
whether
we
need
to
fire
the
interrupt
handler
.
-
name
:
CheckOverRecursed
guard
:
true
alias_set
:
none
-
name
:
InterruptCheck
gen_boilerplate
:
false
-
name
:
WasmInterruptCheck
gen_boilerplate
:
false
-
name
:
WasmTrap
gen_boilerplate
:
false
-
name
:
LexicalCheck
gen_boilerplate
:
false
-
name
:
ThrowRuntimeLexicalError
gen_boilerplate
:
false
-
name
:
ThrowMsg
gen_boilerplate
:
false
#
In
the
prologues
of
global
and
eval
scripts
check
for
redeclarations
and
#
initialize
bindings
.
-
name
:
GlobalDeclInstantiation
guard
:
true
-
name
:
RegExp
gen_boilerplate
:
false
-
name
:
RegExpMatcher
gen_boilerplate
:
false
-
name
:
RegExpSearcher
gen_boilerplate
:
false
-
name
:
RegExpTester
gen_boilerplate
:
false
-
name
:
RegExpPrototypeOptimizable
gen_boilerplate
:
false
-
name
:
RegExpInstanceOptimizable
gen_boilerplate
:
false
-
name
:
GetFirstDollarIndex
gen_boilerplate
:
false
-
name
:
StringReplace
gen_boilerplate
:
false
-
name
:
Substr
gen_boilerplate
:
false
-
name
:
ModuleMetadata
gen_boilerplate
:
false
-
name
:
DynamicImport
operands
:
specifier
:
Value
result_type
:
Object
-
name
:
Lambda
gen_boilerplate
:
false
-
name
:
LambdaArrow
gen_boilerplate
:
false
-
name
:
FunctionWithProto
gen_boilerplate
:
false
-
name
:
SetFunName
gen_boilerplate
:
false
#
Returns
obj
-
>
slots
.
-
name
:
Slots
operands
:
object
:
Object
result_type
:
Slots
movable
:
true
congruent_to
:
if_operands_equal
alias_set
:
custom
clone
:
true
-
name
:
Elements
gen_boilerplate
:
false
-
name
:
InitializedLength
gen_boilerplate
:
false
-
name
:
SetInitializedLength
gen_boilerplate
:
false
-
name
:
ArrayLength
gen_boilerplate
:
false
-
name
:
SetArrayLength
gen_boilerplate
:
false
-
name
:
FunctionLength
gen_boilerplate
:
false
-
name
:
FunctionName
gen_boilerplate
:
false
-
name
:
GetNextEntryForIterator
gen_boilerplate
:
false
#
Read
the
byte
length
of
an
array
buffer
as
IntPtr
.
-
name
:
ArrayBufferByteLength
operands
:
object
:
Object
result_type
:
IntPtr
movable
:
true
congruent_to
:
if_operands_equal
alias_set
:
custom
-
name
:
ArrayBufferViewLength
gen_boilerplate
:
false
-
name
:
ArrayBufferViewByteOffset
gen_boilerplate
:
false
#
Read
the
length
of
an
array
buffer
view
.
-
name
:
ArrayBufferViewElements
operands
:
object
:
Object
result_type
:
Elements
movable
:
true
congruent_to
:
if_operands_equal
alias_set
:
custom
clone
:
true
-
name
:
TypedArrayElementSize
gen_boilerplate
:
false
-
name
:
GuardHasAttachedArrayBuffer
gen_boilerplate
:
false
-
name
:
GuardNumberToIntPtrIndex
gen_boilerplate
:
false
-
name
:
KeepAliveObject
operands
:
object
:
Object
result_type
:
None
guard
:
true
-
name
:
Not
gen_boilerplate
:
false
-
name
:
BoundsCheck
gen_boilerplate
:
false
-
name
:
BoundsCheckLower
gen_boilerplate
:
false
-
name
:
SpectreMaskIndex
gen_boilerplate
:
false
-
name
:
LoadElement
gen_boilerplate
:
false
-
name
:
LoadElementAndUnbox
gen_boilerplate
:
false
-
name
:
LoadElementHole
gen_boilerplate
:
false
-
name
:
StoreElement
gen_boilerplate
:
false
-
name
:
StoreHoleValueElement
gen_boilerplate
:
false
-
name
:
StoreElementHole
gen_boilerplate
:
false
-
name
:
ArrayPopShift
gen_boilerplate
:
false
-
name
:
ArrayPush
gen_boilerplate
:
false
-
name
:
ArraySlice
gen_boilerplate
:
false
-
name
:
ArrayJoin
gen_boilerplate
:
false
-
name
:
LoadUnboxedScalar
gen_boilerplate
:
false
-
name
:
LoadDataViewElement
gen_boilerplate
:
false
-
name
:
LoadTypedArrayElementHole
gen_boilerplate
:
false
-
name
:
StoreUnboxedScalar
gen_boilerplate
:
false
-
name
:
StoreDataViewElement
gen_boilerplate
:
false
-
name
:
StoreTypedArrayElementHole
gen_boilerplate
:
false
-
name
:
EffectiveAddress
gen_boilerplate
:
false
-
name
:
ClampToUint8
gen_boilerplate
:
false
-
name
:
LoadFixedSlot
gen_boilerplate
:
false
-
name
:
LoadFixedSlotAndUnbox
gen_boilerplate
:
false
-
name
:
LoadDynamicSlotAndUnbox
gen_boilerplate
:
false
-
name
:
StoreFixedSlot
gen_boilerplate
:
false
-
name
:
GetPropertyCache
gen_boilerplate
:
false
-
name
:
HomeObjectSuperBase
operands
:
homeObject
:
Object
result_type
:
Object
#
May
throw
if
[
[
Prototype
]
]
is
null
guard
:
true
alias_set
:
custom
-
name
:
GetPropSuperCache
gen_boilerplate
:
false
-
name
:
BindNameCache
operands
:
envChain
:
Object
result_type
:
Object
-
name
:
CallBindVar
gen_boilerplate
:
false
-
name
:
GuardShape
gen_boilerplate
:
false
-
name
:
GuardProto
gen_boilerplate
:
false
-
name
:
GuardNullProto
gen_boilerplate
:
false
-
name
:
GuardIsNativeObject
gen_boilerplate
:
false
-
name
:
GuardIsProxy
gen_boilerplate
:
false
-
name
:
GuardIsNotProxy
gen_boilerplate
:
false
-
name
:
GuardIsNotDOMProxy
gen_boilerplate
:
false
-
name
:
ProxyGet
gen_boilerplate
:
false
-
name
:
ProxyGetByValue
gen_boilerplate
:
false
-
name
:
ProxyHasProp
gen_boilerplate
:
false
-
name
:
ProxySet
gen_boilerplate
:
false
-
name
:
ProxySetByValue
gen_boilerplate
:
false
-
name
:
CallSetArrayLength
gen_boilerplate
:
false
-
name
:
MegamorphicLoadSlot
gen_boilerplate
:
false
-
name
:
MegamorphicLoadSlotByValue
gen_boilerplate
:
false
-
name
:
MegamorphicStoreSlot
gen_boilerplate
:
false
-
name
:
MegamorphicHasProp
gen_boilerplate
:
false
-
name
:
GuardIsNotArrayBufferMaybeShared
gen_boilerplate
:
false
-
name
:
GuardIsTypedArray
gen_boilerplate
:
false
-
name
:
NurseryObject
gen_boilerplate
:
false
-
name
:
GuardValue
gen_boilerplate
:
false
-
name
:
GuardNullOrUndefined
operands
:
value
:
Value
result_type
:
Value
guard
:
true
movable
:
true
congruent_to
:
if_operands_equal
folds_to
:
custom
alias_set
:
none
-
name
:
GuardFunctionFlags
gen_boilerplate
:
false
-
name
:
GuardFunctionIsNonBuiltinCtor
gen_boilerplate
:
false
-
name
:
GuardFunctionKind
gen_boilerplate
:
false
-
name
:
GuardFunctionScript
gen_boilerplate
:
false
-
name
:
GuardObjectIdentity
gen_boilerplate
:
false
-
name
:
GuardSpecificFunction
gen_boilerplate
:
false
-
name
:
GuardSpecificAtom
gen_boilerplate
:
false
-
name
:
GuardSpecificSymbol
gen_boilerplate
:
false
-
name
:
GuardStringToIndex
gen_boilerplate
:
false
-
name
:
GuardStringToInt32
gen_boilerplate
:
false
-
name
:
GuardStringToDouble
gen_boilerplate
:
false
-
name
:
GuardNoDenseElements
gen_boilerplate
:
false
-
name
:
GuardTagNotEqual
gen_boilerplate
:
false
-
name
:
LoadDynamicSlot
gen_boilerplate
:
false
#
Inline
call
to
access
a
function
'
s
environment
(
scope
chain
)
.
-
name
:
FunctionEnvironment
operands
:
function
:
Object
result_type
:
Object
movable
:
true
folds_to
:
custom
#
A
function
'
s
environment
is
fixed
.
alias_set
:
none
-
name
:
NewLexicalEnvironmentObject
gen_boilerplate
:
false
-
name
:
NewClassBodyEnvironmentObject
gen_boilerplate
:
false
-
name
:
CopyLexicalEnvironmentObject
gen_boilerplate
:
false
-
name
:
HomeObject
operands
:
function
:
Object
result_type
:
Object
movable
:
true
#
A
function
'
s
[
[
HomeObject
]
]
is
fixed
.
alias_set
:
none
-
name
:
AddAndStoreSlot
gen_boilerplate
:
false
-
name
:
AllocateAndStoreSlot
gen_boilerplate
:
false
-
name
:
StoreDynamicSlot
gen_boilerplate
:
false
-
name
:
GetNameCache
operands
:
envObj
:
Object
result_type
:
Value
-
name
:
CallGetIntrinsicValue
gen_boilerplate
:
false
-
name
:
DeleteProperty
gen_boilerplate
:
false
-
name
:
DeleteElement
gen_boilerplate
:
false
-
name
:
SetPropertyCache
gen_boilerplate
:
false
-
name
:
CallSetElement
gen_boilerplate
:
false
-
name
:
SetDOMProperty
gen_boilerplate
:
false
-
name
:
GetDOMProperty
gen_boilerplate
:
false
-
name
:
GetDOMMember
gen_boilerplate
:
false
-
name
:
LoadDOMExpandoValue
gen_boilerplate
:
false
-
name
:
LoadDOMExpandoValueGuardGeneration
gen_boilerplate
:
false
-
name
:
LoadDOMExpandoValueIgnoreGeneration
gen_boilerplate
:
false
-
name
:
GuardDOMExpandoMissingOrGuardShape
gen_boilerplate
:
false
-
name
:
StringLength
gen_boilerplate
:
false
-
name
:
Floor
gen_boilerplate
:
false
-
name
:
Ceil
gen_boilerplate
:
false
-
name
:
Round
gen_boilerplate
:
false
-
name
:
Trunc
gen_boilerplate
:
false
-
name
:
NearbyInt
gen_boilerplate
:
false
-
name
:
GetIteratorCache
gen_boilerplate
:
false
-
name
:
OptimizeSpreadCallCache
operands
:
value
:
Value
result_type
:
Boolean
-
name
:
IteratorMore
operands
:
iterator
:
Object
result_type
:
Value
-
name
:
IsNoIter
operands
:
def
:
Object
result_type
:
Boolean
type_policy
:
none
movable
:
true
alias_set
:
none
-
name
:
IteratorEnd
operands
:
iterator
:
Object
-
name
:
InCache
gen_boilerplate
:
false
-
name
:
InArray
gen_boilerplate
:
false
-
name
:
GuardElementNotHole
gen_boilerplate
:
false
-
name
:
CheckPrivateFieldCache
gen_boilerplate
:
false
-
name
:
HasOwnCache
gen_boilerplate
:
false
-
name
:
InstanceOf
gen_boilerplate
:
false
#
Implementation
for
instanceof
operator
with
unknown
rhs
.
-
name
:
InstanceOfCache
operands
:
obj
:
Value
proto
:
Object
result_type
:
Boolean
-
name
:
ArgumentsLength
gen_boilerplate
:
false
#
This
MIR
instruction
is
used
to
get
an
argument
from
the
actual
arguments
.
-
name
:
GetFrameArgument
operands
:
index
:
Int32
result_type
:
Value
movable
:
true
congruent_to
:
if_operands_equal
#
This
instruction
is
never
aliased
because
ops
like
JSOp
:
:
SetArg
don
'
t
#
write
to
the
argument
frames
.
We
create
an
arguments
object
in
that
case
.
alias_set
:
none
-
name
:
NewTarget
gen_boilerplate
:
false
-
name
:
Rest
gen_boilerplate
:
false
-
name
:
PostWriteBarrier
gen_boilerplate
:
false
-
name
:
PostWriteElementBarrier
gen_boilerplate
:
false
-
name
:
NewNamedLambdaObject
gen_boilerplate
:
false
-
name
:
NewCallObject
gen_boilerplate
:
false
-
name
:
NewStringObject
gen_boilerplate
:
false
-
name
:
IsCallable
gen_boilerplate
:
false
-
name
:
IsConstructor
gen_boilerplate
:
false
-
name
:
IsCrossRealmArrayConstructor
gen_boilerplate
:
false
-
name
:
IsObject
operands
:
object
:
Value
result_type
:
Boolean
movable
:
true
folds_to
:
custom
congruent_to
:
if_operands_equal
alias_set
:
none
-
name
:
IsNullOrUndefined
operands
:
value
:
Value
result_type
:
Boolean
movable
:
true
folds_to
:
custom
congruent_to
:
if_operands_equal
alias_set
:
none
-
name
:
HasClass
gen_boilerplate
:
false
-
name
:
GuardToClass
gen_boilerplate
:
false
-
name
:
IsArray
gen_boilerplate
:
false
-
name
:
IsTypedArray
gen_boilerplate
:
false
-
name
:
ObjectClassToString
gen_boilerplate
:
false
-
name
:
CheckReturn
operands
:
returnValue
:
Value
thisValue
:
Value
result_type
:
Value
guard
:
true
alias_set
:
none
-
name
:
CheckThis
operands
:
thisValue
:
Value
result_type
:
Value
guard
:
true
folds_to
:
custom
alias_set
:
none
-
name
:
AsyncResolve
gen_boilerplate
:
false
#
Returns
from
this
function
to
the
previous
caller
;
this
looks
like
a
regular
#
Unary
instruction
and
is
used
to
lie
to
the
MIR
generator
about
suspending
#
ops
like
Yield
/
Await
which
are
emitted
like
returns
but
MIR
-
Build
like
#
regular
instructions
.
-
name
:
GeneratorReturn
operands
:
input
:
Value
guard
:
true
alias_set
:
none
-
name
:
AsyncAwait
operands
:
value
:
Value
generator
:
Object
result_type
:
Object
-
name
:
CheckThisReinit
operands
:
thisValue
:
Value
result_type
:
Value
guard
:
true
folds_to
:
custom
alias_set
:
none
-
name
:
Generator
gen_boilerplate
:
false
-
name
:
CanSkipAwait
operands
:
value
:
Value
result_type
:
Boolean
-
name
:
MaybeExtractAwaitValue
gen_boilerplate
:
false
-
name
:
IncrementWarmUpCounter
gen_boilerplate
:
false
-
name
:
AtomicIsLockFree
gen_boilerplate
:
false
-
name
:
CompareExchangeTypedArrayElement
gen_boilerplate
:
false
-
name
:
AtomicExchangeTypedArrayElement
gen_boilerplate
:
false
-
name
:
AtomicTypedArrayElementBinop
gen_boilerplate
:
false
-
name
:
Debugger
gen_boilerplate
:
false
-
name
:
CheckIsObj
gen_boilerplate
:
false
-
name
:
CheckObjCoercible
operands
:
checkValue
:
Value
result_type
:
Value
guard
:
true
folds_to
:
custom
#
Throws
on
null
or
undefined
.
alias_set
:
custom
-
name
:
CheckClassHeritage
operands
:
heritage
:
Value
result_type
:
Value
guard
:
true
-
name
:
DebugCheckSelfHosted
operands
:
checkValue
:
Value
result_type
:
Value
guard
:
true
-
name
:
FinishBoundFunctionInit
operands
:
bound
:
Object
target
:
Object
argCount
:
Int32
-
name
:
IsPackedArray
operands
:
object
:
Object
result_type
:
Boolean
movable
:
true
alias_set
:
custom
-
name
:
GuardArrayIsPacked
operands
:
array
:
Object
result_type
:
Object
guard
:
true
movable
:
true
congruent_to
:
if_operands_equal
alias_set
:
custom
-
name
:
GetPrototypeOf
operands
:
target
:
Object
result_type
:
Value
#
May
throw
if
target
is
a
proxy
.
guard
:
true
-
name
:
ObjectWithProto
gen_boilerplate
:
false
-
name
:
ObjectStaticProto
gen_boilerplate
:
false
-
name
:
BuiltinObject
gen_boilerplate
:
false
-
name
:
SuperFunction
operands
:
callee
:
Object
result_type
:
Value
alias_set
:
custom
-
name
:
InitHomeObject
operands
:
function
:
Object
homeObject
:
Value
result_type
:
Object
alias_set
:
custom
-
name
:
IsTypedArrayConstructor
gen_boilerplate
:
false
-
name
:
LoadValueTag
gen_boilerplate
:
false
-
name
:
LoadWrapperTarget
gen_boilerplate
:
false
-
name
:
GuardHasGetterSetter
gen_boilerplate
:
false
-
name
:
GuardIsExtensible
gen_boilerplate
:
false
-
name
:
GuardInt32IsNonNegative
gen_boilerplate
:
false
-
name
:
GuardIndexGreaterThanDenseInitLength
gen_boilerplate
:
false
-
name
:
GuardIndexIsValidUpdateOrAdd
gen_boilerplate
:
false
-
name
:
CallAddOrUpdateSparseElement
gen_boilerplate
:
false
-
name
:
CallGetSparseElement
gen_boilerplate
:
false
-
name
:
CallNativeGetElement
gen_boilerplate
:
false
-
name
:
CallObjectHasSparseElement
gen_boilerplate
:
false
-
name
:
BigIntAsIntN
gen_boilerplate
:
false
-
name
:
BigIntAsUintN
gen_boilerplate
:
false
-
name
:
WasmNeg
gen_boilerplate
:
false
-
name
:
WasmLoadTls
gen_boilerplate
:
false
-
name
:
WasmHeapBase
gen_boilerplate
:
false
-
name
:
WasmBoundsCheck
gen_boilerplate
:
false
-
name
:
WasmExtendU32Index
operands
:
input
:
Int32
result_type
:
Int64
type_policy
:
none
alias_set
:
none
-
name
:
WasmWrapU32Index
operands
:
input
:
Int64
result_type
:
Int32
type_policy
:
none
alias_set
:
none
-
name
:
WasmAddOffset
gen_boilerplate
:
false
-
name
:
WasmAlignmentCheck
gen_boilerplate
:
false
-
name
:
WasmLoad
gen_boilerplate
:
false
-
name
:
WasmStore
gen_boilerplate
:
false
-
name
:
AsmJSLoadHeap
gen_boilerplate
:
false
-
name
:
AsmJSStoreHeap
gen_boilerplate
:
false
-
name
:
WasmFence
guard
:
true
alias_set
:
none
clone
:
true
-
name
:
WasmCompareExchangeHeap
gen_boilerplate
:
false
-
name
:
WasmAtomicExchangeHeap
gen_boilerplate
:
false
-
name
:
WasmAtomicBinopHeap
gen_boilerplate
:
false
-
name
:
WasmLoadGlobalVar
gen_boilerplate
:
false
-
name
:
WasmLoadGlobalCell
gen_boilerplate
:
false
-
name
:
WasmStoreGlobalVar
gen_boilerplate
:
false
-
name
:
WasmStoreGlobalCell
gen_boilerplate
:
false
-
name
:
WasmStoreStackResult
gen_boilerplate
:
false
-
name
:
WasmDerivedPointer
gen_boilerplate
:
false
-
name
:
WasmStoreRef
gen_boilerplate
:
false
-
name
:
WasmParameter
gen_boilerplate
:
false
-
name
:
WasmReturn
gen_boilerplate
:
false
-
name
:
WasmReturnVoid
gen_boilerplate
:
false
-
name
:
WasmStackArg
gen_boilerplate
:
false
-
name
:
WasmRegisterResult
gen_boilerplate
:
false
-
name
:
WasmFloatRegisterResult
gen_boilerplate
:
false
-
name
:
WasmRegister64Result
gen_boilerplate
:
false
-
name
:
WasmStackResultArea
gen_boilerplate
:
false
-
name
:
WasmStackResult
gen_boilerplate
:
false
-
name
:
WasmCall
gen_boilerplate
:
false
-
name
:
WasmSelect
gen_boilerplate
:
false
-
name
:
WasmReinterpret
gen_boilerplate
:
false
-
name
:
Rotate
gen_boilerplate
:
false
#
Wasm
SIMD
.
#
#
See
comment
in
WasmIonCompile
.
cpp
for
a
justification
for
these
nodes
.
#
(
v128
v128
v128
)
-
>
v128
effect
-
free
operation
.
-
name
:
WasmBitselectSimd128
operands
:
lhs
:
Simd128
rhs
:
Simd128
control
:
Simd128
type_policy
:
none
result_type
:
Simd128
movable
:
true
congruent_to
:
if_operands_equal
alias_set
:
none
clone
:
true
-
name
:
WasmBinarySimd128
gen_boilerplate
:
false
-
name
:
WasmBinarySimd128WithConstant
gen_boilerplate
:
false
-
name
:
WasmShiftSimd128
gen_boilerplate
:
false
-
name
:
WasmShuffleSimd128
gen_boilerplate
:
false
-
name
:
WasmReplaceLaneSimd128
gen_boilerplate
:
false
-
name
:
WasmUnarySimd128
gen_boilerplate
:
false
-
name
:
WasmScalarToSimd128
gen_boilerplate
:
false
-
name
:
WasmReduceSimd128
gen_boilerplate
:
false
-
name
:
WasmLoadLaneSimd128
gen_boilerplate
:
false
-
name
:
WasmStoreLaneSimd128
gen_boilerplate
:
false
-
name
:
UnreachableResult
gen_boilerplate
:
false
-
name
:
IonToWasmCall
gen_boilerplate
:
false
