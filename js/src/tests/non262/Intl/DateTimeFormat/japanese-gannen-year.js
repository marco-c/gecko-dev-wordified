/
/
|
reftest
|
skip
-
if
(
!
this
.
hasOwnProperty
(
"
Intl
"
)
)
var
dtf
=
new
Intl
.
DateTimeFormat
(
"
ja
-
u
-
ca
-
japanese
"
{
era
:
"
short
"
timeZone
:
"
Asia
/
Tokyo
"
}
)
;
var
endShowa
=
new
Date
(
"
1989
-
01
-
07T00
:
00
:
00
.
000Z
"
)
;
var
startHeisei
=
new
Date
(
"
1989
-
01
-
08T00
:
00
:
00
.
000Z
"
)
;
assertEq
(
dtf
.
format
(
endShowa
)
"
64
/
1
/
7
"
)
;
assertEq
(
dtf
.
format
(
startHeisei
)
"
1
/
1
/
8
"
)
;
var
parts
=
dtf
.
formatToParts
(
startHeisei
)
;
assertEq
(
parts
.
filter
(
p
=
>
p
.
type
=
=
=
"
era
"
)
[
0
]
.
value
"
"
)
;
assertEq
(
parts
.
filter
(
p
=
>
p
.
type
=
=
=
"
year
"
)
[
0
]
.
value
"
1
"
)
;
var
dtf
=
new
Intl
.
DateTimeFormat
(
"
ja
-
u
-
ca
-
japanese
"
{
era
:
"
short
"
year
:
"
numeric
"
month
:
"
long
"
day
:
"
numeric
"
timeZone
:
"
Asia
/
Tokyo
"
}
)
;
assertEq
(
dtf
.
format
(
endShowa
)
"
64
1
7
"
)
;
assertEq
(
dtf
.
format
(
startHeisei
)
"
1
8
"
)
;
var
parts
=
dtf
.
formatToParts
(
startHeisei
)
;
assertEq
(
parts
.
filter
(
p
=
>
p
.
type
=
=
=
"
era
"
)
[
0
]
.
value
"
"
)
;
assertEq
(
parts
.
filter
(
p
=
>
p
.
type
=
=
=
"
year
"
)
[
0
]
.
value
"
"
)
;
/
/
ICU
returns
mixed
numbers
when
an
explicit
numbering
system
is
present
.
var
dtf
=
new
Intl
.
DateTimeFormat
(
"
ja
-
u
-
ca
-
japanese
-
nu
-
arab
"
{
era
:
"
short
"
timeZone
:
"
Asia
/
Tokyo
"
}
)
;
assertEq
(
dtf
.
format
(
endShowa
)
"
/
/
"
)
;
assertEq
(
dtf
.
format
(
startHeisei
)
"
/
/
"
)
;
var
dtf
=
new
Intl
.
DateTimeFormat
(
"
ja
-
u
-
ca
-
japanese
-
nu
-
arab
"
{
era
:
"
short
"
year
:
"
numeric
"
month
:
"
numeric
"
timeZone
:
"
Asia
/
Tokyo
"
}
)
;
assertEq
(
dtf
.
format
(
endShowa
)
"
64
"
)
;
assertEq
(
dtf
.
format
(
startHeisei
)
"
"
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
0
0
)
;
