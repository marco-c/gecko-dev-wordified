/
/
|
reftest
|
skip
-
if
(
!
Intl
.
Segmenter
)
-
-
Intl
.
Segmenter
is
not
enabled
unconditionally
/
/
Copyright
2020
the
V8
project
authors
.
All
rights
reserved
.
/
/
This
code
is
governed
by
the
BSD
license
found
in
the
LICENSE
file
.
/
*
-
-
-
esid
:
sec
-
%
segmentsprototype
%
.
containing
description
:
Verifies
the
isWordLike
in
the
result
when
granularity
is
"
word
"
.
info
:
|
%
Segments
.
prototype
%
.
containing
(
index
)
10
.
Return
!
CreateSegmentDataObject
(
segmenter
string
startIndex
endIndex
)
.
CreateSegmentDataObject
(
segmenter
string
startIndex
endIndex
)
11
.
If
granularity
is
"
word
"
then
a
.
Let
isWordLike
be
a
Boolean
value
indicating
whether
the
segment
in
string
is
"
word
-
like
"
according
to
locale
segmenter
.
[
[
Locale
]
]
.
b
.
Perform
!
CreateDataPropertyOrThrow
(
result
"
isWordLike
"
isWordLike
)
.
includes
:
[
compareArray
.
js
]
features
:
[
Intl
.
Segmenter
]
-
-
-
*
/
/
/
Some
text
const
inputs
=
[
"
Hello
world
!
"
/
/
English
"
Jedovatou
mambu
objevila
ena
v
zahr
dk
sk
kolonii
.
"
/
/
Czech
"
Vi
t
Nam
:
Nh
t
th
h
a
s
kh
c
Trung
Qu
c
?
"
/
/
Vietnamese
"
"
/
/
Greek
"
-
400
"
/
/
Russian
"
"
/
/
Hebrew
"
:
.
.
"
/
/
Arabic
"
400
"
/
/
Hindi
"
;
!
"
/
/
Tamil
"
'
'
"
/
/
Telugu
"
P
pupu
"
/
/
Chinese
"
"
/
/
Thai
"
(
2018
10
06
)
-
tenki
.
jp
"
/
/
Japanese
"
MB
"
/
/
Korean
]
;
const
granularity
=
"
word
"
;
const
segmenter
=
new
Intl
.
Segmenter
(
undefined
{
granularity
}
)
;
inputs
.
forEach
(
function
(
input
)
{
const
segment
=
segmenter
.
segment
(
input
)
;
for
(
let
index
=
0
;
index
<
input
.
length
;
index
+
+
)
{
const
result
=
segment
.
containing
(
index
)
;
const
msg
=
"
granularity
:
"
+
granularity
+
"
input
:
"
+
input
+
"
containing
(
"
+
index
+
"
)
"
;
assert
.
sameValue
(
true
result
.
index
>
=
0
msg
+
"
index
>
=
0
"
)
;
assert
.
sameValue
(
true
result
.
index
<
input
.
length
msg
+
"
index
<
"
+
input
.
length
)
;
assert
.
sameValue
(
"
string
"
typeof
result
.
input
msg
+
"
input
"
)
;
assert
.
sameValue
(
"
boolean
"
typeof
result
.
isWordLike
msg
+
"
isWordLike
should
be
boolean
"
)
;
assert
.
compareArray
(
Object
.
getOwnPropertyNames
(
result
)
[
"
segment
"
"
index
"
"
input
"
"
isWordLike
"
]
)
;
}
}
)
;
reportCompare
(
0
0
)
;
