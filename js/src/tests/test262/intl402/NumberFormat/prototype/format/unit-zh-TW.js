/
/
|
reftest
|
skip
-
if
(
release_or_beta
)
-
-
Intl
.
NumberFormat
-
unified
is
not
released
yet
/
/
Copyright
2019
Igalia
S
.
L
.
All
rights
reserved
.
/
/
This
code
is
governed
by
the
BSD
license
found
in
the
LICENSE
file
.
/
*
-
-
-
esid
:
sec
-
intl
.
numberformat
.
prototype
.
format
description
:
Checks
handling
of
the
unit
style
.
locale
:
[
zh
-
TW
]
features
:
[
Intl
.
NumberFormat
-
unified
]
-
-
-
*
/
const
tests
=
[
[
-
987
{
"
short
"
:
"
-
987
"
"
narrow
"
:
"
-
987
"
"
long
"
:
"
-
987
"
}
]
[
-
0
.
001
{
"
short
"
:
"
-
0
.
001
"
"
narrow
"
:
"
-
0
.
001
"
"
long
"
:
"
-
0
.
001
"
}
]
[
-
0
{
"
short
"
:
"
-
0
"
"
narrow
"
:
"
-
0
"
"
long
"
:
"
-
0
"
}
]
[
0
{
"
short
"
:
"
0
"
"
narrow
"
:
"
0
"
"
long
"
:
"
0
"
}
]
[
0
.
001
{
"
short
"
:
"
0
.
001
"
"
narrow
"
:
"
0
.
001
"
"
long
"
:
"
0
.
001
"
}
]
[
987
{
"
short
"
:
"
987
"
"
narrow
"
:
"
987
"
"
long
"
:
"
987
"
}
]
]
;
for
(
const
[
number
expectedData
]
of
tests
)
{
for
(
const
[
unitDisplay
expected
]
of
Object
.
entries
(
expectedData
)
)
{
const
nf
=
new
Intl
.
NumberFormat
(
"
zh
-
TW
"
{
style
:
"
unit
"
unit
:
"
meter
"
unitDisplay
}
)
;
assert
.
sameValue
(
nf
.
format
(
number
)
expected
)
;
}
}
reportCompare
(
0
0
)
;
