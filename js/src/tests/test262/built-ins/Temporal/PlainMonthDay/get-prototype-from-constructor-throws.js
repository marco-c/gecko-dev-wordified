/
/
|
reftest
|
shell
-
option
(
-
-
enable
-
temporal
)
skip
-
if
(
!
this
.
hasOwnProperty
(
'
Temporal
'
)
|
|
!
xulRuntime
.
shell
)
-
-
Temporal
is
not
enabled
unconditionally
requires
shell
-
options
/
/
Copyright
(
C
)
2024
Andr
Bargull
.
All
rights
reserved
.
/
/
This
code
is
governed
by
the
BSD
license
found
in
the
LICENSE
file
.
/
*
-
-
-
esid
:
sec
-
temporal
.
plainmonthday
description
:
>
OrdinaryCreateFromConstructor
returns
with
an
abrupt
completion
.
info
:
|
CreateTemporalMonthDay
(
isoDate
calendar
[
newTarget
]
)
.
.
.
3
.
Let
object
be
?
OrdinaryCreateFromConstructor
(
newTarget
"
%
Temporal
.
PlainMonthDay
.
prototype
%
"
[
[
InitializedTemporalMonthDay
]
]
[
[
ISODate
]
]
[
[
Calendar
]
]
)
.
.
.
.
OrdinaryCreateFromConstructor
(
constructor
intrinsicDefaultProto
[
internalSlotsList
]
)
.
.
.
2
.
Let
proto
be
?
GetPrototypeFromConstructor
(
constructor
intrinsicDefaultProto
)
.
.
.
.
GetPrototypeFromConstructor
(
constructor
intrinsicDefaultProto
)
.
.
.
2
.
Let
proto
be
?
Get
(
constructor
"
prototype
"
)
.
.
.
.
features
:
[
Temporal
]
-
-
-
*
/
var
newTarget
=
Object
.
defineProperty
(
function
(
)
{
}
.
bind
(
)
"
prototype
"
{
get
(
)
{
throw
new
Test262Error
(
)
;
}
}
)
;
assert
.
throws
(
Test262Error
function
(
)
{
Reflect
.
construct
(
Temporal
.
PlainMonthDay
[
1
1
]
newTarget
)
}
)
;
reportCompare
(
0
0
)
;
