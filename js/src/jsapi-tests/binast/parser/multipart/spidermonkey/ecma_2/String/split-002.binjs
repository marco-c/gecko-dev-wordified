BINJS
[
GRAMMAR
]
identity
;
V
(
IdentifierExpression
&
ExpressionStatement
BinaryExpression0LiteralNumericExpression
CallExpression
StaticMemberExpression
.
LiteralStringExpression
"
BindingIdentifier
(
AssignmentExpression4AssignmentTargetIdentifier
(
AssertedDeclaredName
IfStatement
AssertedBlockScope
Block
VariableDeclarator
&
VariableDeclaration
ReturnStatement
NewExpression
>
AssertedPositionalParameterName0LiteralBooleanExpression
<
ComputedMemberAssignmentTarget0ComputedMemberExpression0FunctionOrMethodContents0EagerFunctionDeclaration
AssertedParameterScope
FormalParameters
AssertedVarScope
&
LiteralPropertyName
UpdateExpression
ForStatement
DataProperty
UnaryExpression
*
ConditionalExpression
WhileStatement
ObjectExpression
BreakStatement8CompoundAssignmentExpression
"
LabelledStatement
Script8StaticMemberAssignmentTarget2AssertedScriptGlobalScope
"
ContinueStatement
[
STRINGS
]
identity
;
var
+
length
A
separator
hello
*
CompareSplitWithLimit
n
i
q
S
split_item
=
=
CompareSplit
string
Number
limit
split_1
split_2
R
Math
reResult
p
l
z
<
-
splitlimit
s
cap
pow
r
!
=
undefined
lim
split
AddTestCase
+
+
string_split
.
split
(
SplitMatch
T
>
endIndex
Array
__this
captures
sign
e
a
String
abs
ToUint32
VERSION
constructor
)
[
slice
SECTION
RegExp
]
|
|
)
)
.
length
charAt
(
TITLE
loop
prototype
+
=
%
ECMA_2
x
startTest
void
hellothere
toString
floor
*
h
match
test
ll
NaNTString
.
prototype
.
split
(
regexp
[
limit
]
)
4ecma_2
/
String
/
split
-
002
.
js
o
index
"
POSITIVE_INFINITY
boo
[
TREE
]
identity
;
S
"
NR
r
P
h
j
L
H
r
j
.
B
d
P
F
d
F
&
:
vC
?
&
:
vC
?
?
&
:
vC
?
&
:
vC
?
&
:
vC
?
Y
&
:
vC
?
&
:
vC
?
4
(
<
?
&
:
vC
?
&
:
vC
?
4
4
(
<
?
.
.
.
?
.
.
.
0
.
2
&
&
4
6
"
F
L
H
N
|
"
B
T
"
"
<
2
:
J
H
N
n
x
"
0
.
2
&
&
&
6
4
6
6
"
F
6
L
6
H
N
v
6
|
"
B
T
"
"
<
2
:
J
H
N
v
6
n
x
"
0
L
.
2
&
Z
&
&
4
Z
6
8
d
Z
X
B
D
4
(
<
?
?
D
h
8
B
*
"
l
t
&
&
D
"
B
*
"
8
0
P
&
0
(
"
*
"
L
D
(
8H
0
P
&
0
(
0V
:
0
\
R
p
*
R
D
"
D
(
:
T
?
*
:
D
"
?
R
p
*
R
"
0
P
.
2
&
&
&
&
4
&
6
>
*
&
l
t
*
&
*
B
"
(
b
X
4
*
?
<
?
2
*
:
J
*
b
b
*
"
F
>
8V
*
*
>
8
\
:
>
&
8
T
>
8
"
(
<
2
>
:
J
~
&
~
"
(
:
X
"
F
>
8V
>
>
8
\
:
0
h
.
2
&
4
6
^
^
B
2
4
?
?
z
z
(
f
(
f
"
^
(
(
f
(
<
2
J
(
<
"
