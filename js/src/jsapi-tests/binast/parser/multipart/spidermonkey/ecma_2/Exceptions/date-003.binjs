BINJS
[
GRAMMAR
]
identity
;
(
IdentifierExpression
.
LiteralStringExpression
"
BindingIdentifier
&
ExpressionStatement
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator
CallExpression
BinaryExpression
(
AssignmentExpression
StaticMemberExpression4AssignmentTargetIdentifier
NewExpression
ThisExpression8StaticMemberAssignmentTarget
AssertedBlockScope
Block
"
AssertedBoundName
CatchClause
Script
"
TryCatchStatement
AssertedParameterScope2AssertedScriptGlobalScope0FunctionOrMethodContents
>
AssertedPositionalParameterName
ReturnStatement
AssertedVarScope0LiteralNumericExpression
.
AssertedBoundNamesScope0EagerFunctionDeclaration
FormalParameters
[
STRINGS
]
identity
;
1
<
var
result
+
exception
expect
SECTION
value
e
valueOf
MyObject
TITLE
OBJ
VERSION
Date
&
No
exception
thrown
prototype
Date
.
prototype
.
valueOf
^
OBJ
=
new
MyObject
(
new
Date
(
0
)
)
;
OBJ
.
valueOf
(
)
writeHeaderToLog
TestCase
date
-
003
)
test
JS1_4
startTest
Failed
Passed
(
threw
toString
[
TREE
]
identity
;
(
.
*
0
"
2
&
4
6
*
8
&
:
:
(
8
.
<
0
2
>
"
6
4
