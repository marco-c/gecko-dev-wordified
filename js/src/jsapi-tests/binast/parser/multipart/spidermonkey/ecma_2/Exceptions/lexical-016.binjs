BINJS
[
GRAMMAR
]
identity
;
(
IdentifierExpression
.
LiteralStringExpression
CallExpression
&
ExpressionStatement
"
BindingIdentifier
VariableDeclarator
&
VariableDeclaration
BinaryExpression
Block
StaticMemberExpression4AssignmentTargetIdentifier
UnaryExpression
(
AssignmentExpression
IfStatement
.
LiteralRegExpExpression
AssertedVarScope
AssertedBlockScope
Script
CatchClause
"
TryCatchStatement
NewExpression
[
STRINGS
]
identity
;
D
var
+
exception
result
SECTION
expect
options
TITLE
!
strict
werror
VERSION
e
match
eval
writeHeaderToLog
Failed
*
Future
Reserved
Words
class
=
true
toString
lexical
-
016
class
=
true
;
Passed
print
startTest
&
No
exception
thrown
TestCase
JS1_4
(
threw
vThis
test
requires
option
javascript
.
options
.
strict
enabled
)
test
[
TREE
]
identity
;
*
:
4
.
2
>
"
6
0
(
"
&
(
*
8
&
<
B
