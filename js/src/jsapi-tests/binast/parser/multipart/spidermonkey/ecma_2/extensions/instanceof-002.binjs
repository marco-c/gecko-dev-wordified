BINJS
[
GRAMMAR
]
identity
;
B
(
IdentifierExpression
&
ExpressionStatement
StaticMemberExpression
"
BindingIdentifier
.
LiteralStringExpression
BinaryExpression
NewExpression
(
AssignmentExpression8StaticMemberAssignmentTarget0LiteralBooleanExpression
ThisExpression
>
AssertedPositionalParameterName
(
AssertedDeclaredName
0EagerFunctionDeclaration
FormalParameters
AssertedVarScope
AssertedParameterScope0FunctionOrMethodContents
CallExpression
VariableDeclarator
&
VariableDeclaration
Block
*
LiteralNullExpression
AssertedBlockScope
ReturnStatement
Script4AssignmentTargetIdentifier
IfStatement2AssertedScriptGlobalScope
WhileStatement0LiteralNumericExpression
ArrayExpression
[
STRINGS
]
identity
;
h
__proto__
var
SECTION
pat
TestCase
name
prototype
dept
WorkerBee
Employee
projs
object
Engineer
=
=
instanceof
SalesPerson
machine
|
|
base
TITLE
constructor
Manager
+
InstanceOf
Object
VERSION8pat
instanceof
SalesPerson
)
projects
ECMA_2
quotazpat
.
__proto__
.
__proto__
.
__proto__
.
__proto__
.
__proto__
=
=
null
Array
!
=
npat
.
__proto__
.
__proto__
.
__proto__
=
=
Employee
.
prototype
general
startTest
writeHeaderToLog
.
pat
instanceof
Engineer
engineering2pat
instanceof
Employee
)
DDetermining
Instance
Relationships
.
pat
instanceof
Object
)
reportsFpat
.
__proto__
=
=
Engineer
.
prototype
instanceof
-
002
sales
\
pat
.
__proto__
.
__proto__
=
=
WorkerBee
.
prototype
~
pat
.
__proto__
.
__proto__
.
__proto__
.
__proto__
=
=
Object
.
prototype
test4pat
instanceof
WorkerBee
)
[
TREE
]
identity
;
U
4
:
.
*
&
4
6
*
(
\
*
(
4
:
*
(
&
T
&
H
&
J
N
&
.
"
(
(
<
B
.
0
8
(
0
2
6
2
"
"
2
"
F
*
"
X
*
"
&
8
"
"
^
<
>
Y
"
&
P
"
2
*
(
Z
D
b
0
>
.
L
f
R
V
0
6
&
d
