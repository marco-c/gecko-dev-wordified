BINJS
[
GRAMMAR
]
identity
;
:
(
IdentifierExpression
&
ExpressionStatement
StaticMemberExpression
"
BindingIdentifier
.
LiteralStringExpression
BinaryExpression
NewExpression
(
AssignmentExpression8StaticMemberAssignmentTarget0LiteralBooleanExpression
ThisExpression0EagerFunctionDeclaration
FunctionBody
FormalParameters
CallExpression
&
VariableDeclaration
VariableDeclarator
AssertedParameterScope
*
LiteralNullExpression
ReturnStatement
Block
AssertedVarScope
IfStatement4AssignmentTargetIdentifier
Script0LiteralNumericExpression
ArrayExpression
WhileStatement
[
STRINGS
]
identity
;
h
__proto__
SECTION
pat
name
TestCase
WorkerBee
prototype
dept
Employee
=
=
projs
object
Engineer
instanceof
machine
base
|
|
SalesPerson
var
constructor
TITLE
Manager
+
Object
InstanceOf
VERSION
npat
.
__proto__
.
__proto__
.
__proto__
=
=
Employee
.
prototype
.
pat
instanceof
Object
)
instanceof
-
002DDetermining
Instance
Relationships
!
=
sales
projects
writeHeaderToLogzpat
.
__proto__
.
__proto__
.
__proto__
.
__proto__
.
__proto__
=
=
null
~
pat
.
__proto__
.
__proto__
.
__proto__
.
__proto__
=
=
Object
.
prototype
test
ECMA_24pat
instanceof
WorkerBee
)
Fpat
.
__proto__
=
=
Engineer
.
prototype
quota
reports
startTest
Array8pat
instanceof
SalesPerson
)
2pat
instanceof
Employee
)
general
\
pat
.
__proto__
.
__proto__
=
=
WorkerBee
.
prototype
engineering
.
pat
instanceof
Engineer
[
TREE
]
identity
;
2
0
*
"
(
2
6
"
:
"
2
N
"
(
<
X
F
>
(
&
0
&
8
&
*
.
&
*
(
0
(
4
*
V6
*
D
Z
"
B
T4
Y
"
d
4
"
R
b
6
J
.
H
&
f
P
^
8
.
\
"
L
