BINJS
[
GRAMMAR
]
identity
;
4
(
IdentifierExpression
.
LiteralStringExpression
BinaryExpression
StaticMemberExpression
"
BindingIdentifier
CallExpression
&
ExpressionStatement
&
VariableDeclaration
VariableDeclarator
0ComputedMemberExpression
AssertedVarScope0EagerFunctionDeclaration
AssertedParameterScope
FunctionBody
ForStatement
FormalParameters
UpdateExpression
Block4AssignmentTargetIdentifier
ArrayExpression0LiteralNumericExpression0LiteralBooleanExpression
NewExpression
Script
*
ConditionalExpression
[
STRINGS
]
identity
;
/
d
+
string
matches
separator
split_array
str_sep
length
split
var
(
)
.
split
(
AddTestCase
limit
str_limit
AddSplitCases
t
s
p
m
<
splitme
i
constructor
+
+
=
=
e
Array
TITLE
]
(
AddLimitedSplitCases
l
SECTION
VERSION
'
'
)
[
4ecma_2
/
String
/
split
-
001
.
js
)
.
constructor
=
=
Array
RegExp
test
ECMA_2
new
RegExp
(
)
)
[
TString
.
prototype
.
split
(
regexp
[
limit
]
)
)
.
length
.
)
.
constructor
=
=
Array
)
.
length
startTest
>
[
TREE
]
identity
;
G
0
<
8B
H
B
P
8
V
*
\
D
(
"
>
&
4
*
.
L
R
(
"
>
&
4
N
J
2
.
6
X
2
b
*
(
"
0
&
F
:
<
Z
2
.
6
^
*
(
"
0
&
T
:
