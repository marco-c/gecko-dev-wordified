BINJS
[
GRAMMAR
]
identity
;
&
(
IdentifierExpression
.
LiteralStringExpression
&
ExpressionStatement
"
BindingIdentifier
&
VariableDeclaration
VariableDeclarator
BinaryExpression
CallExpression
Block4AssignmentTargetIdentifier
(
AssignmentExpression
StaticMemberExpression
AssertedVarScope
CatchClause
"
TryCatchStatement
Script
NewExpression
AssertedBlockScope
[
STRINGS
]
identity
;
4
var
+
expect
SECTION
result
exception
TITLE
VERSION
e
Failed
)
Passed
TestCase
eval
toString
&
No
exception
thrown
case
=
true
test
lexical
-
008
.
js
*
Future
Reserved
Words
JS1_4
startTest
case
=
true
;
writeHeaderToLog
(
threw
[
TREE
]
identity
;
)
*
&
0
(
.
"
2
"
