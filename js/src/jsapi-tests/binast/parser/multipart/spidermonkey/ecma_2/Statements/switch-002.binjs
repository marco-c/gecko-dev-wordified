BINJS
[
GRAMMAR
]
identity
;
}
:
0LiteralNumericExpression
(
IdentifierExpression
&
ExpressionStatement
CallExpression
"
BindingIdentifier4AssignmentTargetIdentifier8CompoundAssignmentExpression
.
LiteralStringExpression
(
AssertedDeclaredName
SwitchCase
&
VariableDeclaration
VariableDeclarator
BinaryExpression
>
AssertedPositionalParameterName
BreakStatement0LiteralBooleanExpression
AssertedParameterScope2AssertedScriptGlobalScope
AssertedVarScope0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
*
LiteralNullExpression
NewExpression
Script
SwitchDefault4SwitchStatementWithDefault
UnaryExpression
[
STRINGS
]
identity
;
{
SwitchTest
result
var
+
=
SECTION
input
TITLE
expect
+
VERSION
0
ECMA_2
TestCase
(
The
switch
statement
startTestBswitch
with
no
breaks
:
input
is
switch
-
002
test
writeHeaderToLog
void
[
TREE
]
identity
;
2
"
(
?
L
H
P
.
8
*
&
(
"
*
&
6
?
0
4
P
0
"
