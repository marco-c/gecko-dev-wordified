BINJS
[
GRAMMAR
]
identity
;
}
:
0LiteralNumericExpression
(
IdentifierExpression
&
ExpressionStatement
CallExpression
"
BindingIdentifier
.
LiteralStringExpression4AssignmentTargetIdentifier8CompoundAssignmentExpression
(
AssertedDeclaredName
SwitchCase
&
VariableDeclaration
VariableDeclarator
BinaryExpression
BreakStatement0LiteralBooleanExpression
>
AssertedPositionalParameterName
UnaryExpression0EagerFunctionDeclaration
NewExpression2AssertedScriptGlobalScope0FunctionOrMethodContents
*
LiteralNullExpression
SwitchDefault
AssertedParameterScope
FormalParameters
Script
AssertedVarScope4SwitchStatementWithDefault
[
STRINGS
]
identity
;
{
SwitchTest
var
result
+
=
input
SECTION
TITLE
+
expect
VERSION
writeHeaderToLog
ECMA_2
switch
-
002
startTest
TestCase
(
The
switch
statement
testBswitch
with
no
breaks
:
input
is
void
0
[
TREE
]
identity
;
2
&
"
"
?
L
H
P
*
(
*
"
(
.
0
84
6
?
0
P
&
