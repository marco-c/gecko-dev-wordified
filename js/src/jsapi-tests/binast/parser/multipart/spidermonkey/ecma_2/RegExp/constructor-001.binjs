BINJS
[
GRAMMAR
]
identity
;
y
(
IdentifierExpression
.
LiteralStringExpression
CallExpression
StaticMemberExpression
&
ExpressionStatement
"
BindingIdentifier
&
VariableDeclaration
VariableDeclarator0LiteralBooleanExpression
Script8StaticMemberAssignmentTarget0LiteralNumericExpression
AssertedVarScope
(
AssignmentExpression
NewExpression
BinaryExpression
[
STRINGS
]
identity
;
i
>
re
AddTestCase
var
prototype
SECTION
RegExp
getClassProperty
TITLE
VERSION
RegExp
/
constructor
-
001
Object
new
RegExp
(
)
multiline2
(
new
RegExp
(
)
)
.
ignoreCase
[
object
RegExp
]
B
(
new
RegExp
(
)
)
.
getClassProperty
(
)
*
(
new
RegExp
(
)
)
.
global
*
(
new
RegExp
(
)
)
.
source
global0
(
new
RegExp
(
)
)
.
multiline
ignoreCase
startTest
test
ECMA_2
source
toString
+
~
RegExp
.
prototype
.
getClassProperty
=
Object
.
prototype
.
toString
;
lastIndex0
(
new
RegExp
(
)
)
.
lastIndex
(
?
:
)
[
TREE
]
identity
;
C
.
*
2
4
6
"
<
0
(
&
:
8
