BINJS
[
GRAMMAR
]
identity
;
"
(
IdentifierExpression
.
LiteralStringExpression
CallExpression
&
ExpressionStatement
StaticMemberExpression
(
AssertedDeclaredName
"
BindingIdentifier
&
VariableDeclaration
VariableDeclarator0LiteralBooleanExpression2AssertedScriptGlobalScope
(
AssignmentExpression
BinaryExpression0LiteralNumericExpression
NewExpression
Script8StaticMemberAssignmentTarget
[
STRINGS
]
identity
;
i
>
re
var
AddTestCase
RegExp
SECTION
TITLE
VERSION
getClassProperty
prototype
(
?
:
)
B
(
new
RegExp
(
)
)
.
getClassProperty
(
)
*
(
new
RegExp
(
)
)
.
global2
(
new
RegExp
(
)
)
.
ignoreCase0
(
new
RegExp
(
)
)
.
lastIndex0
(
new
RegExp
(
)
)
.
multiline
*
(
new
RegExp
(
)
)
.
source
ECMA_2
Object
~
RegExp
.
prototype
.
getClassProperty
=
Object
.
prototype
.
toString
;
RegExp
/
constructor
-
001
[
object
RegExp
]
global
ignoreCase
lastIndex
multiline
new
RegExp
(
)
source
startTest
test
toString
+
[
TREE
]
identity
;
W
&
2
6
"
:
<
(
4
*
0
.
8
