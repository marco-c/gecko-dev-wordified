BINJS
[
GRAMMAR
]
identity
;
y
(
IdentifierExpression
.
LiteralStringExpression
CallExpression
&
ExpressionStatement
StaticMemberExpression
&
VariableDeclaration
"
BindingIdentifier
VariableDeclarator0LiteralBooleanExpression
(
AssignmentExpression8StaticMemberAssignmentTarget
NewExpression
Script0LiteralNumericExpression
AssertedVarScope
BinaryExpression
[
STRINGS
]
identity
;
i
>
re
AddTestCase
var
RegExp
getClassProperty
prototype
TITLE
VERSION
SECTION
source
Object
ignoreCase
ECMA_2B
(
new
RegExp
(
)
)
.
getClassProperty
(
)
lastIndex
test
(
?
:
)
startTest
multiline
RegExp
/
constructor
-
0012
(
new
RegExp
(
)
)
.
ignoreCase
[
object
RegExp
]
global
~
RegExp
.
prototype
.
getClassProperty
=
Object
.
prototype
.
toString
;
+
0
(
new
RegExp
(
)
)
.
multiline
*
(
new
RegExp
(
)
)
.
global
new
RegExp
(
)
0
(
new
RegExp
(
)
)
.
lastIndex
*
(
new
RegExp
(
)
)
.
source
toString
[
TREE
]
identity
;
C
&
6
"
<
0
.
*
:
4
(
2
8
