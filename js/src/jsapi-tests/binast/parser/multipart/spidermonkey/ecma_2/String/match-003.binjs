BINJS
[
GRAMMAR
]
identity
;
Y
<
(
IdentifierExpression
BinaryExpression
.
LiteralStringExpression
CallExpression
StaticMemberExpression
&
ExpressionStatement
"
BindingIdentifier
(
AssignmentExpression
ArrayExpression
&
VariableDeclaration
VariableDeclarator0LiteralNumericExpression8StaticMemberAssignmentTarget4AssignmentTargetIdentifier
Block
*
LiteralNullExpression
AssertedVarScope0ComputedMemberExpression
Script
FunctionBody
.
LiteralRegExpExpression
ReturnStatement
*
ConditionalExpression
IfStatement0EagerFunctionDeclaration
AssertedParameterScope
ForStatement
FormalParameters
UpdateExpression
[
STRINGS
]
identity
;
X
+
re
s
string
regexp
length
matches_array
(
AddGlobalRegExpCases
matches
match
02134
var
str_regexp
re
=
lastIndex
lastIndexOf
0
limit
AddTestCase
"
;
re
.
lastIndex
=
=
=
TITLE
)
.
match
(
(
SECTION
VERSION
String
.
prototype
.
match
(
regexp
)
startTest
)
[
g
&
;
re
.
lastIndex
=
0
4
(
[
\
d
]
{
5
}
)
(
[
-
\
]
?
[
\
d
]
{
4
}
)
?
ECMA_2
Boston
MA
02134
&
String
/
match
-
003
.
js
<
test
|
|
>
)
)
.
length
+
+
.
match
(
]
[
TREE
]
identity
;
&
"
0
*
2
"
0
D
2
*
4
6
*
>
:
B
<
&
&
?
&
?
H
2
4
"
"
8
(
0
J
(
(
T
N
.
P
"
.
L
6
F
"
:
R
.
8
V
