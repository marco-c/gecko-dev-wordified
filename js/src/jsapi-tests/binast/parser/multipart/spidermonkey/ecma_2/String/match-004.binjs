BINJS
[
GRAMMAR
]
identity
;
5
D
(
IdentifierExpression
BinaryExpression
.
LiteralStringExpression
StaticMemberExpression
CallExpression
"
BindingIdentifier
&
ExpressionStatement
(
AssertedDeclaredName
>
AssertedPositionalParameterName
&
VariableDeclaration
VariableDeclarator
0LiteralNumericExpression
AssertedBlockScope
(
AssignmentExpression4AssignmentTargetIdentifier
Block0ComputedMemberExpression
*
LiteralNullExpression
ArrayExpression
AssertedParameterScope
AssertedVarScope
*
ConditionalExpression0EagerFunctionDeclaration
ForStatement
FormalParameters0FunctionOrMethodContents
IfStatement
ReturnStatement8StaticMemberAssignmentTarget
UpdateExpression2AssertedScriptGlobalScope
.
LiteralRegExpExpression
Script
[
STRINGS
]
identity
;
w
j
+
string
regexp
var
matches_array
matches
match
length
str_regexp
AddTestCase
re
)
.
match
(
(
limit
s
AddRegExpCases
index
=
=
String
]
exec
str_string
)
)
.
length
)
[
02
(
AddGlobalRegExpCases
BUGNUMBER
SECTION
TITLE
VERSION
lastIndex
prototype
re
=
+
+
<
>
|
|
[
lastIndex
is
)
.
index
)
.
input
.
exec
(
.
match
(
0
.
ECMA_2
Number
String
.
prototype
.
match
(
regexp
)
&
String
/
match
-
004
.
jsZhttp
:
/
/
scopus
/
bugsplat
/
show_bug
.
cgi
?
id
=
345818
input
startTest
test
[
TREE
]
identity
;
O
B
>
4
6
8
:
<
8
<
Z
:
^
6
b
f
XL
(
i
C
:
\
B
?
&
2
:
>
B
N
>
&
?
&
2
h
.
4
(
*
2
*
*
6
J
"
(
"
V
8
.
P
R
*
d
H
0
F
<
D
0
&
"
"
.
4
4
(
2
*
6
J
"
(
"
T
(
8
.
H
0
F
<
D
0
&
"
"
