BINJS
[
GRAMMAR
]
identity
;
5
D
(
IdentifierExpression
.
LiteralStringExpression
BinaryExpression
CallExpression
StaticMemberExpression
&
ExpressionStatement
"
BindingIdentifier
(
AssertedDeclaredName
>
AssertedPositionalParameterName
&
VariableDeclaration
VariableDeclarator
ArrayExpression
(
AssignmentExpression0LiteralNumericExpression
AssertedBlockScope4AssignmentTargetIdentifier
Block0ComputedMemberExpression
*
LiteralNullExpression8StaticMemberAssignmentTarget
.
LiteralRegExpExpression
AssertedParameterScope
AssertedVarScope
*
ConditionalExpression0EagerFunctionDeclaration
ForStatement
FormalParameters0FunctionOrMethodContents
IfStatement
ReturnStatement
UpdateExpression2AssertedScriptGlobalScope
Script
[
STRINGS
]
identity
;
s
n
+
string
regexp
matches_array
var
s
length
matches
02134
match
str_regexp
re
0
AddTestCase
lastIndexOf
AddRegExpCases
)
.
match
(
(
limit
undefined
index
lastIndex
=
=
4
(
[
\
d
]
{
5
}
)
(
[
-
\
]
?
[
\
d
]
{
4
}
)
?
(
AddGlobalRegExpCases
exec
^
re
=
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
;
re
.
lastIndex
=
)
)
.
length
)
[
&
Boston
Mass
.
02134
SECTION
TITLE
VERSION
]
+
+
<
>
|
|
)
.
index
)
.
input
.
exec
(
.
match
(
2
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
4
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
g
Boston
MA
02134
ECMA_2
String
.
prototype
.
match
(
regexp
)
&
String
/
match
-
002
.
js
g
input
^
re
=
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
;
re
.
lastIndex
=
0
startTest
test
[
TREE
]
identity
;
;
B
0
B
D
&
b
D
^
B
j
*
.
6
X
>
&
0
*
.
d
Z
>
*
.
6
(
*
\
h
&
(
*
4
&
(
*
4
&
(
*
?
4
?
&
l
2
8
(
6
(
.
:
N
2
&
&
"
V
8
<
"
:
"
P
(
(
"
R
f
0
L
4
J
>
H
"
"
<
F
2
0
8
6
.
:
N
2
&
&
"
T
8
2
<
"
:
0
L
4
J
>
H
"
"
<
F
