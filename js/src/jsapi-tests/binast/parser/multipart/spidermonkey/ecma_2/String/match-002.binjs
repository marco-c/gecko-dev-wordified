BINJS
[
GRAMMAR
]
identity
;
Y
<
(
IdentifierExpression
.
LiteralStringExpression
BinaryExpression
CallExpression
StaticMemberExpression
&
ExpressionStatement
"
BindingIdentifier
&
VariableDeclaration
VariableDeclarator0LiteralNumericExpression
(
AssignmentExpression
ArrayExpression8StaticMemberAssignmentTarget
*
LiteralNullExpression4AssignmentTargetIdentifier
Block0ComputedMemberExpression
.
LiteralRegExpExpression
AssertedVarScope
IfStatement
FormalParameters
FunctionBody
UpdateExpression
ForStatement
*
ConditionalExpression
AssertedParameterScope0EagerFunctionDeclaration
ReturnStatement
Script
[
STRINGS
]
identity
;
s
n
+
string
regexp
matches_array
s
length
matches
match
02134
str_regexp
re
lastIndexOf
AddTestCase
0
var
AddRegExpCases
(
)
.
match
(
limit
undefined
=
=
index
lastIndex4
(
[
\
d
]
{
5
}
)
(
[
-
\
]
?
[
\
d
]
{
4
}
)
?
(
AddGlobalRegExpCases
exec
^
re
=
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
;
re
.
lastIndex
=
)
>
]
+
+
TITLE
&
Boston
Mass
.
02134
|
|
<
VERSION
)
[
SECTION
)
.
length4
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
g
Boston
MA
02134
input
.
match
(
.
exec
(
)
.
input
String
.
prototype
.
match
(
regexp
)
startTest
^
re
=
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
;
re
.
lastIndex
=
0
)
.
index
g2
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
&
String
/
match
-
002
.
js
ECMA_2
test
[
TREE
]
identity
;
:
&
0
L
H
&
L
h
H
j
\
^
.
8
f
B
&
0
.
d
P
B
.
8
R
&
4
&
4
&
?
4
?
&
l
6
4
*
&
*
*
(
D
(
2
(
V
6
8
"
N
"
b
*
*
"
Z
T
2
:
0
F
.
>
"
J
<
"
"
6
4
&
0
*
(
D
(
2
(
X
6
2
8
"
N
2
:
0
F
.
>
"
J
<
"
"
