BINJS
[
GRAMMAR
]
identity
;
5
D
(
IdentifierExpression
.
LiteralStringExpression
BinaryExpression
StaticMemberExpression
CallExpression
&
ExpressionStatement
"
BindingIdentifier
(
AssertedDeclaredName
>
AssertedPositionalParameterName
&
VariableDeclaration
VariableDeclarator
ArrayExpression0LiteralNumericExpression
(
AssignmentExpression
Block0ComputedMemberExpression
*
LiteralNullExpression8StaticMemberAssignmentTarget
AssertedBlockScope4AssignmentTargetIdentifier
.
LiteralRegExpExpression
UpdateExpression0EagerFunctionDeclaration
ReturnStatement
IfStatement0FunctionOrMethodContents
AssertedParameterScope
FormalParameters
*
ConditionalExpression
AssertedVarScope
ForStatement2AssertedScriptGlobalScope
Script
[
STRINGS
]
identity
;
s
n
+
string
regexp
var
matches_array
s
matches
length
match
02134
str_regexp
re
AddTestCase
0
lastIndexOf
AddRegExpCases
(
)
.
match
(
limit
undefined
index
=
=
lastIndex
(
AddGlobalRegExpCases
exec
^
re
=
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
;
re
.
lastIndex
=
4
(
[
\
d
]
{
5
}
)
(
[
-
\
]
?
[
\
d
]
{
4
}
)
?
]
)
VERSION
|
|
<
>
TITLE
)
[
&
Boston
Mass
.
02134
+
+
SECTION
)
.
length
.
exec
(
test
Boston
MA
02134
)
.
input
^
re
=
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
;
re
.
lastIndex
=
0
String
.
prototype
.
match
(
regexp
)
.
match
(
ECMA_2
input4
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
g
startTest
)
.
index
&
String
/
match
-
002
.
js
g2
/
(
[
d
]
{
5
}
)
(
[
-
]
?
[
d
]
{
4
}
)
?
/
[
TREE
]
identity
;
;
B
.
L
D
:
&
L
h
:
^
D
Z
d
*
4
l
H
&
.
*
4j
b
H
(
*
4
(
T
X
&
2
&
2
&
?
2
?
&
R
.
4
6
(
8
(
<
2
<
*
0
"
*
"
&
\
8
0
"
N
"
f
(
(
"
V
:
B
>
>
J
(
&
"
F
6
.
.
4
6
8
<
2
<
*
0
"
*
"
&
P
8
0
0
"
N
:
B
>
>
J
(
&
"
F
6
