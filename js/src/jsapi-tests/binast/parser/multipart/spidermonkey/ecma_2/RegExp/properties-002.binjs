BINJS
[
GRAMMAR
]
identity
;
.
(
IdentifierExpression0LiteralNumericExpression
&
ExpressionStatement
CallExpression
StaticMemberExpression0LiteralBooleanExpression
.
LiteralStringExpression
BinaryExpression
(
AssignmentExpression
"
BindingIdentifier8StaticMemberAssignmentTarget
.
LiteralRegExpExpression4AssignmentTargetIdentifier
&
VariableDeclaration
VariableDeclarator
*
ConditionalExpression
Script0EagerFunctionDeclaration
FunctionBody
FormalParameters
AssertedParameterScope
AssertedVarScope
[
STRINGS
]
identity
;
re
pow
+
Math
AddRegExpCases
\
B
AddTestCase
lastIndex
m
g
-
i
RegExp
prototype
=
=
s
var
re_7
re_1
re_2
re_5
re_6
re_10
test
toString
l
re_3
re_8
re_9
re_4
TITLE
\
cA
?
/
exec
*
VERSION
\
w
*
Number
constructor
\
*
{
0
80
}
compile
^
.
MAX_VALUE
SECTION
BUGNUMBER
source
.
toString
(
)
.
ignoreCase
startTestH
.
compile
=
=
RegExp
.
prototype
.
compile
<
Properties
of
RegExp
InstancesV
.
contructor
=
=
RegExp
.
prototype
.
constructor0RegExp
/
properties
-
002
.
jsL
.
toString
=
=
RegExp
.
prototype
.
toString
.
source
124339
.
multiline
<
.
exec
=
=
RegExp
.
prototype
.
exec
ignoreCase
.
global
global
.
lastIndex
ECMA_2
gim
<
.
test
=
=
RegExp
.
prototype
.
test
multiline
[
TREE
]
identity
;
?
"
ZX
>
H
J
"
X
j
"
H
~
"
>
f
"
Z
p
b
&
&
?
&
?
(
J
(
?
(
J
?
6
P
6
?
?
6
P
?
?
<
T
<
>
?
<
T
>
?
*
*
>
*
>
?
?
8
8
F
8
F
:
:
D
:
D
.
.
LV
.
LV
0
*
4
(
4
&
0
0
l
2
2
h
N
N
d
R
R
t
D
D
n
\
^
B
B
2
x
z
v
r
|
4
