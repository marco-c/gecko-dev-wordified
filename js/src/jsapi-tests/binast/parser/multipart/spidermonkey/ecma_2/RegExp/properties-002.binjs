BINJS
[
GRAMMAR
]
identity
;
C
4
(
IdentifierExpression0LiteralNumericExpression
&
ExpressionStatement
CallExpression
StaticMemberExpression0LiteralBooleanExpression
.
LiteralStringExpression
BinaryExpression
(
AssignmentExpression
"
BindingIdentifier4AssignmentTargetIdentifier
.
LiteralRegExpExpression8StaticMemberAssignmentTarget
>
AssertedPositionalParameterName
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator
*
ConditionalExpression
AssertedParameterScope2AssertedScriptGlobalScope
AssertedVarScope0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
Script
[
STRINGS
]
identity
;
re
Math
pow
+
AddRegExpCases
\
B
AddTestCase
lastIndex
var
g
i
m
-
RegExp
prototype
=
=
s
l
re_1
re_10
re_2
re_3
re_4
re_5
re_6
re_7
re_8
re_9
test
toString
/
BUGNUMBER
MAX_VALUE
Number
SECTION
TITLE
VERSION
\
*
{
0
80
}
\
cA
?
\
w
*
^
.
compile
constructor
exec
*
H
.
compile
=
=
RegExp
.
prototype
.
compileV
.
contructor
=
=
RegExp
.
prototype
.
constructor
<
.
exec
=
=
RegExp
.
prototype
.
exec
.
global
.
ignoreCase
.
lastIndex
.
multiline
.
source
<
.
test
=
=
RegExp
.
prototype
.
testL
.
toString
=
=
RegExp
.
prototype
.
toString
.
toString
(
)
124339
ECMA_2
<
Properties
of
RegExp
Instances0RegExp
/
properties
-
002
.
js
gim
global
ignoreCase
multiline
source
startTest
[
TREE
]
identity
;
2
(
F
H
J
J
F
x
J
t
H
v
r
&
N
&
?
&
N
?
*
P
*
?
*
P
?
L
?
?
L
?
?
.
Rz
.
>
?
.
R
>
?
0
0
>
0
>
2
2
2
4
4
?
4
?
6
6
Z
6
Z
8
8
D
8
D
(
(
DB
(
DB
:
0
&
"
.
"
*
l
:
:
n
<
<
^
V
V
\
T
T
X
X
j
"
p
>
"
>
"
"
"
<
b
|
d
~
h
f
