BINJS
[
GRAMMAR
]
identity
;
C
4
(
IdentifierExpression0LiteralNumericExpression
&
ExpressionStatement
CallExpression
StaticMemberExpression0LiteralBooleanExpression
.
LiteralStringExpression
BinaryExpression
(
AssignmentExpression
"
BindingIdentifier
.
LiteralRegExpExpression8StaticMemberAssignmentTarget4AssignmentTargetIdentifier
>
AssertedPositionalParameterName
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator
*
ConditionalExpression
AssertedParameterScope
AssertedVarScope2AssertedScriptGlobalScope
FormalParameters
0EagerFunctionDeclaration0FunctionOrMethodContents
Script
[
STRINGS
]
identity
;
re
+
pow
Math
\
B
AddRegExpCases
AddTestCase
lastIndex
var
-
m
g
i
RegExp
prototype
=
=
s
re_9
re_2
l
re_8
test
re_10
re_5
toString
re_6
re_7
re_4
re_3
re_1
*
VERSION
BUGNUMBER
\
w
*
^
.
/
constructor
\
*
{
0
80
}
Number
SECTION
exec
TITLE
\
cA
?
MAX_VALUE
compile
.
toString
(
)
.
ignoreCase
<
.
test
=
=
RegExp
.
prototype
.
test
.
lastIndex
ECMA_2H
.
compile
=
=
RegExp
.
prototype
.
compile
multilineL
.
toString
=
=
RegExp
.
prototype
.
toString0RegExp
/
properties
-
002
.
js
<
Properties
of
RegExp
Instances
.
multiline
startTest
.
source
global
124339
<
.
exec
=
=
RegExp
.
prototype
.
exec
gim
source
ignoreCase
.
globalV
.
contructor
=
=
RegExp
.
prototype
.
constructor
[
TREE
]
identity
;
2
(
B
P
T
J
P
l
d
T
n
B
x
r
<
V
<
?
<
V
?
&
D
&
?
&
D
?
:
L
:
?
?
:
L
?
?
8
F
|
8
>
?
8
F
>
?
0
0
>
0
>
4
4
4
6
6
?
6
?
*
*
>
*
>
D
D
.
.
NX
.
NX
.
0
"
(
*
"
(
&
j
2
2
J
J
f
Z
Z
z
R
R
t
"
~
\
H
"
H
"
"
"
2
v
^
p
h
b
(
