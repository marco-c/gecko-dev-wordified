BINJS
[
GRAMMAR
]
identity
;
B
(
IdentifierExpression
.
LiteralStringExpression
&
ExpressionStatement
"
BindingIdentifier
DataProperty
&
LiteralPropertyName
BinaryExpression
CallExpression
>
AssertedPositionalParameterName4AssignmentTargetIdentifier
(
AssertedDeclaredName
AssertedBlockScope
Block
ObjectExpression
EmptyStatement
VariableDeclarator
&
VariableDeclaration
(
AssignmentExpression0EagerFunctionDeclaration8CompoundAssignmentExpression
AssertedParameterScope0FunctionOrMethodContents
BreakStatement
AssertedVarScope
ForInStatement
0ComputedMemberExpression
NewExpression0LiteralBooleanExpression
FormalParameters
"
LabelledStatement2AssertedScriptGlobalScope
Script
[
STRINGS
]
identity
;
C
N
object
var
result
expect1
expect2
SECTION
=
=
LabelTest
yoohoo
property
LabelTest2
zero
TITLE
one
hi
norris
+
|
|
p1
VERSION
p2
1
TestCase
+
=
0
startTest
label
-
002
Labeled
statements
hi
norris
onezero
test
zeroone
writeHeaderToLog
ECMA_2
yoohoo
:
for
(
property
in
object
)
{
result
+
=
object
[
property
]
;
}
break
yoohoo
}
yoohoo
:
for
(
property
in
object
)
{
result
+
=
object
[
property
]
;
break
yoohoo
}
}
norrishi
[
TREE
]
identity
;
>
&
6
&
F
:
4
D
8
(
<
L
2
*
B
>
(
2
*
*
(
:
2
.
"
<
0
&
0
4
6
.
H8
"
*
(
:
2
.
"
<
0
&
0
4
6
.
J8
"
