BINJS
[
GRAMMAR
]
identity
;
B
(
IdentifierExpression
.
LiteralStringExpression
&
ExpressionStatement
"
BindingIdentifier
BinaryExpression
DataProperty
&
LiteralPropertyName
CallExpression
>
AssertedPositionalParameterName4AssignmentTargetIdentifier
(
AssertedDeclaredName
AssertedBlockScope
Block
EmptyStatement
ObjectExpression
&
VariableDeclaration
VariableDeclarator
AssertedParameterScope
AssertedVarScope
(
AssignmentExpression
BreakStatement8CompoundAssignmentExpression0ComputedMemberExpression0EagerFunctionDeclaration
ForInStatement
FormalParameters0FunctionOrMethodContents
"
LabelledStatement0LiteralBooleanExpression
NewExpression2AssertedScriptGlobalScope
Script
[
STRINGS
]
identity
;
C
N
object
result
var
expect1
expect2
SECTION
LabelTest
LabelTest2
property
yoohoo
=
=
norris
TITLE
hi
one
zero
0
1
TestCase
VERSION
p1
p2
+
+
=
|
|
norrishi
ECMA_2
Labeled
statements
hi
norris
label
-
002
onezero
startTest
test
writeHeaderToLog
yoohoo
:
for
(
property
in
object
)
{
result
+
=
object
[
property
]
;
break
yoohoo
}
}
yoohoo
:
for
(
property
in
object
)
{
result
+
=
object
[
property
]
;
}
break
yoohoo
}
zeroone
[
TREE
]
identity
;
>
(
>
(
8
:
B
F
.
.
4
*
<
6
"
L
*
"
D
0
6
4
"
&
(
8
2
0
.
*
<
&
J
:
2
0
6
4
"
&
(
8
2
0
.
*
<
&
H
:
2
