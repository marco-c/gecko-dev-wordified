BINJS
[
GRAMMAR
]
identity
;
J
(
IdentifierExpression
BinaryExpression
.
LiteralStringExpression
"
BindingIdentifier
&
ExpressionStatement
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator
CallExpression
StaticMemberExpression0LiteralBooleanExpression
NewExpression
AssertedBlockScope
(
AssignmentExpression
Block0ComputedMemberExpression0LiteralNumericExpression
AssertedParameterScope
>
AssertedPositionalParameterName
AssertedVarScope4AssignmentTargetIdentifier
DataProperty0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
IfStatement
&
LiteralPropertyName8StaticMemberAssignmentTarget2AssertedScriptGlobalScope
<
ComputedMemberAssignmentTarget
EmptyStatement
ForInStatement
ObjectExpression
Script
ThisExpression
UnaryExpression
[
STRINGS
]
identity
;
V
var
+
SECTION
addProperty
e
name
p
r
gTestcases
length
pass
TITLE
TestRegExp
t
value
BUGNUMBER
TestCase
VERSION
eval
this
.
-
=
(
already
enumerated
?
339403
Array
ECMA_2
Property
:
RegExpTRegression
Test
for
Enumerating
Properties
for
(
p
in
r
)
{
e
[
e
.
length
]
=
{
property
:
p
value
:
r
[
p
]
}
;
e
.
length
passed
property6property
already
enumeratedFr
=
new
RegExp
(
)
;
e
=
new
Array
(
)
;
reason
(
regexp
-
enumerate
-
001
startTest
test
writeHeaderToLog
!
=
=
=
void
[
TREE
]
identity
;
5
D
:
"
H
"
4
:
0
J
N
*
8
2
*
<
B
6
6
>
D
<
L
.
2
0
"
(
8F
.
2
&
&
0
"
(
4
P
&
HT
*
&
6
.
4
R
(
?
>
8
(
?
F
B
"
