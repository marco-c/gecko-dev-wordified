BINJS
[
GRAMMAR
]
identity
;
D
(
IdentifierExpression
BinaryExpression
.
LiteralStringExpression
"
BindingIdentifier
&
ExpressionStatement
VariableDeclarator
&
VariableDeclaration
StaticMemberExpression
CallExpression0LiteralBooleanExpression
NewExpression
(
AssignmentExpression0LiteralNumericExpression0ComputedMemberExpression
Block
FunctionBody
IfStatement0EagerFunctionDeclaration
DataProperty4AssignmentTargetIdentifier
FormalParameters
&
LiteralPropertyName
AssertedVarScope8StaticMemberAssignmentTarget
ForInStatement
AssertedParameterScope
ObjectExpression
EmptyStatement
<
ComputedMemberAssignmentTarget
ThisExpression
Script
UnaryExpression
AssertedBlockScope
[
STRINGS
]
identity
;
V
+
var
addProperty
SECTION
e
name
p
r
length
gTestcases
pass
value
t
TestRegExp
TITLE
this
.
-
eval
BUGNUMBER
VERSION
TestCaseFr
=
new
RegExp
(
)
;
e
=
new
Array
(
)
;
void
property
339403
for
(
p
in
r
)
{
e
[
e
.
length
]
=
{
property
:
p
value
:
r
[
p
]
}
;
e
.
length
(
regexp
-
enumerate
-
001
startTest
reason
!
=
6property
already
enumerated
passedTRegression
Test
for
Enumerating
Properties
RegExp
=
=
=
Array
Property
:
ECMA_2
writeHeaderToLog
(
already
enumerated
?
test
[
TREE
]
identity
;
>
.
&
4
&
L
0
6
N
T
B
H
2
(
:
6
&
.
&
8
(
*
2
R
*
0
<
4
.
*
"
:
"
(
B
"
D
(
J
P
"
F
?
>
0
?
8
<
