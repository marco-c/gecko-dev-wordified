BINJS
[
GRAMMAR
]
identity
;
.
LiteralStringExpression
(
IdentifierExpression
BinaryExpression
CallExpression
&
ExpressionStatement
StaticMemberExpression
ArrayExpression
"
BindingIdentifier0LiteralNumericExpression
NewExpression
(
AssertedDeclaredName
>
AssertedPositionalParameterName
.
LiteralRegExpExpression
&
VariableDeclaration
VariableDeclarator0ComputedMemberExpression
AssertedBlockScope
AssertedParameterScope
AssertedVarScope4AssignmentTargetIdentifier
Block
*
ConditionalExpression0EagerFunctionDeclaration
ForStatement
FormalParameters0FunctionOrMethodContents0LiteralBooleanExpression
UnaryExpression
UpdateExpression2AssertedScriptGlobalScope
Script
[
STRINGS
]
identity
;
A
f
+
l
string
hello
(
AddLimitedSplitCases
var
matches
separator
length
split_array
limit
RegExp
new
RegExp
split
str_sep
/
l
/
o
h
e
he
)
.
split
(
(
AddTestCase
AddSplitCases
slimit
Array
SECTION
TITLE
VERSION
]
constructor
hi
undefined
+
+
<
=
=
>
void
.
)
.
constructor
=
=
Array
)
.
length
)
[
)
.
constructor
=
=
Array
)
.
length
)
[
ECMA_2TString
.
prototype
.
split
(
regexp
[
limit
]
)
4ecma_2
/
String
/
split
-
003
.
js
startTest
test
[
TREE
]
identity
;
q
>
<
0
8
:
<
4
8
<
\
:
^
b
0
&
"
0
(
"
?
(
(
(
"
(
"
8N
(
"
B
D
(
"
0
&
"
?
&
&
&
8N
&
"
B
D
&
"
d
.
0
4
2
&
.
*
V6
J
6
.
*
X
L
0
H
:
F
(
*
"
.
*
Z
>
.
4
2
&
4
.
*
2
P6
J
6
.
*
2
R
4
L
0
H
4
:
F
(
*
"
.
*
2
T
>
