BINJS
[
GRAMMAR
]
identity
;
8
.
LiteralStringExpression
(
IdentifierExpression
BinaryExpression
CallExpression
&
ExpressionStatement
StaticMemberExpression
ArrayExpression
"
BindingIdentifier0LiteralNumericExpression
NewExpression
.
LiteralRegExpExpression
VariableDeclarator
&
VariableDeclaration
0ComputedMemberExpression
AssertedVarScope
AssertedParameterScope
FormalParameters0LiteralBooleanExpression0EagerFunctionDeclaration
UpdateExpression
ForStatement
*
ConditionalExpression
UnaryExpression4AssignmentTargetIdentifier
Block
FunctionBody
Script
[
STRINGS
]
identity
;
A
f
+
l
string
hello
(
AddLimitedSplitCases
matches
separator
split_array
length
limit
split
RegExp
new
RegExp
str_sep
/
l
/
o
h
he
var
e
AddTestCase
)
.
split
(
(
AddSplitCases
slimit
<
=
=
]
undefined
Array
>
VERSION
void
TITLE
SECTION
+
+
hi
constructorTString
.
prototype
.
split
(
regexp
[
limit
]
)
)
.
length
test
)
.
constructor
=
=
Array
)
.
length4ecma_2
/
String
/
split
-
003
.
js
startTest
.
)
.
constructor
=
=
Array
)
[
)
[
ECMA_2
[
TREE
]
identity
;
6
0HFB
4
&
H
Z
&
B
d
&
F
P
\
0
"
(
0
?
.
D
L
<
0
"
(
?
"
"
(
"
(
"
(
.
D
"
(
L
<
"
(
T
&
0
"
4
*
.
V
8
N
>
*
.
X
&
*
&
6
(
J0
2
*
.
:
&
2
"
4
*
.
4
^
8
N
>
*
.
4
R
&
2
*
&
6
2
(
J0
2
*
.
4
b
:
