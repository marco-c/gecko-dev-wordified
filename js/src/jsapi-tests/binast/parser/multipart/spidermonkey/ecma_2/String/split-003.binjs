BINJS
[
GRAMMAR
]
identity
;
8
.
LiteralStringExpression
(
IdentifierExpression
BinaryExpression
CallExpression
&
ExpressionStatement
StaticMemberExpression
ArrayExpression
"
BindingIdentifier0LiteralNumericExpression
NewExpression
.
LiteralRegExpExpression
&
VariableDeclaration
VariableDeclarator0ComputedMemberExpression
AssertedVarScope4AssignmentTargetIdentifier0EagerFunctionDeclaration
ForStatement
Block
UpdateExpression
FormalParameters
AssertedParameterScope0LiteralBooleanExpression
UnaryExpression
*
ConditionalExpression
FunctionBody
Script
[
STRINGS
]
identity
;
A
f
+
string
l
hello
(
AddLimitedSplitCases
separator
matches
length
split_array
limit
new
RegExp
split
RegExp
str_sep
o
/
l
/
h
var
he
e
(
)
.
split
(
AddTestCase
AddSplitCases
slimit
=
=
undefined
+
+
TITLE
void
>
hi
Array
VERSION
SECTION
constructor
<
]
.
)
.
constructor
=
=
Array
)
[
TString
.
prototype
.
split
(
regexp
[
limit
]
)
ECMA_24ecma_2
/
String
/
split
-
003
.
js
)
.
length
startTest
)
.
constructor
=
=
Array
test
)
[
)
.
length
[
TREE
]
identity
;
6
0
H
<
F
4
H
X
F
V
<
T
\
0
"
(
0
&
?
&
&
&
&
0
>
&
B
8
&
0
"
(
?
"
"
(
"
(
"
(
0
>
"
(
B
8
"
(
"
0
*
4
.
*
^
.
6
J
D
.
*
d
2
L
(
:
&
.
*
R
N
"
2
*
4
.
*
4
P
.
6
J
D
.
*
4
Z
22
L
2
(
:
&
.
*
4
b
N
