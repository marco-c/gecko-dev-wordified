<
tuple
>
<
head
>
Script
scope
directives
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
'
<
string
>
ArrayProto
<
/
string
>
<
string
>
FuncProto
<
/
string
>
<
string
>
ObjProto
<
/
string
>
<
string
>
_
<
/
string
>
<
string
>
any
<
/
string
>
<
string
>
breaker
<
/
string
>
<
string
>
concat
<
/
string
>
<
string
>
ctor
<
/
string
>
<
string
>
each
<
/
string
>
<
string
>
entityMap
<
/
string
>
<
string
>
entityRegexes
<
/
string
>
<
string
>
eq
<
/
string
>
<
string
>
escaper
<
/
string
>
<
string
>
escapes
<
/
string
>
<
string
>
flatten
<
/
string
>
<
string
>
group
<
/
string
>
<
string
>
hasOwnProperty
<
/
string
>
<
string
>
idCounter
<
/
string
>
<
string
>
lookupIterator
<
/
string
>
<
string
>
nativeBind
<
/
string
>
<
string
>
nativeEvery
<
/
string
>
<
string
>
nativeFilter
<
/
string
>
<
string
>
nativeForEach
<
/
string
>
<
string
>
nativeIndexOf
<
/
string
>
<
string
>
nativeIsArray
<
/
string
>
<
string
>
nativeKeys
<
/
string
>
<
string
>
nativeLastIndexOf
<
/
string
>
<
string
>
nativeMap
<
/
string
>
<
string
>
nativeReduce
<
/
string
>
<
string
>
nativeReduceRight
<
/
string
>
<
string
>
nativeSome
<
/
string
>
<
string
>
noMatch
<
/
string
>
<
string
>
previousUnderscore
<
/
string
>
<
string
>
push
<
/
string
>
<
string
>
reduceError
<
/
string
>
<
string
>
result
<
/
string
>
<
string
>
root
<
/
string
>
<
string
>
slice
<
/
string
>
<
string
>
toString
<
/
string
>
<
/
list
>
<
list
>
!
<
string
>
ArrayProto
<
/
string
>
<
string
>
_
<
/
string
>
<
string
>
any
<
/
string
>
<
string
>
breaker
<
/
string
>
<
string
>
concat
<
/
string
>
<
string
>
ctor
<
/
string
>
<
string
>
each
<
/
string
>
<
string
>
entityMap
<
/
string
>
<
string
>
entityRegexes
<
/
string
>
<
string
>
eq
<
/
string
>
<
string
>
escaper
<
/
string
>
<
string
>
escapes
<
/
string
>
<
string
>
flatten
<
/
string
>
<
string
>
hasOwnProperty
<
/
string
>
<
string
>
lookupIterator
<
/
string
>
<
string
>
nativeBind
<
/
string
>
<
string
>
nativeEvery
<
/
string
>
<
string
>
nativeFilter
<
/
string
>
<
string
>
nativeForEach
<
/
string
>
<
string
>
nativeIndexOf
<
/
string
>
<
string
>
nativeLastIndexOf
<
/
string
>
<
string
>
nativeMap
<
/
string
>
<
string
>
nativeReduce
<
/
string
>
<
string
>
nativeReduceRight
<
/
string
>
<
string
>
nativeSome
<
/
string
>
<
string
>
noMatch
<
/
string
>
<
string
>
previousUnderscore
<
/
string
>
<
string
>
push
<
/
string
>
<
string
>
reduceError
<
/
string
>
<
string
>
result
<
/
string
>
<
string
>
root
<
/
string
>
<
string
>
slice
<
/
string
>
<
string
>
toString
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
t
t
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
root
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
R
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
previousUnderscore
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
root
<
/
string
>
<
/
tuple
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
breaker
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Array
<
/
string
>
<
/
tuple
>
<
string
>
prototype
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
ObjProto
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Object
<
/
string
>
<
/
tuple
>
<
string
>
prototype
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
FuncProto
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Function
<
/
string
>
<
/
tuple
>
<
string
>
prototype
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
toString
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ObjProto
<
/
string
>
<
/
tuple
>
<
string
>
toString
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
hasOwnProperty
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ObjProto
<
/
string
>
<
/
tuple
>
<
string
>
hasOwnProperty
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeForEach
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
forEach
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeMap
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
map
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeReduce
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
reduce
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeReduceRight
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
reduceRight
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeFilter
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
filter
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeEvery
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
every
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeSome
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
some
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeIndexOf
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
indexOf
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeLastIndexOf
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
string
>
lastIndexOf
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeIsArray
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Array
<
/
string
>
<
/
tuple
>
<
string
>
isArray
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeKeys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Object
<
/
string
>
<
/
tuple
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
nativeBind
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
FuncProto
<
/
string
>
<
/
tuple
>
<
string
>
bind
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
p
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
L
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
instanceof
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
instanceof
<
/
string
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
string
>
_wrapped
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
=
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
typeof
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
exports
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
undefined
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
)
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
=
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
typeof
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
module
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
undefined
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
module
<
/
string
>
<
/
tuple
>
<
string
>
exports
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
=
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
exports
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
module
<
/
string
>
<
/
tuple
>
<
string
>
exports
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
exports
<
/
string
>
<
/
tuple
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
root
<
/
string
>
<
/
tuple
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
VERSION
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
1
.
5
.
2
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
'
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
forEach
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
U
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
N
<
string
>
i
<
/
string
>
<
string
>
keys
<
/
string
>
<
string
>
length
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
;
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeForEach
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
forEach
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeForEach
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
forEach
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
o
<
tuple
>
<
head
>
ForStatement
init
test
update
body
<
/
head
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
u
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
breaker
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ForStatement
init
test
update
body
<
/
head
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
%
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
breaker
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
map
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
collect
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
U
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
=
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
results
<
/
string
>
<
/
list
>
<
list
>
<
string
>
results
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeMap
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
map
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeMap
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
map
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
l
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
index
<
/
string
>
<
string
>
list
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
list
>
a
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
U
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
reduceError
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
+
Reduce
of
empty
array
with
no
initial
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
reduce
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
foldl
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
inject
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
n
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
memo
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
V
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
memo
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
initial
<
/
string
>
<
/
list
>
<
list
>
<
string
>
initial
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
J
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
|
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
>
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeReduce
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
reduce
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeReduce
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
P
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
bind
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
reduce
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
reduce
<
/
string
>
<
/
tuple
>
<
list
>
[
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
index
<
/
string
>
<
string
>
list
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
[
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ThrowStatement
expression
<
/
head
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
TypeError
<
/
string
>
<
/
tuple
>
<
list
>
^
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
reduceError
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
reduceRight
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
foldr
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
n
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
memo
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
n
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
memo
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
T
<
string
>
initial
<
/
string
>
<
string
>
keys
<
/
string
>
<
string
>
length
<
/
string
>
<
/
list
>
<
list
>
9
<
string
>
initial
<
/
string
>
<
string
>
keys
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
J
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
Q
+
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
>
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeReduceRight
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
reduceRight
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeReduceRight
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
Z
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
bind
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
reduceRight
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
reduceRight
<
/
string
>
<
/
tuple
>
<
list
>
[
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
J
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
[
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
index
<
/
string
>
<
string
>
list
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
-
-
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
-
-
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
1
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
E
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ThrowStatement
expression
<
/
head
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
TypeError
<
/
string
>
<
/
tuple
>
<
list
>
^
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
reduceError
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
find
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
detect
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
U
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
=
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
result
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
Q
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
any
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
index
<
/
string
>
<
string
>
list
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
U
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
filter
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
select
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
U
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
=
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
results
<
/
string
>
<
/
list
>
<
list
>
<
string
>
results
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
X
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeFilter
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
filter
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeFilter
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
filter
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
index
<
/
string
>
<
string
>
list
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
k
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
U
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
reject
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
U
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
=
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
L
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
filter
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
index
<
/
string
>
<
string
>
list
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
U
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
every
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
all
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
U
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
=
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
result
<
/
string
>
<
/
list
>
<
list
>
<
string
>
result
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
identity
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeEvery
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
every
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeEvery
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
every
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
index
<
/
string
>
<
string
>
list
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
U
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
breaker
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
~
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
any
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
some
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
any
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
U
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
=
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
result
<
/
string
>
<
/
list
>
<
list
>
<
string
>
result
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
identity
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeSome
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
some
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeSome
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
some
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
s
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
index
<
/
string
>
<
string
>
list
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
U
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
breaker
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
contains
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
include
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
7
<
string
>
obj
<
/
string
>
<
string
>
target
<
/
string
>
<
/
list
>
<
list
>
<
string
>
target
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
target
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeIndexOf
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
indexOf
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeIndexOf
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
indexOf
<
/
string
>
<
/
tuple
>
<
list
>
Y
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
target
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
any
<
/
string
>
<
/
tuple
>
<
list
>
2
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
E
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
target
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
invoke
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
7
<
string
>
method
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
string
>
method
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
8
<
string
>
args
<
/
string
>
<
string
>
isFunc
<
/
string
>
<
/
list
>
<
list
>
8
<
string
>
args
<
/
string
>
<
string
>
isFunc
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
isFunc
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isFunction
<
/
string
>
<
/
tuple
>
<
list
>
Y
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
map
<
/
string
>
<
/
tuple
>
<
list
>
w
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isFunc
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
pluck
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
4
<
string
>
key
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
string
>
key
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
\
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
map
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
0
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
where
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
P
<
string
>
attrs
<
/
string
>
<
string
>
first
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
string
>
attrs
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
attrs
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
first
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isEmpty
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
attrs
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
first
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
void
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
first
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
find
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
filter
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
key
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
M
<
tuple
>
<
head
>
ForInStatement
left
right
body
<
/
head
>
<
tuple
>
<
head
>
ForInOfBinding
kind
binding
<
/
head
>
<
string
>
var
<
/
string
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
attrs
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
*
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
=
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
attrs
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
findWhere
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
6
<
string
>
attrs
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
attrs
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
+
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
where
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
attrs
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
U
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
=
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
result
<
/
string
>
<
/
list
>
<
list
>
<
string
>
result
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
!
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isArray
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
L
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isEmpty
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Infinity
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
h
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Infinity
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Infinity
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
index
<
/
string
>
<
string
>
list
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
!
<
string
>
computed
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
U
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
>
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
min
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
U
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
=
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
result
<
/
string
>
<
/
list
>
<
list
>
<
string
>
result
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isArray
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
L
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
string
>
min
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isEmpty
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Infinity
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Infinity
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Infinity
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
index
<
/
string
>
<
string
>
list
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
!
<
string
>
computed
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
U
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
computed
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
shuffle
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
T
<
string
>
index
<
/
string
>
<
string
>
rand
<
/
string
>
<
string
>
shuffled
<
/
string
>
<
/
list
>
<
list
>
T
<
string
>
index
<
/
string
>
<
string
>
rand
<
/
string
>
<
string
>
shuffled
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
rand
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
shuffled
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
rand
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
random
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
shuffled
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
shuffled
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
rand
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
shuffled
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
rand
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
shuffled
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
sample
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
L
<
string
>
guard
<
/
string
>
<
string
>
n
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
guard
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
S
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
guard
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
9
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
random
<
/
string
>
<
/
tuple
>
<
list
>
Z
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
shuffle
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
T
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
lookupIterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
string
>
value
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isFunction
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
0
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
sortBy
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
R
<
string
>
context
<
/
string
>
<
string
>
obj
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
string
>
context
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
!
<
string
>
iterator
<
/
string
>
<
/
list
>
<
list
>
!
<
string
>
iterator
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
lookupIterator
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
pluck
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
map
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
index
<
/
string
>
<
string
>
list
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
K
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
criteria
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
U
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
string
>
sort
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
7
<
string
>
left
<
/
string
>
<
string
>
right
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
0
<
string
>
a
<
/
string
>
<
string
>
b
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
left
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
right
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
H
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
left
<
/
string
>
<
/
tuple
>
<
string
>
criteria
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
I
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
right
<
/
string
>
<
/
tuple
>
<
string
>
criteria
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
>
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
void
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
void
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
left
<
/
string
>
<
/
tuple
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
right
<
/
string
>
<
/
tuple
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
6
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
group
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
!
<
string
>
behavior
<
/
string
>
<
/
list
>
<
list
>
!
<
string
>
behavior
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
X
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
behavior
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
R
<
string
>
context
<
/
string
>
<
string
>
obj
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
8
<
string
>
context
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
<
string
>
iterator
<
/
string
>
<
string
>
result
<
/
string
>
<
/
list
>
<
list
>
<
<
string
>
iterator
<
/
string
>
<
string
>
result
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
identity
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
lookupIterator
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
F
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
8
<
string
>
index
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
key
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
G
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
T
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
behavior
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
groupBy
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
group
<
/
string
>
<
/
tuple
>
<
list
>
6
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
key
<
/
string
>
<
string
>
result
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
has
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
indexBy
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
group
<
/
string
>
<
/
tuple
>
<
list
>
F
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
Q
<
string
>
key
<
/
string
>
<
string
>
result
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
countBy
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
group
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
7
<
string
>
key
<
/
string
>
<
string
>
result
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
has
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
sortedIndex
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
o
<
string
>
array
<
/
string
>
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
g
<
string
>
high
<
/
string
>
<
string
>
low
<
/
string
>
<
string
>
mid
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
K
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
identity
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
lookupIterator
<
/
string
>
<
/
tuple
>
<
list
>
[
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
I
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
low
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
high
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
WhileStatement
test
body
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
low
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
high
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
7
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
mid
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
>
>
>
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
low
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
high
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
K
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
mid
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
low
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
mid
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
high
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
mid
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
low
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
toArray
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
_
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isArray
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
map
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
identity
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
values
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
size
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
first
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
head
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
take
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
N
<
string
>
array
<
/
string
>
<
string
>
guard
<
/
string
>
<
string
>
n
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
guard
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
)
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
void
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
guard
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
N
<
string
>
array
<
/
string
>
<
string
>
guard
<
/
string
>
<
string
>
n
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
guard
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
m
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
)
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
guard
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
last
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
N
<
string
>
array
<
/
string
>
<
string
>
guard
<
/
string
>
<
string
>
n
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
guard
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
g
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
void
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
guard
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
6
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
K
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
rest
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
tail
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
drop
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
N
<
string
>
array
<
/
string
>
<
string
>
guard
<
/
string
>
<
string
>
n
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
guard
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
guard
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
compact
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
array
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
N
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
filter
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
identity
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
W
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
flatten
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
U
<
string
>
input
<
/
string
>
<
string
>
output
<
/
string
>
<
string
>
shallow
<
/
string
>
<
/
list
>
<
list
>
;
<
string
>
output
<
/
string
>
<
string
>
shallow
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
input
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
shallow
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
output
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
shallow
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
every
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
input
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isArray
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
output
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
input
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
input
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isArray
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isArguments
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
E
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
shallow
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
output
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
flatten
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
shallow
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
output
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
output
<
/
string
>
<
/
tuple
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
output
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
flatten
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
:
<
string
>
array
<
/
string
>
<
string
>
shallow
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
shallow
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
flatten
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
shallow
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
without
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
array
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
F
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
difference
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
uniq
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
unique
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
t
<
string
>
array
<
/
string
>
<
string
>
context
<
/
string
>
<
string
>
isSorted
<
/
string
>
<
string
>
iterator
<
/
string
>
<
/
list
>
<
list
>
;
<
string
>
array
<
/
string
>
<
string
>
isSorted
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
U
<
string
>
initial
<
/
string
>
<
string
>
results
<
/
string
>
<
string
>
seen
<
/
string
>
<
/
list
>
<
list
>
9
<
string
>
results
<
/
string
>
<
string
>
seen
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
P
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
j
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isFunction
<
/
string
>
<
/
tuple
>
<
list
>
[
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
map
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
seen
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
q
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
initial
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
8
<
string
>
index
<
/
string
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
=
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
seen
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
seen
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
contains
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
seen
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
seen
<
/
string
>
<
/
tuple
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
union
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
uniq
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
flatten
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
intersection
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
array
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
rest
<
/
string
>
<
/
list
>
<
list
>
<
string
>
rest
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
rest
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
filter
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
uniq
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
item
<
/
string
>
<
/
list
>
<
list
>
<
string
>
item
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
T
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
item
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
every
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
rest
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
other
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
other
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
>
=
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
indexOf
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
other
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
item
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
difference
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
array
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
rest
<
/
string
>
<
/
list
>
<
list
>
<
string
>
rest
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
rest
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
filter
<
/
string
>
<
/
tuple
>
<
list
>
5
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
F
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
contains
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
rest
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
zip
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
Q
<
string
>
i
<
/
string
>
<
string
>
length
<
/
string
>
<
string
>
results
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
O
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
pluck
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
list
>
K
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Array
<
/
string
>
<
/
tuple
>
<
list
>
Y
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ForStatement
init
test
update
body
<
/
head
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
pluck
<
/
string
>
<
/
tuple
>
<
list
>
Z
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
results
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
object
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
8
<
string
>
list
<
/
string
>
<
string
>
values
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
P
<
string
>
i
<
/
string
>
<
string
>
length
<
/
string
>
<
string
>
result
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
values
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
x
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ForStatement
init
test
update
body
<
/
head
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
values
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
values
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
1
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
list
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
indexOf
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
T
<
string
>
array
<
/
string
>
<
string
>
isSorted
<
/
string
>
<
string
>
item
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
5
<
string
>
i
<
/
string
>
<
string
>
length
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
item
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
typeof
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
number
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
list
>
R
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
sortedIndex
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
item
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
item
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeIndexOf
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
string
>
indexOf
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeIndexOf
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
string
>
indexOf
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
item
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isSorted
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ForStatement
init
test
update
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
item
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
lastIndexOf
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
P
<
string
>
array
<
/
string
>
<
string
>
from
<
/
string
>
<
string
>
item
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
7
<
string
>
hasIndex
<
/
string
>
<
string
>
i
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
item
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
from
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
7
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
}
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
hasIndex
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
from
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeLastIndexOf
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
string
>
lastIndexOf
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeLastIndexOf
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
hasIndex
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
string
>
lastIndexOf
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
item
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
from
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
string
>
lastIndexOf
<
/
string
>
<
/
tuple
>
<
list
>
W
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
item
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
A
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
hasIndex
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
from
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
WhileStatement
test
body
<
/
head
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
-
-
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
array
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
item
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
range
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
P
<
string
>
start
<
/
string
>
<
string
>
step
<
/
string
>
<
string
>
stop
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
Q
<
string
>
idx
<
/
string
>
<
string
>
length
<
/
string
>
<
string
>
range
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
start
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
stop
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
step
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
stop
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
start
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
start
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
step
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
string
>
ceil
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
/
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
stop
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
start
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
step
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
idx
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
range
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Array
<
/
string
>
<
/
tuple
>
<
list
>
Y
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
WhileStatement
test
body
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
idx
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
range
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
idx
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
start
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CompoundAssignmentExpression
operator
binding
expression
<
/
head
>
<
string
>
+
=
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
start
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
step
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
range
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
]
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
ctor
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
bind
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
9
<
string
>
context
<
/
string
>
<
string
>
func
<
/
string
>
<
/
list
>
<
list
>
9
<
string
>
context
<
/
string
>
<
string
>
func
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
7
<
string
>
args
<
/
string
>
<
string
>
bound
<
/
string
>
<
/
list
>
<
list
>
7
<
string
>
args
<
/
string
>
<
string
>
bound
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
#
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
q
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
bound
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeBind
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
bind
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeBind
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeBind
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isFunction
<
/
string
>
<
/
tuple
>
<
list
>
W
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ThrowStatement
expression
<
/
head
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
TypeError
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
bound
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
8
<
string
>
result
<
/
string
>
<
string
>
self
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
instanceof
<
/
string
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
bound
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
list
>
e
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
\
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ctor
<
/
string
>
<
/
tuple
>
<
string
>
prototype
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
prototype
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
;
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
self
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ctor
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ctor
<
/
string
>
<
/
tuple
>
<
string
>
prototype
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
]
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
self
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
list
>
e
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
\
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Object
<
/
string
>
<
/
tuple
>
<
list
>
Y
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
self
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
partial
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
func
<
/
string
>
<
/
list
>
<
list
>
<
string
>
func
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
args
<
/
string
>
<
/
list
>
<
list
>
<
string
>
args
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
T
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
list
>
e
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
\
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
bindAll
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
funcs
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
=
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
funcs
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
funcs
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ThrowStatement
expression
<
/
head
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Error
<
/
string
>
<
/
tuple
>
<
list
>
|
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
%
bindAll
must
be
passed
function
names
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
funcs
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
f
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
Q
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
f
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
f
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
bind
<
/
string
>
<
/
tuple
>
<
list
>
C
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
f
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
memoize
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
8
<
string
>
func
<
/
string
>
<
string
>
hasher
<
/
string
>
<
/
list
>
<
list
>
8
<
string
>
func
<
/
string
>
<
string
>
hasher
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
memo
<
/
string
>
<
/
list
>
<
list
>
<
string
>
memo
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
hasher
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
hasher
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
hasher
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
identity
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
key
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
%
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
hasher
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
has
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
delay
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
6
<
string
>
func
<
/
string
>
<
string
>
wait
<
/
string
>
<
/
list
>
<
list
>
<
string
>
func
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
args
<
/
string
>
<
/
list
>
<
list
>
<
string
>
args
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
wait
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
setTimeout
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
wait
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
defer
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
func
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
T
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
=
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
delay
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
throttle
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
R
<
string
>
func
<
/
string
>
<
string
>
options
<
/
string
>
<
string
>
wait
<
/
string
>
<
/
list
>
<
list
>
R
<
string
>
func
<
/
string
>
<
string
>
options
<
/
string
>
<
string
>
wait
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
args
<
/
string
>
<
string
>
context
<
/
string
>
<
string
>
later
<
/
string
>
<
string
>
previous
<
/
string
>
<
string
>
result
<
/
string
>
<
string
>
timeout
<
/
string
>
<
/
list
>
<
list
>
<
string
>
args
<
/
string
>
<
string
>
context
<
/
string
>
<
string
>
later
<
/
string
>
<
string
>
previous
<
/
string
>
<
string
>
result
<
/
string
>
<
string
>
timeout
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
wait
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
options
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
X
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
+
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
previous
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
options
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
options
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
later
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
)
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
previous
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
options
<
/
string
>
<
/
tuple
>
<
string
>
leading
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Date
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
:
<
string
>
now
<
/
string
>
<
string
>
remaining
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
:
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
now
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Date
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
previous
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
options
<
/
string
>
<
/
tuple
>
<
string
>
leading
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
previous
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
now
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
K
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
remaining
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
wait
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
now
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
previous
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
remaining
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
clearTimeout
<
/
string
>
<
/
tuple
>
<
list
>
Z
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
previous
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
now
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
options
<
/
string
>
<
/
tuple
>
<
string
>
trailing
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
A
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
setTimeout
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
later
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
remaining
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
debounce
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
T
<
string
>
func
<
/
string
>
<
string
>
immediate
<
/
string
>
<
string
>
wait
<
/
string
>
<
/
list
>
<
list
>
T
<
string
>
func
<
/
string
>
<
string
>
immediate
<
/
string
>
<
string
>
wait
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
args
<
/
string
>
<
string
>
context
<
/
string
>
<
string
>
result
<
/
string
>
<
string
>
timeout
<
/
string
>
<
string
>
timestamp
<
/
string
>
<
/
list
>
<
list
>
<
string
>
args
<
/
string
>
<
string
>
context
<
/
string
>
<
string
>
result
<
/
string
>
<
string
>
timeout
<
/
string
>
<
string
>
timestamp
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
wait
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
immediate
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
timestamp
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
:
<
string
>
callNow
<
/
string
>
<
string
>
later
<
/
string
>
<
/
list
>
<
list
>
<
string
>
later
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
timestamp
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Date
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
;
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
later
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
last
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
9
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
last
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Date
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
timestamp
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
last
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
wait
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
setTimeout
<
/
string
>
<
/
tuple
>
<
list
>
Y
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
later
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
wait
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
last
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
immediate
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
callNow
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
immediate
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
timeout
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
setTimeout
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
later
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
wait
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
callNow
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
once
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
func
<
/
string
>
<
/
list
>
<
list
>
<
string
>
func
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
5
<
string
>
memo
<
/
string
>
<
string
>
ran
<
/
string
>
<
/
list
>
<
list
>
5
<
string
>
memo
<
/
string
>
<
string
>
ran
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
T
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
~
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
ran
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ran
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
ran
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
memo
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
wrap
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
9
<
string
>
func
<
/
string
>
<
string
>
wrapper
<
/
string
>
<
/
list
>
<
list
>
9
<
string
>
func
<
/
string
>
<
string
>
wrapper
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
wrapper
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
args
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
c
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
5
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
W
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
wrapper
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
compose
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
funcs
<
/
string
>
<
/
list
>
<
list
>
<
string
>
funcs
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
funcs
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
3
<
string
>
args
<
/
string
>
<
string
>
i
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ForStatement
init
test
update
body
<
/
head
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
funcs
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
>
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
-
-
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
Y
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
+
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
funcs
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
after
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
7
<
string
>
func
<
/
string
>
<
string
>
times
<
/
string
>
<
/
list
>
<
list
>
<
string
>
func
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
times
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
-
-
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
times
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeKeys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
5
<
string
>
key
<
/
string
>
<
string
>
keys
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
!
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Object
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ThrowStatement
expression
<
/
head
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
TypeError
<
/
string
>
<
/
tuple
>
<
list
>
e
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
Invalid
object
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ForInStatement
left
right
body
<
/
head
>
<
tuple
>
<
head
>
ForInOfBinding
kind
binding
<
/
head
>
<
string
>
var
<
/
string
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
has
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
values
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
i
<
string
>
i
<
/
string
>
<
string
>
keys
<
/
string
>
<
string
>
length
<
/
string
>
<
string
>
values
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
c
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
K
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
values
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Array
<
/
string
>
<
/
tuple
>
<
list
>
Y
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ForStatement
init
test
update
body
<
/
head
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
values
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
values
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
pairs
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
h
<
string
>
i
<
/
string
>
<
string
>
keys
<
/
string
>
<
string
>
length
<
/
string
>
<
string
>
pairs
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
K
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
pairs
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Array
<
/
string
>
<
/
tuple
>
<
list
>
Y
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ForStatement
init
test
update
body
<
/
head
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
G
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
pairs
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
}
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
pairs
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
invert
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
i
<
string
>
i
<
/
string
>
<
string
>
keys
<
/
string
>
<
string
>
length
<
/
string
>
<
string
>
result
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ForStatement
init
test
update
body
<
/
head
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
functions
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
methods
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
6
<
string
>
key
<
/
string
>
<
string
>
names
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
?
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
names
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ForInStatement
left
right
body
<
/
head
>
<
tuple
>
<
head
>
ForInOfBinding
kind
binding
<
/
head
>
<
string
>
var
<
/
string
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isFunction
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
names
<
/
string
>
<
/
tuple
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
names
<
/
string
>
<
/
tuple
>
<
string
>
sort
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
extend
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
source
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
prop
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
V
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
Q
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ForInStatement
left
right
body
<
/
head
>
<
tuple
>
<
head
>
ForInOfBinding
kind
binding
<
/
head
>
<
string
>
var
<
/
string
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
prop
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
t
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
prop
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
prop
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
pick
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
6
<
string
>
copy
<
/
string
>
<
string
>
keys
<
/
string
>
<
/
list
>
<
list
>
<
string
>
copy
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
copy
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
key
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
in
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
copy
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
copy
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
omit
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
N
<
string
>
copy
<
/
string
>
<
string
>
key
<
/
string
>
<
string
>
keys
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
v
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
copy
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ForInStatement
left
right
body
<
/
head
>
<
tuple
>
<
head
>
ForInOfBinding
kind
binding
<
/
head
>
<
string
>
var
<
/
string
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
contains
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
copy
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
copy
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
defaults
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
source
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
prop
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
V
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
x
<
tuple
>
<
head
>
ForInStatement
left
right
body
<
/
head
>
<
tuple
>
<
head
>
ForInOfBinding
kind
binding
<
/
head
>
<
string
>
var
<
/
string
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
prop
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
prop
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
void
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
prop
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
prop
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
clone
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
F
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isObject
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isArray
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
extend
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
tap
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
<
string
>
interceptor
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
interceptor
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
interceptor
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
?
s
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
eq
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
f
<
string
>
a
<
/
string
>
<
string
>
aStack
<
/
string
>
<
string
>
b
<
/
string
>
<
string
>
bStack
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
aCtor
<
/
string
>
<
string
>
bCtor
<
/
string
>
<
string
>
className
<
/
string
>
<
string
>
key
<
/
string
>
<
string
>
length
<
/
string
>
<
string
>
result
<
/
string
>
<
string
>
size
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
B
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
aStack
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
bStack
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
m
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
/
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
/
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
instanceof
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
string
>
_wrapped
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
instanceof
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
string
>
_wrapped
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
className
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
toString
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
T
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
className
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
toString
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
T
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
SwitchStatement
discriminant
cases
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
className
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
SwitchCase
test
consequent
<
/
head
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
[
object
String
]
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
String
<
/
string
>
<
/
tuple
>
<
list
>
T
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
SwitchCase
test
consequent
<
/
head
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
[
object
Number
]
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
/
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
/
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
SwitchCase
test
consequent
<
/
head
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
[
object
Date
]
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
SwitchCase
test
consequent
<
/
head
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
[
object
Boolean
]
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
SwitchCase
test
consequent
<
/
head
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
[
object
RegExp
]
<
/
string
>
<
/
tuple
>
<
list
>
a
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
string
>
global
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
string
>
global
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
string
>
multiline
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
string
>
multiline
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
string
>
ignoreCase
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
string
>
ignoreCase
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
typeof
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
object
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
typeof
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
object
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
M
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
aStack
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
WhileStatement
test
body
<
/
head
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
-
-
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
aStack
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
bStack
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
aCtor
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
string
>
constructor
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
bCtor
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
string
>
constructor
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
aCtor
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
bCtor
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isFunction
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
aCtor
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
instanceof
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
aCtor
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
aCtor
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isFunction
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
bCtor
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
instanceof
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
bCtor
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
bCtor
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
aStack
<
/
string
>
<
/
tuple
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
list
>
T
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
bStack
<
/
string
>
<
/
tuple
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
list
>
T
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
size
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
className
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
[
object
Array
]
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
Q
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
size
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
size
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
I
<
tuple
>
<
head
>
WhileStatement
test
body
<
/
head
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
-
-
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
size
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
eq
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
size
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
size
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
aStack
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
bStack
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BreakStatement
label
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ForInStatement
left
right
body
<
/
head
>
<
tuple
>
<
head
>
ForInOfBinding
kind
binding
<
/
head
>
<
string
>
var
<
/
string
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
a
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
has
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
size
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
has
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
eq
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
aStack
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
bStack
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BreakStatement
label
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ForInStatement
left
right
body
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
has
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
-
-
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
size
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BreakStatement
label
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
size
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
aStack
<
/
string
>
<
/
tuple
>
<
string
>
pop
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
bStack
<
/
string
>
<
/
tuple
>
<
string
>
pop
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isEqual
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
0
<
string
>
a
<
/
string
>
<
string
>
b
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
!
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
eq
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
a
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
b
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isEmpty
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
key
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isArray
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isString
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ForInStatement
left
right
body
<
/
head
>
<
tuple
>
<
head
>
ForInOfBinding
kind
binding
<
/
head
>
<
string
>
var
<
/
string
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
has
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isElement
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
nodeType
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isArray
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
nativeIsArray
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
Z
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
toString
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
[
object
Array
]
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isObject
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Object
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
Arguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
Function
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
String
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
Number
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
Date
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
RegExp
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
name
<
/
string
>
<
/
list
>
<
list
>
<
string
>
name
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
T
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
s
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
is
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
toString
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
[
object
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
]
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isArguments
<
/
string
>
<
/
tuple
>
<
list
>
\
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
%
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isArguments
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
J
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
has
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
callee
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
=
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
typeof
<
/
string
>
<
tuple
>
<
head
>
LiteralRegExpExpression
pattern
flags
<
/
head
>
<
string
>
.
<
/
string
>
<
string
>
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
function
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isFunction
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
typeof
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
function
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isFinite
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isFinite
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
isNaN
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
parseFloat
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isNaN
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
M
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isNumber
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
!
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isBoolean
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
toString
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
[
object
Boolean
]
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isNull
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isUndefined
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
void
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
has
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
4
<
string
>
key
<
/
string
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
hasOwnProperty
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
key
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
noConflict
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
root
<
/
string
>
<
/
tuple
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
previousUnderscore
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
identity
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
times
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
S
<
string
>
context
<
/
string
>
<
string
>
iterator
<
/
string
>
<
string
>
n
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
4
<
string
>
accum
<
/
string
>
<
string
>
i
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
H
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
accum
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Array
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ForStatement
init
test
update
body
<
/
head
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
<
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
accum
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
iterator
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
context
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
i
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
accum
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
random
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
4
<
string
>
max
<
/
string
>
<
string
>
min
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
min
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
[
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
min
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
min
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
min
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
string
>
floor
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
*
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Math
<
/
string
>
<
/
tuple
>
<
string
>
random
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
-
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
max
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
min
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
?
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
F
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
entityMap
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
escape
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
}
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
&
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
&
amp
;
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
<
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
&
lt
;
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
>
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
&
gt
;
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
"
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
&
quot
;
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
'
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
&
#
x27
;
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
entityMap
<
/
string
>
<
/
tuple
>
<
string
>
unescape
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
invert
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
entityMap
<
/
string
>
<
/
tuple
>
<
string
>
escape
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
[
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
entityRegexes
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
q
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
escape
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
RegExp
<
/
string
>
<
/
tuple
>
<
list
>
}
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
[
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
entityMap
<
/
string
>
<
/
tuple
>
<
string
>
escape
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
string
>
join
<
/
string
>
<
/
tuple
>
<
list
>
W
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
]
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
g
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
unescape
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
RegExp
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
(
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
keys
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
entityMap
<
/
string
>
<
/
tuple
>
<
string
>
unescape
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
string
>
join
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
|
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
)
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
g
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
escape
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
unescape
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
method
<
/
string
>
<
/
list
>
<
list
>
<
string
>
method
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
V
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
^
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
string
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
V
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
string
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
D
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
string
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
string
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
string
>
replace
<
/
string
>
<
/
tuple
>
<
list
>
m
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
entityRegexes
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
match
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
match
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
entityMap
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
match
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
<
string
>
object
<
/
string
>
<
string
>
property
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
value
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
object
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
property
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
object
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNullExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
void
<
/
string
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
object
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
property
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
isFunction
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
Y
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
object
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
mixin
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
/
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
functions
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
name
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
func
<
/
string
>
<
/
list
>
<
list
>
<
string
>
func
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
T
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
y
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
prototype
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
args
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
u
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
string
>
_wrapped
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
func
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
args
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
idCounter
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
uniqueId
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
prefix
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
id
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
V
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
prefix
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
id
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
UpdateExpression
isPrefix
operator
operand
<
/
head
>
<
string
>
+
+
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
idCounter
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
prefix
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
prefix
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
id
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
id
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
templateSettings
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
evaluate
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralRegExpExpression
pattern
flags
<
/
head
>
<
string
>
<
%
(
[
\
s
\
S
]
+
?
)
%
>
<
/
string
>
<
string
>
g
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
interpolate
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralRegExpExpression
pattern
flags
<
/
head
>
<
string
>
<
%
=
(
[
\
s
\
S
]
+
?
)
%
>
<
/
string
>
<
string
>
g
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
escape
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralRegExpExpression
pattern
flags
<
/
head
>
<
string
>
<
%
-
(
[
\
s
\
S
]
+
?
)
%
>
<
/
string
>
<
string
>
g
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
noMatch
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralRegExpExpression
pattern
flags
<
/
head
>
<
string
>
(
.
)
^
<
/
string
>
<
string
>
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
escapes
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
7
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
'
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
'
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
\
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
\
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
r
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
n
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
t
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
u2028
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
u2029
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
#
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
escaper
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralRegExpExpression
pattern
flags
<
/
head
>
<
string
>
\
\
|
'
|
\
r
|
\
n
|
\
t
|
\
u2028
|
\
u2029
<
/
string
>
<
string
>
g
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
template
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
S
<
string
>
data
<
/
string
>
<
string
>
settings
<
/
string
>
<
string
>
text
<
/
string
>
<
/
list
>
<
list
>
<
string
>
text
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
index
<
/
string
>
<
string
>
matcher
<
/
string
>
<
string
>
render
<
/
string
>
<
string
>
source
<
/
string
>
<
string
>
template
<
/
string
>
<
/
list
>
<
list
>
9
<
string
>
index
<
/
string
>
<
string
>
render
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
text
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
data
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
settings
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
xL
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
render
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
settings
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
defaults
<
/
string
>
<
/
tuple
>
<
list
>
h
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
settings
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
templateSettings
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
matcher
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
RegExp
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
r
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
settings
<
/
string
>
<
/
tuple
>
<
string
>
escape
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
noMatch
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
settings
<
/
string
>
<
/
tuple
>
<
string
>
interpolate
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
noMatch
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
settings
<
/
string
>
<
/
tuple
>
<
string
>
evaluate
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
noMatch
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
string
>
join
<
/
string
>
<
/
tuple
>
<
list
>
X
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
|
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
|
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
g
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
__p
+
=
'
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
text
<
/
string
>
<
/
tuple
>
<
string
>
replace
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
matcher
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
escape
<
/
string
>
<
string
>
evaluate
<
/
string
>
<
string
>
interpolate
<
/
string
>
<
string
>
match
<
/
string
>
<
string
>
offset
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
match
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
escape
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
interpolate
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
evaluate
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
offset
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
D
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CompoundAssignmentExpression
operator
binding
expression
<
/
head
>
<
string
>
+
=
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
text
<
/
string
>
<
/
tuple
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
offset
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
string
>
replace
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
escaper
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
match
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
U
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
match
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
\
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
escapes
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
match
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
escape
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CompoundAssignmentExpression
operator
binding
expression
<
/
head
>
<
string
>
+
=
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
'
+
(
(
__t
=
(
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
escape
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
)
)
=
=
null
?
'
'
:
_
.
escape
(
__t
)
)
+
'
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
interpolate
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CompoundAssignmentExpression
operator
binding
expression
<
/
head
>
<
string
>
+
=
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
'
+
(
(
__t
=
(
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
interpolate
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
)
)
=
=
null
?
'
'
:
__t
)
+
'
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
evaluate
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CompoundAssignmentExpression
operator
binding
expression
<
/
head
>
<
string
>
+
=
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
'
;
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
evaluate
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
__p
+
=
'
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
index
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
offset
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
match
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
match
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CompoundAssignmentExpression
operator
binding
expression
<
/
head
>
<
string
>
+
=
<
/
string
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
'
;
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
!
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
settings
<
/
string
>
<
/
tuple
>
<
string
>
variable
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
with
(
obj
|
|
{
}
)
{
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
}
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
(
var
__t
__p
=
'
'
__j
=
Array
.
prototype
.
join
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
0
print
=
function
(
)
{
__p
+
=
__j
.
call
(
arguments
'
'
)
;
}
;
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
return
__p
;
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
TryCatchStatement
body
catchClause
<
/
head
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentTargetIdentifier
name
<
/
head
>
<
string
>
render
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
NewExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
Function
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
settings
<
/
string
>
<
/
tuple
>
<
string
>
variable
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
CatchClause
binding
body
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
e
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
Block
scope
statements
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
list
>
"
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
e
<
/
string
>
<
/
tuple
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ThrowStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
e
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
data
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
render
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
data
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
H
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
template
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
data
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
T
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
data
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
render
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
data
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
template
<
/
string
>
<
/
tuple
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
+
<
/
string
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
function
(
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
settings
<
/
string
>
<
/
tuple
>
<
string
>
variable
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
)
{
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
source
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
}
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
template
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
chain
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
string
>
chain
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
H
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
S
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ConditionalExpression
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
string
>
_chain
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
list
>
V
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
string
>
chain
<
/
string
>
<
/
tuple
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
mixin
<
/
string
>
<
/
tuple
>
<
list
>
T
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
m
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
pop
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
push
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
reverse
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
shift
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
sort
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
splice
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
unshift
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
name
<
/
string
>
<
/
list
>
<
list
>
<
string
>
name
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
method
<
/
string
>
<
/
list
>
<
list
>
<
string
>
method
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
T
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
prototype
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
obj
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
\
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
&
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
string
>
_wrapped
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
IfStatement
test
consequent
alternate
<
/
head
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
&
&
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
|
|
<
/
string
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
shift
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
<
/
string
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
splice
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
BinaryExpression
operator
left
right
<
/
head
>
<
string
>
=
=
=
<
/
string
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
string
>
length
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
UnaryExpression
operator
operand
<
/
head
>
<
string
>
delete
<
/
string
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralNumericExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
obj
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
each
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
ArrayExpression
elements
<
/
head
>
<
list
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
concat
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
join
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralStringExpression
value
<
/
head
>
<
string
>
slice
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
AssertedParameterScope
parameterNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
string
>
name
<
/
string
>
<
/
list
>
<
list
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
AssertedVarScope
lexicallyDeclaredNames
varDeclaredNames
capturedNames
hasDirectEval
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
string
>
method
<
/
string
>
<
/
list
>
<
list
>
<
string
>
method
<
/
string
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
T
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
VariableDeclaration
kind
declarators
<
/
head
>
<
string
>
var
<
/
string
>
<
list
>
<
tuple
>
<
head
>
VariableDeclarator
binding
init
<
/
head
>
<
tuple
>
<
head
>
BindingIdentifier
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ComputedMemberExpression
object
expression
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
ArrayProto
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
ComputedMemberAssignmentTarget
object
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
prototype
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
name
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
n
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
result
<
/
string
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
)
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
method
<
/
string
>
<
/
tuple
>
<
string
>
apply
<
/
string
>
<
/
tuple
>
<
list
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
string
>
_wrapped
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
arguments
<
/
string
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
CallExpression
callee
arguments
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
extend
<
/
string
>
<
/
tuple
>
<
list
>
T
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
IdentifierExpression
name
<
/
head
>
<
string
>
_
<
/
string
>
<
/
tuple
>
<
string
>
prototype
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
ObjectExpression
properties
<
/
head
>
<
list
>
N
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
chain
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ExpressionStatement
expression
<
/
head
>
<
tuple
>
<
head
>
AssignmentExpression
binding
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberAssignmentTarget
object
property
<
/
head
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
string
>
_chain
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
LiteralBooleanExpression
value
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
DataProperty
name
expression
<
/
head
>
<
tuple
>
<
head
>
LiteralPropertyName
value
<
/
head
>
<
string
>
value
<
/
string
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionExpression
isAsync
isGenerator
parameterScope
bodyScope
name
params
body
<
/
head
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
tuple
>
<
head
>
FormalParameters
items
rest
<
/
head
>
<
list
>
<
/
list
>
<
tuple
>
<
head
>
_Null
<
/
head
>
<
/
tuple
>
<
/
tuple
>
<
tuple
>
<
head
>
FunctionBody
directives
statements
<
/
head
>
<
list
>
<
/
list
>
<
list
>
<
tuple
>
<
head
>
ReturnStatement
expression
<
/
head
>
<
tuple
>
<
head
>
StaticMemberExpression
object
property
<
/
head
>
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
string
>
_wrapped
<
/
string
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
string
>
call
<
/
string
>
<
/
tuple
>
<
list
>
3
<
tuple
>
<
head
>
ThisExpression
<
/
head
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
<
/
tuple
>
<
/
list
>
<
/
tuple
>
