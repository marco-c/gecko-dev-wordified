dnl
-
*
-
Mode
:
Autoconf
;
tab
-
width
:
4
;
indent
-
tabs
-
mode
:
nil
;
-
*
-
dnl
vi
:
set
tabstop
=
4
shiftwidth
=
4
expandtab
syntax
=
m4
:
dnl
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
dnl
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
dnl
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
dnl
Process
this
file
with
autoconf
to
produce
a
configure
script
.
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
AC_PREREQ
(
2
.
13
)
AC_INIT
(
js
/
src
/
jsapi
.
h
)
AC_CONFIG_AUX_DIR
(
{
srcdir
}
/
build
/
autoconf
)
AC_CANONICAL_SYSTEM
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
dnl
=
dnl
=
Don
'
t
change
the
following
lines
.
Doing
so
breaks
:
dnl
=
dnl
=
CFLAGS
=
"
-
foo
"
.
/
configure
dnl
=
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
CFLAGS
=
"
{
CFLAGS
=
}
"
CXXFLAGS
=
"
{
CXXFLAGS
=
}
"
LDFLAGS
=
"
{
LDFLAGS
=
}
"
dnl
Propagate
extra
android
flags
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
case
"
target
"
in
*
-
android
*
|
*
-
linuxandroid
*
)
LDFLAGS
=
"
ANDROID_LDFLAGS
LDFLAGS
"
CFLAGS
=
"
ANDROID_CFLAGS
CFLAGS
"
CXXFLAGS
=
"
ANDROID_CXXFLAGS
CXXFLAGS
"
;
;
esac
dnl
Set
the
minimum
version
of
toolkit
libs
used
by
mozilla
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
LDFLAGS
=
"
LDFLAGS
LINKER_LDFLAGS
PACK_REL_RELOC_FLAGS
"
if
test
-
z
"
JS_STANDALONE
"
;
then
autoconfmk
=
autoconf
-
js
.
mk
fi
AC_SUBST
(
autoconfmk
)
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
dnl
Checks
for
compilers
.
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
if
test
"
COMPILE_ENVIRONMENT
"
;
then
#
This
prevents
mingw
from
adding
.
exe
when
generating
executable
.
Internal
use
#
only
.
ac_exeext
=
.
out
#
Note
:
#
In
Mozilla
we
use
the
names
target
host
and
build
incorrectly
but
are
#
too
far
gone
to
back
out
now
.
See
Bug
475488
:
#
-
When
we
say
target
we
mean
host
that
is
the
system
on
which
#
Mozilla
will
be
run
.
#
-
When
we
say
host
we
mean
build
that
is
the
system
on
which
Mozilla
#
is
built
.
#
-
target
(
in
its
correct
usage
)
is
for
compilers
who
generate
code
for
a
#
different
platform
than
host
so
it
would
not
be
used
by
Mozilla
.
if
test
"
target
"
!
=
"
host
"
;
then
MOZ_CROSS_COMPILER
else
AC_PROG_CC
AC_PROG_CXX
fi
fi
#
COMPILE_ENVIRONMENT
dnl
Configure
platform
-
specific
CPU
architecture
compiler
options
.
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
MOZ_ARCH_OPTS
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
dnl
System
overrides
of
the
defaults
for
target
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
MOZ_OPTIMIZE_LDFLAGS
=
"
{
_COMPILATION_OPTIMIZE_LDFLAGS
}
{
MOZ_OPTIMIZE_FLAGS
}
"
case
"
target
"
in
*
-
darwin
*
)
MOZ_OPTIMIZE_FLAGS
=
"
-
O3
"
;
;
*
-
android
*
|
*
-
linuxandroid
*
)
MOZ_OPTIMIZE_FLAGS
=
"
-
O3
"
if
test
"
CC_TYPE
"
=
=
gcc
;
then
MOZ_OPTIMIZE_FLAGS
=
"
-
fno
-
reorder
-
functions
MOZ_OPTIMIZE_FLAGS
"
fi
;
;
*
-
*
linux
*
)
MOZ_PGO_OPTIMIZE_FLAGS
=
"
-
O3
"
MOZ_OPTIMIZE_FLAGS
=
"
-
O3
"
;
;
*
-
mingw
*
)
if
test
"
CC_TYPE
"
!
=
clang
-
cl
;
then
#
Silence
problematic
clang
warnings
CXXFLAGS
=
"
CXXFLAGS
-
Wno
-
incompatible
-
ms
-
struct
"
LDFLAGS
=
"
LDFLAGS
-
Wl
-
-
no
-
insert
-
timestamp
"
MOZ_OPTIMIZE_FLAGS
=
"
-
O2
"
WIN32_CONSOLE_EXE_LDFLAGS
=
-
mconsole
WIN32_GUI_EXE_LDFLAGS
=
-
mwindows
else
WIN32_SUBSYSTEM_VERSION
=
10
.
0
WIN32_CONSOLE_EXE_LDFLAGS
=
-
SUBSYSTEM
:
CONSOLE
WIN32_SUBSYSTEM_VERSION
WIN32_GUI_EXE_LDFLAGS
=
-
SUBSYSTEM
:
WINDOWS
WIN32_SUBSYSTEM_VERSION
CFLAGS
=
"
CFLAGS
-
Gy
-
Zc
:
inline
"
CXXFLAGS
=
"
CXXFLAGS
-
Gy
-
Zc
:
inline
"
if
test
"
TARGET_CPU
"
=
"
x86
"
;
then
dnl
VS2012
+
defaults
to
-
arch
:
SSE2
.
We
want
to
target
nothing
dnl
more
recent
so
set
that
explicitly
here
unless
another
dnl
target
arch
has
already
been
set
.
changequote
(
)
if
test
-
z
echo
CFLAGS
|
grep
-
i
[
-
/
]
arch
:
;
then
CFLAGS
=
"
CFLAGS
-
arch
:
SSE2
"
fi
if
test
-
z
echo
CXXFLAGS
|
grep
-
i
[
-
/
]
arch
:
;
then
CXXFLAGS
=
"
CXXFLAGS
-
arch
:
SSE2
"
fi
changequote
(
[
]
)
fi
dnl
VS2013
+
supports
-
Gw
for
better
linker
optimizations
.
dnl
http
:
/
/
blogs
.
msdn
.
com
/
b
/
vcblog
/
archive
/
2013
/
09
/
11
/
introducing
-
gw
-
compiler
-
switch
.
aspx
dnl
Disabled
on
ASan
because
it
causes
false
-
positive
ODR
violations
.
if
test
-
z
"
MOZ_ASAN
"
;
then
CFLAGS
=
"
CFLAGS
-
Gw
"
CXXFLAGS
=
"
CXXFLAGS
-
Gw
"
else
#
String
tail
merging
doesn
'
t
play
nice
with
ASan
'
s
ODR
checker
.
LDFLAGS
=
"
LDFLAGS
-
opt
:
nolldtailmerge
"
fi
MOZ_DEBUG_LDFLAGS
=
'
-
DEBUG
'
if
test
"
HOST_OS_ARCH
"
!
=
"
WINNT
"
;
then
#
%
_PDB
%
is
a
special
signal
to
emit
only
the
PDB
basename
.
This
#
avoids
problems
in
Windows
tools
that
don
'
t
like
forward
-
slashes
.
MOZ_DEBUG_LDFLAGS
=
"
MOZ_DEBUG_LDFLAGS
-
PDBALTPATH
:
%
_PDB
%
"
fi
MOZ_OPTIMIZE_FLAGS
=
"
-
O2
"
LDFLAGS
=
"
LDFLAGS
-
LARGEADDRESSAWARE
"
fi
AC_DEFINE
(
HAVE__MSIZE
)
AC_DEFINE
(
WIN32_LEAN_AND_MEAN
)
dnl
See
http
:
/
/
support
.
microsoft
.
com
/
kb
/
143208
to
use
STL
AC_DEFINE
(
NOMINMAX
)
case
"
host_os
"
in
cygwin
*
|
msvc
*
|
mks
*
)
AC_MSG_ERROR
(
[
Using
a
Cygwin
build
environment
is
unsupported
.
Configure
cannot
check
for
presence
of
necessary
headers
.
Please
upgrade
to
MozillaBuild
;
see
https
:
/
/
developer
.
mozilla
.
org
/
en
/
Windows_Build_Prerequisites
.
]
)
;
;
esac
case
"
target
"
in
i
*
86
-
*
)
if
test
"
CC_TYPE
"
!
=
clang
-
cl
;
then
CFLAGS
=
"
CFLAGS
-
mstackrealign
"
CXXFLAGS
=
"
CXXFLAGS
-
mstackrealign
"
LDFLAGS
=
"
LDFLAGS
-
Wl
-
-
large
-
address
-
aware
"
else
LDFLAGS
=
"
LDFLAGS
-
SAFESEH
"
fi
AC_DEFINE
(
_X86_
)
;
;
x86_64
-
*
)
AC_DEFINE
(
_AMD64_
)
;
;
aarch64
-
*
)
AC_DEFINE
(
_ARM64_
)
;
;
*
)
AC_DEFINE
(
_CPU_ARCH_NOT_DEFINED
)
;
;
esac
;
;
*
-
netbsd
*
)
CFLAGS
=
"
CFLAGS
-
Dunix
"
CXXFLAGS
=
"
CXXFLAGS
-
Dunix
"
;
;
*
-
wasi
*
)
CXXFLAGS
=
"
CXXFLAGS
-
mthread
-
model
single
"
;
;
esac
if
test
-
z
"
MOZ_OPTIMIZE_FLAGS
"
;
then
MOZ_OPTIMIZE_FLAGS
=
"
-
O
"
fi
dnl
Mozilla
specific
options
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
dnl
The
macros
used
for
command
line
options
dnl
are
defined
in
build
/
autoconf
/
altoptions
.
m4
.
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
dnl
=
Enable
code
optimization
.
ON
by
default
.
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
#
Use
value
from
moz
.
configure
if
one
is
defined
.
Else
use
our
computed
#
value
.
if
test
-
n
"
{
MOZ_CONFIGURE_OPTIMIZE_FLAGS
}
"
;
then
MOZ_OPTIMIZE_FLAGS
=
{
MOZ_CONFIGURE_OPTIMIZE_FLAGS
}
fi
if
test
"
COMPILE_ENVIRONMENT
"
;
then
if
test
-
n
"
MOZ_OPTIMIZE
"
;
then
AC_MSG_CHECKING
(
[
for
valid
optimization
flags
]
)
_SAVE_CFLAGS
=
CFLAGS
CFLAGS
=
"
CFLAGS
MOZ_OPTIMIZE_FLAGS
"
AC_TRY_COMPILE
(
[
#
include
<
stdio
.
h
>
]
[
printf
(
"
Hello
World
\
n
"
)
;
]
_results
=
yes
_results
=
no
)
AC_MSG_RESULT
(
[
_results
]
)
if
test
"
_results
"
=
"
no
"
;
then
AC_MSG_ERROR
(
[
These
compiler
flags
are
invalid
:
MOZ_OPTIMIZE_FLAGS
]
)
fi
CFLAGS
=
_SAVE_CFLAGS
if
test
-
n
"
MOZ_LTO
"
-
a
"
CC_TYPE
"
=
clang
;
then
#
When
using
llvm
-
based
LTO
non
numeric
optimization
levels
are
#
not
supported
by
the
linker
so
force
the
linker
to
use
-
O2
(
#
which
doesn
'
t
influence
the
level
compilation
units
are
actually
#
compiled
at
)
.
case
"
MOZ_OPTIMIZE_FLAGS
"
in
*
\
-
Os
\
*
|
*
\
-
Oz
\
*
)
MOZ_OPTIMIZE_LDFLAGS
=
"
MOZ_OPTIMIZE_LDFLAGS
-
O2
"
;
;
esac
fi
fi
fi
#
COMPILE_ENVIRONMENT
AC_SUBST_LIST
(
MOZ_OPTIMIZE_FLAGS
)
AC_SUBST_LIST
(
MOZ_OPTIMIZE_LDFLAGS
)
AC_SUBST_LIST
(
MOZ_PGO_OPTIMIZE_FLAGS
)
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
dnl
=
Enable
using
the
clang
plugin
to
build
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
if
test
-
n
"
COMPILE_ENVIRONMENT
"
;
then
MOZ_CONFIG_CLANG_PLUGIN
fi
#
COMPILE_ENVIRONMENT
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
dnl
=
dnl
=
Maintainer
debug
option
(
no
-
-
enable
equivalent
)
dnl
=
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
AC_SUBST_LIST
(
MOZ_DEBUG_LDFLAGS
)
AC_SUBST
(
MOZ_POST_PROGRAM_COMMAND
)
AC_SUBST
(
MOZ_APP_DISPLAYNAME
)
dnl
Echo
the
CFLAGS
to
remove
extra
whitespace
.
CFLAGS
=
echo
\
_COMPILATION_CFLAGS
\
CFLAGS
CXXFLAGS
=
echo
\
_COMPILATION_CXXFLAGS
\
CXXFLAGS
LDFLAGS
=
echo
\
LDFLAGS
\
_COMPILATION_LDFLAGS
OS_CFLAGS
=
"
CFLAGS
"
OS_CXXFLAGS
=
"
CXXFLAGS
"
OS_LDFLAGS
=
"
LDFLAGS
"
AC_SUBST_LIST
(
OS_CFLAGS
)
AC_SUBST_LIST
(
OS_CXXFLAGS
)
AC_SUBST_LIST
(
OS_LDFLAGS
)
AC_SUBST
(
HOST_CC
)
AC_SUBST
(
HOST_CXX
)
AC_SUBST
(
WIN32_CONSOLE_EXE_LDFLAGS
)
AC_SUBST
(
WIN32_GUI_EXE_LDFLAGS
)
dnl
Set
various
defines
and
substitutions
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
AC_SUBST
(
MOZ_DEV_EDITION
)
if
test
-
n
"
MOZ_DEV_EDITION
"
;
then
AC_DEFINE
(
MOZ_DEV_EDITION
)
fi
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
dnl
JavaScript
shell
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
if
test
-
n
"
JS_STANDALONE
"
;
then
JS_LIBRARY_NAME
=
"
mozjs
-
MOZILLA_SYMBOLVERSION
"
else
JS_LIBRARY_NAME
=
"
mozjs
"
fi
JS_CONFIG_LIBS
=
"
NSPR_LIBS
MOZ_INSTRUMENTS_LIBS
"
if
test
"
CC_TYPE
"
!
=
clang
-
cl
;
then
JS_CONFIG_MOZ_JS_LIBS
=
'
-
L
{
libdir
}
-
l
{
JS_LIBRARY_NAME
}
'
else
JS_CONFIG_MOZ_JS_LIBS
=
'
{
libdir
}
/
{
JS_LIBRARY_NAME
}
.
lib
'
fi
AC_SUBST
(
JS_LIBRARY_NAME
)
AC_SUBST
(
JS_CONFIG_MOZ_JS_LIBS
)
AC_SUBST
(
JS_CONFIG_LIBS
)
dnl
Spit
out
some
output
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
MOZ_CREATE_CONFIG_STATUS
(
)
rm
-
fr
confdefs
*
ac_clean_files
