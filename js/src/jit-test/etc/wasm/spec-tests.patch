#
HG
changeset
patch
#
User
Ryan
Hunt
<
rhunt
eqrion
.
net
>
#
Date
1634962581
0
#
Sat
Oct
23
04
:
16
:
21
2021
+
0000
#
Node
ID
40a38b62293c892ef4e397c43179321edccea2c3
#
Parent
bb4199affde55df21fd07f2fbf65155bc60a0943
Spec
test
patches
rollup
.
1
.
Bug
1737225
-
Disable
some
tests
on
arm
.
r
=
yury
Disable
a
partial
-
oob
test
on
arm
/
arm64
because
some
hardware
will
perform
byte
-
at
-
a
-
time
writes
at
the
end
of
the
heap
and
we
have
not
fixed
that
yet
.
user
:
Lars
Hansen
Differential
Revision
:
https
:
/
/
phabricator
.
services
.
mozilla
.
com
/
D129248
2
.
Bug
1747450
-
simd
has
moved
to
spec
and
needs
per
-
test
skips
.
user
:
Ryan
Hunt
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
align64
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
align64
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
align64
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
align64
.
wast
.
js
-
1445
11
+
1445
15
let
24
=
instantiate
(
(
module
)
)
)
;
-
/
/
.
/
test
/
core
/
align64
.
wast
:
864
-
assert_trap
(
-
(
)
=
>
invoke
(
24
store
[
65532n
-
1n
]
)
-
out
of
bounds
memory
access
-
)
;
+
/
/
Bug
1737225
-
do
not
observe
the
partial
store
caused
by
bug
1666747
on
+
/
/
some
native
platforms
.
+
if
(
!
partialOobWriteMayWritePartialData
(
)
)
{
+
/
/
.
/
test
/
core
/
align64
.
wast
:
864
+
assert_trap
(
+
(
)
=
>
invoke
(
24
store
[
65532n
-
1n
]
)
+
out
of
bounds
memory
access
+
)
;
-
/
/
.
/
test
/
core
/
align64
.
wast
:
866
-
assert_return
(
(
)
=
>
invoke
(
24
load
[
65532n
]
)
[
value
(
"
i32
"
0
)
]
)
;
+
/
/
.
/
test
/
core
/
align64
.
wast
:
866
+
assert_return
(
(
)
=
>
invoke
(
24
load
[
65532n
]
)
[
value
(
"
i32
"
0
)
]
)
;
+
}
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
harness
/
harness
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
harness
/
harness
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
harness
/
harness
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
harness
/
harness
.
js
-
19
6
+
19
17
if
(
!
wasmIsSupported
(
)
)
{
quit
(
)
;
}
+
function
partialOobWriteMayWritePartialData
(
)
{
+
let
cfg
=
getBuildConfiguration
(
)
;
+
let
arm_native
=
cfg
[
"
arm
"
]
&
&
!
cfg
[
"
arm
-
simulator
"
]
;
+
let
arm64_native
=
cfg
[
"
arm64
"
]
&
&
!
cfg
[
"
arm64
-
simulator
"
]
;
+
return
arm_native
|
|
arm64_native
;
+
}
+
+
let
cfg
=
getBuildConfiguration
(
)
;
+
let
native_arm
=
cfg
[
"
arm
"
]
&
&
!
cfg
[
"
arm
-
simulator
"
]
;
+
let
native_arm64
=
cfg
[
"
arm64
"
]
&
&
!
cfg
[
"
arm64
-
simulator
"
]
;
+
function
bytes
(
type
bytes
)
{
var
typedBuffer
=
new
Uint8Array
(
bytes
)
;
return
wasmGlobalFromArrayBuffer
(
type
typedBuffer
.
buffer
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
memory_trap64
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
memory_trap64
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
memory_trap64
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
memory_trap64
.
wast
.
js
-
1028
12
+
1028
17
assert_trap
(
out
of
bounds
memory
access
)
;
-
/
/
.
/
test
/
core
/
memory_trap64
.
wast
:
268
-
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
65528n
]
)
[
-
value
(
"
i64
"
7523094288207667809n
)
-
]
)
;
+
/
/
Bug
1737225
-
do
not
observe
the
partial
store
caused
by
bug
1666747
on
+
/
/
some
native
platforms
.
+
if
(
!
partialOobWriteMayWritePartialData
(
)
)
{
+
/
/
.
/
test
/
core
/
memory_trap64
.
wast
:
268
+
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
65528n
]
)
[
+
value
(
"
i64
"
7523094288207667809n
)
+
]
)
;
-
/
/
.
/
test
/
core
/
memory_trap64
.
wast
:
269
-
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
0n
]
)
[
-
value
(
"
i64
"
7523094288207667809n
)
-
]
)
;
+
/
/
.
/
test
/
core
/
memory_trap64
.
wast
:
269
+
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
0n
]
)
[
+
value
(
"
i64
"
7523094288207667809n
)
+
]
)
;
+
}
+
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_address
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_address
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_address
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_address
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_bit_shift
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_bit_shift
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_bit_shift
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_bit_shift
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_bitwise
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_bitwise
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_bitwise
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_bitwise
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_boolean
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_boolean
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_boolean
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_boolean
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_const
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_const
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_const
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_const
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_conversions
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_conversions
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_conversions
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_conversions
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_arith
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_arith
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_arith
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_arith
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_cmp
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_cmp
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_cmp
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_cmp
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_pmin_pmax
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_pmin_pmax
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_pmin_pmax
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_pmin_pmax
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_rounding
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_rounding
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_rounding
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f32x4_rounding
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_arith
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_arith
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_arith
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_arith
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_cmp
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_cmp
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_cmp
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_cmp
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_pmin_pmax
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_pmin_pmax
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_pmin_pmax
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_pmin_pmax
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_rounding
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_rounding
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_rounding
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_f64x2_rounding
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_arith
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_arith
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_arith
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_arith
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_arith2
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_arith2
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_arith2
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_arith2
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_cmp
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_cmp
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_cmp
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_cmp
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_extadd_pairwise_i8x16
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_extadd_pairwise_i8x16
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_extadd_pairwise_i8x16
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_extadd_pairwise_i8x16
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_extmul_i8x16
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_extmul_i8x16
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_extmul_i8x16
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_extmul_i8x16
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_q15mulr_sat_s
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_q15mulr_sat_s
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_q15mulr_sat_s
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_q15mulr_sat_s
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_sat_arith
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_sat_arith
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_sat_arith
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i16x8_sat_arith
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_arith
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_arith
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_arith
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_arith
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_arith2
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_arith2
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_arith2
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_arith2
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_cmp
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_cmp
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_cmp
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_cmp
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_dot_i16x8
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_dot_i16x8
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_dot_i16x8
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_dot_i16x8
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_extadd_pairwise_i16x8
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_extadd_pairwise_i16x8
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_extadd_pairwise_i16x8
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_extadd_pairwise_i16x8
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_extmul_i16x8
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_extmul_i16x8
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_extmul_i16x8
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_extmul_i16x8
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_trunc_sat_f32x4
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_trunc_sat_f32x4
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_trunc_sat_f32x4
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_trunc_sat_f32x4
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_trunc_sat_f64x2
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_trunc_sat_f64x2
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_trunc_sat_f64x2
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i32x4_trunc_sat_f64x2
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_arith
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_arith
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_arith
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_arith
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_arith2
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_arith2
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_arith2
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_arith2
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_cmp
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_cmp
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_cmp
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_cmp
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_extmul_i32x4
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_extmul_i32x4
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_extmul_i32x4
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i64x2_extmul_i32x4
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_arith
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_arith
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_arith
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_arith
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_arith2
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_arith2
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_arith2
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_arith2
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_cmp
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_cmp
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_cmp
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_cmp
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_sat_arith
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_sat_arith
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_sat_arith
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_i8x16_sat_arith
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_int_to_int_extend
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_int_to_int_extend
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_int_to_int_extend
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_int_to_int_extend
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_lane
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_lane
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_lane
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_lane
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load16_lane
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load16_lane
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load16_lane
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load16_lane
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load32_lane
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load32_lane
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load32_lane
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load32_lane
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load64_lane
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load64_lane
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load64_lane
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load64_lane
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load8_lane
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load8_lane
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load8_lane
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load8_lane
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_extend
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_extend
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_extend
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_extend
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_splat
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_splat
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_splat
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_splat
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_zero
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_zero
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_zero
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_load_zero
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_splat
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_splat
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_splat
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_splat
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store16_lane
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store16_lane
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store16_lane
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store16_lane
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store32_lane
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store32_lane
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store32_lane
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store32_lane
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store64_lane
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store64_lane
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store64_lane
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store64_lane
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store8_lane
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store8_lane
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store8_lane
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
spec
/
simd_store8_lane
.
wast
.
js
-
1
3
+
1
5
+
/
/
|
jit
-
test
|
skip
-
if
:
!
wasmSimdEnabled
(
)
+
/
*
Copyright
2021
Mozilla
Foundation
*
*
Licensed
under
the
Apache
License
Version
2
.
0
(
the
"
License
"
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
br_on_non_null
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
br_on_non_null
.
wast
.
js
TODO
call_ref
in
dead
code
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
br_on_non_null
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
br_on_non_null
.
wast
.
js
-
44
9
+
44
10
let
0
=
instantiate
(
(
module
(
func
(
export
"
nullable
-
f
"
)
(
result
i32
)
(
call
n
(
ref
.
func
f
)
)
)
(
func
(
export
"
unreachable
"
)
(
result
i32
)
-
(
block
l
-
(
return
(
call_ref
(
br_on_null
l
(
unreachable
)
)
)
)
+
(
block
l
(
result
(
ref
func
)
)
+
(
return
(
br_on_non_null
l
(
unreachable
)
)
)
)
+
(
drop
)
(
i32
.
const
-
1
)
)
)
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
br_on_null
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
br_on_null
.
wast
.
js
TODO
call_ref
in
dead
code
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
br_on_null
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
br_on_null
.
wast
.
js
-
41
7
+
41
7
let
0
=
instantiate
(
(
module
(
func
(
export
"
unreachable
"
)
(
result
i32
)
(
block
l
-
(
return
(
call_ref
(
br_on_null
l
(
unreachable
)
)
)
)
+
(
return
(
drop
(
br_on_null
l
(
unreachable
)
)
)
)
)
(
i32
.
const
-
1
)
)
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
call_ref
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
call_ref
.
wast
.
js
TODO
fix
specific
function
reference
types
in
arguments
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
call_ref
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
call_ref
.
wast
.
js
-
39
74
+
39
6
let
0
=
instantiate
(
(
module
(
func
(
export
"
null
"
)
(
result
i32
)
(
call_ref
(
i32
.
const
1
)
(
ref
.
null
ii
)
)
)
-
-
;
;
Recursion
-
-
(
type
ll
(
func
(
param
i64
)
(
result
i64
)
)
)
-
(
type
lll
(
func
(
param
i64
i64
)
(
result
i64
)
)
)
-
-
(
elem
declare
func
fac
)
-
(
global
fac
(
ref
ll
)
(
ref
.
func
fac
)
)
-
-
(
func
fac
(
export
"
fac
"
)
(
type
ll
)
-
(
if
(
result
i64
)
(
i64
.
eqz
(
local
.
get
0
)
)
-
(
then
(
i64
.
const
1
)
)
-
(
else
-
(
i64
.
mul
-
(
local
.
get
0
)
-
(
call_ref
(
i64
.
sub
(
local
.
get
0
)
(
i64
.
const
1
)
)
(
global
.
get
fac
)
)
-
)
-
)
-
)
-
)
-
-
(
elem
declare
func
fac
-
acc
)
-
(
global
fac
-
acc
(
ref
lll
)
(
ref
.
func
fac
-
acc
)
)
-
-
(
func
fac
-
acc
(
export
"
fac
-
acc
"
)
(
type
lll
)
-
(
if
(
result
i64
)
(
i64
.
eqz
(
local
.
get
0
)
)
-
(
then
(
local
.
get
1
)
)
-
(
else
-
(
call_ref
-
(
i64
.
sub
(
local
.
get
0
)
(
i64
.
const
1
)
)
-
(
i64
.
mul
(
local
.
get
0
)
(
local
.
get
1
)
)
-
(
global
.
get
fac
-
acc
)
-
)
-
)
-
)
-
)
-
-
(
elem
declare
func
fib
)
-
(
global
fib
(
ref
ll
)
(
ref
.
func
fib
)
)
-
-
(
func
fib
(
export
"
fib
"
)
(
type
ll
)
-
(
if
(
result
i64
)
(
i64
.
le_u
(
local
.
get
0
)
(
i64
.
const
1
)
)
-
(
then
(
i64
.
const
1
)
)
-
(
else
-
(
i64
.
add
-
(
call_ref
(
i64
.
sub
(
local
.
get
0
)
(
i64
.
const
2
)
)
(
global
.
get
fib
)
)
-
(
call_ref
(
i64
.
sub
(
local
.
get
0
)
(
i64
.
const
1
)
)
(
global
.
get
fib
)
)
-
)
-
)
-
)
-
)
-
-
(
elem
declare
func
even
odd
)
-
(
global
even
(
ref
ll
)
(
ref
.
func
even
)
)
-
(
global
odd
(
ref
ll
)
(
ref
.
func
odd
)
)
-
-
(
func
even
(
export
"
even
"
)
(
type
ll
)
-
(
if
(
result
i64
)
(
i64
.
eqz
(
local
.
get
0
)
)
-
(
then
(
i64
.
const
44
)
)
-
(
else
(
call_ref
(
i64
.
sub
(
local
.
get
0
)
(
i64
.
const
1
)
)
(
global
.
get
odd
)
)
)
-
)
-
)
-
(
func
odd
(
export
"
odd
"
)
(
type
ll
)
-
(
if
(
result
i64
)
(
i64
.
eqz
(
local
.
get
0
)
)
-
(
then
(
i64
.
const
99
)
)
-
(
else
(
call_ref
(
i64
.
sub
(
local
.
get
0
)
(
i64
.
const
1
)
)
(
global
.
get
even
)
)
)
-
)
-
)
)
)
;
/
/
.
/
test
/
core
/
call_ref
.
wast
:
94
-
118
84
+
50
6
assert_return
(
(
)
=
>
invoke
(
0
run
[
3
/
/
.
/
test
/
core
/
call_ref
.
wast
:
97
assert_trap
(
(
)
=
>
invoke
(
0
null
[
]
)
null
function
)
;
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
99
-
assert_return
(
(
)
=
>
invoke
(
0
fac
[
0n
]
)
[
value
(
"
i64
"
1n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
100
-
assert_return
(
(
)
=
>
invoke
(
0
fac
[
1n
]
)
[
value
(
"
i64
"
1n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
101
-
assert_return
(
(
)
=
>
invoke
(
0
fac
[
5n
]
)
[
value
(
"
i64
"
120n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
102
-
assert_return
(
(
)
=
>
invoke
(
0
fac
[
25n
]
)
[
-
value
(
"
i64
"
7034535277573963776n
)
-
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
103
-
assert_return
(
(
)
=
>
invoke
(
0
fac
-
acc
[
0n
1n
]
)
[
value
(
"
i64
"
1n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
104
-
assert_return
(
(
)
=
>
invoke
(
0
fac
-
acc
[
1n
1n
]
)
[
value
(
"
i64
"
1n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
105
-
assert_return
(
(
)
=
>
invoke
(
0
fac
-
acc
[
5n
1n
]
)
[
value
(
"
i64
"
120n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
106
-
assert_return
(
(
)
=
>
invoke
(
0
fac
-
acc
[
25n
1n
]
)
[
-
value
(
"
i64
"
7034535277573963776n
)
-
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
111
-
assert_return
(
(
)
=
>
invoke
(
0
fib
[
0n
]
)
[
value
(
"
i64
"
1n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
112
-
assert_return
(
(
)
=
>
invoke
(
0
fib
[
1n
]
)
[
value
(
"
i64
"
1n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
113
-
assert_return
(
(
)
=
>
invoke
(
0
fib
[
2n
]
)
[
value
(
"
i64
"
2n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
114
-
assert_return
(
(
)
=
>
invoke
(
0
fib
[
5n
]
)
[
value
(
"
i64
"
8n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
115
-
assert_return
(
(
)
=
>
invoke
(
0
fib
[
20n
]
)
[
value
(
"
i64
"
10946n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
117
-
assert_return
(
(
)
=
>
invoke
(
0
even
[
0n
]
)
[
value
(
"
i64
"
44n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
118
-
assert_return
(
(
)
=
>
invoke
(
0
even
[
1n
]
)
[
value
(
"
i64
"
99n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
119
-
assert_return
(
(
)
=
>
invoke
(
0
even
[
100n
]
)
[
value
(
"
i64
"
44n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
120
-
assert_return
(
(
)
=
>
invoke
(
0
even
[
77n
]
)
[
value
(
"
i64
"
99n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
121
-
assert_return
(
(
)
=
>
invoke
(
0
odd
[
0n
]
)
[
value
(
"
i64
"
99n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
122
-
assert_return
(
(
)
=
>
invoke
(
0
odd
[
1n
]
)
[
value
(
"
i64
"
44n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
123
-
assert_return
(
(
)
=
>
invoke
(
0
odd
[
200n
]
)
[
value
(
"
i64
"
99n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
124
-
assert_return
(
(
)
=
>
invoke
(
0
odd
[
77n
]
)
[
value
(
"
i64
"
44n
)
]
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
129
-
let
1
=
instantiate
(
(
module
-
(
func
(
export
"
unreachable
"
)
(
result
i32
)
-
(
unreachable
)
-
(
call_ref
)
-
)
-
)
)
;
-
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
135
-
assert_trap
(
(
)
=
>
invoke
(
1
unreachable
[
]
)
unreachable
)
;
-
/
/
.
/
test
/
core
/
call_ref
.
wast
:
137
let
2
=
instantiate
(
(
module
(
elem
declare
func
f
)
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
local_get
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
local_get
.
wast
.
js
TODO
fix
"
Error
:
globals
are
of
different
type
"
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
local_get
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
function
-
references
/
local_get
.
wast
.
js
-
355
21
+
355
6
let
1
=
instantiate
(
(
module
)
)
)
;
-
/
/
.
/
test
/
core
/
local_get
.
wast
:
248
-
assert_return
(
(
)
=
>
invoke
(
1
get
-
after
-
set
[
externref
(
1
)
]
)
[
-
value
(
"
externref
"
externref
(
1
)
)
-
]
)
;
-
-
/
/
.
/
test
/
core
/
local_get
.
wast
:
249
-
assert_return
(
(
)
=
>
invoke
(
1
get
-
after
-
tee
[
externref
(
2
)
]
)
[
-
value
(
"
externref
"
externref
(
2
)
)
-
]
)
;
-
-
/
/
.
/
test
/
core
/
local_get
.
wast
:
250
-
assert_return
(
(
)
=
>
invoke
(
1
get
-
in
-
block
-
after
-
set
[
externref
(
3
)
]
)
[
-
value
(
"
externref
"
externref
(
3
)
)
-
]
)
;
-
/
/
.
/
test
/
core
/
local_get
.
wast
:
252
assert_invalid
(
(
)
=
>
