#
HG
changeset
patch
#
User
Lars
T
Hansen
<
lhansen
mozilla
.
com
>
#
Date
1634962581
0
#
Sat
Oct
23
04
:
16
:
21
2021
+
0000
#
Node
ID
1342a887d949e1a0f23da8c0421c7bfa46328e92
#
Parent
ae6e0144bd5b37d044c34d62fd9d4a449b835a0e
Bug
1737225
-
Disable
some
tests
on
arm
.
r
=
yury
Disable
a
partial
-
oob
test
on
arm
/
arm64
because
some
hardware
will
perform
byte
-
at
-
a
-
time
writes
at
the
end
of
the
heap
and
we
have
not
fixed
that
yet
.
Differential
Revision
:
https
:
/
/
phabricator
.
services
.
mozilla
.
com
/
D129248
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
align64
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
align64
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
align64
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
align64
.
wast
.
js
-
1445
11
+
1445
15
let
24
=
instantiate
(
(
module
)
)
)
;
-
/
/
.
/
test
/
core
/
align64
.
wast
:
864
-
assert_trap
(
-
(
)
=
>
invoke
(
24
store
[
65532n
-
1n
]
)
-
out
of
bounds
memory
access
-
)
;
+
/
/
Bug
1737225
-
do
not
observe
the
partial
store
caused
by
bug
1666747
on
+
/
/
some
native
platforms
.
+
if
(
!
partialOobWriteMayWritePartialData
(
)
)
{
+
/
/
.
/
test
/
core
/
align64
.
wast
:
864
+
assert_trap
(
+
(
)
=
>
invoke
(
24
store
[
65532n
-
1n
]
)
+
out
of
bounds
memory
access
+
)
;
-
/
/
.
/
test
/
core
/
align64
.
wast
:
866
-
assert_return
(
(
)
=
>
invoke
(
24
load
[
65532n
]
)
[
value
(
"
i32
"
0
)
]
)
;
+
/
/
.
/
test
/
core
/
align64
.
wast
:
866
+
assert_return
(
(
)
=
>
invoke
(
24
load
[
65532n
]
)
[
value
(
"
i32
"
0
)
]
)
;
+
}
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
harness
/
harness
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
harness
/
harness
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
harness
/
harness
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
harness
/
harness
.
js
-
19
6
+
19
17
if
(
!
wasmIsSupported
(
)
)
{
quit
(
)
;
}
+
function
partialOobWriteMayWritePartialData
(
)
{
+
let
cfg
=
getBuildConfiguration
(
)
;
+
let
arm_native
=
cfg
[
"
arm
"
]
&
&
!
cfg
[
"
arm
-
simulator
"
]
;
+
let
arm64_native
=
cfg
[
"
arm64
"
]
&
&
!
cfg
[
"
arm64
-
simulator
"
]
;
+
return
arm_native
|
|
arm64_native
;
+
}
+
+
let
cfg
=
getBuildConfiguration
(
)
;
+
let
native_arm
=
cfg
[
"
arm
"
]
&
&
!
cfg
[
"
arm
-
simulator
"
]
;
+
let
native_arm64
=
cfg
[
"
arm64
"
]
&
&
!
cfg
[
"
arm64
-
simulator
"
]
;
+
function
bytes
(
type
bytes
)
{
var
typedBuffer
=
new
Uint8Array
(
bytes
)
;
return
wasmGlobalFromArrayBuffer
(
type
typedBuffer
.
buffer
)
;
diff
-
-
git
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
memory_trap64
.
wast
.
js
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
memory_trap64
.
wast
.
js
-
-
-
a
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
memory_trap64
.
wast
.
js
+
+
+
b
/
js
/
src
/
jit
-
test
/
tests
/
wasm
/
spec
/
memory64
/
memory_trap64
.
wast
.
js
-
1028
12
+
1028
17
assert_trap
(
out
of
bounds
memory
access
)
;
-
/
/
.
/
test
/
core
/
memory_trap64
.
wast
:
268
-
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
65528n
]
)
[
-
value
(
"
i64
"
7523094288207667809n
)
-
]
)
;
+
/
/
Bug
1737225
-
do
not
observe
the
partial
store
caused
by
bug
1666747
on
+
/
/
some
native
platforms
.
+
if
(
!
partialOobWriteMayWritePartialData
(
)
)
{
+
/
/
.
/
test
/
core
/
memory_trap64
.
wast
:
268
+
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
65528n
]
)
[
+
value
(
"
i64
"
7523094288207667809n
)
+
]
)
;
-
/
/
.
/
test
/
core
/
memory_trap64
.
wast
:
269
-
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
0n
]
)
[
-
value
(
"
i64
"
7523094288207667809n
)
-
]
)
;
+
/
/
.
/
test
/
core
/
memory_trap64
.
wast
:
269
+
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
0n
]
)
[
+
value
(
"
i64
"
7523094288207667809n
)
+
]
)
;
+
}
+
