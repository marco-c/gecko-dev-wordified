/
/
Debugger
.
Memory
.
prototype
.
takeCensus
breakdown
:
check
error
handling
on
/
/
property
gets
.
load
(
libdir
+
'
asserts
.
js
'
)
;
var
g
=
newGlobal
(
)
;
var
dbg
=
new
Debugger
(
g
)
;
assertThrowsValue
(
(
)
=
>
{
dbg
.
memory
.
takeCensus
(
{
breakdown
:
{
get
by
(
)
{
throw
"
_
"
}
}
}
)
;
}
"
_
"
)
;
assertThrowsValue
(
(
)
=
>
{
dbg
.
memory
.
takeCensus
(
{
breakdown
:
{
by
:
'
objectClass
'
get
then
(
)
{
throw
"
_
"
}
}
}
)
;
}
"
_
"
)
;
assertThrowsValue
(
(
)
=
>
{
dbg
.
memory
.
takeCensus
(
{
breakdown
:
{
by
:
'
objectClass
'
get
other
(
)
{
throw
"
_
"
}
}
}
)
;
}
"
_
"
)
;
assertThrowsValue
(
(
)
=
>
{
dbg
.
memory
.
takeCensus
(
{
breakdown
:
{
by
:
'
coarseType
'
get
objects
(
)
{
throw
"
_
"
}
}
}
)
;
}
"
_
"
)
;
assertThrowsValue
(
(
)
=
>
{
dbg
.
memory
.
takeCensus
(
{
breakdown
:
{
by
:
'
coarseType
'
get
scripts
(
)
{
throw
"
_
"
}
}
}
)
;
}
"
_
"
)
;
assertThrowsValue
(
(
)
=
>
{
dbg
.
memory
.
takeCensus
(
{
breakdown
:
{
by
:
'
coarseType
'
get
strings
(
)
{
throw
"
_
"
}
}
}
)
;
}
"
_
"
)
;
assertThrowsValue
(
(
)
=
>
{
dbg
.
memory
.
takeCensus
(
{
breakdown
:
{
by
:
'
coarseType
'
get
other
(
)
{
throw
"
_
"
}
}
}
)
;
}
"
_
"
)
;
assertThrowsValue
(
(
)
=
>
{
dbg
.
memory
.
takeCensus
(
{
breakdown
:
{
by
:
'
internalType
'
get
then
(
)
{
throw
"
_
"
}
}
}
)
;
}
"
_
"
)
;
