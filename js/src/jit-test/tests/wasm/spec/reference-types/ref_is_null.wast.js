/
/
ref_is_null
.
wast
:
1
let
1
=
instance
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x01
\
x9c
\
x80
\
x80
\
x80
\
x00
\
x06
\
x60
\
x01
\
x6e
\
x01
\
x7f
\
x60
\
x01
\
x6f
\
x01
\
x7f
\
x60
\
x01
\
x70
\
x01
\
x7f
\
x60
\
x00
\
x00
\
x60
\
x01
\
x6f
\
x00
\
x60
\
x01
\
x7f
\
x01
\
x7f
\
x03
\
x8a
\
x80
\
x80
\
x80
\
x00
\
x09
\
x00
\
x01
\
x02
\
x03
\
x04
\
x03
\
x05
\
x05
\
x05
\
x04
\
x8a
\
x80
\
x80
\
x80
\
x00
\
x03
\
x6e
\
x00
\
x02
\
x6f
\
x00
\
x02
\
x70
\
x00
\
x02
\
x07
\
xda
\
x80
\
x80
\
x80
\
x00
\
x08
\
x07
\
x6e
\
x75
\
x6c
\
x6c
\
x72
\
x65
\
x66
\
x00
\
x00
\
x06
\
x61
\
x6e
\
x79
\
x72
\
x65
\
x66
\
x00
\
x01
\
x07
\
x66
\
x75
\
x6e
\
x63
\
x72
\
x65
\
x66
\
x00
\
x02
\
x04
\
x69
\
x6e
\
x69
\
x74
\
x00
\
x04
\
x06
\
x64
\
x65
\
x69
\
x6e
\
x69
\
x74
\
x00
\
x05
\
x0c
\
x6e
\
x75
\
x6c
\
x6c
\
x72
\
x65
\
x66
\
x2d
\
x65
\
x6c
\
x65
\
x6d
\
x00
\
x06
\
x0b
\
x61
\
x6e
\
x79
\
x72
\
x65
\
x66
\
x2d
\
x65
\
x6c
\
x65
\
x6d
\
x00
\
x07
\
x0c
\
x66
\
x75
\
x6e
\
x63
\
x72
\
x65
\
x66
\
x2d
\
x65
\
x6c
\
x65
\
x6d
\
x00
\
x08
\
x09
\
x89
\
x80
\
x80
\
x80
\
x00
\
x01
\
x02
\
x02
\
x41
\
x01
\
x0b
\
x00
\
x01
\
x03
\
x0a
\
xf0
\
x80
\
x80
\
x80
\
x00
\
x09
\
x85
\
x80
\
x80
\
x80
\
x00
\
x00
\
x20
\
x00
\
xd1
\
x0b
\
x85
\
x80
\
x80
\
x80
\
x00
\
x00
\
x20
\
x00
\
xd1
\
x0b
\
x85
\
x80
\
x80
\
x80
\
x00
\
x00
\
x20
\
x00
\
xd1
\
x0b
\
x82
\
x80
\
x80
\
x80
\
x00
\
x00
\
x0b
\
x88
\
x80
\
x80
\
x80
\
x00
\
x00
\
x41
\
x01
\
x20
\
x00
\
x26
\
x01
\
x0b
\
x91
\
x80
\
x80
\
x80
\
x00
\
x00
\
x41
\
x01
\
xd0
\
x26
\
x00
\
x41
\
x01
\
xd0
\
x26
\
x01
\
x41
\
x01
\
xd0
\
x26
\
x02
\
x0b
\
x88
\
x80
\
x80
\
x80
\
x00
\
x00
\
x20
\
x00
\
x25
\
x00
\
x10
\
x00
\
x0b
\
x88
\
x80
\
x80
\
x80
\
x00
\
x00
\
x20
\
x00
\
x25
\
x01
\
x10
\
x01
\
x0b
\
x88
\
x80
\
x80
\
x80
\
x00
\
x00
\
x20
\
x00
\
x25
\
x02
\
x10
\
x02
\
x0b
"
)
;
/
/
ref_is_null
.
wast
:
38
assert_return
(
(
)
=
>
call
(
1
"
nullref
"
[
null
]
)
1
)
;
/
/
ref_is_null
.
wast
:
39
assert_return
(
(
)
=
>
call
(
1
"
anyref
"
[
null
]
)
1
)
;
/
/
ref_is_null
.
wast
:
40
assert_return
(
(
)
=
>
call
(
1
"
funcref
"
[
null
]
)
1
)
;
/
/
ref_is_null
.
wast
:
42
assert_return
(
(
)
=
>
call
(
1
"
anyref
"
[
hostref
(
1
)
]
)
0
)
;
/
/
ref_is_null
.
wast
:
44
run
(
(
)
=
>
call
(
1
"
init
"
[
hostref
(
0
)
]
)
)
;
/
/
ref_is_null
.
wast
:
46
assert_return
(
(
)
=
>
call
(
1
"
nullref
-
elem
"
[
0
]
)
1
)
;
/
/
ref_is_null
.
wast
:
47
assert_return
(
(
)
=
>
call
(
1
"
anyref
-
elem
"
[
0
]
)
1
)
;
/
/
ref_is_null
.
wast
:
48
assert_return
(
(
)
=
>
call
(
1
"
funcref
-
elem
"
[
0
]
)
1
)
;
/
/
ref_is_null
.
wast
:
50
assert_return
(
(
)
=
>
call
(
1
"
nullref
-
elem
"
[
1
]
)
1
)
;
/
/
ref_is_null
.
wast
:
51
assert_return
(
(
)
=
>
call
(
1
"
anyref
-
elem
"
[
1
]
)
0
)
;
/
/
ref_is_null
.
wast
:
52
assert_return
(
(
)
=
>
call
(
1
"
funcref
-
elem
"
[
1
]
)
0
)
;
/
/
ref_is_null
.
wast
:
54
run
(
(
)
=
>
call
(
1
"
deinit
"
[
]
)
)
;
/
/
ref_is_null
.
wast
:
56
assert_return
(
(
)
=
>
call
(
1
"
nullref
-
elem
"
[
0
]
)
1
)
;
/
/
ref_is_null
.
wast
:
57
assert_return
(
(
)
=
>
call
(
1
"
anyref
-
elem
"
[
0
]
)
1
)
;
/
/
ref_is_null
.
wast
:
58
assert_return
(
(
)
=
>
call
(
1
"
funcref
-
elem
"
[
0
]
)
1
)
;
/
/
ref_is_null
.
wast
:
60
assert_return
(
(
)
=
>
call
(
1
"
nullref
-
elem
"
[
0
]
)
1
)
;
/
/
ref_is_null
.
wast
:
61
assert_return
(
(
)
=
>
call
(
1
"
anyref
-
elem
"
[
1
]
)
1
)
;
/
/
ref_is_null
.
wast
:
62
assert_return
(
(
)
=
>
call
(
1
"
funcref
-
elem
"
[
1
]
)
1
)
;
