BINJS
[
GRAMMAR
]
identity
;
>
(
IdentifierExpression
CallExpression
"
BindingIdentifier
&
ExpressionStatement
.
LiteralStringExpression
StaticMemberExpression
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator
BinaryExpression
AssertedParameterScope
>
AssertedPositionalParameterName
AssertedVarScope
FormalParameters0LiteralNumericExpression
(
AssignmentExpression
DataProperty
.
EagerFunctionExpression4FunctionExpressionContents0LiteralBooleanExpression
&
LiteralPropertyName
ObjectExpression8StaticMemberAssignmentTarget2AssertedScriptGlobalScope4AssignmentTargetIdentifier0EagerFunctionDeclaration0FunctionOrMethodContents
Script
ThisExpression
UpdateExpression
[
STRINGS
]
identity
;
?
var
dbg
g
s
g2
hits
+
eval
fn
frame
test
newCompartment
newGlobal
}
(
function
(
a
)
{
return
5
+
a
;
}
)
Debugger
addDebuggee
assertEq
clone
debugger
;
eval
(
'
2
+
3
'
)
evaluate
f
function
f
(
i
)
{
gczeal
i
=
128
;
8line0
=
Error
(
)
.
lineNumber
;
&
onDebuggerStatement
onNewScript
return
script
+
+
[
TREE
]
identity
;
u
80
"
*
(
.
6
&
:
<
4
6
4
&
.
2
.
8
&
<
>
2
"
(
:
0
*
"
*
(
