BINJS
[
GRAMMAR
]
identity
;
!
D
(
IdentifierExpression
CallExpression
StaticMemberExpression
&
ExpressionStatement
.
LiteralStringExpression
"
BindingIdentifier
(
AssertedDeclaredName0LiteralNumericExpression
&
VariableDeclaration
VariableDeclarator
AssertedBlockScope
BinaryExpression
Block0LiteralBooleanExpression
"
AssertedBoundName
.
AssertedBoundNamesScope
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope
(
AssignmentExpression
CatchClause
DataProperty
.
EagerFunctionExpression
FormalParameters4FunctionExpressionContents
*
LiteralNullExpression
&
LiteralPropertyName
NewExpression
ObjectExpression
Script8StaticMemberAssignmentTarget
"
TryCatchStatement
[
STRINGS
]
identity
;
g
var
assertEq
fFrame
dbg
eval
e
gw
hFrame
environment
getVariable
surprise
Debugger
(
Error
:
x
is
not
live
addDebuggee
executeInGlobal
f
function
f
(
)
{
{
let
x
=
1
y
;
(
function
(
)
{
y
=
0
}
)
(
)
;
h
(
)
}
}
2function
h
(
)
{
debugger
}
newCompartment
newGlobal
older
&
onDebuggerStatement
returnHsurprise
=
function
(
)
{
return
+
+
x
}
surprise
(
)
&
var
surprise
=
null
x
y
!
=
=
+
[
TREE
]
identity
;
?
>
&
*
<
.
8
(
&
6
:
*
.
0
4
"
2
(
8
?
:
2
40
"
<
6
B
>
