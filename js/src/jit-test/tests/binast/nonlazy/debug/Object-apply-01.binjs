BINJS
[
GRAMMAR
]
identity
;
F
(
IdentifierExpression
CallExpression
StaticMemberExpression
&
ExpressionStatement
.
LiteralStringExpression0LiteralNumericExpression
*
LiteralNullExpression
"
BindingIdentifier
*
ConditionalExpression
ArrayExpression
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator
AssertedParameterScope
AssertedVarScope
FormalParameters
.
EagerFunctionExpression4FunctionExpressionContents
ObjectExpression
>
AssertedPositionalParameterName
(
AssignmentExpression4AssignmentTargetIdentifier0ComputedMemberExpression0LiteralBooleanExpression8StaticMemberAssignmentTarget
UpdateExpression2AssertedScriptGlobalScope
BinaryExpression
DataProperty0EagerFunctionDeclaration0FunctionOrMethodContents
&
LiteralPropertyName
NewExpression
Script
[
STRINGS
]
identity
;
w
Z
fn
var
assertEq
cv
frame
usingApply
apply
call
return
g
hits
Object
dbg
arguments
eval
lose
test
join
keys
&
onDebuggerStatement
+
+
NaN
TypeError
assertThrowsInstanceOf
hello
one
throw
two
world
Debugger
asserts
.
js
calleeXf
(
function
(
)
{
return
arguments
.
length
;
}
)
;
Jf
(
function
(
a
b
)
{
return
a
+
b
;
}
)
;
f
(
function
lose
(
)
{
throw
f
;
}
)
;
4function
f
(
)
{
debugger
;
}
getPrototypeOf
hello
world
libdir
load
newCompartment
newGlobal
prototype
+
[
TREE
]
identity
;
D6
P
8X
N
>
T
&
:
R0
H
B
<
<
>
(
*
2
(
"
(
.
"
0
"
0
&
"
J
V
9
*
2
:
2
:
&
"
L
?
Y
?
Y
0
"
&
&
.
0
"
&
&
.
4
*
D
*
2
(
"
(
.
4
8
.
4
8
4
*
B
*
2
(
"
(
.
&
"
6
6
4
*
F
0
0
