BINJS
[
GRAMMAR
]
identity
;
<
(
IdentifierExpression
CallExpression
&
ExpressionStatement
"
BindingIdentifier
StaticMemberExpression
(
AssertedDeclaredName0LiteralNumericExpression
.
LiteralStringExpression
&
VariableDeclaration
VariableDeclarator
>
AssertedPositionalParameterName
AssertedParameterScope
AssertedVarScope
(
AssignmentExpression
FormalParameters
ArrayExpression2AssertedScriptGlobalScope4AssignmentTargetIdentifier
DataProperty0EagerFunctionDeclaration
.
EagerFunctionExpression4FunctionExpressionContents0FunctionOrMethodContents0LiteralBooleanExpression
&
LiteralPropertyName
ObjectExpression
Script8StaticMemberAssignmentTarget
UnaryExpression
[
STRINGS
]
identity
;
4
var
arr
test
g
e
code
dbg
expectedHits
hframe
assertEq
eval
(
function
(
)
{
'
use
strict
'
;
for
(
var
i
=
0
;
i
<
3
;
i
+
+
)
eval
(
'
h
(
)
;
'
)
;
}
)
(
)
;
(
function
(
)
{
for
(
var
i
=
0
;
i
<
3
;
i
+
+
)
{
let
j
=
i
*
4
;
h
(
)
;
}
}
)
(
)
;
(
function
(
)
{
var
f
=
function
(
a
)
{
h
(
)
;
return
a
;
}
;
f
(
1
)
;
f
(
2
)
;
}
)
(
)
;
z
(
function
f
(
n
)
{
h
(
)
;
return
n
<
2
?
1
:
n
*
f
(
n
-
1
)
;
}
)
(
3
)
;
Debugger
environment4function
h
(
)
{
debugger
;
}
indexOf
length
newCompartment
newGlobal
older
&
onDebuggerStatement
push
-
[
TREE
]
identity
;
6
"
*
4
&
2
(
0
"
8
.
*
:
2
?
0
(
.
&
