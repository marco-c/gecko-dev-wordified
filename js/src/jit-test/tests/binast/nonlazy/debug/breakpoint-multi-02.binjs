BINJS
[
GRAMMAR
]
identity
;
M
P
(
IdentifierExpression
&
ExpressionStatement
CallExpression
StaticMemberExpression
"
BindingIdentifier
.
LiteralStringExpression
(
AssertedDeclaredName
BinaryExpression
&
VariableDeclaration
VariableDeclarator0LiteralNumericExpression
(
AssignmentExpression8StaticMemberAssignmentTarget
AssertedParameterScope
>
AssertedPositionalParameterName
AssertedVarScope4AssignmentTargetIdentifier0ComputedMemberExpression
FormalParameters
DataProperty
.
EagerFunctionExpression
ForStatement4FunctionExpressionContents
*
LiteralNullExpression
&
LiteralPropertyName
ObjectExpression
UpdateExpression
ArrayExpression
AssertedBlockScope2AssertedScriptGlobalScope
Block8CompoundAssignmentExpression
<
ComputedMemberAssignmentTarget0EagerFunctionDeclaration0FunctionOrMethodContents
IfStatement0LiteralBooleanExpression
ReturnStatement
Script
[
STRINGS
]
identity
;
}
P
var
g
i
script
+
f
handlers
s
frame
j
log
assertEq
offs
dbg
handler
eval
length
+
+
<
log
+
=
'
x
'
;
log
+
=
'
y
'
;
Debugger
clearBreakpoint
debugger
;
function
f
(
)
{
getLineOffsets
hit
line0
newCompartment
newGlobal
&
onDebuggerStatement
return
setBreakpoint
var
line0
=
Error
(
)
.
lineNumber
;
x012y
x12y
}
+
=
=
=
=
[
TREE
]
identity
;
N
<
<
4
(
2
:
J
0
8
>
*
.
&
D
F
&
L4
(
26
*
.
&
L
H
N
0
"
4
8
&
6
"
>
:
B
&
"
6
"
B
D
2
(
*
J
0
"
F
.
H
