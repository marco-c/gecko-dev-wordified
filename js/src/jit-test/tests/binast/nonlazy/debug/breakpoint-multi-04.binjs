BINJS
[
GRAMMAR
]
identity
;
L
(
IdentifierExpression
"
BindingIdentifier
&
ExpressionStatement
CallExpression
(
AssertedDeclaredName
.
LiteralStringExpression
BinaryExpression
StaticMemberExpression
&
VariableDeclaration
VariableDeclarator0LiteralNumericExpression
4AssignmentTargetIdentifier
>
AssertedPositionalParameterName
(
AssignmentExpression
AssertedParameterScope
AssertedVarScope0ComputedMemberExpression
FormalParameters
ForStatement
UpdateExpression
ArrayExpression8CompoundAssignmentExpression
<
ComputedMemberAssignmentTarget
DataProperty0EagerFunctionDeclaration
.
EagerFunctionExpression4FunctionExpressionContents0FunctionOrMethodContents
&
LiteralPropertyName
ObjectExpression
AssertedBlockScope2AssertedScriptGlobalScope
Block
IfStatement0LiteralBooleanExpression
Script8StaticMemberAssignmentTarget
[
STRINGS
]
identity
;
X
var
i
g
+
log
frame
j
s
scripts
which
expected
handler
handlers
addDebugger
assertEq
dbg
eval
f
test
+
+
<
offs
+
=
return
012
;
Debugger
&
clearAllBreakpoints
debugger
;
function
f
(
)
{
getBreakpoints
getLineOffsets
hit
line0
newCompartment
newGlobal
&
onDebuggerStatement
return
script
setBreakpoint
var
line0
=
Error
(
)
.
lineNumber
;
}
!
=
=
[
TREE
]
identity
;
H
&
2
&
8
"
H
<
0
:
FF
"
R
<
0
4
T
*
*
2
8
6
J
J4
6
"
LN
.
D
<
0
:
B4
6
.
P
.
&
*
(
(
B
>
D
V
.
"
:
&
*
(
(
"
"
>
"
2
"
8
&
*
(
(
&
