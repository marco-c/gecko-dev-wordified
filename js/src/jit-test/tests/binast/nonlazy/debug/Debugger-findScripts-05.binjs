BINJS
[
GRAMMAR
]
identity
;
(
(
IdentifierExpression
StaticMemberExpression
CallExpression
"
BindingIdentifier
&
VariableDeclaration
VariableDeclarator
(
AssertedDeclaredName
&
ExpressionStatement0LiteralBooleanExpression
BinaryExpression0LiteralNumericExpression
UnaryExpression
2AssertedScriptGlobalScope
DataProperty
&
LiteralPropertyName
.
LiteralStringExpression
NewExpression
ObjectExpression
Script
[
STRINGS
]
identity
;
var
gw
g
script
assertEq
fw
scripts
!
=
dbg
hw
f
indexOf
"
makeDebuggeeValue
-
log
Debugger
addDebuggee
eval
findScripts
function
f
(
)
{
return
function
g
(
)
{
return
function
h
(
)
{
return
"
Squee
!
"
;
}
}
}
newCompartment
newGlobal
[
TREE
]
identity
;
3
&
*
(
"
"
&
?
?
?
