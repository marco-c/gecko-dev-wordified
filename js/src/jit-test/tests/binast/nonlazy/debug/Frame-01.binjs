BINJS
[
GRAMMAR
]
identity
;
>
(
IdentifierExpression
DataProperty
&
LiteralPropertyName
.
LiteralStringExpression0LiteralBooleanExpression
&
ExpressionStatement
CallExpression
ObjectExpression
StaticMemberExpression
"
BindingIdentifier
(
AssertedDeclaredName0LiteralNumericExpression
>
AssertedPositionalParameterName
VariableDeclarator
(
AssignmentExpression4AssignmentTargetIdentifier
BinaryExpression
&
VariableDeclaration
AssertedParameterScope
AssertedVarScope
FormalParameters2AssertedScriptGlobalScope
*
ConditionalExpression0EagerFunctionDeclaration
.
EagerFunctionExpression4FunctionExpressionContents0FunctionOrMethodContents
Script8StaticMemberAssignmentTarget
UpdateExpression
[
STRINGS
]
identity
;
=
V
constructing
generator
test
type
var
expected
f
assertEq
call
hits
eval
g
code
dbg
expectedHits
expectobj
Debugger
+
<
(
function
(
)
{
debugger
;
}
)
(
)
;
N
(
function
(
)
{
eval
(
'
debugger
;
'
)
;
}
)
(
)
;
Frame
Object
arguments
debugger
;
eval
(
'
debugger
;
'
)
;
evaluate0for
(
var
x
of
gen
(
)
)
{
}
bfunction
*
gen
(
)
{
debugger
;
yield
1
;
debugger
;
}
getPrototypeOf
global2iter
.
next
(
)
;
iter
.
next
(
)
;
lengthbnew
function
(
)
{
(
function
(
)
{
debugger
;
}
)
(
)
;
}
Jnew
function
(
)
{
eval
(
'
debugger
'
)
;
}
:
new
function
(
)
{
debugger
;
}
;
newCompartment
newGlobal
&
onDebuggerStatement
prototypeRthis
.
eval
(
'
debugger
;
'
)
;
/
/
indirect
eval
var
iter
=
(
function
*
stargen
(
)
{
debugger
;
yield
1
;
debugger
;
}
)
(
)
;
+
+
<
[
TREE
]
identity
;
!
8
H
F
:
J2
4
&
*
(
*
8
(
L
<
R
0
6
&
*
(
2
.
"
T
>
?
.
:
D
0
N
&
B
"
"
6
4
"
"
P
<
