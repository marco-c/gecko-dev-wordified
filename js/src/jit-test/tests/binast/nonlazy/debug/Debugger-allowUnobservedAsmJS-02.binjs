BINJS
[
GRAMMAR
]
identity
;
&
(
IdentifierExpression
BinaryExpression
CallExpression
.
LiteralStringExpression
&
ExpressionStatement
StaticMemberExpression
(
AssertedDeclaredName
"
BindingIdentifier0LiteralBooleanExpression
&
VariableDeclaration
VariableDeclarator2AssertedScriptGlobalScope
(
AssignmentExpression
DataProperty
&
LiteralPropertyName
ObjectExpression
Script8StaticMemberAssignmentTarget
ThisExpression
[
STRINGS
]
identity
;
>
msg
var
g
+
=
=
=
asmFunStr
|
|
assertEq
(
function
(
)
{
USE_ASM
(
allowUnobservedAsmJS
asm
.
jsjasm
.
js
type
error
:
Disabled
by
'
asmjs
'
runtime
optionNasm
.
js
type
error
:
Disabled
by
debuggerjasm
.
js
type
error
:
Disabled
by
lack
of
a
JIT
compilernasm
.
js
type
error
:
Disabled
by
lack
of
compiler
support
dbg6dbg
=
new
Debugger
(
parent
)
;
"
enableLastWarning
eval0function
f
(
)
{
}
return
f
getLastWarning
libdir
load
message
newCompartment
newGlobal
offThreadCompileScript
parent
runOffThreadScript
}
)
[
TREE
]
identity
;
C
.
4
2
"
8
&
"
(
6
<
:
*
0
