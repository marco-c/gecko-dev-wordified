BINJS
[
GRAMMAR
]
identity
;
>
(
IdentifierExpression
&
ExpressionStatement
.
LiteralStringExpression
CallExpression
StaticMemberExpression
8StaticMemberAssignmentTarget
"
BindingIdentifier
(
AssignmentExpression
(
AssertedDeclaredName
AssertedParameterScope
AssertedVarScope
FormalParameters
>
AssertedPositionalParameterName
BinaryExpression8CompoundAssignmentExpression
.
EagerFunctionExpression4FunctionExpressionContents
&
VariableDeclaration
VariableDeclarator2AssertedScriptGlobalScope
DataProperty0EagerFunctionDeclaration0FunctionOrMethodContents
IfStatement0LiteralBooleanExpression
&
LiteralPropertyName
.
LiteralRegExpExpression
ObjectExpression
Script
UnaryExpression
[
STRINGS
]
identity
;
x
check
g
eval
log
var
dbg
expr
frame
+
+
=
'
'
+
x
+
+
x
+
x
-
-
x
0
%
x
0
*
x
0
+
x
0
-
x
0
/
x
;
Debugger
Object
.
defineProperty
(
this
'
thisgetter
'
{
get
:
function
(
)
{
debugger
;
log
+
=
'
x
'
;
}
}
)
;
[
sy
]
assertEq
d
dxsy
getter
.
x
log
+
=
'
y
'
;
match
newCompartment
newGlobal
older
&
onDebuggerStatement
onStep
originalX
s
setter
.
x
=
1
thisgetterrvar
getter
=
{
get
x
(
)
{
debugger
;
return
log
+
=
'
x
'
;
}
}
var
originalX
=
{
toString
:
function
(
)
{
debugger
;
log
+
=
'
x
'
;
return
1
;
}
}
;
tvar
setter
=
{
set
x
(
v
)
{
debugger
;
return
log
+
=
'
x
'
;
}
}
x
x
!
=
0
x
&
1
x
<
0
x
<
<
1
x
<
=
0
x
=
=
0
x
>
0
x
>
=
0
x
>
>
1
x
>
>
>
1
x
^
1
x
in
{
}
x
|
1
x
+
+
x
-
-
~
x
!
[
TREE
]
identity
;
y
:
(
H
&
>
8
*
4
<
2
P
&
*
B
"
2
D
"
0
<
v
:
6
.
H
.
T
F
(
8
0
4
"
&
l
p
r
Z
b
d
^
V
X
n
j
t
\
f
h
N
6
R
J
L
