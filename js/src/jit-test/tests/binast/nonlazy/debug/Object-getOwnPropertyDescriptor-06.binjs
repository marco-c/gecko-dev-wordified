BINJS
[
GRAMMAR
]
identity
;
&
(
IdentifierExpression
StaticMemberExpression
CallExpression
&
ExpressionStatement
.
LiteralStringExpression
(
AssertedDeclaredName
"
BindingIdentifier
&
VariableDeclaration
VariableDeclarator0LiteralBooleanExpression
(
AssignmentExpression8StaticMemberAssignmentTarget
BinaryExpression
DataProperty
&
LiteralPropertyName
ObjectExpression2AssertedScriptGlobalScope
NewExpression
Script
[
STRINGS
]
identity
;
:
var
g2
assertEq
wobj
g10getOwnPropertyDescriptor
dbg
g1obj
g2obj
value
wmin
min
Debugger
addDebuggee
g2min
newCompartment
newGlobal
next
ok
x
y
!
=
=
Infinity
Math
ObjectZObject
.
defineProperty
(
this
'
y
'
{
get
:
min
}
)
;
eval
get
instanceof
[
TREE
]
identity
;
%
"
"
"
"
8
0
*
&
&
.
4
2
(
(
6
*
