BINJS
[
GRAMMAR
]
identity
;
(
IdentifierExpression
.
LiteralStringExpression
CallExpression
&
ExpressionStatement
StaticMemberExpression
"
BindingIdentifier
*
LiteralNullExpression
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator
>
AssertedPositionalParameterName
AssertedParameterScope
AssertedVarScope
(
AssignmentExpression4AssignmentTargetIdentifier
BinaryExpression
FormalParameters0LiteralNumericExpression2AssertedScriptGlobalScope
DataProperty0EagerFunctionDeclaration
.
EagerFunctionExpression4FunctionExpressionContents0FunctionOrMethodContents0LiteralBooleanExpression
&
LiteralPropertyName
NewExpression
ObjectExpression
Script8StaticMemberAssignmentTarget
UpdateExpression
[
STRINGS
]
identity
;
h
g
check
var
declarative
eval
gw
hits
code
dbg
env
"
makeDebuggeeValue
assertEq
expectedCallee
expectedType
frame
+
>
"
use
strict
"
;
eval
(
"
debugger
"
)
;
)
Debugger
addDebuggee
callee
check
(
debugger
;
environment
"
eval
(
"
debugger
"
)
;
f
f
(
)
4function
f
(
)
{
debugger
;
}
*
function
g
(
)
{
h
(
)
;
}
4function
h
(
)
{
debugger
;
}
bfunction
j
(
)
{
"
use
strict
"
;
eval
(
"
debugger
;
"
)
;
}
Rfunction
n
(
)
{
{
let
x
=
1
;
debugger
;
}
}
Nfunction
*
m
(
)
{
debugger
;
yield
true
;
}
Nfunction
*
o
(
)
{
debugger
;
yield
true
;
}
g
(
)
h
j
(
)
m
m
(
)
.
next
(
)
;
n
(
)
newCompartment
newGlobal
o
o
(
)
.
next
(
)
;
&
onDebuggerStatement
print
type
uneval
with
.
with
(
{
}
)
{
debugger
;
}
;
.
{
let
x
=
1
;
debugger
;
}
;
+
+
[
TREE
]
identity
;
:
&
R
8
(
4P2
6
&
*
0
"
Z
*
^
"
<
X
.
"
>
f
.
\
(
?
b
d
6
4
2
8
:
D
F
<
H
0
L
J
>
N
B
V
T
