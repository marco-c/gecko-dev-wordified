BINJS
[
GRAMMAR
]
identity
;
#
D
(
IdentifierExpression
.
LiteralStringExpression
BinaryExpression
&
ExpressionStatement
CallExpression
"
BindingIdentifier
(
AssertedDeclaredName
StaticMemberExpression
&
VariableDeclaration
VariableDeclarator
(
AssignmentExpression0LiteralBooleanExpression0LiteralNumericExpression8StaticMemberAssignmentTarget
AssertedBlockScope
AssertedParameterScope
AssertedVarScope
Block
.
EagerFunctionExpression
FormalParameters4FunctionExpressionContents
*
LiteralNullExpression
>
AssertedPositionalParameterName2AssertedScriptGlobalScope4AssignmentTargetIdentifier
DataProperty
IfStatement
&
LiteralPropertyName
ObjectExpression
ReturnStatement
Script
ThisExpression
UpdateExpression
[
STRINGS
]
identity
;
=
>
var
g
+
hits
assertEq
frame
dbg
rv
eval
onStep
in
caught
=
exc
;
.
finallyHit
=
true
;
h
(
)
;
throw
'
fail
'
;
Debugger
caught
finallyHit4function
h
(
)
{
debugger
;
}
h
newCompartment
newGlobal
older
&
onDebuggerStatement
try
{
undefined
}
}
catch
(
exc
)
{
}
finally
{
+
+
=
=
[
TREE
]
identity
;
#
>
0
*
:
48
(
.
&
*
.
(
"
B
:
2
6
<
?
0
6
8
4
&
*
(
"
2
<
&
"
