BINJS
[
GRAMMAR
]
identity
;
>
(
IdentifierExpression
BinaryExpression0LiteralNumericExpression
"
BindingIdentifier
&
VariableDeclaration
VariableDeclarator
(
AssertedDeclaredName4AssignmentTargetIdentifier
&
ExpressionStatement
(
AssignmentExpression
CallExpression
ForStatement
UpdateExpression
AssertedBlockScope
Block
StaticMemberExpression
>
AssertedPositionalParameterName
<
ComputedMemberAssignmentTarget
UnaryExpression
AssertedParameterScope2AssertedScriptGlobalScope
AssertedVarScope8CompoundAssignmentExpression0ComputedMemberExpression0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents0LiteralBooleanExpression
*
LiteralNullExpression
Script
[
STRINGS
]
identity
;
2
var
i
*
a
nx
j
<
sin
+
+
loops
nz
+
-
Math
PI2nx
f
f30
morph
testOutput
PI
acceptableDelta
/
Array
assertEq
+
=
[
TREE
]
identity
;
o
<
*
"
.
^
^
2
"
6
(
4
&
*
&
I
&
"
?
?
"
"
*
.
0
0
?
:
(
V
<
.
2
=
(
8
