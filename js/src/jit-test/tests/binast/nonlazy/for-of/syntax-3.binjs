BINJS
[
GRAMMAR
]
identity
;
&
(
IdentifierExpression
CallExpression
&
ExpressionStatement
.
LiteralStringExpression
AssertedParameterScope
AssertedVarScope
"
BindingIdentifier
FormalParameters
(
AssertedDeclaredName
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
BinaryExpression0EagerFunctionDeclaration
.
EagerFunctionExpression4FunctionExpressionContents0FunctionOrMethodContents
ReturnStatement
Script
[
STRINGS
]
identity
;
&
"
assertSyntaxError
str
Function
SyntaxError
assertThrowsInstanceOf
asserts
.
js8for
(
const
[
x
]
=
1
of
[
]
)
{
}
4for
(
const
x
=
1
of
[
]
)
{
}
8for
(
const
{
x
}
=
1
of
[
]
)
{
}
4for
(
let
[
x
]
=
1
of
[
]
)
{
}
0for
(
let
x
=
1
of
[
]
)
{
}
4for
(
let
{
x
}
=
1
of
[
]
)
{
}
4for
(
var
[
x
]
=
1
of
[
]
)
{
}
0for
(
var
x
=
1
of
[
]
)
{
}
4for
(
var
{
x
}
=
1
of
[
]
)
{
}
libdir
load
+
var
[
TREE
]
identity
;
!
"
"
