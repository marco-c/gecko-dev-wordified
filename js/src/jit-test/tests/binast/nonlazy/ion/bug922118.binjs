BINJS
[
GRAMMAR
]
identity
;
(
IdentifierExpression
CallExpression
&
ExpressionStatement
StaticMemberExpression
.
LiteralStringExpression
AssertedBlockScope
BinaryExpression
"
BindingIdentifier
Block0LiteralNumericExpression
(
AssertedDeclaredName
BreakStatement
IfStatement
SwitchCase
UnaryExpression
&
VariableDeclaration
VariableDeclarator
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope
(
AssignmentExpression4AssignmentTargetIdentifier0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents0LiteralBooleanExpression
NewExpression
Script
SwitchStatement
WhileStatement
[
STRINGS
]
identity
;
8
lfcode
lfVarx
push
var
file
loadFile
1
lfRunTypeId
!
=
.
js
0
Array
eval
evaluate2function
arguments
(
)
{
}
;
isNaN
length
parseInt
shift
substr
undefined
var
GLOBAL_PROPERTIES
=
new
Array
(
)
;
var
i
=
0
;
for
(
p
in
this
)
{
if
(
p
.
startsWith
(
'
a
'
)
)
GLOBAL_PROPERTIES
[
i
+
+
]
=
p
;
}
for
(
i
=
0
;
i
<
GLOBAL_PROPERTIES
.
length
;
i
+
+
)
{
eval
(
GLOBAL_PROPERTIES
[
i
]
)
;
}
!
&
&
-
=
=
[
TREE
]
identity
;
:
(
"
8
.
>
6
"
(
6
0
4
&
2
*
2
*
4
?
<
?
0
"
.
&
