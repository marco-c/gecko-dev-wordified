BINJS
[
GRAMMAR
]
identity
;
{
0
(
IdentifierExpression
BinaryExpression0LiteralNumericExpression
"
BindingIdentifier
&
VariableDeclaration
VariableDeclarator
(
AssertedDeclaredName4AssignmentTargetIdentifier
CallExpression
AssertedBlockScope
Block8CompoundAssignmentExpression
&
ExpressionStatement
ForStatement
AssertedParameterScope
AssertedVarScope0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
ReturnStatement
UpdateExpression2AssertedScriptGlobalScope
Script
[
STRINGS
]
identity
;
(
var
i
res
step
x
+
r1
r2
add_xors_1
add_xors_2
<
<
|
assertEq
+
+
+
=
-
=
<
>
=
>
>
^
[
TREE
]
identity
;
.
"
&
A
"
?
&
?
(
Y
*
"
&
A
"
?
&
?
(
Y
*
