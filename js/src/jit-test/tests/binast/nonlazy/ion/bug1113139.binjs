BINJS
[
GRAMMAR
]
identity
;
k
(
IdentifierExpression
&
ExpressionStatement
.
LiteralStringExpression
BinaryExpression
"
BindingIdentifier
CallExpression
(
AssertedDeclaredName
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope
(
AssignmentExpression
.
EagerFunctionExpression
FormalParameters4FunctionExpressionContents
NewExpression
Script8StaticMemberAssignmentTarget
StaticMemberExpression
&
VariableDeclaration
VariableDeclarator
[
STRINGS
]
identity
;
lfcode
x
push
+
var
}
)
(
)
;
(
function
(
)
{
Array
eval
+
function
error
(
str
)
{
try
{
eval
(
str
)
;
}
catch
(
e
)
{
return
e
;
}
}
const
YIELD_PAREN
=
error
(
'
(
function
*
(
)
{
(
for
(
y
of
(
yield
1
2
)
)
y
)
}
)
'
)
.
message
;
const
GENEXP_YIELD
=
error
(
'
(
function
*
(
)
{
(
for
(
x
of
yield
1
)
x
)
}
)
'
)
.
message
;
const
GENERIC
=
error
(
'
(
for
)
'
)
.
message
;
const
eval
=
[
]
;
[
TREE
]
identity
;
"
(
*
&
