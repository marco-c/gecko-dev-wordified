BINJS
[
GRAMMAR
]
identity
;
'
*
(
IdentifierExpression0LiteralNumericExpression
"
BindingIdentifier
CallExpression
ReturnStatement
>
AssertedPositionalParameterName
(
AssertedDeclaredName
AssertedParameterScope
AssertedVarScope0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
StaticMemberExpression
&
ExpressionStatement
BinaryExpression
ArrayExpression0ComputedMemberExpression
IfStatement2AssertedScriptGlobalScope
Script
[
STRINGS
]
identity
;
B
i
var
b
arguments
assertEq
apply
length
undefined
=
=
funapply
funapply2
funapply3
funapply4
funapply5
funapply6
test
test2
test3
test4
test5
test6
c
dumpArgs
dumpArgs2
dumpArgs3
dumpArgs4
dumpArgs5
dumpArgs6
l
j
k
*
+
[
TREE
]
identity
;
(
&
.
0
2
4
6
"
&
(
<
V
"
V
V
V
?
.
V
.
"
V
V
V
0
V
0
"
*
*
*
"
"
V
&
V
"
V
&
2
V
2
?
"
V
V
V
4
:
<
8
:
<
8
V
>
8
4
&
?
"
&
V
V
&
V
E
6
V
6
(
?
"
(
V
V
(
V
