BINJS
[
GRAMMAR
]
identity
;
H
(
IdentifierExpression
"
BindingIdentifier0LiteralNumericExpression
CallExpression
&
ExpressionStatement
StaticMemberExpression
(
AssertedDeclaredName4AssignmentTargetIdentifier
BinaryExpression
&
VariableDeclaration
VariableDeclarator
>
AssertedPositionalParameterName8CompoundAssignmentExpression
AssertedBlockScope
Block0ComputedMemberExpression
AssertedParameterScope
AssertedVarScope
ForStatement
FormalParameters
.
LiteralStringExpression
ReturnStatement
UpdateExpression
(
AssignmentExpression0EagerFunctionDeclaration0FunctionOrMethodContents
<
ComputedMemberAssignmentTarget
IfStatement
UnaryExpression
ArrayExpression
NewExpression2AssertedScriptGlobalScope
.
EagerFunctionExpression4FunctionExpressionContents
Script
[
STRINGS
]
identity
;
f
var
i
a
r
array
max
min
+
=
Math
arr
b
c
j
args
callback
d
index
+
<
length
+
+
e
assertEq
input
p
test
count
f
i1
i2
swap
-
max_value
maximum
min_value
minimum
permutate
t
)
;
Function
apply
join
undefined
=
=
arg
return
Math
.
max
(
return
Math
.
min
(
!
>
|
|
[
TREE
]
identity
;
F
.
B
F
H
2
2
2
4
"
*
6
(
*
6
*
*
6
*
*
6
&
.
(
2
(
2
g
2
?
2
:
>
H
2
:
>
3
4
2
?
:
>
H
&
?
.
(
<
&
.
(
06
&
"
*
Z
>
P
"
"
*
\
T
*
N
*
L
>
P
"
"
*
^
T
*
N
*
L
.
<
&
.
(
06
.
.
&
H
.
B
D
"
(
D
D
R
V
R
V
D
F
B
2
F
4
"
(
&
?
&
.
(
8
b
0
2
B
4
"
(
&
?
&
.
(
8
0
2
H
4
"
(
0
2
0
4
"
(
4
<
2
<
4
"
8
:
(
8
:
J
J
8
06
8
:
06
:
J8
X
>
&
?
?
4
0
"
?
&
"
?
&
.
(
<
4
0
"
?
<
48
d
:
X
&
0
