BINJS
[
GRAMMAR
]
identity
;
B
(
IdentifierExpression0LiteralNumericExpression
"
BindingIdentifier
&
ExpressionStatement
CallExpression
&
VariableDeclaration
VariableDeclarator
(
AssertedDeclaredName
.
LiteralStringExpression4AssignmentTargetIdentifier
BinaryExpression
AssertedBlockScope
(
AssignmentExpression
Block0LiteralBooleanExpression
StaticMemberExpression
>
AssertedPositionalParameterName
"
AssertedBoundName
.
AssertedBoundNamesScope
AssertedParameterScope2AssertedScriptGlobalScope
AssertedVarScope
CatchClause0EagerFunctionDeclaration
ForStatement
FormalParameters0FunctionOrMethodContents
IfStatement
ReturnStatement
Script
"
TryCatchStatement
UpdateExpression
[
STRINGS
]
identity
;
y
*
var
a
&
exhaustiveSliceTest
i
b
executed
y
testname
e
length
print
=
=
assertEq
.
exhaustive
slice
test
1
.
exhaustive
slice
test
2
.
exhaustive
slice
test
3
.
exhaustive
slice
test
4
slice
+
+
<
|
|
[
TREE
]
identity
;
<
*
?
>
.
&
0
6
(
"
"
4
2
&
8
(
?
:
"
