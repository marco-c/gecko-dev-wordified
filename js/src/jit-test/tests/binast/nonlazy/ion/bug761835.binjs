BINJS
[
GRAMMAR
]
identity
;
m
R
(
IdentifierExpression
"
BindingIdentifier
StaticMemberExpression
(
AssertedDeclaredName
&
ExpressionStatement
>
AssertedPositionalParameterName
CallExpression
(
AssignmentExpression
VariableDeclarator
BinaryExpression
ThisExpression
AssertedParameterScope
AssertedVarScope
FormalParameters0EagerFunctionDeclaration0FunctionOrMethodContents
&
VariableDeclaration0LiteralNumericExpression8StaticMemberAssignmentTarget4AssignmentTargetIdentifier
.
LiteralStringExpression
ReturnStatement
IfStatement
NewExpression
*
LiteralNullExpression
UpdateExpression
AssertedBlockScope
Block
<
ComputedMemberAssignmentTarget0ComputedMemberExpression
*
ConditionalExpression2AssertedScriptGlobalScope8CompoundAssignmentExpression
.
EagerFunctionExpression
ForStatement4FunctionExpressionContents0LiteralBooleanExpression
Script
UnaryExpression
WhileStatement
[
STRINGS
]
identity
;
W
;
var
r
i
x
m
prototype
BigInteger
t
n
c
s
nbi
RSAKey
a
e
b
this_array
z
+
-
BI_DB
RSA
sh
text
=
=
Montgomery
N
abs
array
h
j
nsh
parseBigInt
pm
y
E
dlShiftTo
k
nbits
q
ys
P
RSADecrypt
RSADoPrivate
RSADoPublic
RSAEncrypt
RSASetPrivateEx
RSASetPublic
am3
ba
bits
bnAbs
bnBitLength
bnMod
bnModPowInt
bnpDLShiftTo
bnpDivRemTo
bnpExp
bnpFromInt
bnpFromString
bnpIsEven
bnpLShiftTo
bs
"
check_correctness
ctext
dbits
divRemTo
ds
eValue
encrypted
intAt
lShiftTo
montConvert
montRevert
nValue
nbv
p
pkcs1pad2
pm_array
pt
r_array
str
&
Array
BI_DM
C
D
DP
DQ
ONE
Q
bitLength
coeffValue
convert
dValue
decrypt
decrypted
dmp1Value
dmq1Value
doPrivate
doPublic
encrypt
exp
fn
fromInt
fromString
g
hash
isEven
length
mi
mod
modPowInt
ms
pValue
qValue
r2
revert
setPrivateEx
setPublic
setupEngine
ts
w
xp
+
+
-
-
<
<
<
>
>
=
>
>
0
10001
142b19b40fee712ab9468be296447d38c7dfe81a7850f11ae6aa21e49396a4e90bd6ba4aa385105e15960a59f95447dfad89671da6e08ed42229939583753be84d07558abb4feee4d46a92fd31d962679a1a5f4bf0fb7af414b9a756e18df7e6d1e96971cc66769f3b27d61ad932f2211373e0de388dc040557d4c3c3fe74320
1a24bca8e273df2f0e47c199bbf678604e7df7215480c77c8db39f49b000ce2cf7500038acfff5433b7d582a01f1826e6f4d42e1c57f5e1fef7b12aabc59fd25
3a3e731acd8960b7ff9eb81a7ff93bd1cfa74cbd56987db58b4594fb09c09084db1734c8143f98b602b981aaa9243ca28deb69b5b280ee8dcee0fd2625e53250
3d06982efbbe47339e1f6d36b1216b8a741d410b0c662f54f7118b27b9a4ec9d914337eb39841d8666f3034408cf94f5b62f11c402fc994fe15a05493150d9fd
8e9912f6d3645894e8d38cb58c0db81ff516cf4c7e5a14c7f1eddb1459d2cded4d8d293fc97aee6aefb861859c8b6a3d1dfe710463e1f9ddc72048c09751971c4a580aa51eb523357a3cc48d31cfad1d4a165066ed92d4748fb6571211da5cb14bc11b6e2df7c1a559e6d5ac1cd5c94703a22891464fba23d0d965086277a161
Classic
Hello
!
I
am
some
text
.
Math
a5261939975948bb7a58dffe5ff54e65f0498f9175f5a09288810b8975871e99af3b5dd94057b0fc07535f5f97444504fa35169d461d0d30cf0192e307727c065168c788771c561a9400fb49175e9e6aa4e23fe11af69e9412dd23b0cb6684c4c2429bce139e848ab26d0829073351f4acd36074eafd036a5eb83359d2a698d3
cab575dc652bb66df15a0359609d51d1db184750c00c6698b90ef3465c99655103edbf0d54c56aec0ce3c4d22592338092a126a0cc49f65a4a30d222b411e58f
d090ce58a92c75233a6486cb0a9209bf3583b64f540c76f5294bb97d285eed33aec220bde14b2417951178ac152ceab6da7090905b478195498b352048f15e7d
dmp1
floor
fromNumber
modPow
negate
number
toString
!
=
%
+
=
/
typeof
|
|
[
TREE
]
identity
;
*
L
<
2
T
V
X
Z
\
^
f
h
j
l
n
p
r
t
v
x
z
~
L
z
&
80
.
/
2
.
0
*
+
N7
%
0
2
<
<
(
D
H
d
d
(
d
(
(
(
&
?
?
t
"
v
"
8
.
0
0
(
J
&
"
J
P
4
(
86
"
>
0
J
<
o
.
0
:
4
&
.
J
(
86
:
4
&
&
(
B3
(
J
f
>
)
L
"
?
h
n
"
8
"
8F
(
&
?
4
(
:
<
&
z
|
"
|
1
(
"
#
5
(
|
&
?
p
N
N
<
>
B
D
P
"
B
6
"
6
"
D
"
B8
"
>
&
(
L
<
&
B
?
.
>
86
B
>
D
>
"
P
D
"
<
&
P
>
0
N2
N
DH
<
H
P
j
"
6
2
2
&
"
6
H
2
"
&
2
&
2
x
r
"
"
"
"
&
L
?
"
l
.
9
p
(
"
0
(
"
0
2
"
&
t
&
v
&
H
n
&
z
&
p
&
x
&
r
&
6
f
&
h
&
j
&
l
&
?
0
b
"
b0
0
b
^
4
F
4
F
&
4
0
X
Z
.
.
:
"
.
"
"
:
-
0
.
0
:
?
:
*
:
&
X
&
^
&
Z
\
4
F
R
4
F
R
&
R
0
V
"
'
!
T
"
0
"
&
V
&
\
&
T
(
*
(
*
(
*
(
*
(
*
(
*
(
*
(
*
<
~
.
.
*
"
*
0
*
*
"
*
.
"
*
~
*
*
