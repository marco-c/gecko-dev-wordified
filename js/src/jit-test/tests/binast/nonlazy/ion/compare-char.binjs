BINJS
[
GRAMMAR
]
identity
;
>
(
IdentifierExpression
BinaryExpression
"
BindingIdentifier0LiteralNumericExpression
(
AssertedDeclaredName
.
LiteralStringExpression
&
VariableDeclaration
VariableDeclarator
4AssignmentTargetIdentifier
CallExpression
UpdateExpression
&
ExpressionStatement0ComputedMemberExpression
IfStatement
AssertedBlockScope
Block
ForStatement0LiteralBooleanExpression
ReturnStatement
StaticMemberExpression
AssertedParameterScope
AssertedVarScope0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
>
AssertedPositionalParameterName
UnaryExpression
ArrayExpression2AssertedScriptGlobalScope
Script
[
STRINGS
]
identity
;
O
var
i
c
s
str
<
=
+
+
j
q
<
strings
&
&
length
resultCharCodeAt
*
assertEq
resultCharAt
resultGetElem
!
+
|
|
abcabcabc
&
A2IsASCIIAlphaString_CharAt
:
IsASCIIAlphaString_CharCodeAt4IsASCIIAlphaString_GetElem
<
IsGreekOrCyrillicString_CharAtDIsGreekOrCyrillicString_CharCodeAt
>
IsGreekOrCyrillicString_GetElem
a
compareLatin1
compareRangeLatin1
&
compareRangeTwoByte
compareTwoByte
main
ABCABCABC
Z
charAt
charCodeAt
z
!
=
!
=
=
=
=
=
=
=
!
#
456_
~
ABC
{
|
}
abc
D
aBcZyyZUU
abcABCabc
abc
[
_
]
ABC
abcabc123
abc
b
H
[
TREE
]
identity
;
<
:
0
2
4
6
8
:
F
.
2
2
*
4
0
"
(
(
N
6
(
P
V
X
^
&
&
.
0
2
*
4
0
"
(
(
L
6
(
.
J
<
P
&
&
.
4
2
*
4
0
"
(
6
(
.
J
<
P
&
&
.
8
2
*
4
0
"
(
(
N
6
(
&
&
.
6
2
*
4
0
"
(
(
L
6
(
R
T
V
X
&
&
.
:
2
*
4
0
"
(
6
(
R
T
V
X
&
&
.
F
2
*
0
>
B
D
.
>
2
*
0
8
H
*
"
i
?
"
(
<
^
.
Z
r
\
f
&
&
&
Y
Y
Y
.
Y
2
.
D
2
*
0
8
v
*
"
i
?
"
(
z
^
x
Z
t
\
|
&
&
&
Y
Y
Y
.
Y
2
.
2
*
0
"
8
H
*
j
n
l
d
b
h
"
i
2
0
"
4
"
.
B
2
*
0
"
8
~
p
*
"
i
8
6
"
:
"
>
D
B
"
.
F
