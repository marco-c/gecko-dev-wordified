BINJS
[
GRAMMAR
]
identity
;
c
<
(
IdentifierExpression
CallExpression
"
BindingIdentifier
&
ExpressionStatement
.
LiteralStringExpression
(
AssertedDeclaredName
VariableDeclarator
4AssignmentTargetIdentifier0LiteralNumericExpression
&
VariableDeclaration
ArrayExpression
(
AssignmentExpression
BinaryExpression0LiteralBooleanExpression
AssertedBlockScope
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope
Block
Directive0EagerFunctionDeclaration
ForStatement
FormalParameters0FunctionOrMethodContents
ObjectExpression
ReturnStatement
Script
UpdateExpression
[
STRINGS
]
identity
;
y
(
var
strictEvalMutation
a1
a2
i
assertEq
code
.
arguments
[
0
]
=
17
;
code
arraysEqual
(
code
=
17
;
arguments
obj8arguments
[
0
]
=
17
;
arguments
array
-
compare
.
js
eval
libdir
load
use
strict
+
+
+
<
[
TREE
]
identity
;
8
"
4
*
2
"
0
&
6
.
&
:
(
1
