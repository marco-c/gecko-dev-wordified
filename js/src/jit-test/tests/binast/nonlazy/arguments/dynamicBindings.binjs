BINJS
[
GRAMMAR
]
identity
;
<
(
IdentifierExpression0LiteralNumericExpression
"
BindingIdentifier
&
ExpressionStatement
CallExpression
>
AssertedPositionalParameterName4AssignmentTargetIdentifier
(
AssertedDeclaredName
AssertedParameterScope
AssertedVarScope
BinaryExpression0EagerFunctionDeclaration
ForStatement
FormalParameters0FunctionOrMethodContents
UpdateExpression
&
VariableDeclaration
VariableDeclarator
.
LiteralStringExpression
(
AssignmentExpression
AssertedBlockScope2AssertedScriptGlobalScope
Block8CompoundAssignmentExpression
<
ComputedMemberAssignmentTarget0ComputedMemberExpression
ObjectExpression
Script
WithStatement
[
STRINGS
]
identity
;
!
i
x
y
var
assertEq
+
+
<
eval
testEval
*
testEvalWithArguments
testNestedEval
testWith
arguments
arguments
[
0
]
+
=
104eval
(
'
arguments
[
0
]
+
=
10
'
)
+
=
[
TREE
]
identity
;
8
(
&
.
"
&
4
*
"
(
&
.
"
:
6
.
*
0
2
*
"
