BINJS
[
GRAMMAR
]
identity
;
<
(
IdentifierExpression0LiteralNumericExpression
&
ExpressionStatement
CallExpression0ComputedMemberExpression
(
AssignmentExpression
<
ComputedMemberAssignmentTarget
BinaryExpression
"
BindingIdentifier
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator
AssertedParameterScope
>
AssertedPositionalParameterName
AssertedVarScope0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents0LiteralBooleanExpression
NewExpression
UnaryExpression
AssertedBlockScope2AssertedScriptGlobalScope4AssignmentTargetIdentifier
Block
ForStatement
IfStatement
Script
UpdateExpression
[
STRINGS
]
identity
;
{
f
assertEq
L
+
var
undefined
i
testInt16Array
testInt8Array
testUint16Array
testUint8Array
*
testUint8ClampedArray
-
Int16Array
Int8Array
Uint16Array
Uint8Array
"
Uint8ClampedArray
gc
+
+
<
=
=
[
TREE
]
identity
;
E
8
.
"
"
(
(
?
*
?
&
(
?
*
*
*
(
?
"
"
(
(
?
*
?
&
(
?
*
*
n
?
"
"
(
"
(
?
*
?
&
(
?
*
*
o
?
"
"
(
(
?
*
?
1
A
&
(
?
*
*
*
?
"
"
(
(
?
*
?
1
A
&
(
?
*
*
?
4
(
:
&
0
2
6
*
