BINJS
[
GRAMMAR
]
identity
;
T
(
IdentifierExpression
"
BindingIdentifier
&
ExpressionStatement
(
AssertedDeclaredName
CallExpression
>
AssertedPositionalParameterName
.
LiteralStringExpression
StaticMemberExpression
AssertedParameterScope
AssertedVarScope
(
AssignmentExpression
FormalParameters0EagerFunctionDeclaration0FunctionOrMethodContents
ThisExpression4AssignmentTargetIdentifier
&
VariableDeclaration
VariableDeclarator
BinaryExpression
NewExpression
ReturnStatement8StaticMemberAssignmentTarget
AssertedBlockScope
Block
.
LiteralRegExpExpression
UpdateExpression
ArrayExpression
"
AssertedBoundName
.
AssertedBoundNamesScope2AssertedScriptGlobalScope
CatchClause
<
ComputedMemberAssignmentTarget0ComputedMemberExpression
.
EagerFunctionExpression
ForStatement4FunctionExpressionContents0LiteralBooleanExpression0LiteralNumericExpression
Script
"
TryCatchStatement
UnaryExpression
[
STRINGS
]
identity
;
e
P
var
gTestcases
TestCase
i
SECTION
jsTestDriverEnd
toPrinted
value
DoWhile
d
escapeString
gTc
+
a
description
dump
e
ex
g
n
object
reason
replace
result1
str
+
+
\
'
O
:
i
'
.
match
(
new
RegExp
(
'
.
+
'
)
)
Array
NL
[
^
\
x20
-
\
x7E
]
+
\
\
n
break
one
:
dowhile
-
007
err
length
prototype
(
O
:
i
<
[
TREE
]
identity
;
C
N
<
"
(
:
"
&
&
*
4
4
2
J
D
H
*
&
&
R
*
6
*
2
<
2
>
0
0
P0
.
F
>
:
8
"
"
0
.
F
"
L
&
N
H4
2
B
"
D
(
(
*
.
J
(
B
.
(
86
L
