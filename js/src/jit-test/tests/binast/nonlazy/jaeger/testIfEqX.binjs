BINJS
[
GRAMMAR
]
identity
;
6
(
IdentifierExpression
&
ExpressionStatement0LiteralNumericExpression
.
LiteralStringExpression
CallExpression4AssignmentTargetIdentifier
"
BindingIdentifier
(
AssertedDeclaredName8CompoundAssignmentExpression
&
VariableDeclaration
VariableDeclarator
BinaryExpression
AssertedBlockScope
Block
ForStatement
UpdateExpression
AssertedParameterScope
AssertedVarScope0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents0LiteralBooleanExpression
NewExpression
ArrayExpression2AssertedScriptGlobalScope
Script
[
STRINGS
]
identity
;
g
0
var
src
i
f
+
=
assertEq
testIfElse
testWhile
+
+
<
Function
}
+
a
=
1
;
a
=
2
;
if
(
x
)
{
j
=
i
;
return
a
;
return
j
;
var
a
=
0
;
var
i
=
0
j
=
0
;
&
while
(
i
+
+
<
50
)
{
x
}
else
{
[
TREE
]
identity
;
e
42
&
*
"
(
&
X
.
X
"
.
?
0
?
?
&
*
"
(
(
*
.
I
