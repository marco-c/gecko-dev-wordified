BINJS
[
GRAMMAR
]
identity
;
v
(
IdentifierExpression
NewExpression
.
LiteralStringExpression
"
BindingIdentifier
(
AssertedDeclaredName
BinaryExpression
*
LiteralNullExpression
StaticMemberExpression
&
ExpressionStatement
(
AssignmentExpression4AssignmentTargetIdentifier
VariableDeclarator
&
VariableDeclaration
CallExpression
>
AssertedPositionalParameterName
ReturnStatement0LiteralNumericExpression
AssertedParameterScope
AssertedVarScope
FormalParameters0EagerFunctionDeclaration0FunctionOrMethodContents
AssertedBlockScope
Block
IfStatement0ComputedMemberExpression0LiteralBooleanExpression
ThisExpression8StaticMemberAssignmentTarget
.
EagerFunctionExpression4FunctionExpressionContents
UnaryExpression
SwitchCase
DataProperty
&
LiteralPropertyName
WhileStatement
UpdateExpression8CompoundAssignmentExpression
<
ComputedMemberAssignmentTarget
*
ConditionalExpression
ForStatement
BreakStatement
EmptyStatement
ThrowStatement
SwitchDefault4SwitchStatementWithDefault
ObjectExpression
ArrayExpression
&
TryFinallyStatement
"
AssertedBoundName
.
AssertedBoundNamesScope
CatchClause
"
ContinueStatement
"
TryCatchStatement2AssertedScriptGlobalScope
ForInOfBinding
ForInStatement
Script
[
STRINGS
]
identity
;
sc_Pair
var
i
cdr
+
l
car
res
x
p
o
=
=
=
s
equal
y
x
c
arguments
!
=
=
l1
tmp
j
val
length
conf_set
a
+
=
instanceof
k
term
-
proc
+
+
sc_Token
<
port
symb
n
lst
state
a
nb
>
=
l2
prototype
!
y
s2
plus
s1
z
undefined
b
nt
args
ht
times
cs1
cs2
tail
zero
&
&
i
if
re
key
head
revres
sym
t
v
appendJSString
b
fill
name
parse
thunk
toLowerCase
lessp
not
|
|
al
dummy
substring
token
and
append
-
-
Math
close
ender_set
nts
sc_Char
sc_cons
sc_list
sc_x_11
zerop
ender
len
prev
radix
field
readChar
reg
enders
difference
delete
alist
applyArgs
lst2
nbApplyArgs
states
charAt
defs
rule_loop
rules
sc_toDisplayString
fix
def
lst1
sc_isEqual
sc_string2jsstring
tokenizer
c
\
BgL_sc_symbolzd2ze3symbolzd2record_1ze3_nboyer
apply
conf
next
o1
o2
optrOpnd
pos
sc_toWriteString
slice
steps
term2
type
base
cons
f
implies
SC_DEFAULT_OUT
peekChar
rule
sc_SYMBOL_PREFIX
sc_Vector
sc_state_82
symbol_record
toString
j
or
<
=
>
Array
RegExp
SC_EOF_OBJECT
curChar
hexC
needing
rabbit
sc_hash
sc_makeVector
toks
*
translate_args_nboyer
member
numberp
t
=
=
SC_DEFAULT_IN
charCodeAt
e
hash
(
is_term_equal_nboyer
nbPointer
needsAssig
parser_descr
result
sc_InputPort
sc_tmp
temp_temp
add1
nil
typeof
#
0BgL_sc_statezd2num_68zd2
f
i2
rewrites
sc_OutputPort
sc_conf_18
sc_i_28
sc_l_74
sc_nts_8
(
sc_reverseAppendBang
sc_states_33
sc_steps_38
l
meaning
remainder
reverse
.
BgL_sc_confzd2set_79zd2
BgL_sc_confzd2setzd2getza2_44za2
apply_subst_nboyer
current
entry
false_lst
ind
is_parsed
l3
names
peeked
rewrite_nboyer
&
sc_StringOutputPort
sc_Struct
sc_display
sc_enders_40
sc_isPair
sc_nts_13
sc_nts_42
sc_toks_36
sstart
term1
unify_subst_nboyer
use
writeOrDisplay
length
p
"
)
(
BgL_sc_nbzd2nts_7zd2
BgL_sc_statesza2_30za2bBgL_sc_za2symbolzd2recordszd2alistza2_2z00_nboyer
L1125
L1127
L1130
String
comp
conf_set_adjoin
const_nboyer
inList
isWhitespace
*
is_term_member_nboyer
l4
lexer
read
(
rewrite_count_nboyer
sc_ErrorOutputPort
"
sc_KEYWORD_PREFIX
sc_alist_6
sc_conf_131
sc_conf_80
sc_i_130
sc_ind_43
sc_isCharOfClass
sc_jsstring2string
sc_n_15
sc_starters_41
sc_term_18
sc_term_19
sc_term_22
sc_toWriteCircleString
send
source
step
*
translate_term_nboyer
flatten
plus
-
tree
power
-
eval
w
*
0LBgL_sc_confzd2setzd2adjoinza2za2_46z00
*
BgL_sc_stateza2_23za2
Object
assertEq
call
can
'
t
open
concat
deriv_trees
end
evalStr
"
false_term_nboyer
fun
jss1
jss2
listBeginType
nb_deriv_trees
nb_nts
nb_toks
nb_trees
push
r
readToken
"
sc_ErrorInputPort
sc_StringInputPort
sc_Tokenizer
sc_enders_42sc_genToWriteCircleString
sc_isNumber
sc_l2_100
sc_lst_13
sc_lst_14
sc_lst_5
sc_lst_7
sc_names_1
sc_newline
sc_nts_11
sc_predictors_39
sc_prepWriteCircle
sc_properties
sc_states_114
sc_states_129
sc_states_96
sc_steps_112
sc_steps_22sc_toWriteOrDisplayString
start
str
tail1129
tail1131
tail1134
trees
true_lst
true_term_nboyer
turtle
exp
listp
q
quotient
.
BgL_sc_confzd2set_55zd24BgL_sc_confzd2setza2_64z70FBgL_sc_confzd2setzd2adjoinza2_45za2
BgL_sc_defzd2loop_6zd2
BgL_sc_defzd2loop_9zd2
.
BgL_sc_nbzd2confs_16zd2
BgL_sc_nbzd2nts_115zd2
*
BgL_sc_nbzd2nts_97zd2
BgL_sc_nbzd2toks_35zd2
&
BgL_sc_ntza2_109za2
&
BgL_sc_ntza2_126za2
BgL_sc_ntza2_90za2
.
BgL_sc_statesza2_128za2
*
BgL_sc_stateza2_65za20BgL_sc_statezd2num_62zd2
(
BgL_setupzd2boyerzd2
&
BgL_testzd2boyerzd2
SC_LOWER_CLASS
SC_TAIL_OBJECT
SC_UPPER_CLASS
\
apply_subst_lst_nboyer
.
conf_set_merge_new_bang
conf_set_union
def_loop
done
escape_obj
falseHead1128
falseHead1130
falseHead1133
forw
gcd
grammar
*
if_constructor_nboyer
init
isResultReady
it
lcm
loop1
loop2
loop3
make_states
nb_confs
obj
*
one_way_unify1_nboyer
open
other_set
parseInt
pred
pred_set
predictors
produced
remainder
&
rewrite_args_nboyer
(
sc_GenericOutputPort
sc_assq
sc_conf_107
sc_conf_124
sc_conf_59
sc_conf_63
sc_conf_91
sc_enders_111
sc_enders_92
sc_error
sc_i_17
sc_i_19
sc_i_29
sc_loop1_116
sc_loop1_127
sc_loop1_75
sc_loop1_98
sc_n_118
sc_n_20
sc_names_94
sc_next_85
sc_predictors_3
sc_reverse
sc_starters_5
sc_states_52
sc_steps_25
sc_steps_93
sc_term_12
sc_tmp1125_9
sc_tmp1126_10
sc_toks_95
sc_x_134
sc_x_8
starter
starter_set
starters
target
"
tautologyp_nboyer
test
tmp1124
tmp1125
tmp1126
tok
translate_alist_nboyer
tstart
v1
values
nth
/
in
(
=
2BgL_earleyzd2benchmarkzd2
(
BgL_makezd2parserzd22BgL_nboyerzd2benchmarkzd2
.
BgL_parsezd2ze3treesz31
BgL_runzd2benchmarkzd2
.
BgL_sc_confzd2set_76zd2
<
BgL_sc_derivzd2treesza2_132z70
:
BgL_sc_derivzd2treesza2_47z70
.
BgL_sc_nbzd2confs_14zd2
.
BgL_sc_nbzd2confs_15zd2
.
BgL_sc_nbzd2confs_32zd2
.
BgL_sc_nbzd2confs_34zd2FBgL_sc_nbzd2derivzd2treesza2_133za2DBgL_sc_nbzd2derivzd2treesza2_48za2
BgL_sc_nbzd2nts_108zd2
BgL_sc_nbzd2nts_125zd2
*
BgL_sc_nbzd2nts_24zd2
*
BgL_sc_nbzd2nts_31zd2
*
BgL_sc_nbzd2nts_81zd2
BgL_sc_nbzd2toks_50zd2
.
BgL_sc_nextzd2set_84zd2
BgL_sc_statesza2_27za20BgL_sc_statezd2num_58zd20BgL_sc_statezd2num_77zd28BgL_sc_symbolzd2record_16zd2
SC_HASH_COUNTER
answer
backref
cached
const_earley
consumer
counter
ender_tree
ender_trees
escape
fromCharCode
goal_enders
goal_starters
isIdOrNumberChar
isNumberChar
"
isWhitespaceOrEOF
matchesPeer
nb_ender_trees
nb_prev_trees
newToken
next_set
p1
p2
par
peekToken
preds
prev_trees
product
r1
r2
readIdOrNumber
rule_num
sc_Hashtable
&
sc_HashtableElement
sc_Port
sc_Reader
sc_Trampoline
sc_Values
sc_append
sc_conf_110
sc_conf_54
sc_conf_89
"
sc_const_3_nboyer
"
sc_const_4_nboyer
sc_enders_102
sc_enders_120
sc_enders_26
sc_euclid_gcd
sc_isVector
sc_jsstring2number
sc_jsstring2symbol
sc_list2vector
sc_member
sc_names_37
sc_nts_10
sc_nts_101
sc_nts_119
sc_nts_12
sc_nts_49
sc_nts_86
sc_number2jsstring
sc_optrOpnd_20
sc_optrOpnd_21
sc_optrOpnd_22
sc_state_117
sc_state_83
sc_state_99
sc_states_106
sc_states_123
sc_states_67
sc_states_78
sc_sym_17
sc_term_21
sc_toks_113
sc_vector2list
&
sc_withOutputToPort
sc_write
sp
state_num
string
sum
temp
tok_nts0trans_of_implies1_nboyer
.
untranslate_term_nboyer
v2
value
*
alist
d
delete
gcd
k
s
sub1
var
%
~
98BgL_parsezd2ze3nbzd2treesze36BgL_parsezd2ze3parsedzf3zc2
.
BgL_sc_nbzd2confs_51zd2
BgL_sc_statesza2_61za20BgL_sc_statezd2num_53zd2
RunBenchmark
SC_ERROR_OUT
SC_ID_CLASS
SC_NUMBER_CLASS
"
SC_SCM2JS_GLOBALS
after
allowedChars
before
body
cl
count
diff
firstChar
function
getNextChar
handler
indexOf
input
isCharReady
jsStr
jss
l1_orig
lazy
maxTailCalls
nbEls
num
producer
readDot
readList
readQuote
readReference
readSharp
readString
readVector
reader
rev
run
(
sc_BindExitException
sc_EOF
sc_any
sc_conf_56
sc_conf_66
sc_counterHash
sc_dualAppend
"
sc_dualAppendBang
sc_enders_70
sc_enders_87
(
sc_escapeWriteString
sc_every
sc_filterMap1
sc_filterMap2
sc_gensym
sc_isCharStringCIEqual0sc_isCharStringCIGreater
:
sc_isCharStringCIGreaterEqual
*
sc_isCharStringCILess4sc_isCharStringCILessEqual
(
sc_isCharStringEqual
sc_isCharStringGreater6sc_isCharStringGreaterEqual
&
sc_isCharStringLess0sc_isCharStringLessEqual
sc_isEOFObject
sc_isPairEqual
sc_isReal
sc_isVectorEqual
sc_jsstring2list
sc_length
sc_list2jsstring
sc_listTail
.
sc_makeJSStringOfLength
sc_makejsString
sc_names_104
sc_nts_73
sc_number2string
sc_predictors_71
sc_pregexp
sc_print
sc_reverseBang
sc_starters_69
sc_states_57
sc_states_60
sc_states_88
sc_steps_103
sc_steps_121
sc_steps_72
sc_toks_105
sc_toks_122
"
sc_vectorFillBang
(
sc_withInputFromPort
size2skipWhitespaceAndComments
storeRefence
warn
assignment
car
count
-
list
e
envrn
exec
gopher
greatest
-
factor
last
normalize
power
-
rep
prime
-
list
reverse
-
loop
sort2
times
-
list
u
*
=
.
#
(
#
<
procedure
#
f
#
t
#
unspecified
(
)
.
.
#
:
A
MAX_TAIL_CALLs
&
SC_WHITESPACE_CLASS
\
v
]
__sc_FILE
__sc_LINE
_internalException
abs
char2readable6closing
par
doesn
'
t
match
:
floor
g
global
lastIndexOf
nextToken
null
number
readable2char
replace
round
sc_JS_GLOBALS
sc_abs
sc_acos
sc_alert
sc_any2String
sc_anyPred
sc_appendBang
sc_apply
sc_asin
sc_assoc
sc_assv
sc_atan
sc_basename
"
sc_bindExitLambda
sc_bitAnd
sc_bitLsh
sc_bitNot
sc_bitOr
sc_bitRsh
sc_bitUrsh
sc_bitXor
sc_caaaar
sc_caaadr
sc_caaar
sc_caadar
sc_caaddr
sc_caadr
sc_caar
sc_cadaar
sc_cadadr
sc_cadar
sc_caddar
sc_cadddr
sc_caddr
sc_cadr
(
sc_callWithInputFile
*
sc_callWithOutputFile
"
sc_callWithValues
sc_car
sc_cdaaar
sc_cdaadr
sc_cdaar
sc_cdadar
sc_cdaddr
sc_cdadr
sc_cdar
sc_cddaar
sc_cddadr
sc_cddar
sc_cdddar
sc_cddddr
sc_cdddr
sc_cddr
sc_cdr
sc_ceiling
sc_char2integer
sc_char2string
sc_char2symbol
sc_charDowncase
sc_charUpcase
"
sc_closeInputPort
sc_closeOutputPort
sc_consStar
sc_copyVector
sc_cos
sc_currentDate
&
sc_currentInputPort
sc_delete
sc_deleteBang
(
sc_deleteJsFieldBang
sc_dirname
sc_div
sc_dynamicWind
sc_equal
sc_everyPred
sc_exact2inexact
sc_exp
sc_expt
sc_filter
sc_filterBang
sc_filterMap
sc_floor
sc_forEach
sc_force
sc_format
sc_gcd
sc_getHash
sc_getOutputString
"
sc_getStructField
sc_getprop
sc_greater
sc_greaterEqual
(
sc_hashtableContains
&
sc_hashtableForEach
sc_hashtableGet
&
sc_hashtablePutBang
sc_inexact2exact
sc_integer2char
sc_iota
sc_isBoolean
sc_isChar
&
sc_isCharAlphabetic
sc_isCharCIEqual
sc_isCharCIGreater
.
sc_isCharCIGreaterEqual
sc_isCharCILess
(
sc_isCharCILessEqual
sc_isCharEqual
sc_isCharGreater
*
sc_isCharGreaterEqual
sc_isCharLess
sc_isCharLessEqual
sc_isCharLowerCase
sc_isCharNumeric
sc_isCharReady
sc_isCharUpperCase
&
sc_isCharWhitespace
sc_isComplex
sc_isEq
sc_isEqv
sc_isEven
sc_isExact
sc_isInexact
sc_isInputPort
sc_isInteger
sc_isKeyword
sc_isList
sc_isNegative
sc_isNull
sc_isOdd
sc_isOutputPort
sc_isPositive
sc_isProcedure
sc_isRational
sc_isString
sc_isStringCIEqual
(
sc_isStringCIGreater2sc_isStringCIGreaterEqual
"
sc_isStringCILess
sc_isStringCILessEqual
sc_isStringEqual
sc_isStringGreater
.
sc_isStringGreaterEqual
sc_isStringLess
(
sc_isStringLessEqual
sc_isStruct
sc_isStructNamed
"
sc_isSubstring_at
sc_isSymbol
sc_isZero
sc_jsCall
sc_jsField
sc_jsMethodCall
sc_jsNew
&
sc_jsstring2keyword
&
sc_keyword2jsstring
"
sc_keyword2string
sc_lastPair
sc_lcm
sc_less
sc_lessEqual
sc_list2string
sc_listRef
sc_log
sc_makeHashtable
sc_makeList
sc_makePromise
sc_makeString
sc_makeStruct
sc_map
sc_mapBang
sc_max
sc_memq
sc_memv
sc_min
sc_minus
sc_modulo
sc_multi
sc_not
sc_number2symbol
sc_openInputFile
sc_openInputString
"
sc_openOutputFile
&
sc_openOutputString
sc_peekChar
sc_plus
sc_pregexpMatch
"
sc_pregexpReplace
(
sc_pregexpReplaceAll
sc_pregexpSplit
sc_print_debug
sc_putpropBang
sc_quotient
sc_raise
sc_random
sc_read
sc_readChar
sc_remainder
sc_rempropBang
sc_remq
sc_remqBang
sc_round
sc_setCarBang
sc_setCdrBang
"
sc_setJsFieldBang
*
sc_setStructFieldBang
sc_sin
sc_sqrt
sc_string
"
sc_string2integer
"
sc_string2keyword
sc_string2list
sc_string2number
sc_string2real
sc_string2symbol
sc_stringAppend
sc_stringCopy
sc_stringLength
sc_stringRef
sc_substring
sc_symbol2jsstring
sc_symbol2number
sc_symbol2string
sc_symbolAppend
sc_tan
sc_truncate
sc_typeof
sc_values
sc_vector
sc_vectorCopy
"
sc_vectorCopyBang
sc_vectorLength
sc_vectorRef
sc_vectorSetBang
(
sc_withHandlerLambda
(
sc_withInputFromFile
sc_withInputFromString
&
sc_withOutputToFile0sc_withOutputToProcedure
*
sc_withOutputToString
sc_writeChar
sc_writeCircle
.
unclosed
string
-
literal
big
-
plus
cdr
eqp
form
get
greatereqp
mem
pds
pred
val
value
x7
!
=
%
=
&
rewrites
sequence
"
!
%
*
+
-
.
/
:
<
=
>
?
^
_
~
#
(
)
#
<
struct
#
\
#
\
ack
#
\
backspace
#
\
bell
#
\
can
#
\
dc1
#
\
dc2
#
\
dc3
#
\
dc4
#
\
delete
#
\
dle
#
\
em
#
\
enq
#
\
eot
#
\
esc
#
\
escape
#
\
etb
#
\
etx
#
\
fs
#
\
gs
#
\
nak
#
\
newline
#
\
null
#
\
page
#
\
return
#
\
rs
#
\
si
#
\
so
#
\
soh
#
\
space
#
\
stx
#
\
sub
#
\
syn
#
\
tab
#
\
us
#
\
vt
#
{
%
hashtable
}
'
*
error
*
arguments
[
0123456789J01234567890abcdefghijklmnopqrstuvwxyz
;
4ABCDEFGHIJKLMNOPQRSTUVWXYZ
<
ADD
-
LEMMA
did
not
like
term
:
CHAR
CLOSE_BRACE
CLOSE_BRACKET
CLOSE_PAR
DOT
Date
EOF
ERROR
Earley
or
Boyer
did
incorrect
number
of
rewrites
Error
F
FALSE
ID
NUMBER
OPEN_BRACE
OPEN_BRACKET
OPEN_PAR
QUOTE
REFERENCE
STORE
STRING
TAIL_OBJECT
TRUE
UNSPECIFIED
VECTOR_BEGIN
WHITESPACE
[
\
"
\
0
\
\
\
a
\
b
\
f
\
n
\
r
\
t
\
x
]
*
^
[
^
sC
-
GeNsYm
*
__trampoline
return__4abcdefghijklmnopqrstuvwxyz
ack
acos
alert
arguments
[
1
]
asin
atan
backspace
bad
#
-
pattern0
.
bad
#
-
pattern1
.
bad
#
-
pattern2
.
bad
#
-
pattern3
:
bad
#
-
pattern4
bad
#
-
pattern5
bad
reference
:
bel
bell
bs
callee
calls
can6can
'
t
read
from
error
-
port
.
ceil
cos
cr
dc1
dc2
dc3
dc4
del
dle2don
'
t
write
on
ErrorPort
!
earley
em
enq
eot
esc
etb
etx
eval
exec
exp
false
"
format
:
illegal
~
fs
gs
hash
-
isNaN
jsstr
-
jsstring2string
listEndType
log
max
min
nak
nboyer
new
c
(
newline
nl
np
nspecified
num
-
page
pow
quote
random
readWhitespace
restart
return
rs4sc_lastPair
:
pair
expected
si
sin
so
soh
space
split
sqrt
stx
sub
syn
tab
tan
toUpperCase
true
u
unexpected
character
:
unexpected
end
of
file
"
unexpected
token
Bunknown
character
description
:
#
\
us
vt
writeCircle
{
}
assignedp
assume
-
false
assume
-
true
big
-
plus1
boolean
codegen
compile
countps
-
countps
-
loop
divides
dsort
even1
fact
-
fact
-
loop
falsify
falsify1
greaterp
iff
intersect
lesseqp
mc
-
flatten
nlistp
odd
optimize
plus
-
fringe
prime
prime1
reverse
-
samefringe
set
sigma
sort
-
lp
(
tautology
-
checker
tautologyp
x1
x2
x3
x4
x5
x6
-
=
/
=
<
<
>
>
>
>
>
^
|
[
TREE
]
identity
;
tn
y
{
[
%
A
E
c
]
m
+
_
D
a
-
!
#
%
'
)
+
-
/
1
3
5
7
9
;
=
?
A
C
E
G
I
K
M
O
Q
S
U
W
Y
[
]
_
'
a
c
e
g
i
k
m
o
q
s
u
w
e
{
}
K
g
M
!
#
%
'
)
+
-
/
u
1
)
3
5
7
9
;
=
?
A
C
E
G
{
I
}
K
M
O
Q
S
U
W
Y
[
]
A
_
a
c
e
g
i
k
m
o
q
s
u
w
y
{
}
E
3
5
G
I
_
a
W
k
Q
!
Y
*
I
(
&
8
>
"
?
*
(
&
0
R
"
F
J
B
0
.
L6
4
*
(
&
w
*
'
(
&
4
4
+
R
"
F
0J
B
0
.
N
4
"
?
4
X
4
*
O
(
&
X
*
(
&
l0
.
hf
d_
_
0
.
2
^
_
_
X
_
}
5
*
K
.
(
.
&
r
r4
}
2
^
r0
.
r
5
N
}
r
N
r
.
*
(
&
r
r4
}
2
r0
.
2
w
r
4
r
6
6
*
Y
(
&
r
r4
}
2
r
4
r
*
(
&
*
(
&
*
(
&
*
g
L
(
L
&
w
L
*
L
(
L
&
g
L
*
L
(
L
&
g
L
*
L
(
L
&
L
*
L
(
L
&
L
L
*
L
(
L
&
6
*
L
(
L
&
6
*
_
(
&
R
"
?
F
0J
B
2
&
4
6
6
*
(
&
R
"
?
F
0J
B
0
.
2
X
4
6
4
6
*
(
&
R
"
?
F
0J
B
0
.
2
9
4
6
4
6
*
(
&
R
"
?
F
0J
B
0
.
2
;
4
6
4
6
*
(
&
R
"
?
F
0J
B
0
.
2
F
4
6
4
6
*
(
&
"
*
(
&
;
"
*
(
&
F
"
*
(
&
q
"
"
?
*
(
&
q
"
"
#
)
*
?
(
&
Q
Q
"
R
"
F
0J
B
L6
Q
4
Q
*
/
(
&
"
?
R
"
F
0J
B
L_
4
*
+
(
&
2
0
"
?
>
0
.
R
"
?
F
0J
B
L
4
*
[
(
&
2
0
"
?
u
"
?
0
.
R
"
?
F
0J
B
L
4
*
M
(
&
u
*
W
(
&
q
*
-
(
&
q
2
F
+
"
*
4
(
4
&
S
S
2
4
"
2
"
4
2
F
4
"
0
.
4
>
4
V2
F
"
0
.
>
V2
;
40
.
S
4
4
S
VH6
0
.
L
4
2
4
"
0
.
V
L
42
"
0
.
4
VV
*
w
(
&
"
R
"
F
0J
B
4
*
(
&
}
"
?
R
"
F
0J
B
0
.
}
u
4
4
L_
}
o
9
_
e
i
M
/
k
%
g
*
c
(
&
*
(
&
*
)
(
&
2
3
3
*
(
&
"
2
6
2
0
.
2
~
^
&
"
6
1
"
"
?
2
?
a
6
0
.
2
~
^
&
"
6
"
"
2
~
"
"
&
"
/
6
*
1
(
&
6
*
(
&
6
6
*
(
&
:
8
:
8
:
\
3
<
>
(
&
8
:
\
<
>
(
&
8
{
H6
0
.
L6
2
0
.
L6
2
&
0
.
L6
TTTT
L6
:
\
<
>
(
&
8
:
\
<
>
(
&
8
*
(
&
8
*
(
&
~
*
(
&
*
I
(
&
4
>
0
"
?
R
>
0
"
X
"
J
4
*
(
&
*
7
(
&
*
a
.
(
.
&
:
.
*
c
.
(
.
&
:
.
*
(
&
*
(
&
*
'
(
&
*
5
(
&
*
(
&
*
(
&
*
(
&
*
(
&
*
(
&
*
%
(
&
*
-
(
&
*
3
(
&
*
(
&
*
(
&
*
(
&
*
(
&
*
(
&
*
!
(
&
*
(
&
*
#
(
&
*
(
&
*
(
&
*
(
&
*
(
&
*
)
(
&
*
/
(
&
*
+
(
&
*
1
(
&
*
(
&
2
^
'
H
0
.
*
(
&
*
(
&
I
I
I
H6
0
.
2
I
~
8
I
I
6
2
~
8
I
8
I
0
.
I
I
2
I
6
6
*
(
&
4
4
R
>
40
"
?
X
"
J
4
4
*
(
&
2
^
"
R
>
"
?
X
"
J
*
(
&
R
"
F
J
B
*
(
&
"
H
&
0
.
J
B
*
[
(
&
z
^
DF
z
H
&
0
.
2
&
0
.
:
z
z
z
*
]
(
&
g
z
^
DF
z
g
6
H
&
0
.
2
0
.
g
6
0
.
2
g
0
.
:
z
g
6
z
:
z
*
S
(
&
z
^
DF
z
H
&
0
.
2
^
0
.
:
z
z
z
*
U
(
&
g
z
^
DF
z
g
6
H
&
0
.
2
0
.
g
6
0
.
2
g
0
.
:
z
g
6
z
:
z
*
(
Z
(
(
Z
&
*
ZH
&
(
0
.
*
(
(
(
:
*
*
(
Z
(
(
Z
&
2
(
Z
2
Z
(
A
(
Z
*
(
&
2
0
"
4
>
0
"
?
R
>
0
"
X
"
J
4
*
(
Z
(
(
Z
&
*
2
(
Z
2
Z
(
*
(
H
&
*
*
*
:
*
Z
(
*
(
&
R
"
F
0J
B
4
*
A
(
(
(
&
H
&
(
0
.
(
(
(
*
(
&
*
:
(
:
&
R
"
F
:
J
B
0
.
*
:
(
:
&
:
*
%
(
&
H
&
0
.
2
6
*
'
(
&
H
&
0
.
2
6
*
(
&
H
&
0
.
2
6
*
(
&
H
&
0
.
2
6
*
(
&
H
&
0
.
2
6
*
(
&
H
&
0
.
2
6
*
v
x
(
v
x
&
v
.
x
.
*
v
x
(
v
x
&
F
v
.
x
.
*
v
x
(
v
x
&
;
v
.
x
.
*
v
x
(
v
x
&
9
v
.
x
.
*
v
x
(
v
x
&
X
v
.
x
.
*
v
x
(
v
x
&
v
.
x
.
*
v
x
(
v
x
&
F
v
.
x
.
*
v
x
(
v
x
&
;
v
.
x
.
*
v
x
(
v
x
&
9
v
.
x
.
*
v
x
(
v
x
&
X
v
.
x
.
*
"
(
"
&
4
"
2
:
8
.
"
N
"
8
j
:
5
:
^
FDF
DFu
DF
DF
!
DF
#
DF
DF
DFy
DF
DF
DFa
DFc
DFe
DFg
DFi
DFk
DF
-
%
DFm
DFo
DFq
DFs
DFu
DFw
DFy
DF
{
DF
}
DF
DF
DF
DF
DFy
DF
DF
DF
DF
#
:
^
VDF
DF
u
DF
DF
-
DF
#
DF
DF
DF
y
DF
!
DF
DF
a
DF
'
c
DF
e
DF
g
DF
i
DF
k
DF
u
DF
DFr
DF
#
DFA
-
DF
DF
DF
m
DF
o
DF
q
DF
s
DF
u
DF
w
DF
y
DF
{
DF
+
}
DF
DF
DF
DF
)
DF
y
DF
DF
DF
DF
?
DFK
DF
:
\
3
<
>
(
&
8
.
:
\
<
>
(
&
4
8
.
2
8
.
*
"
(
"
&
8
"
/
5
*
"
(
"
&
"
>
"
?
*
"
(
"
&
"
.
"
.
*
"
(
"
&
"
.
*
"
(
"
&
*
*
"
.
*
*
*
#
*
*
*
"
(
"
&
"
.
*
"
(
"
&
"
.
*
;
"
(
"
&
"
.
]
"
*
L
(
L
&
L
*
C
"
(
"
&
"
.
1
*
A
"
(
"
&
"
.
*
:
"
(
:
"
&
2
"
j
"
"
?
H
X
:
0
.
2
:
=
=
L_
"
*
:
"
(
:
"
&
2
"
"
.
:
*
(
&
R
>
0
"
?
X
"
J
*
(
&
4
4
=
H
&
0
.
4W
.
=
4
-
=
:
-
\
<
>
(
&
2
80
"
48
"
R
"
?
F
80J
B
L6
48
L6
:
-
\
<
>
(
&
8
:
-
\
<
>
(
&
8
*
(
&
8
-
*
o
[
(
o
[
&
2
&
o
0
[
0
6
R
"
F
o
0J
B
2
^
4
o
4
[
6
6
*
M
7
(
7
&
4
4
-
7
2
&
j
3
4
4
*
(
&
4
4
-
R
"
F
0J
B
4W
4
4
*
(
&
0
*
(
&
4
*
.
(
.
&
N
.
*
E
4
(
4
&
R
>
40
"
?
X
"
J
4
4
*
(
&
4
4
-
H
&
0
.
4W
4
*
3
4
(
4
&
R
"
F
40J
B
N
4
*
K
4
(
4
&
*
2
9
40
4
"
0
.
*
4
=
:
*
0
*
*
4
A
(
4
A
&
4
A
*
]
m
(
]
m
&
2
^
"
2
^
0
2
9
m
0
.
R
m
F
J
B
J
B
0
.
N
]
4
0
.
>
R
>
m
"
?
>
"
?
X
J
J
0
.
N
]
4
]
*
(
&
w
*
(
&
p
p
=
R
"
?
F
>
0
"
?
J
B
pW
4
4
>
0
"
?
H
&
0
.
pW
p
*
(
(
(
&
2
(
j
>
0
"
?
=
H
&
(
0
.
R
"
F
J
B
0
.
N
4
"
?
N
"
?
4
"
?
*
!
(
(
(
&
*
2
(
j
(
>
0
"
?
=
H
&
(
0
.
*
(
R
"
F
J
B
0
.
N
4
"
?
N
"
?
4
"
?
:
*
*
q
(
(
(
&
2
(
j
j
>
0
"
?
=
H
&
(
0
.
R
"
F
J
B
0
.
N
4
"
?
N
"
?
4
"
?
j
*
i
(
(
(
&
z
^
DF
z
H
&
(
0
.
2
&
(
6
0
.
:
z
(
z
z
(
(
*
k
(
(
(
&
(
(
H
&
0
.
2
&
6
0
.
:
:
*
(
(
(
&
*
H
&
(
0
.
*
(
2
&
*
6
*
(
(
*
(
Z
(
(
Z
&
*
H
&
(
0
.
*
(
Z
2
&
*
6
*
(
(
Z
Z
*
m
(
Z
(
(
Z
&
*
2
Z
j
(
2
j
(
Z
>
0
"
?
=
H
&
(
0
.
R
"
F
J
B
0
.
N
4
"
?
N
"
?
4
"
?
*
2
&
*
6
*
*
(
&
*
H
&
0
.
*
2
&
*
6
*
6
*
(
&
&
6
*
(
&
*
*
6
H
&
0
.
*
2
*
6
6
*
*
a
(
&
*
*
2
&
*
6
6
6
*
s
(
&
*
(
&
k
6
k
j
<
>
(
&
*
2
^
0
.
*
2
^
0
.
6
k
*
k
*
q
(
q
&
:
8q
q
*
(
&
2
0
"
?
4
"
*
(
&
2
8
q
*
]
(
&
b0
.
0
.
*
(
&
:
8
:
\
<
>
(
&
K
8
;
:
\
\
*
(
&
*
(
&
8
*
(
&
~
8
*
}
(
&
4
*
g
.
(
.
&
N
.
*
(
&
s
*
(
&
*
(
&
*
(
&
*
(
&
*
(
&
*
(
&
*
(
&
4
*
e
.
(
.
&
N
.
*
W
(
&
4
*
G
(
G
&
p
p
=
R
"
F
0J
B
N
p
>
"
4
G
p
*
(
&
p
p
=
R
"
F
0J
B
N
p
>
"
4
4
p
*
"
(
"
&
C
C
L6
C
P
;
0
"
?
R
"
F
0J
B
L6
C
-
L6
C
C
*
(
&
?
*
A
(
&
*
P
8
?
*
2
Y
*
6
R
>
*
0
"
?
X
"
J
0
.
2
&
4
*
0
.
4
*
0
.
6
*
C
f
b
(
f
b
&
I
K
I
f
K
b2
8
?
0
.
2
?
0
.
?
I
K
*
E
f
b
(
f
b
&
I
K
I
f
K
b2
8
?
0
.
2
?
0
.
?
I
K
*
G
(
&
*
P
8
?
?
*
#
2
Y
*
6
E
*
*
Q
L
(
L
&
+
L
*
O
(
&
C
*
(
&
:
\
3
<
>
(
&
'
*
.
(
.
&
:
8
:
8
.
.
*
(
&
*
r
.
(
r
.
&
a
a
K
N
r
a
.
*
r
(
r
&
a
a
K
2
w
a
r
4
r
a
.
6
*
r
}
(
r
}
&
rp
r0
.
2
84
r
}
4
r
4
r
.
*
r
(
r
&
a
a
K
2
w
a
r
6
6
"
*
K
(
&
2
2
j
j2
6
3
2
6
2
w
2
w
O
2
y
y
9
*
(
&
2
^
8K
0
.
:
8K
J
B
8K
*
p
(
p
&
N8
6
:
8p
p
:
8
:
\
<
>
(
&
G
8H6
0
.
:
>
"
?
G
p
G
p2
8
*
(
&
<
>
(
&
:
X
l0
.
hf
d_
_
0
.
2
_
0
.
_
X
_
*
(
&
:
8
6
5
5
:
c
*
(
&
A
*
(
&
*
m
(
&
:
m
\
:
m
\
'
<
>
(
&
2
^
w
8
:
8
8
8
:
m
\
<
>
(
&
*
*
8
'
8
*
:
m
\
<
>
(
&
6
:
m
\
<
>
(
&
*
]
(
&
V
:
]
\
m
:
]
\
<
>
(
&
X
:
]
\
<
>
(
&
6
*
_
(
&
:
8
:
8
"
:
_
\
m
:
_
\
<
>
(
&
2
X
8
8
0
A
8
J
B
:
8
*
D
.
(
.
&
:
8
:
8
.
.
:
8
:
DE
"
:
DY
"
?
:
D
?
"
:
DU
"
:
D
;
"
:
DW
"
:
D
=
"
:
Dk
"
:
D
[
"
:
DQ
"
"
:
DA
"
:
Da
"
&
:
DS
"
(
:
DG
"
*
:
Di
"
:
De
"
.
:
DO
"
0
:
Dg
"
1
:
D
]
"
2
:
D_
"
3
:
D9
"
4
*
a
H
(
H
&
:
8H
H
:
a
\
<
>
(
&
2
8
8
8
:
8
:
a
\
[
<
>
(
&
*
*
8
8
*
:
a
\
<
>
(
&
C
H
9
H
8H
*
"
(
"
&
~
X
"
/
9
"
w
V
*
"
(
"
&
"
>
"
?
~
X
"
/
9
"
w
*
"
(
"
&
"
"
"
#
"
"
V
*
"
(
"
&
"
"
A
V
*
(
&
"
E
V
*
H6
0
.
"
H
\
"
B
D
"
&
B
*
H
\
*
B
/
L6
TTB
4
L6
4TTB
L6
TTB
}
L6
TTB
L
L6
#
TTB
Y
L6
TTB
L6
TTB
L6
-
TTB
L6
TTB
L6
TTB
V
"
H6
0
.
E
H
'
2
~
X
E
/
9
E
w
0
.
H
V
>
+
V
"
0
E
]
"
/
]
"
2
~
X
E
4
9
E
}
0
.
H
V
>
+
V
"
0
E
]
"
4
]
"
2
~
X
E
9
E
M
0
.
H
V
>
+
V
"
0
E
]
"
]
"
0
.
L6
VTTTTZ
2
*
A
0
.
D
"
*
L6
*
TTZ
2
"
A
0
.
D
"
*
L6
"
V
*
(
&
H
H
'
L6
H
2
D
"
"
D
"
(
>
"
V
*
9
(
&
6
H
^
0
.
6
H
H
'
H
2
H
'
3
0
.
H
6
H6
0
.
C
H
2
C
A
C
#
TT
V
*
(
&
2
H
'
D
"
V
*
(
&
"
V
G
*
"
H
2
"
D
"
*
2
"
0
.
V
>
"
"
H
H
'
V
+
V
"
>
H
"
\
H
B
y
D
"
2
VB
}
D
"
3
VZ
D
"
*
V
2
"
{
D
"
2
"
0
.
*
H
^
H
'
L6
*
H
\
*
0
B
"
2
H
'
D
"
*
D
"
4
H
B
"
?
D
"
4
*
Z
4
*
2
D
"
4
D
"
*
=
*
G
\
"
B
D
"
.
6
G
TTB
}
D
"
0
6
G
TTB
5
D
"
1
j
G
TTZ
D
"
*
"
H6
0
.
"
H
'
2
~
"
"
Y
G
2
"
Y
G
D
"
*
"
G
2
Y
G
"
"
0
.
H
G
G
"
?
D
"
*
V
9
C
H
2
C
A
D
"
C
\
C
B
B
#
B
B
{
D
"
?
B
D
"
B
E
D
"
B
G
D
"
B
m
D
"
B
D
"
B
)
D
"
B
y
B
B
Z
2
C
C
X
7
C
*
(
&
:
8
:
8
=
:
\
<
>
(
&
;
*
M
(
M
&
*
(
&
~
"
?
"
~
"
"
~
"
"
V
H6
0
.
\
B
"
B
"
B
"
2
M
0
.
[
X
M
B
"
X
9
B
"
[
8
[
2
^
M
X
M
Z
8
V
*
(
&
8
V
*
(
&
4
4
=
H6
0
.
\
B
"
[
4Z
4W
8
V
*
;
V
(
V
&
*
*
8
N
8
V
*
*
V
*
V
(
V
&
2
w
V
8
4
8
VX
VV
8
[
2
"
*
X
.
\
B
"
?
B
"
B
"
9
8
B
"
9
8B
"
&
.
B
"
4
.
B
"
9
8B
"
2
9
8
.
B
"
3
;
9
8
.
B
"
"
.
B
"
B
"
(
B
"
.
B
"
0
B
"
1
.
Z
X
;
.
*
S
H
(
H
&
2
H
j
H
[
a
H
*
U
H
(
H
&
2
H
j
H
[
H
P
A
*
=
H
(
H
&
2
H
j
H
[
H
'
P
A
*
H
(
H
&
2
H
j
H
[
H
*
E
(
&
*
(
&
8
m
*
(
&
A
*
Q
(
&
[
*
(
&
X
;
*
(
&
X
;
*
(
&
X
;
*
(
&
X
;
*
5
(
&
X
;
*
9
(
&
X
;
*
(
&
u
2
X
"
"
?
0
*
Y
(
&
u
2
X
"
"
*
5
(
&
*
b0
.
*
[
[
0
.
[
*
*
(
&
5
_
*
G
(
&
*
b0
.
*
%
%
0
.
%
*
*
(
&
G
*
(
&
<
>
(
&
G
*
;
(
&
*
7
(
&
_
*
(
&
:
\
:
\
<
>
(
&
:
\
<
>
(
&
*
(
&
:
8
:
\
:
\
<
>
(
&
L6
:
8
:
\
<
>
(
&
8
*
{
K
(
K
&
K
*
(
&
:
\
:
\
<
>
(
&
X
:
\
<
>
(
&
*
(
&
:
8
2
:
8
:
\
*
(
&
8
*
G
(
&
*
I
(
&
2
j
%
*
(
&
2
2
6
2
6
2
j
2
w
K
;
2
3
*
(
&
"
"
R
"
F
0J
B
0
.
\
B
L6
q
"
?
TTB
L6
w
"
?
TTB
L6
y
"
?
TTB
#
L6
{
"
?
TTB
L6
}
"
?
TTB
L6
"
?
TTB
-
L6
"
?
TTB
L6
o
"
?
TTB
L6
s
"
?
TTZ
"
2
~
&
4
4
Y
"
40
.
L6
u
"
?
jT
2
~
&
-
Y
"
-
0
.
L6
"
?
jT
2
F
0
.
L6
]
3
"
0
"
?
L6
*
(
&
2
j
%
*
(
&
2
2
6
2
6
2
j
2
w
K
;
2
3
*
u
(
&
2
j
%
#
*
"
(
"
&
2
j
%
"
.
*
(
&
2
j
%
*
(
&
e
J
J
C
e
5
:
e
V
"
{
J
e
e
J
*
{
J
e
(
J
e
&
2
8
8
-
0
.
2
&
4
J
j0
.
J
BN
J2
^
4
J
V
N
J
VJ
B
:
e
V
N
J
"
2
8
0
.
{
J
e
{
J
e
0
.
R
"
F
0J
B
{
4
J
e
*
e
J
(
J
&
2
^
8
8
-
J
:
\
<
>
J
(
J
&
V
248
J
0
.
V48
J
V2
J
N8
J
"
0
.
48
J
48
J
V
48
J
2
V
y
y
V
y
2
J
N8
J
"
0
.
48
J
48
J
V
48
J
2
&
48
J
j0
.
N8
J
6
2
L6
48
J
V
}
L6
y
48
J
V
}
6
2
^
L6
{
L6
e
8
J2
8
0
.
L6
8
J6
2
&
8
0
.
L6
e
8
J
2
^
L6
:
-
\
<
>
J
(
J
&
V
248
J
0
.
V48
J
V2
J
N8
J
"
0
.
48
J
48
J
V
48
J
y
V
y
2
J
N8
J
"
0
.
48
J
48
J
V
48
J
2
&
48
J
j0
.
N8
J
6
L6
y
48
J
V
}
L6
R
"
F
80J
B
0
.
L6
e
48
J2
F
>
80
"
?
L6
L6
*
(
&
2
0
"
?
0
.
u
0
.
R
"
F
0J
B
4
u
*
u
p
(
p
&
0
"
"
?
H
F
0
.
s
2
Y
>
"
?
0
.
0
.
2
;
0
.
2
Y
>
"
?
0
.
0
.
\
]
"
?
B
"
P
B
"
X
4
L6
"
J
B
TTB
"
T
B
"
\
I
4
L6
"
J
B
TTB
"
U
B
"
]
4
#
L6
"
J
B
TTB
"
P
B
"
X
4
L6
"
J
B
TTB
"
V
B
"
^
4
3
"
L6
"
J
B
TTB
"
S
B
"
[
4
3
"
L6
"
J
B
TTB
"
P
B
"
X
4
3
"
L6
"
J
B
TTB
"
B
B
"
[
#
L6
"
TTB
"
\
L6
"
TTB
"
_
s
L6
"
TTZ
'
]
"
?
[
]
%
+
I
*
(
&
*
(
&
+
*
(
&
*
(
&
"
?
*
:
(
:
&
:
"
?
*
(
&
*
(
&
~
w
O
"
<
>
(
&
"
<
>
(
&
J
B
2
^
+
s
*
(
&
~
~
~
~
*
3
(
&
+
)
)
*
(
&
"
?
u
*
o
(
&
2
^
*
w
(
&
*
(
&
~
w
O
"
+
*
(
&
"
?
*
y
(
&
+
*
(
&
+
R
"
F
0J
B
L6
4
"
?
*
=
"
(
"
&
"
.
*
?
"
(
"
&
+
"
.
*
(
&
~
w
O
&
"
+
*
m
(
&
R
"
F
0J
B
N
4
.
=
*
(
&
0
*
:
(
:
&
:
*
f
b
(
f
b
&
f
b
*
f
b
(
f
b
&
F
f
b
*
f
b
(
f
b
&
;
f
b
*
f
b
(
f
b
&
9
f
b
*
f
b
(
f
b
&
X
f
b
*
f
b
(
f
b
&
f
b
*
f
b
(
f
b
&
F
f
b
*
f
b
(
f
b
&
;
f
b
*
f
b
(
f
b
&
9
f
b
*
f
b
(
f
b
&
X
f
b
*
A
(
A
&
A
*
f
b
(
f
b
&
Y
b
f
b0
*
{
(
&
=
s
*
}
(
&
*
(
&
"
?
*
q
(
&
:
\
<
>
(
&
2
8
"
+
8
"
?
2
8
"
8
"
?
83
:
\
<
>
(
&
2
8
"
+
8
"
?
2
8
"
8
"
?
8
!
Q
Y
k
_
E
W
c
0
.
8
!
!
!
h
!
h
]
!
]
)
!
)
W
U
y
u
k
q
S
7
W
m
!
!
a
W
w
m
Y
[
|
c
e
"
?
W
u
]
O
o
a
o
W
a
M
o
a
o
a
Q
u
g
i
Q
u
}
s
|
m
W
7
W
W
W
!
W
W
U
|
R
l
c
E
R
l
c
E
c
E
7
|
U
d
d
h
d
d
h
d
R
l
|
R
l
|
d
R
l
d
R
l
|
U
7
|
%
R
d
%
R
%
R
%
{
R
R
h
h
R
l
l
R
t
d
h
d
t
t
h
t
t
h
t
t
h
t
|
7
I
G
I
I
G
G
s
#
S
R
l
7
S
R
S
l
S
S
S
R
o
l
S
R
l
S
R
s
|
|
d
5
i
t
5
i
t
5
i
5
i
W
W
u
C
h
d
C
h
C
h
R
l
R
l
d
t
'
Q
d
'
'
d
d
'
'
"
?
|
|
5
7
5
5
"
?
'
S
'
S
S
5
|
d
5
g
g
s
R
l
s
R
s
l
R
d
d
d
d
h
h
t
)
t
t
)
t
h
h
|
d
l
d
R
R
d
l
s
d
h
h
s
d
d
h
h
t
h
t
h
h
d
g
t
h
t
h
t
h
g
Q
R
R
#
u
u
K
#
#
M
|
7
"
?
|
M
"
?
"
?
U
M
7
"
?
U
[
t
[
[
U
U
U
h
t
)
h
U
h
7
h
|
)
"
?
t
7
|
U
"
?
t
|
t
R
l
"
?
R
|
l
|
U
R
U
l
m
R
|
m
l
|
e
S
Y
e
e
Y
_
Y
d
"
s
s
"
d
d
"
d
"
|
t
s
"
d
s
U
s
d
s
h
h
h
h
%
e
R
S
%
R
R
%
R
t
s
U
d
t
s
u
u
|
O
R
l
l
O
l
R
A
O
R
l
l
h
W
h
h
?
R
l
K
R
?
R
?
l
A
K
A
#
|
#
K
#
|
u
t
|
5
5
5
d
d
R
l
d
|
t
t
R
l
d
c
h
R
l
u
]
d
R
l
)
R
l
S
R
l
<
>
(
&
p
L
o
p
R
o
>
0
"
?
X
o
"
J
o
0
.
p
4
o
p
L
LP
p
"
p
L
"
?
<
>
(
&
L
<
>
(
&
2
g
\
L
B
"
7
"
3
6
TTB
"
?
7
"
B
"
A
6
TTB
"
7
"
;
A
6
TTB
"
7
"
TA
6
TTB
"
7
"
]
oA
6
TTB
"
7
"
A
6
TTZ
6
TT
6
<
>
(
&
6
<
>
(
&
6
!
<
>
<
(
<
&
N
N
P
^
8
<
<
<
N
<
P
N
!
N
Q
N
Q
<
>
N
(
N
&
o
<
o
<
P
N
<
N
P
^
8
<
<
<
Q
<
o
N
P
o
!
o
Q
o
Y
<
>
<
(
<
&
1
1
2
^
8
<
<
0
.
<
H
^
0
.
0
.
:
Y
1
<
4
1
"
<
>
(
&
Y
Y
P
&
6
Y
Y
Y
k
<
>
(
&
<
<
P
<
P
^
8
<
<
<
Q
<
P
!
k
<
>
<
(
<
&
N
q
N
q
P
^
8
<
q
<
P
&
q
6
q
<
<
N
<
P
N
N
N
<
>
N
(
N
&
q
q
P
N
N
q
N
P
q
q
q
_
<
>
(
&
M
O
U
e
g
e
g
U
M
O
H6
0
.
2
&
O
c
P
&
O
6
O
6
6
2
&
M
c
E
P
&
M
6
M
6
6
2
^
8
6
2
2
&
U
g
c
U
P
&
g
6
g
U
6
2
&
e
c
E
P
&
e
6
e
6
2
&
_
6
0
.
6
6
_
"
<
>
<
(
<
&
N
k
K
1
K
N
1
k
0
.
J
B
2
^
8
<
<
0
.
K
<
k
<
P
k
k
k
N
1
<
4
1
"
?
H6
0
.
2
N
K
2
&
N
K
6
N
N
N
<
>
N
(
N
&
m
m
P
N
N
m
N
P
m
m
m
_
<
>
(
&
q
q
2
^
8
0
.
q
2
&
q
6
c
q
2
g
0
.
6
2
^
8
6
2
0
.
H6
0
.
2
2
6
2
&
6
0
.
6
6
E
_
_
W
<
>
L
(
L
&
P
L
"
?
!
"
"
?
!
>
L
"
?
L
>
L
"
?
P
"
?
!
"
"
?
!
>
"
?
W
>
"
?
c
<
>
(
&
2
8
2
8
2
&
6
0
.
H6
0
.
2
2
6
2
&
c
6
0
.
6
6
6
<
>
N
(
N
&
N
H6
0
.
2
N
6
2
&
c
N
6
6
N
N
<
>
(
&
N
?
1
<
]
1
]
?
<
N
0
.
E
P
^
8
Q
W
P
^
8
Q
N
H
^
N
0
.
0
.
<
N
2
~
8
<
~
<
8
<
0
.
?
<
]
P
^
8
<
<
<
Q
<
<
4
"
?
1
?
N
1
"
?
]
'
7
<
N
N
6
<
>
L
(
L
&
9
A
<
<
9
A
0
.
"
<
9
LH
^
9
"
0
.
0
.
<
7
<
J
9
<
2
^
8
Q
A
P
!
k
_
A
I
u
2
&
6
6
y
{
a
0
.
k
R
k
k
<
>
(
&
*
Q
i
c
s
?
C
[
i
Q
[
s
?
c
C
0
.
<
>
n
(
n
&
0
.
>
0
"
?
H6
0
.
2
X
"
2
4
n
J
6
<
>
w
(
w
&
P
8
<
>
#
(
#
&
n
)
n
)
2
8
0
.
)
)
#
H
8
0
.
0
.
n
P
&
n
6
n
#
P
&
w
6
w
w
A
w
0
<
>
(
&
P
8
<
>
(
&
)
)
2
8
0
.
)
)
H
8
0
.
0
.
J
B
"
?
"
C
M
c
M
?
M
M
6
s
M
6
[
C
c
?
s
Q
0
>
Q
"
?
H
X
"
0
.
0
.
N
>
Q
N
s
4
"
N
c
J
<
>
(
&
P
8
<
>
(
&
n
)
)
+
)
n
+
)
2
8
0
.
)
N
+
N
[
+
4
[
+
)
H
8
0
.
0
.
n
N
n
)
n
N
)
4
)
J
B
N
>
Q
N
4
"
?
"
?
"
?
j
0
i
C
c
?
s
<
>
(
&
p
1
3
?
(
Z
O
S
-
+
-
/
y
G
M
i
U
O
r
+
-
/
3
O
G
M
U
-
(
Z
i
S
y
1
?
O
0
.
\
<
>
n
%
(
n
%
&
0
.
>
%
0
"
?
H6
0
.
2
X
"
2
4
%
n
J
6
<
>
}
(
}
&
E
E
0
.
E
M
"
?
6
H
X
"
0
.
0
.
M
}
"
?
6
N
"
>
"
?
N
E
J
E
<
>
P
(
P
&
2
2
4
P
"
?
P
&
6
2
M
"
6
N
2
"
?
>
"
N
2
"
>
"
?
N
2
"
>
"
?
N
2
"
>
"
?
N
P
"
?
2
2
<
>
2
(
2
&
N
2
4
2
"
?
"
4
2
"
N
2
"
?
4
2
"
N
2
"
>
"
?
N
2
"
>
"
?
<
>
P
2
(
P
2
&
z
z
z4
2
"
N
2
"
>
"
?
N
2
z
"
N
2
"
P
F
z
"
N
2
"
4
P
"
N
P
"
j
<
>
#
(
#
&
2
(
P
2
(
P
0
.
P4
#
(
H
8
(
0
.
0
.
(
2
P
2
4
2
"
6
0
.
P
2
(
(
(
(
j
1
<
>
%
(
%
&
2
P
2
P
P4
%
P
&
24
P
"
?
P
&
26
4
2
"
6
6
4
P
4
"
6
j6
6
<
>
P
2
(
P
2
&
0
.
4
"
H
X
"
0
.
2
4
2
"
6
0
.
P
2
4
"
4
"
j
<
>
;
{
!
-
(
;
{
!
-
&
(
2
3
/
=
W
Y
P
*
2
Y
W
3
P
=
/
0
.
/
4
;
{
0H6
0
.
0
.
4
/
"
2
X
"
0
.
4
-
4
/
"
?
4
"
N
/
"
4
"
2
X
"
0
.
4
!
H
8
0
.
0
.
W
Y
/
{
W
2
4
Y
{
"
6
0
.
/
Y
W
{
4
H
8
0
.
0
.
2
&
24
/
"
?
P
&
26
4
2
{
"
6
6
0
.
"
?
/
{
/
0
.
4
=
;
P
/
{
3
<
>
(
&
=
3
3
=
2
8
0
.
H
X
"
0
.
0
.
3
4
=
4
3
"
?
2
&
6
0
.
=
"
?
P
=
P
=
4
"
3
j
3
j
<
>
n
'
'
(
n
'
'
&
2
P
2
P
0
.
n
'
2
&
6
0
.
'
0
4
H6
0
.
2
8
0
.
2
&
P4
'
24
P
"
?
P
&
26
4
2
"
6
6
6
6
6
?
<
>
!
%
I
;
Q
(
!
%
I
;
Q
&
5
5
4
;
!
P
&
6
P
F
!
4
Q
>
!
"
?
5
<
>
(
Z
(
(
Z
&
P
P
(
Z
H6
0
.
2
8
(
0
.
(
P4
4
P
"
?
2
&
6
0
.
<
>
:
Z
(
:
Z
&
2
5
2
5
:
Z
H6
0
.
2
X
:
"
2
~
X
:
&
5
4
:
24
5
"
?
P
&
26
4
2
"
6
6
0
.
?
:
%
I
;
Q
?
:
%
I
;
Q
<
>
Z
(
Z
&
i
i
2
8
0
.
i
ZH
8
0
.
0
.
i
i
i
4
:
"
Z
Z
:
4
:
"
5
(
Z
4
"
Z
(
(
Z
5
4
%
4
I
<
>
n
)
/
7
(
n
)
/
7
&
2
P
2
P
0
.
n
2
&
6
0
.
0
4
H
8
0
.
0
.
2
&
P4
7
24
P
"
?
P
&
26
4
2
"
6
6
0
.
?
)
/
7
6
O
<
>
#
C
(
#
C
&
/
c
/
c
>
"
?
P
&
c
F
P
&
c
6
c
F4
"
6
"
?
/
<
>
7
(
7
&
2
:
L
1
P
2
P
:
L
1
7
H6
0
.
2
8
0
.
1
4
4
1
"
?
2
&
6
0
.
:
4
"
L
7
H
X
:
"
0
.
2
~
X
:
&
P4
:
24
P
"
?
P
&
26
4
2
"
6
6
0
.
O
:
#
C
O
:
#
C
:
4
:
"
L6
L
+
:
4
:
"
/
L
7
/
4
#
4
"
<
>
n
!
+
1
9
(
n
!
+
1
9
&
2
U
P
2
P
U
0
.
n
!
2
&
6
0
.
!
0
4
U
"
H
8
0
.
0
.
2
&
P4
9
24
P
"
?
P
&
26
4
2
"
6
6
0
.
U
O
+
1
9
U
U
6
4
i
"
4
i
"
?
4
i
"
4
i
"
y
4
i
"
4
i
"
4
i
"
H
^
0
.
0
.
i
(
i
Z
H
8
(
0
.
0
.
-
(
2
&
-
6
0
.
(
(
Z
-
Z
(
(
/
i
A
Z
-
/
:
-
+
+
0
0
4
"
"
"
"
y
"
H
F
0
.
0
.
U
4
"
?
U
"
?
y
J
B
S
0
0
0
S
4
"
H
8
0
.
0
.
1
S
"
S
H
X
"
0
.
0
.
M
G
O
3
4
<
>
(
&
2
1
1
2
0
.
4
3
"
2
X
"
0
.
24
3
"
?
4
2
"
N
3
"
4
2
"
2
H
X
"
0
.
0
.
M
>
"
?
2
~
X
X4
G
"
0
.
1
<
>
(
&
:
P
:
P
H6
0
.
2
8
0
.
P4
4
P
"
?
2
&
6
0
.
:
4
"
H
X
:
"
0
.
0
.
2
X
:
2
&
1
:
6
1
:
:
4
:
"
1
j
1
4
4
G
4
2
"
j
J
y
{
<
>
n
(
n
&
4
"
4
"
4
"
4
"
n
<
>
n
(
n
&
O
O
4
"
4
"
4
"
4
"
O
4
"
4
"
4
"
"
n
O
y
<
>
n
(
n
&
O
O
4
"
4
"
4
"
O
4
"
4
"
4
"
n
O
a
<
>
:
(
:
&
<
>
(
&
S
S
0
.
H
^
0
.
0
.
:
S
S
S
E
M
:
R
k
"
:
<
>
(
&
p
:
o
p
R
o
>
0
"
?
X
o
"
J
o
0
.
p
4
o
p
:
:
P
p
"
p
"
?
<
>
(
&
a
:
<
>
k
(
k
&
k
u
Y
k
"
%
<
>
(
&
%
*
=
(
=
&
L
R
L
"
F
L
J
B
L0
.
k
2
^
=
k
0
.
X
K
I
<
>
(
&
<
>
(
&
