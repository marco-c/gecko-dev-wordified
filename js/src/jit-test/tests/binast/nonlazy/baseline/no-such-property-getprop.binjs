BINJS
[
GRAMMAR
]
identity
;
>
(
IdentifierExpression
CallExpression0LiteralNumericExpression
"
BindingIdentifier
(
AssertedDeclaredName
&
ExpressionStatement
&
VariableDeclaration
VariableDeclarator4AssignmentTargetIdentifier
AssertedParameterScope
AssertedVarScope0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
>
AssertedPositionalParameterName
StaticMemberExpression
BinaryExpression
ForStatement
UpdateExpression
ReturnStatement8CompoundAssignmentExpression
.
LiteralStringExpression
DataProperty
&
LiteralPropertyName0LiteralBooleanExpression
(
AssignmentExpression2AssertedScriptGlobalScope
*
LiteralNullExpression
ObjectExpression
Script
[
STRINGS
]
identity
;
=
var
obj
i
sum
assertEq
foo
createTower
updateChain
+
+
<
NaN
+
=
cur
result
Object
runChain_0_0
runChain_10_0
runChain_10_1
runChain_10_10
runChain_10_2
runChain_10_3
runChain_10_4
runChain_10_5
runChain_10_6
runChain_10_7
runChain_10_8
runChain_10_9
runChain_1_0
runChain_1_1
runChain_2_0
runChain_2_1
runChain_2_2
runChain_3_0
runChain_3_1
runChain_3_2
runChain_3_3
runChain_4_0
runChain_4_1
runChain_4_2
runChain_4_3
runChain_4_4
runChain_5_0
runChain_5_1
runChain_5_2
runChain_5_3
runChain_5_4
runChain_5_5
runChain_6_0
runChain_6_1
runChain_6_2
runChain_6_3
runChain_6_4
runChain_6_5
runChain_6_6
runChain_7_0
runChain_7_1
runChain_7_2
runChain_7_3
runChain_7_4
runChain_7_5
runChain_7_6
runChain_7_7
runChain_8_0
runChain_8_1
runChain_8_2
runChain_8_3
runChain_8_4
runChain_8_5
runChain_8_6
runChain_8_7
runChain_8_8
runChain_9_0
runChain_9_1
runChain_9_2
runChain_9_3
runChain_9_4
runChain_9_5
runChain_9_6
runChain_9_7
runChain_9_8
runChain_9_9
value
depth
desc
n
prop
testChain_0_0
testChain_10_0
testChain_10_1
testChain_10_10
testChain_10_2
testChain_10_3
testChain_10_4
testChain_10_5
testChain_10_6
testChain_10_7
testChain_10_8
testChain_10_9
testChain_1_0
testChain_1_1
testChain_2_0
testChain_2_1
testChain_2_2
testChain_3_0
testChain_3_1
testChain_3_2
testChain_3_3
testChain_4_0
testChain_4_1
testChain_4_2
testChain_4_3
testChain_4_4
testChain_5_0
testChain_5_1
testChain_5_2
testChain_5_3
testChain_5_4
testChain_5_5
testChain_6_0
testChain_6_1
testChain_6_2
testChain_6_3
testChain_6_4
testChain_6_5
testChain_6_6
testChain_7_0
testChain_7_1
testChain_7_2
testChain_7_3
testChain_7_4
testChain_7_5
testChain_7_6
testChain_7_7
testChain_8_0
testChain_8_1
testChain_8_2
testChain_8_3
testChain_8_4
testChain_8_5
testChain_8_6
testChain_8_7
testChain_8_8
testChain_9_0
testChain_9_1
testChain_9_2
testChain_9_3
testChain_9_4
testChain_9_5
testChain_9_6
testChain_9_7
testChain_9_8
testChain_9_9
create
configurable
defineProperty
enumerable
getPrototypeOf
writable
[
TREE
]
identity
;
]
<
6
"
&
(
*
.
0
2
4
6
8
:
<
>
B
D
F
H
J
L
N
P
R
T
V
X
Z
\
^
b
d
f
h
j
l
n
p
r
t
v
x
z
|
~
!
#
%
'
)
+
-
/
1
8
"
&
4
1
(
"
&
4
9
:
.
0
.
0
;
2
.
03
2
.
07
2
5
"
Y
&
*
(
"
6
"
Y
&
*
(
?
6
"
6
8
"
Y
&
*
(
?
8
?
"
8
:
"
Y
&
*
(
:
"
:
<
"
Y
&
*
(
<
?
"
<
>
"
Y
&
*
(
>
"
>
"
Y
&
*
(
"
B
"
Y
&
*
(
B
?
"
B
D
"
Y
&
*
(
D
"
D
F
"
Y
&
*
(
F
"
F
H
"
Y
&
*
(
H
"
H
J
"
Y
&
*
(
J
?
"
J
L
"
Y
&
*
(
L
"
L
N
"
Y
&
*
(
N
"
N
P
"
Y
&
*
(
P
"
P
R
"
Y
&
*
(
R
"
R
T
"
Y
&
*
(
T
?
"
T
V
"
Y
&
*
(
V
"
V
X
"
Y
&
*
(
X
"
X
Z
"
Y
&
*
(
Z
"
Z
\
"
Y
&
*
(
\
"
\
^
"
Y
&
*
(
^
"
^
"
Y
&
*
(
?
"
b
"
Y
&
*
(
b
"
b
d
"
Y
&
*
(
d
"
d
f
"
Y
&
*
(
f
"
f
h
"
Y
&
*
(
h
"
h
j
"
Y
&
*
(
j
"
j
l
"
Y
&
*
(
l
"
l
n
"
Y
&
*
(
n
?
"
n
p
"
Y
&
*
(
p
"
p
r
"
Y
&
*
(
r
"
r
t
"
Y
&
*
(
t
"
t
v
"
Y
&
*
(
v
"
v
x
"
Y
&
*
(
x
"
x
z
"
Y
&
*
(
z
"
z
|
"
Y
&
*
(
|
"
|
~
"
Y
&
*
(
~
?
"
~
"
Y
&
*
(
"
"
Y
&
*
(
"
"
Y
&
*
(
"
"
Y
&
*
(
"
"
Y
&
*
(
"
"
Y
&
*
(
"
"
Y
&
*
(
"
"
Y
&
*
(
"
"
"
Y
&
*
(
"
?
"
"
Y
&
*
(
!
"
"
"
Y
&
*
(
#
"
"
"
Y
&
*
(
%
"
"
"
Y
&
*
(
'
"
"
"
Y
&
*
(
)
"
"
"
Y
&
*
(
+
"
"
"
Y
&
*
(
-
"
"
"
Y
&
*
(
/
"
"
"
"
Y
&
*
(
"
"
"
Y
&
*
(
"
?
"
"
&
"
Y
&
*
(
&
"
&
(
"
Y
&
*
(
(
"
(
*
"
Y
&
*
(
*
"
*
"
Y
&
*
(
"
.
"
Y
&
*
(
.
"
.
0
"
Y
&
*
(
0
"
0
2
"
Y
&
*
(
2
"
2
4
"
Y
&
*
(
4
"
"
4
"
Y
&
*
(
"
!
#
%
'
)
+
-
/
