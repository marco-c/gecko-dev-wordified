BINJS
[
GRAMMAR
]
identity
;
F
(
IdentifierExpression
BinaryExpression
.
LiteralStringExpression
"
BindingIdentifier
(
AssertedDeclaredName
ReturnStatement0LiteralNumericExpression
IfStatement
&
VariableDeclaration
VariableDeclarator4AssignmentTargetIdentifier
DataProperty
&
ExpressionStatement
&
LiteralPropertyName
ObjectExpression
AssertedParameterScope
AssertedVarScope0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
UpdateExpression
AssertedBlockScope
Block
CallExpression0LiteralBooleanExpression
UnaryExpression
"
AssertedBoundName
.
AssertedBoundNamesScope2AssertedScriptGlobalScope
(
AssignmentExpression
CatchClause
ForStatement
Script
"
TryCatchStatement
[
STRINGS
]
identity
;
B
var
+
count1
count2
i
q
threw
!
=
=
o1
o2ZtestAddInconvertibleObjectInconvertibleObject
toString1
toString2
+
+
e
pass
toString
undefined
valueOf
=
=
(
type
)
9494
assertEq8expected
count1
=
=
=
95
got
8expected
count2
=
=
=
94
got
.
expected
i
=
=
=
94
got
6expected
q
=
=
=
'
9494
'
got
6expected
throw
with
o1
+
o2
!
<
typeof
[
TREE
]
identity
;
a
B
:
(
&
"
(
&
"
*
(
W
&
"
(
&
"
*
(
W
&
"
2
D
.
>
Y
*
>
8
6
.
<
2
W
6
.
8
*
4
W
2
W
4
4
<
:
0
0
0
