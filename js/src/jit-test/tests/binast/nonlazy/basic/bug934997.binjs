BINJS
[
GRAMMAR
]
identity
;
>
(
IdentifierExpression
"
BindingIdentifier
(
AssertedDeclaredName
CallExpression
&
ExpressionStatement
.
LiteralStringExpression
AssertedParameterScope
AssertedVarScope
FormalParameters
&
VariableDeclaration
VariableDeclarator
AssertedBlockScope
Block0EagerFunctionDeclaration0FunctionOrMethodContents
"
AssertedBoundName
.
AssertedBoundNamesScope
BinaryExpression
CatchClause
"
TryCatchStatement2AssertedScriptGlobalScope
(
AssignmentExpression4AssignmentTargetIdentifier
Directive
.
EagerFunctionExpression
EmptyStatement4FunctionExpressionContents0LiteralBooleanExpression
ReturnStatement
Script
[
STRINGS
]
identity
;
*
var
BUGNUMBER
actual
summary
ex
g
test
test1
test2
x
assertEq
eval
'
foo
'
.
b
(
)
SyntaxErrorHTypeError
:
"
foo
"
.
b
is
not
a
function
argumentsLfunction
foo
(
)
{
var
a
arguments
b
;
}
use
strict
+
instanceof
[
TREE
]
identity
;
U
<
*
(
2
6
&
"
.
&
0
(
"
&
"
:
(
4
8
