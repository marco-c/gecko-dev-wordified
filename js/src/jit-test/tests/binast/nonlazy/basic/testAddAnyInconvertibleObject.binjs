BINJS
[
GRAMMAR
]
identity
;
F
(
IdentifierExpression
BinaryExpression
.
LiteralStringExpression
"
BindingIdentifier
(
AssertedDeclaredName0LiteralNumericExpression
ReturnStatement
IfStatement
&
VariableDeclaration
VariableDeclarator4AssignmentTargetIdentifier
&
ExpressionStatement
AssertedBlockScope
AssertedParameterScope
AssertedVarScope
Block
CallExpression
DataProperty0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents0LiteralBooleanExpression
&
LiteralPropertyName
ObjectExpression
UnaryExpression
UpdateExpression
"
AssertedBoundName
.
AssertedBoundNamesScope2AssertedScriptGlobalScope
(
AssignmentExpression
CatchClause
ForStatement
Script
"
TryCatchStatement
[
STRINGS
]
identity
;
8
var
+
count
i
q
threw
toString
o
:
testAddAnyInconvertibleObject
!
=
=
e
pass
+
+
(
type
)
594
assertEq6expected
count
=
=
=
95
got
.
expected
i
=
=
=
94
got
4expected
q
=
=
=
'
594
'
got
2expected
throw
with
5
+
o
undefined
valueOf
!
<
=
=
typeof
[
TREE
]
identity
;
B
:
&
*
(
&
*
(
4
4
W
0
0
.
.
.
D
2
Y
4
>
8
6
<
W
&
(
26
W
20
*
"
"
"
