BINJS
[
GRAMMAR
]
identity
;
!
(
IdentifierExpression
CallExpression
.
LiteralStringExpression
&
ExpressionStatement0LiteralNumericExpression
"
BindingIdentifier0LiteralBooleanExpression
NewExpression
&
VariableDeclaration
VariableDeclarator
(
AssertedDeclaredName2AssertedScriptGlobalScope
Script
UnaryExpression
[
STRINGS
]
identity
;
f
assertEq
var
Function
xP
"
use
strict
"
;
x
=
3
;
return
arguments
[
0
]
functionVvar
f
=
3
;
if
(
x
)
function
f
(
)
{
}
;
return
f
typeof
[
TREE
]
identity
;
E
E
