BINJS
[
GRAMMAR
]
identity
;
F
(
IdentifierExpression
BinaryExpression
"
BindingIdentifier
(
AssertedDeclaredName0LiteralNumericExpression
ReturnStatement
IfStatement
.
LiteralStringExpression
&
VariableDeclaration
VariableDeclarator4AssignmentTargetIdentifier
DataProperty
&
ExpressionStatement
&
LiteralPropertyName
ObjectExpression
AssertedParameterScope
AssertedVarScope0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
UpdateExpression
AssertedBlockScope
Block
CallExpression0LiteralBooleanExpression
"
AssertedBoundName
.
AssertedBoundNamesScope2AssertedScriptGlobalScope
(
AssignmentExpression
CatchClause
ForStatement
Script
"
TryCatchStatement
UnaryExpression
[
STRINGS
]
identity
;
U
:
var
count1
count2
i
q
threw
!
=
=
+
o1
o2
^
testBitOrInconvertibleObjectInconvertibleObject
toString1
toString2
+
+
e
pass
toString
undefined
valueOf
=
=
assertEq8expected
count1
=
=
=
95
got
8expected
count2
=
=
=
94
got
.
expected
i
=
=
=
94
got
.
expected
q
=
=
=
94
got
6expected
throw
with
o1
|
o2
!
<
|
[
TREE
]
identity
;
C
8
(
&
"
(
&
"
*
&
W
"
(
&
"
*
&
W
"
2
B
.
>
6
Y
*
8
<
6
4
.
:
2
W
.
W
0
W
*
W
D4
2
0
(
0
