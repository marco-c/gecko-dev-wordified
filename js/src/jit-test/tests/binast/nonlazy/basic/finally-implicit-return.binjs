BINJS
[
GRAMMAR
]
identity
;
}
(
IdentifierExpression
AssertedBlockScope
Block
CallExpression0LiteralNumericExpression
"
BindingIdentifier
(
AssertedDeclaredName
ReturnStatement
AssertedParameterScope
AssertedVarScope0EagerFunctionDeclaration
&
ExpressionStatement
FormalParameters0FunctionOrMethodContents
&
TryFinallyStatement
BreakStatement
"
LabelledStatement
"
AssertedBoundName
.
AssertedBoundNamesScope2AssertedScriptGlobalScope4AssignmentTargetIdentifier
BinaryExpression
CatchClause
"
ContinueStatement
ForStatement
Script
ThrowStatement
"
TryCatchStatement
UpdateExpression
&
VariableDeclaration
VariableDeclarator
[
STRINGS
]
identity
;
|
var
L
assertEq
i
undefined
test1
test2
test3
test4
e
+
+
<
[
TREE
]
identity
;
4
(
8
6
.
&
"
2
<
>
:
*
0
"
