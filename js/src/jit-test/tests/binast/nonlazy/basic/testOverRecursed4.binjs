BINJS
[
GRAMMAR
]
identity
;
0
(
IdentifierExpression
CallExpression
&
ExpressionStatement
.
LiteralStringExpression
"
BindingIdentifier
AssertedBlockScope
BinaryExpression
Block
"
AssertedBoundName
.
AssertedBoundNamesScope
(
AssertedDeclaredName
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope
(
AssignmentExpression4AssignmentTargetIdentifier
CatchClause0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
Script
"
TryCatchStatement
[
STRINGS
]
identity
;
tryItOut
code
e
f
+
J
"
use
strict
"
;
for
(
d
in
[
x
=
arguments
]
)
{
}
(
function
(
)
{
evalZfor
(
v
in
(
(
Object
.
seal
)
(
x
)
)
)
;
x
.
length
=
Function
x
=
7
}
)
var
[
TREE
]
identity
;
&
*
(
"
.
