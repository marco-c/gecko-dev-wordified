BINJS
[
GRAMMAR
]
identity
;
X
(
IdentifierExpression
CallExpression
&
ExpressionStatement0LiteralNumericExpression
"
BindingIdentifier
.
LiteralStringExpression
StaticMemberExpression
(
AssertedDeclaredName
ArrayExpression
AssertedParameterScope
AssertedVarScope
FormalParameters
&
VariableDeclaration
VariableDeclarator0ComputedMemberExpression
*
LiteralNullExpression0EagerFunctionDeclaration0FunctionOrMethodContents0LiteralBooleanExpression
>
AssertedPositionalParameterName
AssertedBlockScope
Block
.
EagerFunctionExpression4FunctionExpressionContents4AssignmentTargetIdentifier
ReturnStatement
(
AssignmentExpression
DataProperty
&
LiteralPropertyName
ObjectExpression
"
AssertedBoundName
.
AssertedBoundNamesScope
CatchClause
"
TryCatchStatement
BinaryExpression
ForStatement
.
LiteralRegExpExpression
ThrowStatement
UpdateExpression2AssertedScriptGlobalScope
EmptyStatement
NewExpression
Script
[
STRINGS
]
identity
;
r
var
script2
apply
f
native1
arr
script1
assertEq
j
closed1
closed2
threw
a
call
x
genFreshFunction
native2
y
g
e
script3
applyIt
applyIt1
applyIt2
arg0
callIt
arguments
o
tryAndFail
genClosure
closed3
i
s
test0
tricky1
z
test1
test2
test3
String
aabc
abc
b
length
prototype
+
+
+
<
Function
eval
match
not
js_fun_apply
not
js_fun_call
return
search
x
=
4
[
TREE
]
identity
;
!
0VP
<
:
(
B
H
J
L
D
(
"
4
4X
"
(
4
"
(
(
6
6
44
6
"
:
d
p4
.
0
(
"
"
4F
\
"
R
:
:
<
:
PZn
PZf
D
<
8
:
.
0
(
(
"
"
4
"
8
:
.
0
(
(
"
"
4
"
B
H
J
L
"
B
?
?
?
RJVN
T
D
"
"
?
?
?
R
JVN
T
D
?
?
B
"
H
"
(
0
>
H
>
F
>
N
^
2
>
*
H
F
XN
^
2
*
(
0
0
.
0
4
?
?
0
?
0
.
0
4
?
?
?
0
?
0
.
0
4
?
?
"
?
"
0
?
"
0
.
0
4
?
"
(
(
(
(
(
(
(
(
<
<
"
J
8
&
D
*
?
B
>
&
&
*
62
&
&
&
D
*
?
B
>
&
&
*
62
&
&
&
D
*
?
B
>
&
&
*
62
&
&
"
8
(
6
6
&
D
*
6
?
B
>
&
&
*
62
&
&
62
&
D
*
6
?
B
>
&
&
*
62
&
&
8
?
8
<
8
<
8
:
<
8
:
<
8
<
8
:
.
0
L
j8
:
.
0
L
h
"
L
*
.
2
B
"
(
4T
b
F
\
l
"
2
(
?
?
2
2
2
2
2
2
"
2
F
"
*
(
?
?
*
*
*
*
*
*
"
*
F
"
(
"
4
?
?
"
F
"
.
(
?
?
.
.
.
.
.
.
"
.
F
