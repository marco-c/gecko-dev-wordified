BINJS
[
GRAMMAR
]
identity
;
>
(
IdentifierExpression
CallExpression
"
BindingIdentifier
&
ExpressionStatement
AssertedBlockScope
Block
(
AssertedDeclaredName
StaticMemberExpression
.
LiteralStringExpression
&
VariableDeclaration
VariableDeclarator
"
AssertedBoundName
.
AssertedBoundNamesScope
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope
BinaryExpression
BreakStatement
CatchClause0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
IfStatement0LiteralBooleanExpression0LiteralNumericExpression
NewExpression
Script
"
TryCatchStatement
WhileStatement
[
STRINGS
]
identity
;
C
lfcode
var
file
lfVarx
loadFile
lfVare
push
Array
evaluate
gczeal
shift
test
(
)
;
}
test
(
)
;
function
test
(
)
{
function
removeAllProperties
(
o
)
{
bar
(
)
=
thaw
patterns
;
}
var
o
=
{
}
;
o
.
first
=
{
toSource
:
function
(
)
{
removeAllProperties
(
o
)
;
}
}
;
return
o
.
toSource
(
)
;
}
undefined
=
=
[
TREE
]
identity
;
7
8
6
4
<
2
0
&
*
.
"
:
(
