BINJS
[
GRAMMAR
]
identity
;
(
IdentifierExpression0LiteralNumericExpression
"
BindingIdentifier
(
AssertedDeclaredName
&
ExpressionStatement
&
VariableDeclaration
VariableDeclarator
CallExpression
BinaryExpression0ComputedMemberExpression
StaticMemberExpression
AssertedBlockScope4AssignmentTargetIdentifier
Block
ForStatement
UpdateExpression
AssertedParameterScope
AssertedVarScope0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
ArrayExpression
(
AssignmentExpression
<
ComputedMemberAssignmentTarget0LiteralBooleanExpression
.
LiteralStringExpression
ReturnStatement
>
AssertedPositionalParameterName8StaticMemberAssignmentTarget2AssertedScriptGlobalScope
Script
[
STRINGS
]
identity
;
c
<
var
i
a
bag
j
assertEq
+
+
length
!
=
base_index
prepare_arays
test
+
push
in
-
<
f
test_push
test_reverse
test_set_elem
test_splice
test_unshift
*
c
b
reverse
splice
unshift
<
=
[
TREE
]
identity
;
*
>
<
&
(
*
&
(
*
"
(
"
&
"
*
"
(
Y
.
0
.
Y
Y
Y
.
0
i
6
"
Y
.
Y
Y
?
.
Y
Y
?
2
Y
Y
i
?
i
?
2
&
&
*
"
(
&
*
"
(
n
I
?
.
:
6
&
*
"
8
(
4
.
0
?
?
?
:
?
2
&
*
"
(
&
*
"
(
n
I
.
:
6
&
*
"
8
(
.
0
?
?
?
?
?
2
&
*
"
(
&
*
"
(
n
I
.
:
6
&
*
"
8
(
8
?
.
0
?
?
2
&
*
*
"
(
&
*
"
(
n
I
?
.
:
6
&
*
"
8
(
6
?
4
4240
.
0
Y
?
?
4
Y
40
2
(
&
*
