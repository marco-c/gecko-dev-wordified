BINJS
[
GRAMMAR
]
identity
;
_
T
(
IdentifierExpression0LiteralNumericExpression
BinaryExpression
StaticMemberExpression
"
BindingIdentifier
(
AssertedDeclaredName
VariableDeclarator
CallExpression
&
ExpressionStatement
ThisExpression
(
AssignmentExpression
DataProperty
&
LiteralPropertyName
AssertedParameterScope
AssertedVarScope
FormalParameters
&
VariableDeclaration4AssignmentTargetIdentifier0ComputedMemberExpression
.
EagerFunctionExpression4FunctionExpressionContents
>
AssertedPositionalParameterName8StaticMemberAssignmentTarget
UnaryExpression
ReturnStatement
ArrayExpression
ObjectExpression
UpdateExpression
ForStatement
AssertedBlockScope
Block
<
ComputedMemberAssignmentTarget
.
LiteralStringExpression2AssertedScriptGlobalScope
*
ConditionalExpression0EagerFunctionDeclaration0FunctionOrMethodContents
IfStatement
"
LabelledStatement
NewExpression
Script
[
STRINGS
]
identity
;
h
var
a
b
c
e
h
d
sjcl
-
i
^
ax1
n
+
aix
bitArray
hash
+
+
<
|
Math
N
concat
k
sha256
slice
&
<
<
>
>
>
C
ax2
finalize
g
getPartial
length
reset
undefined
update
w
|
|
PRassertEq
(
ax2
.
toString
(
)
ax1
.
toString
(
)
)
;
eval
floor
for
(
var
aix
=
0
;
aix
<
200
;
aix
+
+
)
ax2
=
(
new
sjcl
.
hash
.
sha256
(
undefined
)
)
.
update
(
ax2
undefined
)
.
finalize
(
)
;
pow
prototype
round
splice
*
/
=
=
=
[
TREE
]
identity
;
M
RD
<
"
6
6
.
6
(
*
"
&
D
?
B
2F
f
P
&
2
D
?
B
(
*
2
N
(
^
d
pB
.
0
(
*
N
&
L
F
.
0
\
6
F
(
*
.
*
2
.
4
J
(
*
"
.
2
>
(
*
"
:
0
2
*
4
4
L
(
*
H
J
2
&
b
(
V
A
"
N
:
P
8
"
>
<
L
*
(
Z
?
8
"
:
(
*
.
"
2
&
?
&
.
&
&
:
P
8
"
>
<
&
4
?
.
&
4
4
.
8
8
*
8
6
6
>
6
3
6
&
&
"
4
0
A0
v
A0
A0
A
oD
A0
D
2
A0
K
A
A
"
<
:
"
i
8
"
P
0
HJ
H
>
T
BXBR
