BINJS
[
GRAMMAR
]
identity
;
;
H
(
IdentifierExpression
CallExpression
&
ExpressionStatement
.
LiteralStringExpression
StaticMemberExpression
BinaryExpression
"
BindingIdentifier
AssertedBlockScope
(
AssertedDeclaredName
Block0LiteralNumericExpression
BreakStatement
IfStatement
UnaryExpression
&
VariableDeclaration
VariableDeclarator0LiteralBooleanExpression
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope
(
AssignmentExpression4AssignmentTargetIdentifier
DataProperty0EagerFunctionDeclaration
FormalParameters0FunctionOrMethodContents
&
LiteralPropertyName
NewExpression
ObjectExpression
Script
SwitchCase
SwitchDefault4SwitchStatementWithDefault
WhileStatement
[
STRINGS
]
identity
;
>
lfVarx
lfcode
var
file
lfRunTypeId
push
loadFile
!
=
+
-
}
)
(
)
;
(
function
(
)
{
.
js
4
Array
eval
evaluate
gczeal
(
7
5
)
;
isNaN
length
noScriptRval
parseInt
shift
substr
undefined
var
S
=
new
Array
(
)
;
var
x
=
1
;
for
(
var
i
=
8
;
i
>
=
0
;
i
-
-
)
{
S
[
0
]
+
=
'
'
;
S
[
0
]
+
=
'
'
;
}
eval
(
S
)
;
var
optionNames
=
options
(
)
.
split
(
'
'
)
;
for
(
var
i
=
0
;
i
<
optionNames
.
length
;
i
+
+
)
{
}
!
&
&
=
=
[
TREE
]
identity
;
#
>
(
:
6
4
?
F
"
.
<
2
2
6
&
4
*
:
0
(
?
D
B
"
<
08
*
"
8
&
.
