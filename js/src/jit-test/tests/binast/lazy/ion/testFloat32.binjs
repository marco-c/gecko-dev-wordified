BINJS
[
GRAMMAR
]
identity
;
V
(
IdentifierExpression0LiteralNumericExpression
&
ExpressionStatement
CallExpression
"
BindingIdentifier
(
AssignmentExpression
(
AssertedDeclaredName0ComputedMemberExpression
<
ComputedMemberAssignmentTarget
VariableDeclarator
&
VariableDeclaration0LiteralBooleanExpression
StaticMemberExpression
BinaryExpression
AssertedParameterScope
AssertedVarScope
FormalParameters4AssignmentTargetIdentifier0FunctionOrMethodContents
.
LazyFunctionDeclaration
AssertedBlockScope
Block4FunctionExpressionContents
UpdateExpression
.
EagerFunctionExpression
IfStatement
UnaryExpression
ForStatement
NewExpression
>
AssertedPositionalParameterName
.
LiteralStringExpression
ObjectExpression
WhileStatement8StaticMemberAssignmentTarget
ArrayExpression2AssertedScriptGlobalScope8CompoundAssignmentExpression
ForInStatement
LazyFunctionExpression
ReturnStatement
Script
ThisExpression
[
STRINGS
]
identity
;
var
res
f32
x
assertFloat32
Math
n
test
+
f64
y
-
i
min
res1
sum
fround
g
-
-
<
Float32Array
Infinity
NaN
length
v
abs
ar
aridx
farrays
k
o
s1
s2
sqrt
sum1
sum2
use
!
+
+
>
acceptAbs
acceptAdd
acceptAddSeveral
acceptAddVar
acceptCeil
&
acceptFilterTypeSet
(
acceptFilterTypeSet2
acceptFloor
acceptLoop
acceptMax
acceptMin
acceptRound
&
acceptSeveralMinMax
(
acceptSeveralMinMax2
acceptSqrt
acceptTrunc
alternateCond
f
h
max
mixedPhiTest
partialMinMax
phiTest
phiTest2
plusOne
refuseAbs
refuseAddCst
*
refuseAddFunctionCall
refuseAddSeveral
refuseAddStore64
"
refuseAddStoreObj
refuseAddVar
&
refuseFilterTypeSet
refuseLoop
refuseMath
refuseMax
refuseMin
refuseMinAdd
&
refuseSeveralMinMax
refuseSqrt
refuseTrigo
t
%
*
Array
Float64Array
acos
call
ceil
cos
*
ion
.
forceinlineCaches
j
prototype
(
setJitCompilerOption
z
ArrayBuffer
Function
acosh
asin
asinh
atan
atanh
c
cbrt
cosh
exp
expm1
floor
g
.
o
=
x
[
1
]
*
getJitCompilerOptions
ion
.
warmup
.
trigger
log
log10
log1p
log2
round
s
sign
sin
sinh
sort
tan
tanh
trunc
unshift
+
=
/
=
=
>
=
[
TREE
]
identity
;
jRHP
P
R
T
V
X
Z
\
^
b
d
f
h
j
l
n
p
x
z
|
~
4
>
>
2
.
"
2
.
"
"
"
:
(
>
"
>
"
2
.
"
8
"
t
"
:
(
0
t
:
0
8F
"
t8
6
&
6
8
.
0
L
6
*
4
8
6
6J
4
4
.
*
4
.
2
.
"
0
0
:
(
8
&
0
.
0
L
0
8
&
.
0
L
J
0
2
.
"
:
(
L
T
*
:
N
L
.
<
"
D
2
.
"
:
8
:
&
:
?
0
L
:
*
>
I
(
&
<
r
"
r
?
8
[
0
r
:
(
:
(
R
&
"
H
H
?
H
H
R
(
T
&
"
D
F
D
?
F
?
D
F
D
F
T
(
V
&
"
?
?
V
(
&
"
e
A
(
&
"
?
?
?
(
&
"
?
(
&
"
<
<
?
D
<
<
>
(
&
"
?
(
&
"
(
d
&
<
"
P
?
=
p
*
(
l
&
"
B
l
(
&
"
B
?
(
d
&
"
?
d
(
&
"
?
(
h
&
"
?
v
h
(
j
&
"
?
j
(
z
9
&
"
?
?
z
(
&
"
?
(
&
"
q
=
E
?
(
b
&
"
v
?
b
(
&
"
v
q
=
E
?
(
P
&
"
2
P
(
&
"
2
?
(
Z
&
"
46J
*
*
Z
(
\
&
"
46J
*
*
2
\
(
&
"
46J
*
*
2
?
(
k
&
"
(
X
%
&
"
?
*
6
?
X
(
^
%
&
"
?
*
6
?
^
(
f
%
&
"
?
*
6
?
f
(
n
%
&
"
?
*
6
?
n
(
O
&
"
T
(
&
"
B0
*
?
(
&
"
B0
*
?
(
p
C
&
<
"
>
4
N
*
>
?
>
>
*
?
2
.
"
8
[
0
*
p
(
|
&
<
"
4
N
*
*
4
&
6
*
B
*
?
2
.
"
8
Y
0
*
|
?
.
(
x
&
<
"
4
N
*
*
4
&
6
*
B
*
?
?
2
.
"
8
Y
0
*
x
?
.
(
~
Y
&
<
"
B
*
?
4
&
*
?
?
2
.
"
8
Y
N
0
*
~
