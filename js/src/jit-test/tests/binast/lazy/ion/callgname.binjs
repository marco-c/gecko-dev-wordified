BINJS
[
GRAMMAR
]
identity
;
<
(
IdentifierExpression
CallExpression0LiteralNumericExpression
&
ExpressionStatement4AssignmentTargetIdentifier
"
BindingIdentifier
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator
AssertedParameterScope
AssertedVarScope
(
AssignmentExpression
FormalParameters
ReturnStatement
BinaryExpression0FunctionOrMethodContents
.
LazyFunctionDeclaration
AssertedBlockScope
Block8CompoundAssignmentExpression
ForStatement
UpdateExpression
.
LiteralStringExpression
StaticMemberExpression
>
AssertedPositionalParameterName2AssertedScriptGlobalScope4FunctionExpressionContents
LazyFunctionExpression
Script
[
STRINGS
]
identity
;
*
var
i
y
g1
x
assertEq
h
test2
f1
f2
other
testOtherGlobal
+
+
+
=
<
eval
fHf
=
function
(
)
{
return
x
;
}
;
x
=
2
;
newGlobal
same
-
compartment
+
[
TREE
]
identity
;
:
4
"
B
2
(
?
"
*
Y
&
(
?
.
&
0
.
"
0
"
*
Y
&
(
i
8
"
6
"
*
I
&
(
I
Y
