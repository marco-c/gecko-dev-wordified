BINJS
[
GRAMMAR
]
identity
;
k
H
(
IdentifierExpression
.
LiteralStringExpression
CallExpression
BinaryExpression
"
BindingIdentifier
&
ExpressionStatement
(
AssertedDeclaredName
StaticMemberExpression
&
VariableDeclaration
VariableDeclarator
AssertedParameterScope
AssertedVarScope
FormalParameters0FunctionOrMethodContents
.
LazyFunctionDeclaration
>
AssertedPositionalParameterName
ReturnStatement0LiteralNumericExpression
DataProperty
&
LiteralPropertyName0LiteralBooleanExpression0ComputedMemberExpression
ObjectExpression4AssignmentTargetIdentifier4FunctionExpressionContents
IfStatement
LazyFunctionExpression
ArrayExpression
AssertedBlockScope2AssertedScriptGlobalScope
(
AssignmentExpression
Block
ForStatement
Script
UpdateExpression
[
STRINGS
]
identity
;
]
z
i
+
var
x
-
assertEq
join
split
-
>
res
s
s1
s2
-
-
lengthWasCalled
myjoin
obj
&
'
join_check
replace
resumeHere
split_join
split_join_2
split_join_3
split_join_4
split_join_5
&
split_join_multiple
split_join_pattern0split_join_two_byte_char
(
split_join_underflow
trip
a
abc
good
0
1
Array
Object
ab
abca
arguments
a
b
b
bad
bailout
bc
c
call
configurable
defineProperty
enumerable
get
length
prototype
push
toString
+
+
<
=
=
[
TREE
]
identity
;
D
<
&
*
.
0
2
4
6
8
:
<
>
&
a
"
*
"
.
&
(
H
&
(
J
Nf
"
l
.
&
(
j6
<
2
>
0
*
"
&
(
h
*
&
(
d
*
Ln
b
"
.
&
(
r6
.
2
4
"
F
"
Z
F
"
z
8
"
"
.
p
"
*
\
0
*
"
>
4
x
X
T
?
R
>
"
2
"
4
x
R
B
^
:
P
V
<
p
8
(
6
(
D
B
X
(
DB
v
F
t0
:
&
.
0
2
4
8
6
:
<
