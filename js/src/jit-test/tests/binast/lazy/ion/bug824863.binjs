BINJS
[
GRAMMAR
]
identity
;
I
V0LiteralNumericExpression
(
IdentifierExpression
"
BindingIdentifier
BinaryExpression
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator
&
ExpressionStatement
CallExpression
(
AssignmentExpression4AssignmentTargetIdentifier
AssertedBlockScope
Block
>
AssertedPositionalParameterName
AssertedParameterScope
AssertedVarScope
BreakStatement
FormalParameters
*
ConditionalExpression0FunctionOrMethodContents
IfStatement
.
LazyFunctionDeclaration
.
LiteralStringExpression
ObjectExpression
StaticMemberExpression
SwitchCase
ArrayExpression
"
AssertedBoundName
.
AssertedBoundNamesScope2AssertedScriptGlobalScope
CatchClause
DataProperty4FunctionExpressionContents
LazyFunctionExpression
&
LiteralPropertyName
ReturnStatement
Script
SwitchDefault4SwitchStatementWithDefault
ThrowStatement
"
TryCatchStatement
WhileStatement
[
STRINGS
]
identity
;
L
var
+
|
label
j_012
quantum
1
f
__stackBase__
23
_2
i_014
Runtime
_main
alignMemory
assert
assertEq
e
size
text
2
3
4
5
_0
_1
STACKTOP
condition
!
=
Math
Module
STACK_ROOT
bad
label
:
bad
label
:
4
ceil
*
/
[
TREE
]
identity
;
a
J
<
>
0
0
F
D
B
&
&
H
H
2
<
F
J
&
&
&
8
(
8
(
8
(
P
(
6
2
?
e
(
*
.
0
2
4
6
T
?
N
4
(
*
8
.
0
2
4
"
4
"
8
*
:
[
?
"
?
*
:
[
"
L
.
B
R
6
"
?
>
:
8
"
.
D
