BINJS
[
GRAMMAR
]
identity
;
8
(
IdentifierExpression4AssignmentTargetIdentifier
&
ExpressionStatement0LiteralNumericExpression
.
LiteralStringExpression
(
AssignmentExpression
BinaryExpression
CallExpression
AssertedBlockScope
"
BindingIdentifier
Block8CompoundAssignmentExpression
ForStatement
IfStatement
UpdateExpression
(
AssertedDeclaredName
AssertedParameterScope2AssertedScriptGlobalScope
AssertedVarScope
FormalParameters4FunctionExpressionContents
LazyFunctionExpression
NewExpression
ReturnStatement
Script
&
VariableDeclaration
VariableDeclarator
[
STRINGS
]
identity
;
&
i
args
TestCase
+
+
+
=
<
var
Function
MyFunc
MyObject
arg
eval
for
(
var
i
=
0
;
i
<
MyFunc
.
length
;
i
+
+
)
break
;
eval
(
'
this
.
arg
'
+
i
+
'
=
arg
'
+
i
)
inIon
var
EXP_1
=
new
MyObject
;
var
EXP_2
=
new
MyObject
;
EXP_1
-
EXP_2
!
=
+
[
TREE
]
identity
;
o
2
"
<
.
*
"
(
&
0
4
6
