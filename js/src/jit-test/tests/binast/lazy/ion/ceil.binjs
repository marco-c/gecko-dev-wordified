BINJS
[
GRAMMAR
]
identity
;
a
:
(
IdentifierExpression
CallExpression
&
ExpressionStatement0LiteralNumericExpression
"
BindingIdentifier
BinaryExpression
(
AssertedDeclaredName
UnaryExpression
&
VariableDeclaration
VariableDeclarator
.
LiteralStringExpression
>
AssertedPositionalParameterName
StaticMemberExpression
AssertedParameterScope
AssertedVarScope
FormalParameters0FunctionOrMethodContents
.
LazyFunctionDeclaration
AssertedBlockScope4AssignmentTargetIdentifier
Block
ForStatement
UpdateExpression2AssertedScriptGlobalScope4FunctionExpressionContents
LazyFunctionExpression
ReturnStatement
Script
[
STRINGS
]
identity
;
J
var
i
-
g
testBailout
assertEq
j
+
value
Math
UINT_MAX
log
x
INT_MAX
ceil
dceil
fceil
INT_MIN
doubleCheck
floatCheck
fround
bailout
eval
pow
(
setJitCompilerOption
val
+
+
<
d
(
function
(
x
)
{
return
Math
.
ceil
(
Math
.
fround
(
x
)
)
}
)
J
(
function
(
x
)
{
return
Math
.
ceil
(
x
)
}
)
NaN
.
baseline
.
warmup
.
trigger
floor
ion
.
warmup
.
trigger
start
double
start
float
|
[
TREE
]
identity
;
80
"
&
&
0
>
0
B
4
4
(
2
"
6
O
"
6
i
.
4
(
*
&
?
?
?
&
g
"
2
2
6
i
.
4
(
*
&
(
?
?
?
"
:
D
*
8
F
&
*
(
(
.
?
?
"
H
?
.
?
?
?
"
?
?
<
