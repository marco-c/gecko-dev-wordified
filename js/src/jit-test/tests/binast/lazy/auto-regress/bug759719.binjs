BINJS
[
GRAMMAR
]
identity
;
a
(
IdentifierExpression
"
BindingIdentifier
(
AssertedDeclaredName
&
ExpressionStatement
CallExpression
&
VariableDeclaration
VariableDeclarator
.
LiteralStringExpression
BinaryExpression
StaticMemberExpression
NewExpression
>
AssertedPositionalParameterName
AssertedParameterScope
AssertedVarScope
FormalParameters
AssertedBlockScope
Block0FunctionOrMethodContents
.
LazyFunctionDeclaration0LiteralNumericExpression4AssignmentTargetIdentifier
(
AssignmentExpression0ComputedMemberExpression
UnaryExpression
"
AssertedBoundName
.
AssertedBoundNamesScope
CatchClause
ForStatement8StaticMemberAssignmentTarget
"
TryCatchStatement
UpdateExpression8CompoundAssignmentExpression4FunctionExpressionContents
IfStatement
.
LiteralRegExpExpression
ArrayExpression2AssertedScriptGlobalScope
<
ComputedMemberAssignmentTarget
.
EagerFunctionExpression
ForInOfBinding
ForInStatement
LazyFunctionExpression0LiteralBooleanExpression
ObjectExpression
ReturnStatement
Script
ThisExpression
[
STRINGS
]
identity
;
var
R
S
A
TestCase
i
+
eval
SECTION
CheckItems
e
loopa2
Reverse
msg
.
;
A
.
reverse
(
)
;
A
.
length
args
actual
array
description
gTc
gTestcases
limit
optionsClear
optionsInit
printStatus
+
+
<
typeof
ARRAY_OBJECT
AddTestCase
Array
BOOLEAN_OBJECT
DATE_OBJECT
FUNCTION_OBJECT
NUMBER_OBJECT
OBJECT_OBJECT
Object_1
STRING_OBJECT
TIME_0000
a
code
d
document
ex
expect
getTimeZoneDiff
length
lines
n
num
optionName
optionsframe
printBugNumber
prototype
summary
value
=
=
=
(
function
(
x
)
{
if
(
x
)
return
x
;
}
)
)
xARRAY_OBJECT
NUMBER_OBJECT
Math
true
false
123
'
90210
'
Boolean
Date
Function
Math
Number
Object
PI
String
*
\
u0042
[
\
u0061
]
\
\
u0026
delete
Array
.
prototype
.
reverse
.
length
;
Array
.
prototype
.
reverse
.
length
dump
function
gczeal
howdy
href
initvalues
jsreftest
.
html
location
match
null
void
0
Math
.
pow
(
2
32
)
1
.
234e
-
32
OBJECT_OBJECT
BOOLEAN_OBJECT
FUNCTION_OBJECT
DATE_OBJECT
STRING_OBJECT
object
options
passed
print
return
this
reverse
split
toString
undefined
var
A
=
new
Array
(
>
var
A
=
new
Array
(
true
false
)
Zvar
A
=
new
Array
(
)
;
A
[
8
]
=
'
hi
'
A
[
3
]
=
'
yo
'
window
&
writeTestCaseResult
!
!
=
&
&
&
=
+
=
|
|
[
TREE
]
identity
;
\
J6
:
<
B
D
F
H
J
L
N
\
f
.
0
h
j
2
h
&
<
>
&
Z
"
&
Z
"
&
J
b
T
P
b
T
P
:
l
T
B
&
2
^
*
t
&
j
&
d
d
&
0
&
.
hX
<
"
.
RP
f
"
64
2X
X
"
0
D
r08
r08
<
"
:
.
*
(
.
*
(
&
v
.
*
(
"
64
2
"
D
08
V
0
V
F
"
*
R
x
(
8
(
6
(
*
>
4
*
"
LH
F
:
^
nV
2
n
<
"
64
2
"
N
N
B
&
\
>
l
^
H
D
~
B
(
L
F
:
>
(
|
z
(
8
(
6
>
4
*
"
*
&
8
(
6
^
>
4
*
"
.
R
&
J
&
p
p
&
Z
