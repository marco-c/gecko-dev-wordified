BINJS
[
GRAMMAR
]
identity
;
&
ExpressionStatement
(
IdentifierExpression
(
AssignmentExpression4AssignmentTargetIdentifier
CallExpression
AssertedBlockScope
Block
StaticMemberExpression
ThisExpression
"
AssertedBoundName
.
AssertedBoundNamesScope
"
BindingIdentifier
CatchClause
.
LiteralStringExpression
"
TryCatchStatement
UnaryExpression2AssertedScriptGlobalScope
Script
[
STRINGS
]
identity
;
eval
f
r
realEval
delete
(
function
(
)
{
(
__defineSetter__
(
"
functional
"
(
function
(
)
{
return
{
t
:
function
(
)
{
}
}
}
)
)
)
(
)
}
)
(
function
(
)
{
for
(
let
x
in
[
__defineGetter__
(
"
"
function
(
)
{
}
)
__defineGetter__
(
"
functional
"
Math
.
pow
)
]
)
{
(
__defineSetter__
(
"
"
function
(
)
{
}
)
)
(
)
}
}
)
Math
e
toSource
[
TREE
]
identity
;
"
