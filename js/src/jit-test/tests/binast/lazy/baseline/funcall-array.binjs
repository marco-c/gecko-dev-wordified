BINJS
[
GRAMMAR
]
identity
;
P0LiteralNumericExpression
(
IdentifierExpression
DataProperty
&
LiteralPropertyName
"
BindingIdentifier
(
AssertedDeclaredName
BinaryExpression
&
VariableDeclaration
VariableDeclarator
&
ExpressionStatement
StaticMemberExpression
CallExpression
.
LiteralStringExpression4AssignmentTargetIdentifier
ArrayExpression
AssertedParameterScope
>
AssertedPositionalParameterName
AssertedVarScope
FormalParameters
(
AssignmentExpression
IfStatement
ObjectExpression0ComputedMemberExpression
ForStatement0FunctionOrMethodContents
.
LazyFunctionDeclaration
ReturnStatement
UpdateExpression
AssertedBlockScope
Block4FunctionExpressionContents
LazyFunctionExpression
NewExpression2AssertedScriptGlobalScope8CompoundAssignmentExpression
EmptyStatement
Script8StaticMemberAssignmentTarget
ThisExpression
[
STRINGS
]
identity
;
g
var
+
i
ARRAYS
length
fn
a
b
c
d
resultArray
arrs
bigArray
callerNo
indexedGetterArray
j
num
obj
undefined
=
=
=
2
EXPECTED_RESULTS
PERMUTATIONS
arrayPermutation
count
denseArray
emptyArray
generateCaller
idx1
idx2
main
nonArray
push
s
sparseArray
targetFun
+
+
<
0
1
3
Array
%
B
fn
.
apply
(
thisObj
arrays
[
i
]
)
;
V
for
(
var
i
=
0
;
i
<
arrays
.
length
;
i
+
+
)
{
}
.
(
fn
thisObj
arrays
)
{
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
4
5
6
7
8
9
;
Object
arguments
assertEq
defineProperty
eval
fn
=
caller
function
caller
get
}
*
+
=
/
|
[
TREE
]
identity
;
JD
*
.
2
4
6
<
>
D
F
4
2
?
D
?
B
R
0
J
8
H
<
:
>
L
?
N
(
P
B
R
(
0
>
&
6
I
4
2
D
>
F
)
>
"
"
"
"
&
*
&
(
*
&
(
*
&
(
*
&
(
F
LN0
4
.
2
"
&
8
:
8
T
:
T
.
8
.
:
6
*
H
L
N
q
(
i
P
Y
q
~
^
w
b
i
d
~
f
y
h
j
r
l
n
p
r
t
v
x
z
Y
|
w
~
r
i
p
p
4
6
2
&
B
B
\
X
V
Z
B6
H4
<
U
2
&
"
0
J
8
H
<
:
"
0
.
6
0
J
4
8
H
F
"
"
0
.
*
<
