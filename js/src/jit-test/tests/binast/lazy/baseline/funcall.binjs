BINJS
[
GRAMMAR
]
identity
;
I
F
(
IdentifierExpression0LiteralNumericExpression
&
ExpressionStatement
"
BindingIdentifier
(
AssertedDeclaredName
CallExpression
StaticMemberExpression
&
VariableDeclaration
VariableDeclarator
AssertedParameterScope
AssertedVarScope
FormalParameters
BinaryExpression
AssertedBlockScope4AssignmentTargetIdentifier
Block
(
AssignmentExpression4FunctionExpressionContents
LazyFunctionExpression
UpdateExpression
ForStatement0FunctionOrMethodContents
.
LazyFunctionDeclaration
ReturnStatement8StaticMemberAssignmentTarget
>
AssertedPositionalParameterName
IfStatement
"
AssertedBoundName
.
AssertedBoundNamesScope2AssertedScriptGlobalScope
CatchClause
*
LiteralNullExpression
Script
"
TryCatchStatement
[
STRINGS
]
identity
;
0
var
i
f
call
c
assertEq
Function
prototype
+
+
origCall
<
a
b
test1
test2
test3
test4
undefined
>
e
Math
abs
arguments
length
[
TREE
]
identity
;
#
B
<
.
&
0
0
?
*
9
(
6
4
"
(
*
.
{
&
0
0
?
*
9
(
6
4
"
2
&
(
(
"
2
.
&
0
0
?
*
9
(
6
4
"
2
"
D
?
>
:
8
&
&
"
2
.
q
&
4
4
4
.
?
?
"
"
0
?
*
9
(
?
