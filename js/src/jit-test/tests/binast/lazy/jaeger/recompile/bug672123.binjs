BINJS
[
GRAMMAR
]
identity
;
{
<
(
IdentifierExpression
&
ExpressionStatement
CallExpression
.
LiteralStringExpression
"
BindingIdentifier4AssignmentTargetIdentifier
AssertedBlockScope
(
AssertedDeclaredName
(
AssignmentExpression
BinaryExpression
Block0LiteralBooleanExpression
AssertedParameterScope
AssertedVarScope
FormalParameters0FunctionOrMethodContents
.
LazyFunctionDeclaration0LiteralNumericExpression
"
AssertedBoundName
.
AssertedBoundNamesScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
CatchClause
ForStatement
Script
"
TryCatchStatement
UpdateExpression
&
VariableDeclaration
VariableDeclarator
[
STRINGS
]
identity
;
"
h
caught
var
code
g
i
f
r
+
"
"
(
gc
(
)
)
(
function
(
)
{
assertEq
eval
}
)
+
+
<
[
TREE
]
identity
;
)
2
J8
:
"
T
*
"
X
4
.
(
&
0
"
6
