BINJS
[
GRAMMAR
]
identity
;
P
(
IdentifierExpression0LiteralNumericExpression
"
BindingIdentifier
BinaryExpression
(
AssertedDeclaredName
DataProperty
&
LiteralPropertyName
VariableDeclarator
&
ExpressionStatement
&
VariableDeclaration4AssignmentTargetIdentifier
CallExpression
.
LiteralStringExpression
(
AssignmentExpression
StaticMemberExpression
AssertedBlockScope
Block
>
AssertedPositionalParameterName
IfStatement
AssertedParameterScope
AssertedVarScope8CompoundAssignmentExpression
FormalParameters0FunctionOrMethodContents
.
LazyFunctionDeclaration
ReturnStatement
<
ComputedMemberAssignmentTarget0ComputedMemberExpression
ForInOfBinding
ForInStatement
NewExpression
ObjectExpression
WhileStatement2AssertedScriptGlobalScope
BreakStatement
ForStatement
*
LiteralNullExpression
Script
UpdateExpression
[
STRINGS
]
identity
;
var
n
c
last
table
+
lenOut
seqi
line
*
ret
seq
M
count
i
length
<
fastaRandom
s
A
ALU
C
HomoSap
IUB
actual1
actual2
actual3
assertEq
fastaRepeat
makeCumulative
max
r
rand
substring
Array
a
g
t
+
=
-
=
>
TACAAAAATTAGCCGGGCGTGGTGGCGCGCGCCTGTAATCCCAFAGCCTGGGCGACAGAGCGAGACTCCGTCTCAAAAATAGGCGGAGGTTGCAGTGAGCCGAGATCGCGCCACTGCACTCC
B
(
CAAAAAGGCCGGGCGCGGTGTCCAGCCTGGCCAACATGGTGAAACCCCGTCTCTACTAAAAAT
DTGAGGCCGAGGCGGGCGGATCACCTGAGGTCAGGAGTTCGAGATGCTACTCGGGAGGCTGAGGCAGGAGAATCGCTTGAACCCGGGTGGCCGGGCGCGGTGGCTCACGCCTGTAATCCCAGCACTTTGG
H
K
N
R
S
VxVtttaDtKgcaaWaaaaatSccMcVatgtKgtaKgcgatatgtagtSaaaDttatacaaa
W
Y
join
(
ttggctatatttatgttgga
%
+
+
-
/
[
TREE
]
identity
;
LD
&
(
*
.
0
2
4
"
8
:
E
&
J
*
A2
0
(
<
.
<
*
&
*
4
<
(
h
d
V
f
Z
X
.
F
H
z
G
?
Q
?
H
Q
?
J
H
z
G
?
\
{
G
z
?
b
{
G
z
?
j
{
G
z
?
l
{
G
z
?
{
G
z
?
n
{
G
z
?
p
{
G
z
?
r
{
G
z
?
t
{
G
z
?
x
{
G
z
?
z
{
G
z
?
F
[
c
?
V
=
W
?
H
:
I
?
J
8
K
K
?
2
:
0
(
.
*
J
<
:
"
&
L6
8
2
8
0
(
.
*
N
B
P
"
&
&
"
B
L
"
B
B
N
4
2
"
0
(
.
*
>
>
D
N
:
B
P
"
&
>
D
H
N
"
>
?
<
:
"
&
>
8
"
6
FR
|
T
N
4
0
8
j
(
2
"
.
4
"
6
0
^
6
2
v
6
4
~
