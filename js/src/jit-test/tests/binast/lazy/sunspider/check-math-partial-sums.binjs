BINJS
[
GRAMMAR
]
identity
;
>
0LiteralNumericExpression
(
IdentifierExpression4AssignmentTargetIdentifier
BinaryExpression
&
ExpressionStatement
(
AssignmentExpression
"
BindingIdentifier
StaticMemberExpression
(
AssertedDeclaredName8CompoundAssignmentExpression
&
VariableDeclaration
VariableDeclarator
CallExpression
ArrayExpression
ForStatement
UnaryExpression0ComputedMemberExpression
UpdateExpression
AssertedBlockScope
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope
Block
FormalParameters0FunctionOrMethodContents
.
LazyFunctionDeclaration0LiteralBooleanExpression
ReturnStatement
Script
[
STRINGS
]
identity
;
a
V
var
k
i
+
=
*
/
alt
-
Math
actual
expect
k2
a1
ck
k3
sk
a2
a3
a4
a5
a6
a7
a8
a9
eps
length
n
partial
twothirds
assertEq
pow
+
+
<
<
=
Array
abs
apply
cos
prototype
push
sin
*
=
+
[
TREE
]
identity
;
Y
<
0
6
6
6
4
(
*
4
2
4
.
8
"
&
(
*
.
8
?
?
B
4
"
>
0
&
P
J
<
8
?
<
?
"
?
T
?
?
&
?
(
?
*
?
.
?
:
"
&
(
*
.
B
R
DLNH
6
0
-
q
=
Z
a
GO
?
{
B
>
g
Q
E
i
Xe
.
]
H
M
?
6
~
C
*
?
-
LT
?
CV
?
c
N
>
[
W
E
Xh
vg
Q
O
?
9
C
?
-
ET
?
[
_
%
?
NLmP
>
WP
X
E
K
!
T
Rj
P
?
:
C
-
?
MDT
{
!
?
c
<
n
rf
?
zR
P
>
|
X
E
>
'
-
#
Sd
&
Q
?
V
:
-
?
0DT
!
?
}
X
d
o
?
T
P
>
X
E
oC
n
1
bfQ
?
P
:
z
.
?
-
DT
!
?
:
2
2
2
"
>
:
F
08
