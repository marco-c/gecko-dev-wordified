BINJS
[
GRAMMAR
]
identity
;
V
(
IdentifierExpression
StaticMemberExpression
&
ExpressionStatement
ThisExpression
CallExpression
"
BindingIdentifier
(
AssignmentExpression8StaticMemberAssignmentTarget
(
AssertedDeclaredName
AssertedParameterScope
AssertedVarScope
FormalParameters
BinaryExpression
VariableDeclarator
&
VariableDeclaration
>
AssertedPositionalParameterName4FunctionExpressionContents
LazyFunctionExpression0LiteralNumericExpression
NewExpression
ReturnStatement
AssertedBlockScope
Block
IfStatement4AssignmentTargetIdentifier
*
LiteralNullExpression0FunctionOrMethodContents
.
LazyFunctionDeclaration
UpdateExpression
ForStatement
.
LiteralStringExpression0LiteralBooleanExpression
*
ConditionalExpression
SwitchCase
UnaryExpression
WhileStatement0ComputedMemberExpression2AssertedScriptGlobalScope
<
ComputedMemberAssignmentTarget
DoWhileStatement
Script
SwitchStatement
[
STRINGS
]
identity
;
7
var
i
prototype
mark
Strength
c
v
strength
out
Direction
value
todo
!
=
+
+
BinaryConstraint
"
OrderedCollection
offset
scale
UnaryConstraint
s1
s2
v1
walkStrength
<
ScaleConstraint
direction
output
stay
=
=
Planner
add
constraints
size
v2
addConstraint
execute
name
src
NONE
index
myOutput
overridden
plan
superConstructor
Variable
at
call
determinedBy
elms
n
planner
strengthValue
&
&
Constraint
EditConstraint
dst
edits
ihn
isSatisfied
unsatisfied
Plan
StayConstraint
edit
inheritsFrom
sources
stronger
EqualityConstraint
FORWARD
REQUIRED
assertEq
change
determining
elm
input
next
removeConstraint
removeFromGraph
satisfied
str
var1
var2
+
WEAKEST
addToGraph
d
dests
first
last
markInputs
prev
recalculate
BACKWARD
Inheriter
PREFERRED
alert
cc
isInput
markUnsatisfied
removeFirst
shuper
skipped
u
!
-
>
NORMAL
STRONG_DEFAULT2addConstraintsConsumingTo
chainTest
chooseMethod
coll
deltaBlue
dest4extractPlanFromConstraints
incrementalAdd
"
incrementalRemove
initialValue
inputsKnown
msg
newMark
newValue
projectionTest
satisfy
weaker
weakestOf
*
|
|
Object
WEAK_DEFAULT
addPropagate
constraintAt
currentMark
"
destroyConstraint
length
makePlan
nextWeaker
pop
remove
&
removePropagateFrom
ArrayPCould
not
satisfy
a
required
constraint
!
"
Cycle
encountered
STONG_PREFERRED
normal
preferred
print
push
required
strongDefault
strongPreferred
strongest
weakDefault
weakest
/
<
=
[
TREE
]
identity
;
dRL
&
j
l
x
:
0
z
X
d
8
H6
#
~
"
8
6
(
V
8
.
6
(
<
>
"
%
Z
6
"
N
N
*
J
N
*
"
*
.
"
*
u
"
N
N
&
&
<
&
.
:
2
.
J
0
.
N
N
:
2N
.
:
2
<
&
.
:
2
8
N6
f
H
f
H
f
f
H
H
J
"
&
(
&
(
*
.
&
f
(
f
J
"
&
(
&
(
*
&
f
(
f
R
"
&
(
&
(
*
B
&
(
&
(
-
R
"
&
(
&
(
*
B
&
(
&
(
"
T
f
D
&
*
D
&
?
*
D
&
*
D
&
*
D
&
*
D
&
*
(
&
>
'
(
&
?
>
+
(
&
>
!
(
&
>
)
(
&
>
(
&
>
/
(
&
>
1
8
j
46
j
D
8
"
d
j
5
"
R
0F
t
.
0
8
>
*
4
4
R
^
0
R4
R
^
0F
d
>
*
R
j
D
"
0
t
d
j
"
"
*
8
r6
V
\
P
D
~
j
<
"
PD
d
"
h
P
P
t
"
*
(
"
4
"
*
P
f
"
P
P6F
0
P6
F
*
"
"
"
*
L
"
0
P4
P
8
z
N6
zV
\
z
~
z
F
"
8
l
N6
lV
\
l
~
l
"
"
*
l
F
"
(
L
&
&
?
F
&
?
8
6
V
\
*
B
2
L
D
~
j
"
0
8
*
.
2B
h
*
B
L
0
8
B
.
2B
h
*
*
L
0
*
B
.
2B
*
L
.
2B
B
R
"
*
D
BD
2
L
t
0
"
*
2
L
>
"
>
"
*
B
8
2
*
B
4
>
"
*
B
8
2
B
*
"
r
r
4
r
6
r60
6
F
.
"
2
L
v
"
*
8
6
8
^
4
r
"
0
*
4
*
0
B4
B
2
L8
0
6
J
"
J
"
2
L
"
"
0V
\
J
0
~
0
\
"
0V
\
"
D
D
0
|
"
0V
\
0
"
4
"
0
4
0
f
"
0V
\
"
0
F
"
0
8
2
.
B
*
"
.
*
3
B
"
0
"
r
r
4
r
6
h
h
r6
"
6
60
6
F
8
^
6
V
\
~
F
<
"
4
8
X
6
H
H
&
>
(
^
4
&
6
H
H
X
D
<
"
>
<
X
\
"
>
0
8
^
^
4
8
:
86
&
:
"
R
R
H
R4
2R
R
:
o
"
v
4
v
P
.
<
&
.
v
:
2
.
vZ
0
8
2
:
"
*
:
:
O
"
T
T
(
x
H
&
.
0
h
4
.
TD
4
4
*
T
:
"
>
>
(
<
&
.
>
:
2
.
>
Z
0
h
t
<
*
:
"
(
<
H
&
.
0
8
4
.
*
4
*
:
}
"
v
^
4
6
v
(
(
<
H
&
.
<
&
.
>
:
2
.
>
Z
0F
t
v
<
^
<
&
.
>
:
2
.
>
Z
0
h
t
.
<
4
*
v
:
"
^
>
<
&
.
:
2
.
Z
0
h
t
<
8
x
6
(
x
D
<
"
<
x
"
*
x
<
"
N
N
*
Z
N
x
F
"
<
&
.
:
2
.
F
8
6
b
b
|
p
H
T
2d
(
:
4
4
4
<
&
5
b
:
2
.
H
>
(
X
H0
4
(
0
8
&
2
0
8
b
2
2
(
z
|
(
l
p
(
p
<
|
T
d
p
<
&
.
&
Y
:
2
.
TF
8
6
b
b
n
"
J
2d
(
:
"
(
X
>
"
&
(
X
>
&
J4
n4
(
<
&
.
b
:
2
.
2J
(
X
>
J
2n
(
X
>
n
<
n
(
z
J
(
0
J
"
n
J
&
1
n
&
H
n
&
h
J
&
"
&
<
&
.
b
&
?
:
2
.
Z
&
&
&
<
&
.
b
&
?
:
2
.
Z
&
&
8
1
6
|
p
T
|
(
l
p
(
p
<
|
T
d
p
<
&
.
&
:
2
.
TF
|
d48
R6
&
Y
&
Y
