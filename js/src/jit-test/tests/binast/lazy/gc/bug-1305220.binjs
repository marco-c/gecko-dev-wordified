BINJS
[
GRAMMAR
]
identity
;
w
(
IdentifierExpression
CallExpression
&
ExpressionStatement
.
LiteralStringExpression2AssertedScriptGlobalScope
(
AssignmentExpression4AssignmentTargetIdentifier0LiteralNumericExpression
Script
[
STRINGS
]
identity
;
s
evalcxl
gczeal
(
10
2
)
;
k
=
{
[
Symbol
]
(
)
{
}
}
;
var
g
=
newGlobal
(
)
;
b
=
new
Debugger
;
g
.
h
=
function
(
)
{
g
.
oomAfterAllocations
(
1
)
;
}
;
g
.
eval
(
"
"
+
function
f
(
)
{
return
g
(
)
;
}
)
;
g
.
eval
(
"
"
+
function
g
(
)
{
return
h
(
)
;
}
)
;
g
.
eval
(
"
(
"
+
function
(
)
{
f
(
)
;
}
+
"
)
(
)
"
)
;
gczeal
newGlobal
[
TREE
]
identity
;
\
