BINJS
[
GRAMMAR
]
identity
;
M
<
(
IdentifierExpression
&
ExpressionStatement
.
LiteralStringExpression
CallExpression
BinaryExpression
"
BindingIdentifier
(
AssertedDeclaredName
AssertedBlockScope
(
AssignmentExpression4AssignmentTargetIdentifier
Block
IfStatement
&
VariableDeclaration
VariableDeclarator
"
AssertedBoundName
.
AssertedBoundNamesScope
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope
CatchClause
FormalParameters0FunctionOrMethodContents
.
LazyFunctionDeclaration
NewExpression
ReturnStatement
Script
ThrowStatement
"
TryCatchStatement
[
STRINGS
]
identity
;
_
4
"
assertSyntaxError
msg
var
exc
str
evil
+
-
~
Assertion
failed
:
expected
SyntaxError
but
no
exception
thrownXAssertion
failed
:
expected
SyntaxError
got
Error
SyntaxError
eval
for
yield
"
for
yield
(
;
;
)
{
}
2for
yield
(
var
i
in
o
)
{
}
*
for
yield
(
x
of
y
)
{
}
*
function
*
f
(
)
yield
70function
*
f
(
.
.
.
yield
)
{
}
.
function
*
f
(
[
yield
]
)
{
}
8function
*
f
(
x
=
yield
17
)
{
}
2function
*
f
(
x
=
yield
)
{
}
2function
*
f
(
{
yield
}
)
{
}
undefined
=
=
=
instanceof
[
TREE
]
identity
;
6
&
0
.
"
(
:
*
2
4
0
.
82
*
(
&
"
