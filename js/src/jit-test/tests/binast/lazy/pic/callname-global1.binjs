BINJS
[
GRAMMAR
]
identity
;
L
(
IdentifierExpression
&
ExpressionStatement
CallExpression
"
BindingIdentifier
(
AssertedDeclaredName0LiteralNumericExpression
AssertedBlockScope
AssertedParameterScope
AssertedVarScope
BinaryExpression
Block
FormalParameters0FunctionOrMethodContents
.
LazyFunctionDeclaration
ThisExpression
.
LiteralStringExpression
&
VariableDeclaration
VariableDeclarator4AssignmentTargetIdentifier0LiteralBooleanExpression8StaticMemberAssignmentTarget
UnaryExpression
UpdateExpression
"
AssertedBoundName
.
AssertedBoundNamesScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
(
AssignmentExpression
CatchClause8CompoundAssignmentExpression
ForStatement
IfStatement
*
LiteralNullExpression
ObjectExpression
Script
StaticMemberExpression
"
TryCatchStatement
[
STRINGS
]
identity
;
2
var
f1
assertEq
count
i
other
e
f
g2
self
function
g1
h
+
+
typeof
Math
TypeError
abs
eval
gc
(
)
;
h
=
g1
!
=
=
+
=
<
=
=
=
instanceof
[
TREE
]
identity
;
F6
"
"
8
.
*
8
<
*
*
?
4
&
J
>
"
4
.
&
.
"
8
&
:
2
0
(
(
0
(
B
D
H
"
b
