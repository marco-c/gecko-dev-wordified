BINJS
[
GRAMMAR
]
identity
;
[
T
(
IdentifierExpression0LiteralBooleanExpression
CallExpression
&
ExpressionStatement
DataProperty
&
LiteralPropertyName
StaticMemberExpression
BinaryExpression
.
LiteralStringExpression
"
BindingIdentifier
ObjectExpression
AssertedBlockScope
(
AssertedDeclaredName
Block
>
AssertedPositionalParameterName
(
AssignmentExpression4AssignmentTargetIdentifier
AssertedParameterScope
AssertedVarScope
FormalParameters
IfStatement0LiteralNumericExpression
VariableDeclarator
*
ConditionalExpression
ReturnStatement
&
VariableDeclaration0FunctionOrMethodContents
.
LazyFunctionDeclaration
.
EagerFunctionExpression4FunctionExpressionContents
"
AssertedBoundName
.
AssertedBoundNamesScope2AssertedScriptGlobalScope
CatchClause
<
ComputedMemberAssignmentTarget0ComputedMemberExpression
Directive
ForStatement
Script
"
TryCatchStatement
UpdateExpression
[
STRINGS
]
identity
;
f
+
strict
prop
refresh
var
checkProperty
orig
obj
options
desc
objType
i
assertEq
check
normalArgs
strictArgs
Object
writable
a
b
c
callee
configurable
enumerable
length
threw
defineProperty
shouldThrow
value
arguments
e
get0getOwnPropertyDescriptor
set
configurable
enumerable
get
set
threw
value
writable
"
normal
arguments
.
"
strict
arguments
.
undefined
use
strict
&
&
+
+
<
=
=
=
=
in
[
TREE
]
identity
;
o
NB
8
6
(
&
2
:
JZ
<
&
(
*
(
&
(
*
&
2
<
?
8
6
(
&
2
:
<
&
(
*
(
&
(
*
&
2
<
?
8
{
6
8
(
8
&
4
.
.
4
.
0
4
.
0
V
T8
1
6
(
&
4
"
B
4
.
4
P
F
H
D
>
>
>
"
4
4
8
N
*
b
X
2
"
B
*
d
:
:
:
P
J
D
D
L
"
"
R
0
0
H
.
.
F
*
\
.
*
"
0
6
"
0
*
"
0
6
"
0
*
"
0
6
"
.
2
2
2
2
L4
.
R
^
"
