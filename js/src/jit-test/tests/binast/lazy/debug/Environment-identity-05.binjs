BINJS
[
GRAMMAR
]
identity
;
(
IdentifierExpression
&
ExpressionStatement
CallExpression
"
BindingIdentifier
StaticMemberExpression
(
AssertedDeclaredName
.
LiteralStringExpression
&
VariableDeclaration
VariableDeclarator4AssignmentTargetIdentifier
AssertedBlockScope
(
AssignmentExpression
Block8CompoundAssignmentExpression
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope
BinaryExpression
DataProperty
FormalParameters4FunctionExpressionContents
IfStatement
LazyFunctionExpression0LiteralBooleanExpression
*
LiteralNullExpression
&
LiteralPropertyName
ObjectExpression
Script8StaticMemberAssignmentTarget
UnaryExpression
[
STRINGS
]
identity
;
var
frame
log
oldEnv
g
dbg
environment
+
=
0false1
Debugger
assertEq
evalffor
(
let
x
=
0
;
x
<
2
;
x
+
+
)
{
eval
(
"
"
)
;
debugger
;
}
gc
getVariable
newCompartment
newGlobal
&
onDebuggerStatement
x
!
=
=
=
[
TREE
]
identity
;
[
:
"
"
8
(
6
2
4
<
0
*
.
>
(
&
*
&
