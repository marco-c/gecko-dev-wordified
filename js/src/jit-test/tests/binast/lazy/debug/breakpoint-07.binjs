BINJS
[
GRAMMAR
]
identity
;
(
IdentifierExpression
BinaryExpression0LiteralNumericExpression
StaticMemberExpression
CallExpression
.
LiteralStringExpression
"
BindingIdentifier
&
ExpressionStatement
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator
4AssignmentTargetIdentifier0LiteralBooleanExpression
UpdateExpression
AssertedParameterScope
>
AssertedPositionalParameterName
AssertedVarScope
(
AssignmentExpression
DataProperty
ForStatement
FormalParameters4FunctionExpressionContents
LazyFunctionExpression
&
LiteralPropertyName
ObjectExpression
AssertedBlockScope2AssertedScriptGlobalScope
Block0ComputedMemberExpression
Script8StaticMemberAssignmentTarget
[
STRINGS
]
identity
;
T
var
+
g
*
lineno
i
offs
assertEq
hits
s
dbg
eval
frame
line0
src
+
+
f
gcd
length
>
return
a
;
<
return
gcd
(
b
a
)
;
if
(
a
>
b
)
"
if
(
c
=
=
=
0
)
return
gcd
(
c
a
)
;
&
var
c
=
b
%
a
;
Debugger
debugger
;
*
function
gcd
(
a
b
)
{
getLineOffsets
hit
newCompartment
newGlobal
&
onDebuggerStatement
return
script
setBreakpoint
var
line0
=
Error
(
)
.
lineNumber
;
}
<
<
=
>
=
[
TREE
]
identity
;
<
6
2
&
0
>
J
8
*
2
.
(
0
L
4
>
B
.
*
"
"
DF
(
&
:
84
(
N
H
:
2
&
0
<
.
4
*
"
&
P
"
6
"
?
&
R
2
