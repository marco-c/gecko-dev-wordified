BINJS
[
GRAMMAR
]
identity
;
(
IdentifierExpression
CallExpression
AssertedBlockScope
Block
StaticMemberExpression
"
BindingIdentifier
&
ExpressionStatement
BinaryExpression
.
LiteralStringExpression
(
AssertedDeclaredName
IfStatement0LiteralNumericExpression
UnaryExpression
&
VariableDeclaration
VariableDeclarator
"
AssertedBoundName
.
AssertedBoundNamesScope
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope
BreakStatement
CatchClause
FormalParameters0FunctionOrMethodContents
.
LazyFunctionDeclaration0LiteralBooleanExpression
NewExpression
Script
"
TryCatchStatement
WhileStatement
[
STRINGS
]
identity
;
w
0
lfVarx
lfcode
var
file
loadFile
push
lfVare
!
=
.
js
0
Array
evaluate
isNaN
length
newGlobal
(
"
1
"
)
.
eval
(
"
(
new
Debugger
)
.
addAllGlobalsAsDebuggees
(
)
;
"
)
;
shift
substr
undefined
!
&
&
-
=
=
[
TREE
]
identity
;
:
(
8
>
6
"
.
&
4
2
&
0
*
<
*
?
(
.
"
