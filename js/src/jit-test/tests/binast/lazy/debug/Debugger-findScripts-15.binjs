BINJS
[
GRAMMAR
]
identity
;
&
(
IdentifierExpression
CallExpression
StaticMemberExpression
(
AssertedDeclaredName
"
BindingIdentifier
&
VariableDeclaration
VariableDeclarator
&
ExpressionStatement0LiteralBooleanExpression
.
LiteralStringExpression2AssertedScriptGlobalScope
BinaryExpression
DataProperty0LiteralNumericExpression
&
LiteralPropertyName
NewExpression
ObjectExpression
Script
UnaryExpression
[
STRINGS
]
identity
;
k
*
var
dbg
g
fw
gw
s
Debugger
addDebuggee
assertEq
evaluate
f
findScripts
>
function
f
(
x
)
{
return
x
+
1
;
}
0getOwnPropertyDescriptor
indexOf
newCompartment
newGlobal
script
value
!
=
=
-
[
TREE
]
identity
;
"
&
"
(
?
