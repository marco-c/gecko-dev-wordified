BINJS
[
GRAMMAR
]
identity
;
g
8
(
IdentifierExpression
&
ExpressionStatement
CallExpression
StaticMemberExpression
.
LiteralStringExpression0LiteralNumericExpression
"
BindingIdentifier
(
AssertedDeclaredName
(
AssignmentExpression
DataProperty
&
LiteralPropertyName
ObjectExpression8StaticMemberAssignmentTarget
&
VariableDeclaration
VariableDeclarator
AssertedParameterScope
>
AssertedPositionalParameterName2AssertedScriptGlobalScope
AssertedVarScope4AssignmentTargetIdentifier
FormalParameters4FunctionExpressionContents
LazyFunctionExpression0LiteralBooleanExpression
NewExpression
Script
UpdateExpression
[
STRINGS
]
identity
;
2
g
eval
var
frame
hits
assertEq
dbg
f
x
evalWithBindings
return
y
Debugger
debugger
;
failxfunction
f
(
)
{
'
use
strict
'
;
eval
(
'
var
y
=
3
;
debugger
;
'
)
;
}
\
function
f
(
)
{
var
y
=
3
;
eval
(
'
debugger
;
'
)
;
}
6function
f
(
y
)
{
debugger
;
}
newCompartment
newGlobal
&
onDebuggerStatement6with
(
{
y
:
3
}
)
{
debugger
;
}
x
+
y
{
let
x
=
50
y
=
3
;
debugger
;
}
+
+
[
TREE
]
identity
;
Y
4
&
0
2
(
.
"
*
&
6
0
(
"
*
.
