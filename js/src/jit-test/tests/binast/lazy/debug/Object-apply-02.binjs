BINJS
[
GRAMMAR
]
identity
;
F
(
IdentifierExpression0LiteralNumericExpression
CallExpression
StaticMemberExpression
&
ExpressionStatement
"
BindingIdentifier
.
LiteralStringExpression
(
AssertedDeclaredName
(
AssignmentExpression
&
VariableDeclaration
VariableDeclarator
*
ConditionalExpression4AssignmentTargetIdentifier
ArrayExpression0LiteralBooleanExpression
*
LiteralNullExpression
AssertedParameterScope
AssertedVarScope0ComputedMemberExpression
FormalParameters
>
AssertedPositionalParameterName
BinaryExpression4FunctionExpressionContents
LazyFunctionExpression
DataProperty
&
LiteralPropertyName
ObjectExpression8StaticMemberAssignmentTarget2AssertedScriptGlobalScope0FunctionOrMethodContents
.
LazyFunctionDeclaration
NewExpression
Script
UnaryExpression
[
STRINGS
]
identity
;
X
cv
var
assertEq
arr
g
push
max
usingApply
apply
frame
call
return
a
dbg
ex
test
arguments
eval
hello
&
onDebuggerStatement
throw
world
0
1
2
Debugger
TypeError
assertThrowsInstanceOf
asserts
.
js
evalWithBindings
.
ex
instanceof
TypeError
f
(
Math
.
max
)
;
4function
f
(
)
{
debugger
;
}
join
length
libdir
load
newCompartment
newGlobal
sliceNvar
a
=
[
]
;
f
(
Array
.
prototype
.
push
a
)
;
+
-
/
in
[
TREE
]
identity
;
B
:
F
P
D
6
J
6
24H
"
>
0
>
)
<
"
*
(
8
&
0
S
.
"
*
(
&
"
0
"
0
0
TDR
?
?
"
?
"
"
4
0
>
.
"
(
(
2
"
<
8
&
0
.
"
*
(
&
&
?
?
?
*
*
V
(
(
8
:
6
24
"
N
B
L
.
&
