BINJS
[
GRAMMAR
]
identity
;
G
D
(
IdentifierExpression
&
ExpressionStatement
CallExpression
.
LiteralStringExpression
"
BindingIdentifier
StaticMemberExpression
AssertedParameterScope
AssertedVarScope
FormalParameters
(
AssertedDeclaredName4FunctionExpressionContents
LazyFunctionExpression
>
AssertedPositionalParameterName
(
AssignmentExpression4AssignmentTargetIdentifier
&
VariableDeclaration
VariableDeclarator8CompoundAssignmentExpression
ReturnStatement8StaticMemberAssignmentTarget
BinaryExpression
NewExpression2AssertedScriptGlobalScope
DataProperty0FunctionOrMethodContents
IfStatement
.
LazyFunctionDeclaration0LiteralBooleanExpression
&
LiteralPropertyName
ObjectExpression
Script
ThrowStatement
UnaryExpression
[
STRINGS
]
identity
;
5
X
var
f
g
log
test
assertEq
type
dbg
provocation
result
wasConstructing
c
eval
print
+
=
call
compliment
.
debugger
;
'
compliment
'
;
uneval
+
(
(
d
)
)
Debugger
TestComplete
constructing
d
evaluate
^
function
f
(
)
{
debugger
;
return
'
compliment
'
;
}
global
.
handleDebuggerStatement
handleEnterFrame
handlePop
newCompartment
newGlobal
object
&
onDebuggerStatement
onEnterFrame
onPop
provocation
:
return
type
:
typeof
[
TREE
]
identity
;
>
.
"
F
<
0
:
D8
"
0
6
?
2
"
"
*
&
T
*
&
P
(
J
>
6
6
(
L
*
4
(
N
B
L
.
R
(
"
4
BV
H
:
*
&
.
&
"
<
.
&
8
"
2
