BINJS
[
GRAMMAR
]
identity
;
[
D
(
IdentifierExpression
&
ExpressionStatement
.
LiteralStringExpression
CallExpression
"
BindingIdentifier
>
AssertedPositionalParameterName
AssertedParameterScope
AssertedVarScope
(
AssignmentExpression
FormalParameters4AssignmentTargetIdentifier4FunctionExpressionContents
LazyFunctionExpression8StaticMemberAssignmentTarget
StaticMemberExpression8CompoundAssignmentExpression
(
AssertedDeclaredName0LiteralBooleanExpression
&
VariableDeclaration
VariableDeclarator
BinaryExpression
*
LiteralNullExpression2AssertedScriptGlobalScope
DataProperty0FunctionOrMethodContents
.
LazyFunctionDeclaration
&
LiteralPropertyName
NewExpression
ObjectExpression
ReturnStatement
Script
ThrowStatement
UnaryExpression
[
STRINGS
]
identity
;
^
f
log
assertEq
dbg
var
eval
test
type
g
+
=
onEnterFrame
provocation
c
print
call
uneval
+
(
)
Debugger
TestComplete
d
eBeval
(
'
debugger
;
throw
\
'
mud
\
'
;
'
)
;
Jevaluate
(
'
debugger
;
throw
\
'
mud
\
'
;
'
)
;
f
(
)
;
fe
(
d
)
functionNfunction
f
(
)
{
debugger
;
throw
'
mud
'
;
}
global
handleDebugger
"
handleExtraFrames
handleFirstFrame
handlePop
"
handleSecondFrame
handleThirdFrame
mud
new
f
;
newCompartment
newGlobal
&
onDebuggerStatement
onPop
provocation
:
throw
type
:
typeof
[
TREE
]
identity
;
>
.
"
"
"
&
(
P
:
06N
&
(
8
(
4
'
2
"
*
Z
*
V
&
(
B
;
R
>
6
F
y
.
H
:
T
D
P
&
X
J
<
"
B
\
8
6
:
4
L
0
<
2
*
