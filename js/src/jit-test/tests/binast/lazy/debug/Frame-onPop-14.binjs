BINJS
[
GRAMMAR
]
identity
;
]
F
(
IdentifierExpression
&
ExpressionStatement
"
BindingIdentifier
.
LiteralStringExpression
CallExpression
4AssignmentTargetIdentifier
StaticMemberExpression
(
AssertedDeclaredName
(
AssignmentExpression0LiteralNumericExpression
&
VariableDeclaration
VariableDeclarator
AssertedParameterScope
>
AssertedPositionalParameterName
AssertedVarScope
BinaryExpression8CompoundAssignmentExpression
FormalParameters4FunctionExpressionContents
LazyFunctionExpression8StaticMemberAssignmentTarget
AssertedBlockScope2AssertedScriptGlobalScope
Block0ComputedMemberExpression
DataProperty
IfStatement0LiteralBooleanExpression
&
LiteralPropertyName
NewExpression
ObjectExpression
Script
ThisExpression
UpdateExpression
[
STRINGS
]
identity
;
)
>
var
count
log
g
assertEq
frame
c
dbg
eval
+
=
)
Debugger
arguments
call
d
dddddddddd
)
9dddddddddd
<
for
(
i
=
0
;
i
<
20
;
i
+
+
)
f
(
i
)
;
Zfunction
f
(
n
)
{
debugger
;
return
'
snifter
'
;
}
handleDebug
handlePop
newCompartment
newGlobal
&
onDebuggerStatement
onPop
return
snifter
type
+
+
+
=
=
[
TREE
]
identity
;
#
.
>
4
:
*
8
<
*
.
(
&
&
"
6
D
:
6
<
0
*
0
(
(
j
&
"
8
2
B
2
4
"
4
