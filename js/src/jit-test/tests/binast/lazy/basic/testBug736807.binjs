BINJS
[
GRAMMAR
]
identity
;
+
*
0LiteralNumericExpression
CallExpression
(
IdentifierExpression
AssertedParameterScope
AssertedVarScope
&
ExpressionStatement
FormalParameters
ArrayExpression
(
AssertedDeclaredName2AssertedScriptGlobalScope
"
BindingIdentifier4FunctionExpressionContents0FunctionOrMethodContents
.
LazyFunctionDeclaration
LazyFunctionExpression
.
LiteralStringExpression
NewExpression
ObjectExpression
Script
StaticMemberExpression
[
STRINGS
]
identity
;
f
try
{
if
(
typeof
gczeal
=
=
=
"
function
"
)
gczeal
(
2
1
)
;
throw
new
Error
(
)
;
}
catch
(
e
)
{
gc
(
)
;
assertEq
(
"
"
+
e
"
Error
"
)
;
}
RegExp
eval
newGlobal
var
[
TREE
]
identity
;
)
&
0
(
?
?
"
