BINJS
[
GRAMMAR
]
identity
;
a
(
IdentifierExpression
CallExpression
.
LiteralStringExpression
&
ExpressionStatement
StaticMemberExpression
(
AssignmentExpression
NewExpression8StaticMemberAssignmentTarget0LiteralNumericExpression
(
AssertedDeclaredName2AssertedScriptGlobalScope
"
BindingIdentifier
Script
&
VariableDeclaration
VariableDeclarator
[
STRINGS
]
identity
;
g
assertEq
eval
Function
f
clone
(
f
)
(
)
(
9
)
var
b
c
.
clone
(
f
)
(
)
(
'
123ponies
'
)
.
clone
(
f
)
(
)
(
'
12a
'
'
foo
'
)
clone
(
f
)
(
)
(
'
a
'
)
clone
(
f
)
(
)
(
3
)
clone
(
f
)
(
)
(
null
)
newGlobal
return
function
(
x
)
{
return
x
}
;
breturn
function
(
x
)
{
return
x
.
search
(
/
ponies
/
)
}
;
return
function
(
x
)
{
switch
(
x
)
{
case
"
a
"
:
return
"
b
"
;
case
null
:
return
"
c
"
}
}
;
breturn
function
(
x
)
{
{
let
y
=
x
+
1
;
return
y
}
}
;
preturn
function
(
x
)
{
{
let
y
=
x
z
=
1
;
return
y
+
z
}
}
;
|
return
function
(
x
y
)
{
return
x
.
search
(
/
a
/
)
+
y
.
search
(
/
b
/
)
}
;
undefined
[
TREE
]
identity
;
"
&
(
?
"
*
