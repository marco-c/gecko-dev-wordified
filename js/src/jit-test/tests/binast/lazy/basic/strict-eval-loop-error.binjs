BINJS
[
GRAMMAR
]
identity
;
(
IdentifierExpression
CallExpression
&
ExpressionStatement
.
LiteralStringExpression
(
AssertedDeclaredName2AssertedScriptGlobalScope
"
BindingIdentifier0LiteralNumericExpression
Script
UnaryExpression
&
VariableDeclaration
VariableDeclarator
[
STRINGS
]
identity
;
k
COUNT
var
'
use
strict
'
;
for
(
let
j
=
0
;
j
<
COUNT
;
j
+
+
)
;
try
{
x
;
throw
new
Error
(
)
;
}
catch
(
e
)
{
if
(
!
(
e
instanceof
ReferenceError
)
)
throw
e
;
}
assertEq
eval
j
undefined
typeof
[
TREE
]
identity
;
V
"
