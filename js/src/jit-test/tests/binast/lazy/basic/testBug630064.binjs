BINJS
[
GRAMMAR
]
identity
;
D
(
IdentifierExpression
"
BindingIdentifier
CallExpression
(
AssertedDeclaredName
&
ExpressionStatement
AssertedBlockScope
Block
.
LiteralStringExpression
StaticMemberExpression
&
VariableDeclaration
VariableDeclarator
AssertedParameterScope
AssertedVarScope
FormalParameters0FunctionOrMethodContents
.
LazyFunctionDeclaration
>
AssertedPositionalParameterName
BinaryExpression
IfStatement
NewExpression
"
AssertedBoundName
.
AssertedBoundNamesScope2AssertedScriptGlobalScope4AssignmentTargetIdentifier
BreakStatement
CatchClause0ComputedMemberExpression
ForInStatement0LiteralBooleanExpression
ReturnStatement
Script
"
TryCatchStatement
WhileStatement
[
STRINGS
]
identity
;
6
var
code
x
file
files
push
evaluate
loadFiles
optionsClear
optionsReset
printBugNumber
x0
Array
BUGNUMBER
e
i
num
=
=
c
printBugNumber
(
BUGNUMBER
)
;
function
gen
(
)
{
try
{
yield
0
;
}
finally
{
}
}
var
iter1
=
gen
(
iter1
=
"
NaN
"
new
gen
(
gen
)
)
;
gc
(
)
;
eval
foo
shift
split
undefined
[
TREE
]
identity
;
>
.
&
"
<
.
B
2
*
(
(
(
B
:
0
&
"
&
"
4
2
"
80
6
4
*
