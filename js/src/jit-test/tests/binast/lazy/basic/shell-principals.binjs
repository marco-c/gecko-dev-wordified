BINJS
[
GRAMMAR
]
identity
;
(
IdentifierExpression
&
ExpressionStatement
CallExpression
StaticMemberExpression0LiteralNumericExpression
(
AssignmentExpression
.
LiteralStringExpression
BinaryExpression
"
BindingIdentifier8StaticMemberAssignmentTarget
(
AssertedDeclaredName
&
VariableDeclaration
VariableDeclarator4AssignmentTargetIdentifier0ComputedMemberExpression
DataProperty
&
LiteralPropertyName
ObjectExpression
>
AssertedPositionalParameterName
UnaryExpression
UpdateExpression
AssertedParameterScope2AssertedScriptGlobalScope
AssertedVarScope
ForStatement
FormalParameters0FunctionOrMethodContents
IfStatement
.
LazyFunctionDeclaration
.
LiteralRegExpExpression
Script
[
STRINGS
]
identity
;
Z
var
low
mid
split
eval
high
check
expected
i
count
length
stack
+
assertEq
newGlobal
principal
-
b
c
d
e
f
g
h
slice
*
+
+
(
.
)
?
.
*
\
n
)
against
:
a
check
(
nfunction
a
(
)
{
check
(
"
a
"
Error
(
)
.
stack
)
;
b
(
)
;
}
nfunction
b
(
)
{
check
(
"
b
"
Error
(
)
.
stack
)
;
c
(
)
;
}
nfunction
c
(
)
{
check
(
"
cba
"
Error
(
)
.
stack
)
;
d
(
)
;
}
nfunction
d
(
)
{
check
(
"
dcba
"
Error
(
)
.
stack
)
;
e
(
)
;
}
nfunction
e
(
)
{
check
(
"
ecba
"
Error
(
)
.
stack
)
;
f
(
)
;
}
nfunction
f
(
)
{
check
(
"
fb
"
Error
(
)
.
stack
)
;
g
(
)
;
}
nfunction
g
(
)
{
check
(
"
gfecba
"
Error
(
)
.
stack
)
;
h
(
)
;
}
nfunction
h
(
)
{
check
(
"
hgfedcba
"
Error
(
)
.
stack
)
;
}
print
undefined
uneval
<
=
=
=
[
TREE
]
identity
;
5
>
.
.
:
6
&
&
4
0
P
>
T
:
*
4
<
860
(
?
8
X
?
R
0
(
2
2
V
*
4
2
?
"
"
"
/
A
B
D
F
H
J
L
N
"
"
&
&
(
(
*
*
.
.
<
