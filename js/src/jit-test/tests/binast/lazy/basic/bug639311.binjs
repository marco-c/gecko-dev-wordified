BINJS
[
GRAMMAR
]
identity
;
4
&
ExpressionStatement
CallExpression
(
IdentifierExpression
AssertedBlockScope
Block
.
LiteralStringExpression
StaticMemberExpression
"
AssertedBoundName
.
AssertedBoundNamesScope
"
BindingIdentifier
CatchClause
"
TryCatchStatement
AssertedParameterScope2AssertedScriptGlobalScope
AssertedVarScope
(
AssignmentExpression4AssignmentTargetIdentifier
.
EagerFunctionExpression
ForStatement
FormalParameters4FunctionExpressionContents0LiteralNumericExpression
Script
ThisExpression
UnaryExpression
[
STRINGS
]
identity
;
e
gc
Reflect
parse
Math
Reflparse
a
>
for
(
var
a
;
a
;
j
)
{
if
(
a
%
2
=
=
0
)
{
c
(
)
}
}
j
{
let
x
;
}
delete
[
TREE
]
identity
;
.
*
(
&
"
2
0
