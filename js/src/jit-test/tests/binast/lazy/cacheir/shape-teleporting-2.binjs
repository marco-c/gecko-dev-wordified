BINJS
[
GRAMMAR
]
identity
;
{
<
(
IdentifierExpression
"
BindingIdentifier
&
ExpressionStatement
(
AssertedDeclaredName
CallExpression
NewExpression
.
LiteralStringExpression
StaticMemberExpression
&
VariableDeclaration
VariableDeclarator
(
AssignmentExpression
AssertedParameterScope
AssertedVarScope
FormalParameters0FunctionOrMethodContents
.
LazyFunctionDeclaration4AssignmentTargetIdentifier8StaticMemberAssignmentTarget
>
AssertedPositionalParameterName0LiteralNumericExpression
AssertedBlockScope2AssertedScriptGlobalScope
BinaryExpression
Block
ForStatement
ReturnStatement
Script
ThisExpression
UpdateExpression
[
STRINGS
]
identity
;
2
var
name
B
B1
B2
A
C
getName
C1
Object
assertEq
i
setPrototypeOf
1
2
A1
A2
C2
o
prototype
0
A0
B0
+
+
<
[
TREE
]
identity
;
6
"
*
4
&
8
&
"
*
(
&
"
"
"
0
&
4
2
(
.
0
(
Y
:
.
"
0
*
