/
*
-
*
-
Mode
:
C
+
+
;
tab
-
width
:
8
;
indent
-
tabs
-
mode
:
nil
;
c
-
basic
-
offset
:
4
-
*
-
*
vim
:
set
ts
=
4
sw
=
4
et
tw
=
79
:
*
*
*
*
*
*
*
BEGIN
LICENSE
BLOCK
*
*
*
*
*
*
Version
:
MPL
1
.
1
/
GPL
2
.
0
/
LGPL
2
.
1
*
*
The
contents
of
this
file
are
subject
to
the
Mozilla
Public
License
Version
*
1
.
1
(
the
"
License
"
)
;
you
may
not
use
this
file
except
in
compliance
with
*
the
License
.
You
may
obtain
a
copy
of
the
License
at
*
http
:
/
/
www
.
mozilla
.
org
/
MPL
/
*
*
Software
distributed
under
the
License
is
distributed
on
an
"
AS
IS
"
basis
*
WITHOUT
WARRANTY
OF
ANY
KIND
either
express
or
implied
.
See
the
License
*
for
the
specific
language
governing
rights
and
limitations
under
the
*
License
.
*
*
The
Original
Code
is
Mozilla
Communicator
client
code
released
*
March
31
1998
.
*
*
The
Initial
Developer
of
the
Original
Code
is
*
Netscape
Communications
Corporation
.
*
Portions
created
by
the
Initial
Developer
are
Copyright
(
C
)
1998
*
the
Initial
Developer
.
All
Rights
Reserved
.
*
*
Contributor
(
s
)
:
*
David
Anderson
<
danderson
mozilla
.
com
>
*
*
Alternatively
the
contents
of
this
file
may
be
used
under
the
terms
of
*
either
of
the
GNU
General
Public
License
Version
2
or
later
(
the
"
GPL
"
)
*
or
the
GNU
Lesser
General
Public
License
Version
2
.
1
or
later
(
the
"
LGPL
"
)
*
in
which
case
the
provisions
of
the
GPL
or
the
LGPL
are
applicable
instead
*
of
those
above
.
If
you
wish
to
allow
use
of
your
version
of
this
file
only
*
under
the
terms
of
either
the
GPL
or
the
LGPL
and
not
to
allow
others
to
*
use
your
version
of
this
file
under
the
terms
of
the
MPL
indicate
your
*
decision
by
deleting
the
provisions
above
and
replace
them
with
the
notice
*
and
other
provisions
required
by
the
GPL
or
the
LGPL
.
If
you
do
not
delete
*
the
provisions
above
a
recipient
may
use
your
version
of
this
file
under
*
the
terms
of
any
one
of
the
MPL
the
GPL
or
the
LGPL
.
*
*
*
*
*
*
*
END
LICENSE
BLOCK
*
*
*
*
*
*
/
#
include
"
ion
/
LIR
.
h
"
#
include
"
ion
/
MIR
.
h
"
#
include
"
ion
/
MIRGraph
.
h
"
#
include
"
Lowering
-
shared
.
h
"
#
include
"
Lowering
-
shared
-
inl
.
h
"
using
namespace
js
;
using
namespace
ion
;
bool
LIRGeneratorShared
:
:
visitConstant
(
MConstant
*
ins
)
{
const
Value
&
v
=
ins
-
>
value
(
)
;
switch
(
ins
-
>
type
(
)
)
{
case
MIRType_Boolean
:
return
define
(
new
LInteger
(
v
.
toBoolean
(
)
)
ins
)
;
case
MIRType_Int32
:
return
define
(
new
LInteger
(
v
.
toInt32
(
)
)
ins
)
;
case
MIRType_String
:
return
define
(
new
LPointer
(
v
.
toString
(
)
)
ins
)
;
case
MIRType_Object
:
return
define
(
new
LPointer
(
&
v
.
toObject
(
)
)
ins
)
;
default
:
/
/
Constants
of
special
types
(
undefined
null
)
should
never
flow
into
/
/
here
directly
.
Operations
blindly
consuming
them
require
a
Box
.
JS_NOT_REACHED
(
"
unexpected
constant
type
"
)
;
return
false
;
}
return
true
;
}
bool
LIRGeneratorShared
:
:
defineTypedPhi
(
MPhi
*
phi
size_t
lirIndex
)
{
LPhi
*
lir
=
current
-
>
getPhi
(
lirIndex
)
;
uint32
vreg
=
getVirtualRegister
(
)
;
if
(
vreg
>
=
MAX_VIRTUAL_REGISTERS
)
return
false
;
phi
-
>
setVirtualRegister
(
vreg
)
;
lir
-
>
setDef
(
0
LDefinition
(
vreg
LDefinition
:
:
TypeFrom
(
phi
-
>
type
(
)
)
)
)
;
return
annotate
(
lir
)
;
}
void
LIRGeneratorShared
:
:
lowerTypedPhiInput
(
MPhi
*
phi
uint32
inputPosition
LBlock
*
block
size_t
lirIndex
)
{
MDefinition
*
operand
=
phi
-
>
getOperand
(
inputPosition
)
;
LPhi
*
lir
=
block
-
>
getPhi
(
lirIndex
)
;
lir
-
>
setOperand
(
inputPosition
LUse
(
operand
-
>
virtualRegister
(
)
LUse
:
:
ANY
)
)
;
}
