/
*
-
*
-
Mode
:
C
+
+
;
tab
-
width
:
8
;
indent
-
tabs
-
mode
:
nil
;
c
-
basic
-
offset
:
4
-
*
-
*
vim
:
set
ts
=
4
sw
=
4
et
tw
=
79
:
*
*
*
*
*
*
*
BEGIN
LICENSE
BLOCK
*
*
*
*
*
*
Version
:
MPL
1
.
1
/
GPL
2
.
0
/
LGPL
2
.
1
*
*
The
contents
of
this
file
are
subject
to
the
Mozilla
Public
License
Version
*
1
.
1
(
the
"
License
"
)
;
you
may
not
use
this
file
except
in
compliance
with
*
the
License
.
You
may
obtain
a
copy
of
the
License
at
*
http
:
/
/
www
.
mozilla
.
org
/
MPL
/
*
*
Software
distributed
under
the
License
is
distributed
on
an
"
AS
IS
"
basis
*
WITHOUT
WARRANTY
OF
ANY
KIND
either
express
or
implied
.
See
the
License
*
for
the
specific
language
governing
rights
and
limitations
under
the
*
License
.
*
*
The
Original
Code
is
Mozilla
Communicator
client
code
released
*
March
31
1998
.
*
*
The
Initial
Developer
of
the
Original
Code
is
*
Netscape
Communications
Corporation
.
*
Portions
created
by
the
Initial
Developer
are
Copyright
(
C
)
1998
*
the
Initial
Developer
.
All
Rights
Reserved
.
*
*
Contributor
(
s
)
:
*
David
Anderson
<
danderson
mozilla
.
com
>
*
*
Alternatively
the
contents
of
this
file
may
be
used
under
the
terms
of
*
either
of
the
GNU
General
Public
License
Version
2
or
later
(
the
"
GPL
"
)
*
or
the
GNU
Lesser
General
Public
License
Version
2
.
1
or
later
(
the
"
LGPL
"
)
*
in
which
case
the
provisions
of
the
GPL
or
the
LGPL
are
applicable
instead
*
of
those
above
.
If
you
wish
to
allow
use
of
your
version
of
this
file
only
*
under
the
terms
of
either
the
GPL
or
the
LGPL
and
not
to
allow
others
to
*
use
your
version
of
this
file
under
the
terms
of
the
MPL
indicate
your
*
decision
by
deleting
the
provisions
above
and
replace
them
with
the
notice
*
and
other
provisions
required
by
the
GPL
or
the
LGPL
.
If
you
do
not
delete
*
the
provisions
above
a
recipient
may
use
your
version
of
this
file
under
*
the
terms
of
any
one
of
the
MPL
the
GPL
or
the
LGPL
.
*
*
*
*
*
*
*
END
LICENSE
BLOCK
*
*
*
*
*
*
/
#
ifndef
jsion_cpu_x64_assembler_h__
#
define
jsion_cpu_x64_assembler_h__
#
include
"
ion
/
shared
/
Assembler
-
shared
.
h
"
namespace
js
{
namespace
ion
{
static
const
Register
rcx
=
{
JSC
:
:
X86Registers
:
:
ecx
}
;
static
const
Register
rbp
=
{
JSC
:
:
X86Registers
:
:
ebp
}
;
static
const
Register
JSReturnReg
=
rcx
;
class
Operand
{
public
:
enum
Kind
{
REG
REG_DISP
FPREG
}
;
Kind
kind_
:
2
;
int32
base_
:
5
;
int32
disp_
;
public
:
explicit
Operand
(
const
Register
&
reg
)
:
kind_
(
REG
)
base_
(
reg
.
code
(
)
)
{
}
explicit
Operand
(
const
FloatRegister
&
reg
)
:
kind_
(
FPREG
)
base_
(
reg
.
code
(
)
)
{
}
Operand
(
const
Register
&
reg
int32
disp
)
:
kind_
(
REG_DISP
)
base_
(
reg
.
code
(
)
)
disp_
(
disp
)
{
}
Kind
kind
(
)
const
{
return
kind_
;
}
Register
reg
(
)
const
{
JS_ASSERT
(
kind
(
)
=
=
REG
)
;
return
Register
:
:
FromCode
(
base_
)
;
}
FloatRegisters
:
:
Code
fpu
(
)
const
{
JS_ASSERT
(
kind
(
)
=
=
FPREG
)
;
return
(
FloatRegisters
:
:
Code
)
base_
;
}
int32
displacement
(
)
const
{
JS_ASSERT
(
kind
(
)
=
=
REG_DISP
)
;
return
disp_
;
}
}
;
}
/
/
namespace
js
}
/
/
namespace
ion
#
include
"
ion
/
shared
/
Assembler
-
x86
-
shared
.
h
"
namespace
js
{
namespace
ion
{
class
Assembler
:
public
AssemblerX86Shared
{
public
:
void
movq
(
ImmWord
word
const
Register
&
dest
)
{
masm
.
movq_i64r
(
word
.
value
dest
.
code
(
)
)
;
}
void
movq
(
ImmGCPtr
ptr
const
Register
&
dest
)
{
masm
.
movq_i64r
(
ptr
.
value
dest
.
code
(
)
)
;
}
}
;
}
/
/
namespace
js
}
/
/
namespace
ion
#
endif
/
/
jsion_cpu_x64_assembler_h__
