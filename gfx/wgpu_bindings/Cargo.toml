[
package
]
name
=
"
wgpu_bindings
"
version
=
"
0
.
1
.
0
"
authors
=
[
"
Dzmitry
Malyshau
<
kvark
mozilla
.
com
>
"
"
Joshua
Groves
<
josh
joshgroves
.
com
>
"
]
edition
=
"
2018
"
license
=
"
MPL
-
2
.
0
"
publish
=
false
[
lib
]
[
features
]
default
=
[
]
[
dependencies
.
wgc
]
package
=
"
wgpu
-
core
"
git
=
"
https
:
/
/
github
.
com
/
gfx
-
rs
/
wgpu
"
rev
=
"
332cd0325da52675432830870584ec9766679c34
"
#
Note
:
"
replay
"
shouldn
'
t
ideally
be
needed
#
but
it
allows
us
to
serialize
everything
across
IPC
.
features
=
[
"
replay
"
"
trace
"
"
serial
-
pass
"
"
strict_asserts
"
"
wgsl
"
]
#
We
want
the
wgpu
-
core
Metal
backend
on
macOS
and
iOS
.
#
(
We
should
consider
also
enabling
"
vulkan
"
for
Vulkan
Portability
.
)
[
target
.
'
cfg
(
any
(
target_os
=
"
macos
"
target_os
=
"
ios
"
)
)
'
.
dependencies
.
wgc
]
package
=
"
wgpu
-
core
"
git
=
"
https
:
/
/
github
.
com
/
gfx
-
rs
/
wgpu
"
rev
=
"
332cd0325da52675432830870584ec9766679c34
"
features
=
[
"
metal
"
]
#
We
want
the
wgpu
-
core
Direct3D
backends
on
Windows
.
[
target
.
'
cfg
(
windows
)
'
.
dependencies
.
wgc
]
package
=
"
wgpu
-
core
"
git
=
"
https
:
/
/
github
.
com
/
gfx
-
rs
/
wgpu
"
rev
=
"
332cd0325da52675432830870584ec9766679c34
"
features
=
[
"
dx11
"
"
dx12
"
]
#
We
want
the
wgpu
-
core
Vulkan
backend
on
Linux
and
Windows
.
[
target
.
'
cfg
(
any
(
windows
all
(
unix
not
(
any
(
target_os
=
"
macos
"
target_os
=
"
ios
"
)
)
)
)
)
'
.
dependencies
.
wgc
]
package
=
"
wgpu
-
core
"
git
=
"
https
:
/
/
github
.
com
/
gfx
-
rs
/
wgpu
"
rev
=
"
332cd0325da52675432830870584ec9766679c34
"
features
=
[
"
vulkan
"
]
[
dependencies
.
wgt
]
package
=
"
wgpu
-
types
"
git
=
"
https
:
/
/
github
.
com
/
gfx
-
rs
/
wgpu
"
rev
=
"
332cd0325da52675432830870584ec9766679c34
"
[
dependencies
.
wgh
]
package
=
"
wgpu
-
hal
"
git
=
"
https
:
/
/
github
.
com
/
gfx
-
rs
/
wgpu
"
rev
=
"
332cd0325da52675432830870584ec9766679c34
"
[
target
.
'
cfg
(
windows
)
'
.
dependencies
]
d3d12
=
"
0
.
7
.
0
"
winapi
=
"
0
.
3
"
[
dependencies
]
bincode
=
"
1
"
log
=
"
0
.
4
"
parking_lot
=
"
0
.
12
"
serde
=
"
1
"
nsstring
=
{
path
=
"
.
.
/
.
.
/
xpcom
/
rust
/
nsstring
"
}
static_prefs
=
{
path
=
"
.
.
/
.
.
/
modules
/
libpref
/
init
/
static_prefs
"
}
