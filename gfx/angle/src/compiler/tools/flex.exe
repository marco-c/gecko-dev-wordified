MZ
!
L
!
This
program
cannot
be
run
in
DOS
mode
.
PE
L
4
0
<
P
p
(
0
4
.
text
;
<
.
rdata
i
P
.
data
D
B
.
idata
.
reloc
|
7
0
8
B
SV
\
WUS
^
\
B
B
|
3
~
5
B
3
;
tOB
;
|
t
95
B
j
B
B
B
t
B
PQ
>
h
B
E
\
B
B
1
]
_
^
[
d
d
B
B
9
B
cj
B
B
d
B
t
B
PQ
g
B
\
B
B
j
QR
g
B
|
B
\
B
j
QR
g
|
B
=
B
u
B
B
B
B
\
B
D
A
B
\
B
B
|
B
B
d
|
B
D
SV
t
WU
F
H
F
x
[
Vj
[
3
9
B
|
}
F
\
H
F
x
Vj
VS
f
P
C
;
B
}
}
u
C
9D
}
P
e
Ph0
A
V
N
x
Vj
C
;
B
f
F
H
F
x
]
_
]
^
[
Vj
]
]
_
^
[
=
<
B
Vt
B
t
<
t
t
=
<
B
B
<
uy
x
B
=
B
tjV
B
h8
A
P
B
VP
D
B
PQ
B
I
B
y
|
^
B
B
Pj
C
^
SVW
9
\
U
|
w
T
t
|
B
h
C
t
*
0
B
<
u
u
;
|
F
u
E
;
~
C
;
\
~
]
_
^
[
B
QhX
A
]
_
^
[
L
l
B
SV
B
W3
U
|
T
|
h
C
B
l
;
r
l
9
]
t
;
}
;
}
;
s
_
F
Iu
D
VP
;
Z
ht
A
W
Q
;
|
H
3
+
3
+
u
G
H
G
x
Wj
D
CPh
A
W
;
}
G
H
G
x
]
_
^
[
Wj
]
_
^
[
=
B
VW
~
'
3
B
B
3
+
I
D4
u
h
A
V
D
PV
8
=
B
~
L
B
9
H
Q
u
h
A
V
H
D
PV
F
H
F
x
_
^
Vj
_
^
I
D
=
4
A
SVWU
8u
j
B
P
W
B
4
A
3
\
\
D
4
t
D
\
D
|
D
C
0
<
D
C
;
B
|
?
j
t
B
B
B
PV
)
b
B
B
j
PQ
b
B
B
D
C
}
C
t
D
D
D
l
D
L
T
t
D
q
D
B
D
-
L
B
T
|
C
}
<
C
;
B
|
?
j
t
B
B
B
PV
7a
B
B
j
PQ
a
B
B
C
}
C
t
D
4
D
L
u
L
B
<
tOG
;
=
B
|
?
j
t
B
B
B
PV
B
B
j
PQ
B
l
C
L
C
<
C
;
B
|
?
j
t
B
B
B
PV
;
B
B
j
PQ
"
B
B
C
}
C
t
D
4
D
L
u
L
B
<
tOG
;
=
B
|
?
j
t
B
B
B
PV
_
B
B
j
PQ
_
B
l
D
D
9
\
|
9
B
(
C
}
}
h
A
W
Ku
D
0
T
<
L
8
D
8
T
]
_
^
[
d
B
j
B
P
B
Q
t
B
^
B
8
B
B
j
QR
^
B
B
8
B
j
QR
^
B
B
B
j
QR
^
B
B
B
j
QR
x
^
B
l
B
B
j
QR
[
^
B
B
l
B
j
QR
>
^
l
B
B
t
j
B
PQ
^
l
B
P
S
p
B
V
WUj
P
S
D
B
j
Q
R
3
D
D
(
9
B
|
B
T
B
P
3
9
p
B
|
D
A9
p
B
}
=
B
t
#
B
H
Q
h
B
h
A
=
B
ut
B
9
B
u
^
B
+
B
=
B
t
*
u
*
9
B
|
;
B
t
;
B
~
t
j
B
P
Q
l
B
=
B
t6
=
B
|
B
|
LA3
D
Lj
j
P
g
B
y
=
B
tp
=
l
B
B
u
=
P
B
D
D
P
aA
u
aA
Ph
aA
H
[
h8aA
[
|
~
|
j
6W
Ou
kT
h
aA
[
B
D
0
;
3
|
3
+
#
3
+
;
u
+
B
D
&
+
B
B
R
R
b
L
T
F
D
4PQ
D
RPV
L
T
(
D
4Q
L
P
D
RQPV
t8
D
L
B
B
D
9
C
t
;
~
L
P
T
QRV
E9l
0
&
=
B
u8
D
h
B
j
j
Pj
V
u
hHaA
S
B
D
0
D
|
D
D
=
B
|
|
P3
B
l
B
D
(
L
(
=
B
L
B
T
H
T
Dt
QhtaA
h
B
P
T
T
DP
D
LQR
P
A
9
B
z
D
<
<
T
8
M
<
P
D
DV
L
LSPQ
L
D
T
D
(
D
Q
L
RPQV
L
L
T
(
D
4Q
L
P
D
RQPV
:
t9
D
L
B
D
B
=
C
t
~
T
Q
L
QRV
=
=
B
D
8
D
<
Lt
PSh
aA
h
B
D
<
D
<
B
L
8
D
X
\
C
=
B
l
L
l
<
Lt
USh
aA
h
B
H
3
\
A9
(
u
X
B
<
P
D
C
;
B
=
d
B
tK
=
B
uB
P
u
:
t
D
t
:
u
L
A
;
v
D
L
0
l
B
9L
~
D
L
L
PQ
Q
=
l
B
t
#
B
\
l
B
T
L
B
D
L
=
B
tlh
aA
oW
B
9D
u
B
P
R
|
~
|
P
\
K
u
D
P
R
Ku
O
h
aA
W
=
B
t
D
L
T
LPQR
P
j
B
9D
u
D
h
j
j
P
G3
3
|
|
#
L
X
;
}
\
Iu
D
W
L
R
T
TPQR
D
;
D
(
7
=
B
t
O
Y
=
B
uP
=
C
~
=
3
C
C
B
R
B
P
P
B
SQ
C
9
=
C
D
P
V
]
_
^
[
P
=
B
D
D
SVWU
|
\
B
L
9
0u
^
B
9
0uN
l
B
|
0u
SW
1L
D
;
|
?
O
U
9
u
;
}
;
|
#
B
T
B
D
L
;
B
~
"
D
0
L
]
X
B
_
3
^
[
|
\
B
B
9
B
|
5
B
j
C
P
J
l
B
|
u
SW
yK
|
#
-
l
B
l
H
T
u
B
L
|
(
B
u
B
=
<
B
B
=
<
B
tl
\
WS
J
G
j
P
I
B
|
8
+
B
9
p
B
|
-
B
D
Iu
B
<
=
p
B
A
|
\
;
~
Ou
B
9
p
B
|
B
D
0
]
_
0
^
[
d
d
L
SVW3
U
D
|
(
L
D
D
L
B
C
L
}
w
B
-
\
B
\
|
B
<
t
.
3
-
B
3
D
u
B
;
|
mtwB
;
|
d3
~
j
-
B
3
D
u
B
;
|
OtAB
;
|
F
A
|
Z
=
d
B
t
h
aA
L
t
B
3
+
;
u
F
D
L
D
L
]
_
^
[
9
B
SVWU
|
L
4
r
B
0
9
B
}
3
4
C
B
D
u
(
0
L
D
D
L
B
<
2
B
;
9
=
B
h
aA
K
|
)
<
B
4
D
SPW
=
\
B
B
B
4
L
D
B
D
QR
L
SPQ
B
3
D
(
P
|
B
9
t
\
3
9l
~
4
B
3
D
(
u
B
C
;
~
<
+
E9l
C
;
B
F
C
;
B
~
/
3
9D
~
'
B
3
L
u
B
9D
D
L
]
_
^
[
d
d
S
V9
B
WU
|
a
3
B
3
<
\
B
94
~
1
-
B
3
D
=
B
~
-
B
F
D5
C
\
B
9
\
B
A
t
9
B
}
]
_
^
[
L
3
SV
WU
|
:
|
\
L
w
S
:
u
.
t
u
L
u
]
_
^
[
SVWU3
9l
(
L
8
|
3
T
=
t
u
\
0E
D
\
\
T
t
\
;
T
4
V9t
(
~
+
t
<
>
t
3
>
;
|
u
B
F9t
(
\
0
D
t
\
T
\
u
D
u
9D
t
D
\
T
\
D
B
t
3
9l
(
~
B
E8
B
u
9l
(
]
_
^
[
\
0
D
T
\
B
i
I
D
S
L
V
t
W
<
t
t
_
^
[
d
VW
5
bA
|
+
j
M
Ou
~
j
M
Nu
_
^
=
<
B
uf
=
x
B
t
]
=
B
t
h
bA
h
bA
bA
h
cA
q
h
cA
d
hDcA
W
hdcA
J
bA
=
<
B
=
x
B
bA
hhcA
h
cA
h
cA
=
B
u
=
B
u
h
cA
h
cA
h
dA
h
<
dA
j
L
bA
S
B
V
B
W
5p
B
F
PhTdA
/
K
h
dA
L
B
;
P
B
|
*
B
;
P
B
}
B
;
B
|
B
;
B
}
B
B
B
L
B
h
B
t
B
B
B
D
B
B
D
B
h
B
3
T
9
B
|
C3
B
B
|
B
\
B
B
t
h
B
|
;
B
~
3
95
B
|
p3
B
8
u
B
B
D
+
P
7
u
h
B
8Q
'
;
B
t
h
B
B
8
+
PR
j
j
M
F95
B
}
B
h
B
B
D
L
PQ
L
B
h
B
B
D
P
L
Q
L
h
dA
J
B
Ph
dA
3
BI
3
h
dA
J
B
|
&
B
G
L0
Qh
dA
I
B
;
}
*
C
=
B
t
_
^
[
d
d
S
B
VWP
h
eA
h
bA
I
95
B
~
T
d
B
3
9
d
B
t
&
d
B
r
B
w
V
SA
3
B
3
F
+
P
G
E
;
5
B
|
B
=
B
h
B
h
eA
B
3
;
5
B
}
U
B
PS
I
Ph
(
eA
h
B
[
d
B
x
B
B
h
B
j
;
B
|
d
B
x
B
B
h
B
j
F
;
q
_
^
[
I
=
B
t
h4eA
=
B
t
h
\
eA
=
<
B
h
eA
h
eA
h
eA
H
h
fA
t
bA
hDfA
a
hHfA
T
bA
h
fA
A
h
fA
4
=
C
h
fA
h
fA
bA
h
fA
h
fA
bA
h
gA
h
gA
h
gA
hdgA
hlgA
bA
hpgA
bA
htgA
bA
h
gA
m
h
gA
h
gA
S
=
d
B
t
'
h
hA
=
h
hA
0
hLhA
#
h
hA
bA
hdhA
bA
hlhA
hphA
h
hA
h
hA
h
hA
h
hA
bA
h
hA
h
hA
h
hA
bA
z
h
hA
m
h
iA
h
iA
S
bA
h
iA
bA
h
iA
-
h
iA
h
iA
hhiA
bA
hliA
=
B
tc
=
<
B
uZh
iA
bA
h
iA
h
iA
h
iA
h
jA
h4jA
bA
S
B
V
W
5p
B
FPh8jA
hbA
=
P
B
u
8bA
P
E
B
B
4
9
=
B
|
<
3
B
4
V
SA
9
B
t
t
VWhDjA
h
B
G
;
=
B
~
=
=
B
t
_
^
[
D
Ph
jA
h
|
jA
bA
h
jA
h
jA
=
C
t4
B
Ph
jA
+
C
bA
h
kA
h
bA
hDkA
U
bA
hHkA
B
V
B
W
kA
u
kA
kA
u
kA
=
B
t
|
Vh
kA
bA
=
x
B
~
h
<
lA
%
j
C
h
lA
=
x
B
~
hLlA
j
bA
C
hPlA
_
^
=
B
hxlA
q
h
|
lA
d
h
lA
W
Vh
lA
h
lA
<
h
mA
/
Wh8mA
bA
=
x
B
~
hLmA
hPmA
=
x
B
~
j
B
-
h
|
mA
h
mA
bA
_
^
h
mA
bA
h
mA
j
h
mA
h
mA
y
bA
{
=
B
t
B
Ph
mA
B
Ph
mA
=
<
B
u
#
=
B
u
h
mA
&
h
nA
_
^
I
l
B
SV
W
tG
uC
=
B
B
Pt
L
h8nA
Q
l
B
N
L
hdnA
Q
l
B
4
=
B
nA
u
nA
+
+
|
t
;
t7
=
B
u
=
B
u
h
nA
R
bA
h
nA
?
B
B
t
D
Ph
nA
D
Pt
h
oA
tB
=
l
B
t9h4oA
bA
h8oA
bA
h
oA
bA
=
B
u
=
B
t
=
<
B
t
htoA
_
^
[
=
x
B
V
~
=
<
B
t
3
t
(
=
l
B
t
=
B
u
=
B
t
h
oA
*
j
=
l
B
t
h
oA
h
oA
=
B
t
*
B
Ph
pA
>
hLpA
=
B
tN
B
PhtpA
T
>
h
pA
h
pA
h
qA
}
h
qA
p
S
B
L
Ph
\
qA
Q
&
L
Q
i
=
<
B
t
h
qA
3
;
B
Ph
qA
=
tT
=
B
u
=
B
tBj
>
h
qA
bA
h
qA
#
h
qA
bA
^
d
=
B
t
%
=
B
t
h
qA
h
rA
h
<
rA
x
=
B
t
h
\
rA
b
=
<
B
t
h
rA
L
h
rA
?
d
SVW
5p
B
UFj
B
P
4
D
3
x
B
B
9
<
B
D
t
(
B
B
\
B
B
B
=
P
B
Ph
rA
hbA
u
8bA
P
Z
=
9
B
D
D
)
T
3
D
T
D
L
D
B
B
L
95
B
t
L
Qh
rA
h
B
2
;
\
D
95
C
t
"
u
~
9
p
B
|
0
B
<
u
P
9
95
B
tS
D
Ph
rA
h
B
;
~
h
B
h
rA
d
B
x
B
B
h
B
j
?
G
;
e
D
D
D
L
;
B
L
T
D
!
5
L
B
B
4
9
B
|
&
T
B
A
\
0
Z
;
B
~
T
B
=
<
B
t
=
P
B
Ph
rA
hbA
u
8bA
P
}
;
95
B
|
G3
T
P
7
9
=
<
B
u
"
9
=
B
t
t
PVh
sA
h
B
F
;
5
B
~
T
4
P
7
=
<
B
t
P
x7
4
=
B
t
=
C
=
B
t
h
B
h
sA
]
B
Ph
<
sA
h
bA
:
95
B
|
H3
9
=
B
t
0
B
3
+
PVhDsA
h
B
0
B
F
3
+
P
6
;
5
B
~
w3
5p
B
5
B
=
B
}
=
P
B
8bA
t
hbA
N
QhPsA
P
:
9
=
B
|
l
8
B
B
8
u
B
u
B
}
B
t
B
+
8
B
B
G
L
Q
6
;
=
B
~
B
G
L
Q
6
;
|
4
+
C
B
L
(
Q
5
B
8
B
K
T
)
u
q2
}
=
P
B
8bA
t
hbA
N
QhXsA
P
'
9
|
8
B
L
Q
v5
Ou
2
}
=
P
B
8bA
t
hbA
B
AQh
sA
P
8
9
=
B
|
G
B
<
t
h
B
<
u
B
h
B
h
B
G
L
Q
4
9
=
B
}
1
}
=
P
B
8bA
t
hbA
B
AQhhsA
P
>
8
95
B
|
.
B
8
u
B
PF
4
95
B
}
1
]
_
^
[
d
d
;
D
L
PQ
\
7
hpsA
?
8
d
D
P
!
8
SVW3
U
8
bA
95l
C
t
htsA
h
sA
h
sA
8
=
B
t3h
sA
bA
h
sA
w
bA
h4tA
d
bA
b8
p
B
PhltA
5
p
B
Ph
tA
5
=
B
B
B
=
}
=
P
B
tA
t
tA
bA
h
tA
bA
h
tA
=
P
B
t
h
tA
h
tA
Wh
tA
v
h
uA
bA
=
B
t
=
B
t
;
=
x
B
~
=
<
B
u
#
=
(
B
u
h
uA
F
h8uA
9
=
l
B
to
B
Ph
uA
h
bA
5
9
B
|
D
3
9
-
B
t
B
8QhpuA
4
l
B
8Q
2
C9
B
}
.
=
B
t
=
(
B
u
h
uA
h
uA
=
P
B
p
B
Ph
uA
hbA
u
8bA
P
)
5
9
p
B
~
#
B
C
L8
Q
v1
9
p
B
.
=
<
B
=
(
B
u
'
h
uA
F5
h
vA
95
h0vA
5
=
C
tT
=
(
B
u
'
hDvA
5
hpvA
5
h
vA
4
h
h
vA
3
h
h
vA
3
h
vA
4
h
vA
4
h
wA
4
hDwA
4
=
C
t
'
h
wA
4
h
wA
x4
h
wA
k4
h
<
xA
^
4
hHxA
Q4
h
\
xA
h
xA
=
4
h
xA
04
h
xA
#
4
h
xA
4
=
l
C
t7
=
(
B
u
h
xA
h
yA
h4yA
hXyA
hxyA
h
yA
=
(
B
uQ
=
B
t
;
h
yA
3
h
yA
3
h
yA
3
h
yA
v3
h
zA
h
zA
b3
C
B
P
1
j
h
B
O
-
4
=
(
B
=
B
t
h
(
zA
3
hpzA
h
zA
3
h
zA
2
h
zA
2
h
zA
2
h
{
A
2
hL
{
A
2
hd
{
A
2
h
|
{
A
2
h
{
A
2
h
{
A
2
h
{
A
~
2
h
|
A
q2
h
|
A
d2
hP
|
A
W2
hl
|
A
J2
"
3
h
|
A
bA
=
B
t3h
|
A
bA
h
|
A
h
|
A
bA
h
}
A
bA
2
C
B
P
*
0
j
h
B
+
2
bA
=
l
C
tZh
}
A
f
h8
}
A
Y
bA
hL
}
A
F
hP
}
A
9
hh
}
A
h
|
}
A
bA
!
2
\
h
}
A
21
2
bA
1
=
H
B
t
h
}
A
bA
h
}
A
h
}
A
h
}
A
bA
h
}
A
bA
h
~
A
{
bA
bA
h
~
A
b
bA
d1
=
B
h
~
A
=
bA
h
~
A
*
h0
~
A
D
~
A
bA
=
(
B
u
h
~
A
P
bA
p
B
Ph
~
A
.
bA
=
(
B
t
h
~
A
h
~
A
h
A
h
\
A
bA
p
B
Ph
A
2
.
bA
=
(
B
t
h
A
h
A
_
h
A
R
bA
T
p
B
Ph0
A
-
L
A
bA
=
(
B
u
t
A
P
bA
h
A
)
/
bA
=
(
B
t
h
A
h
A
bA
h
(
A
bA
/
bA
j
C
B
P
)
-
j
h
B
(
9
B
|
<
B
<
8
u
p
B
8Qh
A
-
C9
B
}
t
hD
A
bA
*
bA
/
bA
=
B
u6
=
B
u
-
=
<
B
u
=
B
u
hh
A
h
A
h
A
hT
A
5
bA
.
bA
.
V
5
bA
.
.
=
H
B
t
&
h
A
q
5
bA
h
A
^
bA
.
=
B
t0h
A
=
=
H
B
tIh
A
'
bA
h8
A
!
=
H
B
t
&
hD
A
bA
hX
A
bA
-
j
h
B
'
=
C
u
fS
]
_
^
[
D
V
L
PQ
{
n
95p
B
|
2
B
<
u
95
B
t
B
Qhp
A
R
F95p
B
}
=
B
t4
=
<
B
u
+
B
B
<
t
B
Qh
A
:
R
B
j
3
^
d
=
B
VWth
=
(
B
t
h
A
B
%
B
u
5
B
t
h
A
!
%
B
5
B
B
(
B
C
B
H
B
B
5
B
=
H
B
t
(
B
=
B
u
'
u
t
=
B
u
B
B
B
u
u
t
3
u
B
=
C
B
t
h
A
Y
B
B
5
B
B
t
h
A
0
B
5
B
=
B
t
hD
A
B
5
B
=
H
B
t
h
|
A
#
B
5
B
t
t
h
A
#
5
B
=
(
B
t
:
t
h
A
#
=
(
B
t
=
B
t
h
A
O
B
=
B
tI
d
B
9
B
|
B
P
B
;
B
~
B
B
6
9
B
|
)
B
B
B
B
;
B
~
=
B
u
|
=
B
u5
=
(
B
A
u
A
P
A
4
B
PQh
B
:
B
A
h
B
A
h
A
P
u
A
Ph
A
?
#
A
A
t
*
h4
A
P
~
A
u
A
Ph8
A
#
T
A
54
B
L
=
(
B
t
hX
A
4
B
Phd
A
hp
A
h
A
4
B
Ph
A
h
A
(
4
B
h
A
Ph
A
h
A
'
4
B
h
A
Ph
A
h
A
'
4
B
h
A
Ph0
A
h
A
'
4
B
hT
A
Ph
A
hl
A
'
4
B
h
A
Ph
A
h
A
y
'
4
B
h
A
Ph
A
h
A
\
'
4
B
h
A
Ph
A
h
A
?
'
4
B
h
A
Ph
(
A
h
<
A
"
'
4
B
hP
A
Phd
A
hx
A
'
4
B
h
A
Ph
A
h
A
&
4
B
h
A
Ph
A
h
A
&
4
B
h
A
Ph
A
h
A
&
4
B
h
A
Ph
A
h
A
&
4
B
h
A
Ph
A
h
A
t
&
4
B
h
(
A
Ph0
A
h8
A
W
&
=
H
B
t
hL
A
4
B
PhT
A
h
\
A
1
&
=
H
B
t
hp
A
4
B
Phx
A
h
A
&
h
A
&
=
B
t
j
h
B
~
'
_
^
d
=
A
SVWt
=
A
t
A
Ph
A
A
P
t
A
Ph
A
*
\
t
\
=
A
tS
L
B
t
A
Ph
A
5h
B
A
Pt
h
A
t
A
Ph
A
=
B
=
B
=
x
B
u
h
A
B
P
A
=
B
u
=
B
u
hx
A
B
P
i
x
B
B
PhP
A
Q
M
B
t
A
Ph
A
B
P
t
A
Ph
A
=
C
h
A
A
Ph
A
h
B
h
A
h
B
=
(
B
t
'
d
B
x
B
+
B
h
B
j
+
T
=
B
t
'
d
B
x
B
b
B
h
B
jb
=
B
t
'
d
B
x
B
d
B
h
B
jd
=
d
B
t
'
d
B
x
B
i
B
h
B
ji
=
B
t
'
d
B
x
B
l
B
h
B
jl
=
h
B
~
'
d
B
x
B
p
B
h
B
jp
d
=
h
B
~
'
d
B
x
B
p
B
h
B
jp
4
=
B
t
'
d
B
x
B
s
B
h
B
js
=
B
t
'
d
B
x
B
t
B
h
B
jt
=
C
t
'
d
B
x
B
v
B
h
B
jv
=
B
t
'
d
B
x
B
w
B
h
B
jw
t
=
B
u
'
d
B
x
B
B
B
h
B
jB
D
=
B
u
'
d
B
x
B
I
B
h
B
jI
=
L
B
u
'
d
B
x
B
L
B
h
B
jL
=
B
t
'
d
B
x
B
T
B
h
B
jT
=
B
u
B
=
B
u
!
d
B
x
B
7
B
0h
B
j7
d
B
x
B
8
B
h
B
j8
M
h
A
h
B
=
P
B
t
'
d
B
x
B
a
B
h
B
ja
=
B
t
'
d
B
x
B
f
B
h
B
jf
=
B
t
'
d
B
x
B
F
B
h
B
jF
=
B
t
'
d
B
x
B
e
B
h
B
je
{
=
C
t
'
d
B
x
B
m
B
h
B
jm
K
=
B
t
'
d
B
x
B
r
B
h
B
jr
=
B
t
A
Ph
A
h
B
J
=
A
t
A
Ph
A
h
B
)
A
54
B
t
4
B
Ph0
A
h
B
d
B
x
B
B
h
B
j
P
B
H
B
PQh8
A
h
B
B
B
B
QRPhL
A
h
B
B
p
B
HPhl
A
h
B
r
=
x
B
u
hx
A
h
B
W
>
=
B
u
=
B
u
h
A
h
B
1
x
B
Ph
A
h
B
=
B
t
h
A
h
B
B
B
PQh
A
h
B
D
B
B
QRh
A
h
B
=
B
u
hH
A
h
B
I
B
B
Q
B
5
\
B
P
B
B
P
B
RQh
A
h
B
W
l
B
Ph
A
h
B
?
B
B
PQh
A
h
B
=
B
t
%
5
B
5
B
Vh
A
h
B
p
B
B
B
Q
B
4E
p
B
B
Ph
A
h
B
<
B
P
B
B
QRPh
(
A
h
B
p
B
B
P
B
Q
p
B
B
PhT
A
h
B
\
B
Qh
A
h
B
C
L
B
Qh
A
h
B
*
t
B
p
B
QRh
A
h
B
=
B
t
%
5
B
B
P
B
Qh
A
h
B
=
C
t
%
5
B
B
P
B
Qh
A
h
B
X
B
T
B
P
B
QRh4
A
h
B
t
B
Qhd
A
h
B
o
Vh
A
h
B
\
S
C
_
^
[
SVW3
U
d
B
B
B
h
B
C
B
B
B
(
B
B
B
l
C
B
P
B
B
C
<
B
B
B
H
B
-
(
B
-
C
-
B
-
B
5
B
5
C
5L
B
5H
B
h
B
B
B
B
B
\
V
4
B
A
B
h
C
D
B
B
L
B
B
A
8
t
+
|
+
u
5
(
B
D
L
|
D
;
-
C
<
-
uB
A
u
A
+
A
u
A
A
{
_
Q
Lw
3
<
a
A
PQPh
A
h
B
?
U
&
-
(
B
=
B
B
j
-
B
j
B
^
-
B
-
B
C
B
<
L
B
0
-
B
(
h
A
A
Phx
A
j
-
B
F
<
a
-
B
-
B
-
B
-
B
C
B
-
d
B
-
B
h
B
-
B
-
B
-
C
;
t
h
A
H
|
u
"
B
C
B
l
F
<
Q
w
3
a
a
Qh
A
{
.
-
B
&
-
P
B
-
B
-
B
-
C
-
B
F
<
u
X
;
t
h0
A
4
B
<
;
t
hT
A
A
;
t
h
A
i
-
B
A
D
L
|
!
D
L
D
L
4
B
p
B
~
P
~
3
H
B
B
B
B
B
B
p
B
t
B
l
B
B
B
X
B
B
t
B
D
B
B
B
C
B
d
C
T
B
B
B
L
B
C
x
B
B
C
C
B
|
B
B
x
B
]
_
^
[
]
]
]
]
]
^
]
]
^
q_
_
(
^
0
^
h
^
X
^
p
^
x
^
]
^
^
X
^
_
^
^
^
^
R
^
]
I
:
_
B_
J_
R_
Z_
b_
*
_
d
j
j
'
#
t
h
A
;
j
g
=
h
B
t
j
T
=
B
t1h
A
A
P
B
u
A
Ph
A
B
C
u
l
C
u
l
C
(
B
u
<
B
u
<
B
h
B
=
B
t
h
A
h
B
hH
A
=
H
B
t
h
A
h
B
h
B
~
6
=
B
t
h
A
h
B
=
l
C
t
h
A
h
B
=
<
B
t
h0
A
h
B
C
t
h
\
A
h
B
v
C
=
<
B
t
d
B
t
<
B
=
B
u
=
B
t6
=
<
B
tC
=
d
B
t
h
A
=
H
B
t
h
A
h
A
H
=
<
B
t
h4
A
=
H
B
u
hL
A
h
A
=
B
t
hx
A
=
B
u
h
A
h
A
=
(
B
t
!
h
A
=
B
h
A
}
=
C
toh
A
y
h
A
l
h
A
_
h
A
R
h
A
E
h
A
8
h
(
A
+
h
A
h0
A
h
A
=
B
t
h8
A
(
B
u
hp
A
(
B
=
B
t
h
A
(
B
=
B
t
h
A
(
B
=
H
B
t
u
h
A
h
A
~
(
B
tph
A
g
=
B
h
A
M
h
A
h
A
3
hh
A
&
ht
A
B
Phx
A
=
B
t
h
A
h
A
h
A
=
B
t
h
A
B
B
t
%
Ph
B
h
B
B
B
B
B
B
B
3
+
B
t
d
d
P
B
j
h
B
P
B
j
P
C
P
B
j
P
B
P
B
j
P
L
B
P
B
j
P
C
P
B
j
P
C
P
B
j
P
C
P
B
j
P
w
h
C
P
B
j
P
b
B
D
B
d
j
jd
G
0
B
j
D
B
P
2
B
D
B
j
P
B
B
(
j
j
(
B
B
j
P
B
B
j
P
B
B
j
P
B
B
j
P
B
B
d
j
jd
B
B
j
P
~
\
B
B
j
P
i
|
B
B
j
h
K
B
B
P
B
j
h
#
h
B
P
B
j
P
B
B
j
h
8
B
B
j
h
B
B
j
P
8
B
B
j
P
B
B
j
P
B
B
j
P
~
B
B
j
P
i
l
B
j
B
P
T
B
l
B
A
Ph
A
h
B
K
hd
A
h
B
9
A
Ph
A
h
B
!
h
A
h
B
h
A
h
B
h
A
h
B
h
A
h
B
hD
A
h
B
hl
A
h
B
h
A
h
B
h
A
h
B
h
A
h
B
=
B
u5
A
A
=
(
B
4
B
u
A
RQPh
B
B
A
P
A
h
A
h
B
h
\
A
h
B
h
A
h
B
h
A
h
B
h
A
h
B
h
A
h
B
hD
A
h
B
A
Php
A
h
B
A
Ph
A
h
B
h
A
h
B
v
h
A
h
B
d
h
A
h
B
R
h
A
h
B
h0
A
h
B
.
hp
A
h
B
h
A
h
B
h
A
h
B
h
A
h
B
hT
A
h
B
h
A
h
B
h
A
h
B
h
A
h
B
h
A
h
B
h
A
h
B
z
A
PhL
A
h
B
b
T
+
W
I
~
Rh
A
0
_
L
PRh
A
Q
L
Q
_
S
V
+
t
WU
Y
B
D
B
-
C
y
;
|
L
M
j
B
Q
-
C
U
K
D
B
B
y
;
}
+
-
C
+
<
*
]
_
D
B
^
[
d
L
V
L
Q
q
u
h
A
m
^
VW
t
>
t
?
<
s
<
9
=
B
~
j
P
G
B
3
f
J
t
F
>
u
_
^
3
_
^
VW
t
>
t
=
<
s
:
9
=
B
~
WP
B
3
f
J
#
t
F
>
u
_
^
3
_
^
d
T
SV
W
~
)
L
~
Y
z
3
C
;
}
s
Ou
J
_
^
[
V
t
|
V
Ph
A
95
B
V
Ph
A
^
d
S
\
s4
=
B
~
j
S
B
3
f
Y
t
S
[
[
d
VW
t
>
t
8
u
+
P
o
u
h
<
A
BF
u
_
^
d
VW
t
>
t
8
u
j
+
P
AF
u
_
^
D
S
+
VW
U
~
e
t
l
D
;
D
}
I
L
+
x3
<
t
<
>
t
&
t
8
>
r
8
>
s
>
+
>
y
D
L
;
L
|
+
]
_
^
[
=
B
~
"
hd
A
8
3
C
B
d
d
j
C
C
|
j
C
B
D
A
PQhp
A
h
B
j
+
D
A
PQhx
A
h
B
u
j
[
L
D
Ph
A
Q
Y
D
D
L
T
PQR
L
Q
I
D
L
T
PQR
L
Q
V
=
L
B
SV
t
=
A
u
=
A
t
A
A
T
t
\
u
\
B
A
B
;
r
t
*
D
B
PQhp
A
R
6
B
u
|
B
D
|
B
PQhp
A
R
t
VP
^
[
P
^
[
I
C
D
B
B
C
D
B
D
B
B
B
C
D
B
C
D
B
D
B
B
B
|
j
'
B
u
h
A
j
D
B
Ph
A
d
d
B
|
j
B
u
h
A
4
j
D
B
Ph
A
3
d
d
L
D
D
Ph
A
Q
q
D
SV
t
WU3
n
E
0
H
3
u
u
]
_
^
[
<
s99
B
~
j
3
7P
~
3
B
73
f
J
t
G
<
7
r
U
]
_
^
[
]
_
^
[
]
_
^
[
]
_
^
[
]
_
^
[
]
_
^
[
]
_
^
[
]
_
^
[
n
}
sA
9
B
~
>
h
P
>
B
3
f
J
%
t
G
<
>
r
U
]
_
^
[
t
u
u
+
u
2u
9u
u
Gu
Nu
t
d
L
D
Ph
A
Q
D
Vh
B
t
V
V
w
^
D
V
t
PV
V
W
^
D
V
L
P
t
QV
k
V
2
^
D
V
t
PV
V
^
3
D
8
t
<
u
|
B
A
<
u
VW
|
t
WV
V
W
_
^
SV
\
W
|
U
t
S
l
WVU
U
V
W
x
S
o
]
_
^
[
D
V
t
W
|
PWV
z
V
A
W
8
_
^
S
D
B
x
B
\
B
\
h
B
S
}
u
|
B
[
V
t
V
5
V
|
B
^
L
|
|
#
}
u
A
B
B
B
A
w
x
Qh
A
h
B
1
B
A
A
A
A
A
xx
~
x
x
_x
x
x
L
V
L
T
QR
f
u
h
A
x
^
SV
t
WU
3
9
-
A
t
A
Ph
V
;
A
A
4
A
;
tu
>
%
uE
N
%
w
3
y
y
h
A
=
(
B
9
(
B
{
s
V9
-
A
t
]
a
P
]
_
^
[
y
ay
ey
my
Ry
d
d
D
L
PQh
A
B
B
A
|
4j
C
C
u
Q
B
D
VP
e
u
h0
A
^
d
T
W
|
;
v
+
3
_
V
B
t
L
B
<
u
C
T
^
h
z
T
C
PV
^
SVWh
C
\
|
t
V
PW
a
Ku
_
^
[
I
D
SVWU
Ph
A
h
B
{
9
=
H
B
Wh
A
h
B
_
{
L
B
C
-
C
C
1
l5
0U
2PQh
A
h
B
&
{
t
Sh
A
h
B
{
h
A
h
B
G
z
9
=
H
B
{
h
A
h
B
z
]
_
^
[
I
C
SV
t
WU3
B
L
;
L
B
(
Q
C
)
tK
+
B
Q
R
L
B
<
)
u
C
(
t
+
B
Q
R
C
C
T
(
9
\
{
u
h
A
|
+
B
G
B
>
B
-
C
T
T
]
_
^
[
L
p
B
VWPQ
h
p
B
B
5
B
4
=
B
t
p
B
B
p
B
L
Ph
A
Q
{
L
Q
w
p
B
0
B
t
=
=
h
B
~
!
p
B
B
Rh
A
h
B
y
C
~
bhP
A
~
D
VhH
A
h4
A
h
A
P
zz
D
Wh4
A
h
A
P
z
D
P
h
A
=
B
u
h
A
j
j
_
^
d
d
SV
t
W
u
D
_
^
[
|
u
_
^
[
B
W
Q
B
C
C
;
B
B
;
|
_
^
[
V
t
B
tI
u7
L
B
<
u0
C
t
P
C
4
t
h
A
^
SV
t
W
u
D
_
^
[
|
u
_
^
[
h
VS
WS
_
^
[
D
P
P
V
B
t
L
B
<
u
C
<
t
h
=
PV
s
h
VP
Z
B
QV
F
^
d
d
SV
t
W
u
D
_
^
[
\
u
_
^
[
h
VP
SV
B
L
B
<
u
C
<
u
C
<
u
Q
B
R
B
L
B
<
<
u
C
<
u
C
<
u
W
%
h
;
PV
q
B
<
W
Q
Z
B
<
_
^
[
V
B
t
W
L
B
<
u
C
<
u
VQ
_
^
h
VW
WV
_
^
d
D
SVHWU
l
PU
<
\
u
+
U
8
P
PV
PU
]
_
^
[
h
I
;
\
~
%
+
\
U
WP
j
P
Ku
WV
R
PU
H
]
_
^
[
V
P
B
H
B
9
H
B
3
P
B
=
P
B
|
|
P
B
Ph
A
"
j
P
B
P
B
Q
t
B
P
B
C
B
j
QR
P
B
B
C
j
QR
P
B
L
B
B
j
QR
P
B
C
L
B
j
QR
P
B
C
C
j
QR
t
P
B
C
C
j
QR
W
P
B
C
j
Q
h
C
R
:
P
B
B
h
C
j
QR
B
H
B
B
H
B
B
t
C
H
B
H
B
L
B
4
H
B
C
C
H
B
H
B
C
p
B
H
B
h
C
B
B
H
B
|
D
u
H
B
^
B
V
=
B
t
u
5
B
h
B
h
B
V
H
B
^
I
L
C
8
u
L
L
B
<
u
C
8
u
L
D
B
hP
A
u
D
B
p
B
9
p
B
|
cj
0
B
D
B
d
D
B
t
B
PQ
D
B
B
0
B
j
QR
D
B
B
B
j
QR
b
B
=
p
B
~
h
hx
A
?
B
B
p
B
p
B
B
U
S
L
V
W3
E
M
J
]
B
E
E
4
B
E
E
M
f
E
;
E
E
U
}
E
+
'
U
G9E
6
M
;
~
E
E
E
'
r
e
}
M
P
U
QR
M
q
e
U
Q
E
RP
M
E
Ty
|
E
M
U
H
;
]
A
]
M
E
=
4
B
u
i
4
B
=
4
B
3
4
B
=
4
B
I
w
4
B
A
M
}
n
E
A
;
A
}
G
M
E
EP
A
M
~
E
+
Q
U
E
H
J
q
tG
k
=
4
B
t
4
B
(
B
}
t
M
E
A
M
u
}
u
h
A
B
n
}
u
=
4
B
4
B
E
]
A
=
t2
x
/
n
*
f9
A
u
A
}
t
]
u
E
9E
^
m
E
k
7
(
B
]
P
B
B
P
p
B
E
B
j
j
j
P
U
5
B
95
B
|
4
B
E
P
B
Q
y
B
B
9
B
~
=
B
t
h
A
h
A
h
A
j
h
A
X
h
(
A
V
j
B
P
H
L
B
B
n
B
_
5
B
T
B
Ph
B
X
<
B
Ph
B
oX
hL
A
=
h
B
A
5
B
h
B
~
4
B
h
B
g
B
G
B
G
B
B
H
B
B
B
5
B
B
5
B
B
<
B
8
B
9
Q
8
B
Q
<
B
R
B
H
B
B
PQ
M
5
B
=
B
~
L95
B
B
L
B
B
P
B
Q
Z
B
B
9
B
~
L95
B
|
D
B
B
<
u
B
B
Q
P
B
B
9
B
~
=
B
s
5
B
95h
B
a
hh
A
O
8
B
Q
<
B
R
B
H
B
B
PQ
K
5
B
=
B
~
O95
B
B
L
B
B
P
B
Q
X
B
B
9
B
~
95
B
B
B
<
u
B
B
Q
P
B
B
9
B
~
r
=
B
~
_
5
B
95
B
|
;
B
B
<
u
L
B
B
B
B
B
9
B
~
=
B
u
h
A
v
9
h
A
B
G
B
5
B
E
95
B
95
B
|
L
B
B
9
t
A
;
B
~
;
B
~
B
B
B
L
B
B
B
9
B
~
Q
B
D
h
A
5
h
B
NU
B
u
h
B
h
A
5
B
95
B
|
F
L
B
B
9
t
B
B
9
B
~
B
B
Rh
A
B
9
B
B
B
B
L
B
C
L
B
<
t
h
PS
P
]
5
B
=
B
t
/
=
B
t
=
<
B
t
h0
A
<
B
5
B
=
B
u
=
B
t
=
<
B
t
B
8
B
p
B
O
PQ
q
5H
B
O
PQ
L
hl
A
58
B
5
B
<
B
B
B
=
B
t
h
A
h
=
B
t
h
A
5
B
=
B
u
=
B
t
p
B
O
PQ
5H
B
h
5
B
H
B
j
9
P
B
P
j
P
G
P
]
=
B
E
=
B
u
!
=
B
t
=
<
B
t
B
8
B
5H
B
{
5
B
O
PQ
^
W
=
B
t
h
A
j
5
B
=
B
t
B
B
<
B
B
B
G
O
PQ
5
B
G
P
5
B
G
P
5
B
G
P
5
B
G
O
;
|
K
|
Gu2
h
A
G
x
PV
G
P
#
P
J
\
PQ
G
P
L
h
A
h
G
7
5
B
G
h
A
F
G
j
P
G
P
5
B
G
hP
A
G
_
HPS
PS
=
A
un
Z
~
j
B
P
}
B
P
=
B
t
<
B
B
RR
\
B
h
B
B
h
B
S
B
P
5
A
B
B
P
0
=
0
B
u
(
V
\
B
B
P
B
P
0
=
B
t8
B
RR
\
B
h
B
B
h
B
S
B
P
/
B
P
B
P
G
G
B
=
d
B
t
A
|
Z
P
3
P
\
G
\
G
P
}
G
H
=
d
B
t8
G
A
|
Z
P
r
3
O
A
|
Z
P
V
3
G
9
}
ht
A
G
B
9
|
"
B
O
PQ
{
B
B
9
}
=
0
B
t
B
9G
~
50
B
0
B
B
G
=
d
B
t
A
|
Z
P
3
O
PQ
b
{
=
0
B
t
B
9
~
50
B
0
B
B
O
M
&
0
B
G
B
50
B
{
E
D
B
3
9
B
s
<
95
B
~
h
S
f
B
3
f
Y
%
t
S
D
B
P
z
C
;
B
|
3
9
B
s
<
95
B
~
h
S
e
B
3
f
Y
%
t
S
D
B
P
Fz
C
;
B
|
2
3
9
B
s
t
u
S
D
B
P
z
C9
B
3
9
B
s795
B
~
j
S
2e
B
3
f
Y
t
S
D
B
P
y
C
;
B
|
3
9
B
s795
B
~
j
S
d
B
3
f
Y
t
S
D
B
P
Sy
C
;
B
|
?
3
9
B
1
s
<
95
B
~
h
S
yd
B
3
f
Y
%
t
S
D
B
P
x
C9
B
3
9
B
s795
B
~
j
S
d
B
3
f
Y
t
S
D
B
P
x
C
;
B
|
3
9
B
v
s
<
95
B
~
hW
S
c
B
3
f
Y
%
W
t
S
D
B
P
8x
C
;
B
|
3
9
B
s795
B
~
j
S
ac
B
3
f
Y
t
S
D
B
P
w
C9
B
3
9
B
s795
B
~
j
S
c
B
3
f
Y
t
S
D
B
P
w
C
;
B
|
n
=
d
B
t
[
3
9
B
W
s795
B
~
j
S
b
B
3
f
Y
t
S
D
B
P
w
C9
B
3
9
B
s595
B
~
VS
Hb
B
3
f
Y
#
t
S
D
B
P
v
C9
B
3
9
B
s
<
95
B
~
h
S
a
B
3
f
Y
%
t
S
D
B
P
ev
C
;
B
|
T
=
d
B
t
A
|
Z
P
|
3
B
P
u
P
G
P
h
Y
E
E
M
+
E
)
E
E
E
A
E
U
f
p
A
x
n
f9
A
u
A
A
h
A
_
^
[
]
_
^
[
]
3
_
^
[
]
_
^
[
]
3
_
^
[
]
_
^
[
]
?
S
e
6
C
P
(
0
y
L
^
;
+
?
S
8
D
T
\
d
n
k
c
y
4
L
L
V
T
D
p
~
A
B
N
^
VW
95
B
|
w
L
B
8
B
8
t
B
Qh
A
7
L
B
B
8
T
Ph
A
R
[
L
Q
C
F
;
5
B
~
j
j
;
p
B
B
_
^
I
D
L
T
PQR
[
L
Q
h
B
D
P
d
d
D
L
T
PQR
F
[
L
Q
B
L
PQ
D
L
T
PQR
Z
L
Q
B
L
PQ
=
B
u
/
L
Ph
A
Q
Z
T
QR
d
D
L
P
A
QRh
A
h
B
X
d
d
3
9
A
S
D
VWUtc
A
9
A
u
A
=
A
u
A
B
=
A
u
A
B
=
A
u
h
A
P
b
<
A
%
<
A
B
A
q
5
A
3
u
f
(
A
0
A
t
5
B
B
A
3
<
U
A
;
t5
4u
A
|
3
0
A
u
A
3
<
U
A
;
u
3
C
u
A
4U
A
f
<
u
A
c
u
(
A
u
B
B
E
(
A
-
B
+
3
B
B
A
=
X
B
+
5
B
N
A
9y
u
"
I
A
A
B
A
A
B
;
A
sk
}
4
t
}
=
B
7
>
B
A
A
H
+
H
B
B
5
B
B
A
6
P
^
7
-
B
u6
A
A
B
A
^
6
A
-
B
A
A
B
A
'
6
A
-
B
hD
A
<
=
B
~
B
B
D
A
<
A
B
A
K
=
B
~
B
B
D
A
<
A
B
P
j
;
=
B
~
B
B
D
A
<
A
j
j
;
=
B
~
B
B
D
A
<
A
j
B
j
B
A
y
=
B
l
B
B
D
A
<
A
G
=
B
~
B
B
D
A
<
A
B
B
=
B
~
B
B
D
A
<
A
B
B
=
B
~
B
B
D
A
<
A
B
=
B
~
B
B
D
A
<
A
B
c
=
B
~
B
B
D
A
<
A
h
A
e
(
=
B
~
B
B
D
A
<
A
=
B
+
+
B
B
A
=
B
~
B
B
D
A
<
A
B
=
B
~
B
B
D
A
<
A
B
P
k
B
H
=
B
~
B
B
D
A
<
A
B
P
)
19
=
B
~
B
B
D
A
<
A
B
P
=
B
~
B
B
D
<
A
H
B
P
=
B
~
B
B
D
A
<
A
B
B
P
k
N
=
B
~
B
B
D
A
<
A
E8
=
B
~
B
B
D
A
<
A
B
P
\
B
=
B
~
B
B
D
A
<
A
A
P
K9
B
P
<
A
+
A
D
s
=
B
f
B
B
D
A
<
A
A
=
B
~
B
B
D
A
<
A
A
B
=
B
~
B
B
D
A
<
A
B
P
=
B
~
B
B
D
A
<
A
B
B
P
=
B
}
A
n
=
B
a
B
B
D
A
<
A
<
=
B
~
B
B
D
A
<
A
=
B
+
+
|
|
+
x
D
<
t
<
u
Iy
D
D
Ph
B
9
B
=
B
~
B
B
D
A
<
A
=
B
u
h
A
A
B
O
=
B
~
B
B
D
A
<
A
A
B
=
B
~
B
B
D
A
<
A
B
=
B
~
B
B
D
A
<
A
=
B
B
=
B
~
B
B
D
A
<
A
=
B
%
B
U
=
B
~
B
B
D
A
<
A
=
B
B
=
B
~
B
B
D
A
<
A
B
P
B
=
B
~
B
B
D
A
<
A
B
Ph8
A
E
=
B
~
B
B
D
A
<
A
B
B
=
B
~
B
B
D
A
<
A
B
B
(
=
B
~
B
B
D
A
<
A
=
B
B
=
B
~
B
B
D
A
<
A
B
(
B
=
B
~
B
B
D
A
<
A
=
B
d
B
t
=
B
~
B
B
D
A
<
A
B
d
B
<
=
B
~
B
B
D
A
<
A
B
B
=
B
~
B
B
D
A
<
A
=
B
B
=
B
~
B
B
D
A
<
A
B
B
=
B
~
B
B
D
A
<
A
C
B
B
B
8
=
B
~
B
B
D
A
<
A
C
B
B
B
=
B
~
B
B
D
A
<
A
=
B
j
hP
A
E
=
B
~
B
B
D
A
<
A
B
B
=
B
~
B
B
D
A
<
A
B
B
(
=
B
~
B
B
D
A
<
A
B
Ph
\
A
=
B
H
B
=
B
~
B
B
D
A
<
A
B
C
=
B
~
B
B
D
A
<
A
B
Phd
A
^
=
B
~
B
B
D
A
<
A
=
B
h
B
=
B
~
B
B
D
A
<
A
=
B
B
=
B
~
B
B
D
A
<
A
B
B
=
B
~
B
B
D
A
<
A
B
(
B
o
=
B
~
B
B
D
A
<
A
B
Ph
|
A
.
=
B
~
B
B
D
A
<
A
B
C
=
B
~
B
B
D
A
<
A
B
B
=
B
~
B
B
D
A
<
A
=
B
j
h
A
!
t
=
B
~
B
B
D
A
<
A
B
C
<
=
B
~
B
B
D
A
<
A
=
B
B
=
B
~
B
B
D
A
<
A
B
H
B
=
B
~
B
B
D
A
<
A
B
C
=
B
~
B
B
D
A
<
A
B
H
B
V
=
B
~
B
B
D
A
<
A
=
B
j
h
A
=
B
~
B
B
D
A
<
A
=
B
j
h
A
o
=
B
~
B
B
D
A
<
A
=
B
j
h
A
%
x
=
B
~
B
B
D
A
<
A
=
B
B
j
h
A
.
=
B
~
B
B
D
A
<
A
=
B
j
h
A
=
B
~
B
B
D
A
<
A
=
B
j
h
A
G
=
B
~
B
B
D
A
<
A
B
Ph
A
f
A
O
=
B
~
B
B
D
A
<
A
A
B
=
B
~
B
B
D
A
<
A
B
B
E
A
+
-
B
B
B
A
=
B
~
B
B
D
A
<
A
B
B
E
A
+
-
B
B
B
A
K
=
B
~
B
B
D
A
<
A
B
P
=
B
~
B
B
D
A
<
A
=
B
p
B
+
-
A
-
B
B
M
B
E
=
A
-
A
u
h
A
P
%
A
A
A
m
B
P
w
Z
=
B
~
B
B
D
A
<
A
B
P
;
=
B
~
B
B
D
A
<
A
B
B
P
=
B
~
B
B
D
A
<
A
B
=
B
~
B
B
D
A
<
A
B
D
B
A
!
T
=
B
~
B
B
D
A
<
A
B
A
!
=
B
]
A
B
_
^
[
=
B
~
B
B
D
A
<
A
B
B
-
B
D
)
A
+
B
B
B
B
A
A
d
=
B
W
B
B
D
A
<
A
2
=
B
~
B
B
D
A
<
A
B
B
A
=
B
]
A
B
_
^
[
=
B
~
B
B
D
A
<
A
B
B
A
B
Pj
K
=
B
V
]
A
B
_
^
[
=
B
~
B
B
D
A
<
A
=
B
G
+
+
B
h
B
B
B
^
(
u
h
B
h8
A
+
I
=
B
u_
>
^
tZ
~
|
tO
B
Pj
)
X
+
y
|
7
B
PQ
3
Oy
B
Pj
(
3
+
y
|
7
B
PQ
Oy
>
^
A
=
B
~
B
B
D
A
<
A
B
PhT
A
=
B
~
B
B
D
A
<
A
B
x
=
B
~
B
B
D
A
<
A
B
P
Y
j
"
2
=
B
~
B
B
D
A
<
A
B
P
B
P
U
<
B
=
B
~
B
B
D
A
<
A
B
P
B
P
l
C
z
=
B
~
B
B
D
A
<
A
B
P
[
>
=
B
~
B
B
D
A
<
A
B
B
P
=
B
t
|
=
B
=
A
t
h
A
D
A
A
=
B
~
B
B
D
A
<
A
B
P
B
g
=
B
~
B
B
D
A
<
A
B
P
H
B
%
=
B
~
B
B
D
A
<
A
B
P
=
B
~
B
B
D
A
<
A
B
P
=
B
~
B
B
D
A
<
A
B
P
q
=
B
~
B
B
D
A
<
A
B
P
R
A
+
=
B
~
B
B
D
<
A
H
B
B
P
=
B
=
A
t
h
A
A
A
=
B
~
B
B
D
A
<
A
B
P
w
=
B
~
B
B
D
A
<
A
B
P
X
;
=
B
~
B
B
D
A
<
A
B
P
=
B
~
B
B
D
<
A
H
B
B
P
=
B
~
B
B
D
A
<
A
B
P
A
x
=
B
~
B
B
D
A
<
A
B
P
Y
<
=
B
~
B
B
D
A
<
A
A
B
P
B
j
QR
=
>
=
B
~
B
B
D
A
<
A
B
Ph
A
=
B
~
B
B
D
A
<
A
h0
A
t
=
B
g
A
P
T
=
B
~
B
B
D
A
<
A
]
_
^
[
=
B
~
B
B
D
A
<
A
]
_
^
[
=
B
~
B
B
D
A
<
A
C
B
j
j
A
]
_
^
[
=
B
~
B
B
D
A
<
A
]
A
#
_
^
[
=
B
~
B
B
D
A
<
A
=
B
+
+
B
]
_
^
[
=
B
~
B
B
D
A
<
A
=
]
_
^
[
=
B
~
B
B
D
A
<
A
]
_
^
[
=
B
~
B
B
D
A
<
A
]
_
^
[
=
B
~
B
B
D
A
<
A
]
_
^
[
=
B
~
B
B
D
<
A
H
=
B
G
+
+
B
B
+
]
_
^
[
B
=
B
~
B
B
D
A
<
A
<
]
A
_
^
[
=
B
~
B
B
D
A
<
A
^
]
_
^
[
=
B
~
B
B
D
A
<
A
"
]
A
_
^
[
B
E
A
+
-
B
B
B
=
B
A
~
B
B
D
A
<
A
{
]
A
_
^
[
B
E
A
+
-
B
B
B
=
B
A
~
B
B
D
A
<
A
]
_
^
[
=
B
~
B
B
D
A
<
A
]
_
B
B
^
[
=
B
~
B
B
D
A
<
A
]
_
^
[
=
B
~
B
B
D
A
<
A
3
]
C
A
_
^
[
=
B
~
B
B
D
A
<
A
=
B
+
+
B
h
B
_
t3
1
]
t
h
A
]
_
5
(
B
^
B
[
B
Ph
B
B
E
A
+
-
B
B
]
_
^
B
[
A
A
[
=
B
~
B
B
D
A
<
A
B
3
]
_
^
[
=
B
~
B
B
D
A
<
A
B
3
]
_
^
[
(
B
=
B
~
B
B
D
A
<
A
B
3
]
_
^
[
=
B
~
B
B
D
A
<
A
>
]
A
_
^
[
B
E
A
+
-
B
B
B
=
B
A
~
B
B
D
A
<
A
>
]
A
_
^
[
=
B
~
B
B
D
A
<
A
=
B
+
+
B
]
_
^
[
=
B
~
B
B
D
A
<
A
^
]
A
_
^
[
=
B
~
B
B
D
A
<
A
B
3
]
_
^
[
(
B
=
B
~
B
B
D
A
<
A
"
]
A
_
^
[
=
B
~
B
B
D
A
<
A
hp
A
z
"
A
]
B
_
^
[
B
E
A
+
-
B
B
B
=
B
A
~
B
B
D
A
<
A
^
]
A
_
^
[
B
E
A
+
-
B
B
B
=
B
A
~
B
B
D
A
<
A
^
]
_
^
[
=
B
~
B
B
D
A
<
A
B
3
A
]
_
^
(
B
[
B
E
A
+
-
B
B
B
=
B
A
~
B
B
D
A
<
A
-
]
_
^
[
=
B
~
B
B
D
A
<
A
B
3
]
_
^
[
(
B
=
B
~
B
B
D
A
<
A
]
]
A
_
^
[
=
B
~
B
B
D
A
<
A
h
A
]
A
]
_
^
[
=
B
~
B
B
D
A
<
A
]
A
_
^
[
=
B
~
B
B
D
A
<
A
]
A
_
^
[
=
B
~
B
B
D
A
<
A
]
A
_
^
[
=
B
~
B
B
D
A
<
A
]
A
_
^
[
=
B
~
B
B
D
A
<
A
]
A
_
^
[
=
B
~
B
B
D
A
<
A
]
A
_
^
[
=
B
~
B
B
D
A
<
A
]
A
_
^
[
=
B
~
B
B
D
A
<
A
]
A
_
^
[
=
B
~
B
B
D
A
<
A
]
A
_
^
[
=
B
~
B
B
D
A
<
A
]
A
_
^
[
=
B
~
B
B
D
<
A
H
]
A
_
^
[
=
B
~
B
B
D
A
<
A
]
A
_
^
[
=
B
~
B
B
D
A
<
A
B
Ph
A
\
A
]
_
^
[
=
B
~
B
B
D
A
<
A
B
P
{
(
B
]
_
^
[
=
B
~
B
B
D
A
<
A
]
_
^
[
=
B
~
B
B
D
A
<
A
}
]
A
_
^
[
=
B
~
B
B
D
A
<
A
h
A
t
}
A
]
_
^
[
=
B
~
B
B
D
A
<
A
h
A
}
A
]
B
_
^
[
=
B
~
B
B
D
A
<
A
B
P
=
3
A
H
(
B
+
u
A
]
_
^
[
3
]
_
^
[
3
]
C
_
^
[
3
]
C
_
^
[
h
A
K
3
]
_
^
[
I
^
r
q
T
-
a
[
x
}
H
P
S
9
w
%
]
S
L
D
|
-
w
%
]
)
s
N
Q
=
C
q
0
1
S
S
Q
D
0
s
;
]
8
{
D
P
[
6
y
;
s
q
B
>
z
8
t
-
s
<
S
A
V
B
WU
x
B
;
A
s
hx
A
D
A
x
u
A
]
+
B
_H
^
[
5
A
+
5
B
N
~
C
GIu
A
x
u
B
A
X
+
K
3
-
A
A
+
]
A
9x
t6
H
E
M
PQ
E
}
9
}
u
h
A
n
E
A
A
Y
+
K
{
~
A
3
9h
*
3
~
O
A
H
A
9h
|
A
3
A
A
P
*
t
t
A
G
I
;
D9
u
A
G
I
D9
u
A
t
h
A
=
B
>
A
A
PSj
A
P
(
B
u
A
t
h
A
a
=
B
u
(
u
A
P
q
A
x
3
A
5
B
B
H
B
A
]
X
D
A
H
_
B
^
[
d
V
A
W
5
B
A
;
5
A
t
3
0
A
E
f
(
A
t
B
5
B
A
3
}
A
;
t4
E
A
=
|
3
0
A
<
E
A
3
}
A
;
u
3
F
E
A
95
A
E
A
a
_
^
S
T
V
4U
f
(
A
t
A
B
B
A
EB
A
;
t5
U
A
|
3
0
A
U
A
3
4E
A
;
u
U
A
3
^
E
A
[
#
I
V
B
W
5
A
A
J
A
;
vW
z
B
T
D
;
v
H
JH
=
A
9G
r
+
|
A
H
B
;
v
h
A
|
N
D
=
B
_
B
5
A
^
S
B
A
A
8
3
A
B
;
A
A
wW
B
A
tH
t
t
[
f
u
?
9
B
u
A
P
B
A
A
8
t
/
*
B
A
B
[
A
h
<
A
A
3
P
A
A
A
[
B
J
d
A
u
h
A
P
L
A
QP
D
l
T
9
A
tG
=
A
t
)
B
A
A
A
A
B
A
A
A
B
A
H
B
P
A
B
A
B
I
Vj
(
(
u
h
A
D
F
P
F
u
h
A
F
D
PV
I
^
V
t
t
-
;
5
A
u
A
~
t
F
P
V
^
d
d
V
t
V
E
D
F
t
"
P
o
P
R
-
3
F
^
F
^
T
3
B
J
B
H
B
B
J
B
;
A
u
SV
\
W
rh
t
x
u
[
x
uUj
(
u
h
A
3
_
w
w
G
W
_
_
G
G
G
G
_
^
[
3
_
^
[
3
D
8
t
A
<
u
QP
d
SV
t
W
^
S
P
u
h
A
3
~
L
B
;
D
|
>
SW
u
h
A
_
F
^
[
A
9
A
L
A
A
=
A
Pu
A
P
A
=
A
u
h0
A
j
A
A
H
+
A
D
A
A
A
y
h
A
A
A
A
d
D
Ph
A
h
B
j
r
D
P
v
#
D
L
PQ
#
D
P
6
4
B
=
4
B
~
p
B
p
B
Q
3
SV
\
W
tE
A
t5S
A
h
A
P
A
u
Sh
A
A
B
h
A
L
A
B
_
^
[
D
P
"
D
L
PQ
"
D
t
P
B
#
D
S
\
VWPS
N
L
<
t5
r
:
u
t
H
:
N
u
u
3
t1
R
u
j
R
u
h4
B
/
t
F
0
_
^
[
F
D
L
^
F
3
N
7_
^
[
D
je
L
h
B
Pj
Q
h
P
/
d
D
jeh
B
P
d
d
D
V
t
WPV
O
L
t5
x
:
u
t
Q
:
W
u
u
3
t
u
B
_
^
d
S3
V3
L
8
t
t
3
C
P
<
u
^
[
D
jeh
B
j
P
P
D
P
/
P
F
t
h
\
B
D
jeh
B
P
d
d
B
j
(
B
P
B
Q
t
B
B
B
B
j
QR
B
B
B
j
QR
B
B
B
j
QR
B
B
B
j
QR
z
B
V
B
t
PV
?
B
B
9
B
3
V
B
B
jeh
B
B
B
Qj
Q
t
Vhp
B
h
B
B
h
q
B
B
B
5
B
D
B
B
^
D
jeh
B
P
d
d
SVWU3
4
B
I
;
}
*
0
W
0
h
VQP
]
_
^
[
B
<
|
4
t
T
;
~
2
t
[
4
8
9
B
t
B
u
9
D
PR
8
t
D
PS
4
Q
4
D
B
T
4
;
}
Q
tK
QVR
B
;
D
}
+
D
4
B
u
D
4
t
;
t
~
n
0
8
PV
4
;
T
Q
]
_
^
[
8
B
Wh
VPQ
i
]
_
^
[
D
C
0
PR
V
Q
L
0Q
1
;
L
8
PVQ
_
S
v
]
_
^
[
d
d
p
B
B
S
B
V
<
B
W
B
=
C
Ut
Ph0
B
h
B
AB
B
p
B
B
;
B
|
3
p
B
B
;
B
}
95p
B
3
9
B
|
K
3
8
B
-
B
9
C
t
0
B
~
l
~
l
~
G
B
;
B
~
W
B
h
B
T
PQFR
95p
B
v
]
_
^
[
V
P
B
j
h
B
P
P
B
Q
t
B
P
B
B
h
B
j
QR
B
h
Q
v
^
SV
\
WU
~
!
=
B
}
]
_
^
[
5
B
+
5
B
5
B
|
B
;
P
B
|
Q
B
;
P
B
}
3
B
9h
u
9
(
t
+
F
B
;
P
B
|
B
;
P
B
}
F
B
B
B
T
B
D
;
t
!
}
t
8
u
;
u
;
t
F
L
]
_
^
[
I
V
P
B
B
PQ
Z
3
B
p
B
B
9
C
t
;
B
4
B
;
|
|
B
r
0
B
B
;
~
B
^
I
V
B
B
B
B
B
;
P
B
|
B
B
;
P
B
}
h
B
B
B
B
B
B
95
B
|
3
B
h
B
B
B
B
F
95
B
}
B
B
B
B
B
8
B
^
B
p
B
B
SV
\
WU
u7
B
L
|
(
u
8
B
T
(
]
_
^
[
T
;
|
D
t
u
|
(
u
G
;
~
u
#
T
(
D
R
T
(
QWR
]
_
^
[
~
D
t
u
|
(
u
N
R
;
B
;
~
C
B
8
t
C
8
u
;
+
l0
;
-
P
B
|
;
-
P
B
}
;
}
D
t
]
u
|
(
tO
B
+
<
t
=
C
;
P
B
}
8
t
C
;
P
B
|
+
l0
;
-
P
B
|
;
-
P
B
}
O
A
;
~
B
C
;
+
.
D
D
;
P
B
|
i
D
;
P
B
}
L
B
8
B
T
(
;
C
D
+
F
E
t
u
|
(
t
=
h
B
B
Nu
9
B
u
'
B
B
B
8
t
B
8
u
B
L
;
]
B
_
^
[
I
V
t
95
B
}
5
B
B
B
<
t
)
P
B
B
9
B
|
t
B
B
<
u
T
B
+
B
L
58
B
5
B
B
5
B
h
B
D
B
9
B
~
#
B
P
B
B
B
9
B
|
^
V
L
B
=
L
B
2
}
L
B
B
=
}
L
B
x
B
B
x
B
B
B
B
t
B
D
t
B
C
I
B
B
=
B
|
t
B
B
Hu
^
p
B
SVW
5p
B
U3
5
B
B
;
B
|
j
8
B
B
B
t
B
PQ
8
B
9
B
|
M
9
u
-
8
B
D
-
8
B
D
<
G
\
9
B
}
=
C
t
j
B
L
Ph0
B
h
B
WQ
9
S
p
B
P
8
B
P
(
B
QRP
B
P
p
B
PQ
RP
]
_
^
[
d
V
B
t
W
;
t_
x
B
;
u
B
x
B
B
B
<
B
B
t
B
B
5
B
B
4
B
_
^
D
SVW
t
PV
B
L
B
T
B
9
B
|
/
>
t
=
B
=
h
B
B
;
B
~
B
9
B
}
B
_
^
[
C
=
|
D
L
T
P
D
QRP
T
C
D
P
B
T
B
D
B
C
S3
\
V
L
W
|
I
B
B
4
B
;
~
(
O
9
u
C
Ju
_
^
[
K
Ju
_
^
[
I
=
d
C
S
u
t
u4
d
C
=
C
u
h
B
*
C
=
B
=
B
t
#
p
B
Ph
B
h
B
B
#
tP
t6
(
B
PSh
B
h
B
[
"
=
w
3
h
B
h
B
R
[
d
B
x
B
B
h
B
j
=
C
B
[
d
B
x
B
[
B
h
B
S
[
(
B
"
[
w
3
0
=
(
B
so
=
B
~
hW
(
B
P
(
B
B
3
f
J
%
W
t6
d
B
x
(
B
B
[
B
h
B
(
B
P
[
(
B
Ph
B
h
B
2
[
(
B
Ph
B
h
B
[
(
B
Ph
B
h
B
[
h
B
h
B
=
C
B
[
h
B
h
B
[
h
B
h
B
[
h
B
h
B
h
B
[
(
B
Ph
B
h
B
j
[
h
B
h
B
T
[
B
Ph
B
h
B
8
[
B
Ph
B
h
B
[
0
F
a
}
I
d
SV
t
WU
~
F
"
t
F
F
F
f
F
3
F
F
F
F
u
&
B
t
B
u
W
\
u
V
F
tu
F
+
F
H
F
~
"
S
F
PW
C
]
_
F
^
[
B
t
C
t
j
j
W
D
N
D
SPW
;
t
]
N
_
^
[
D
]
%
_
^
[
]
_
F
^
[
SV
t
WV
L
D
PQV
~
VW
"
_
^
[
S
\
VW
+
U
t
i
V
N
VUj
S
+
VW
]
_
^
[
=
C
Vu
C
=
C
}
C
j
C
P
C
u
)
C
j
j
C
u
j
(
B
3
C
L
P
|
3
0
B
C
t
u
F
B
r
^
=
B
t
m
Q
=
L
r
-
=
s
+
P
D
L
V
D
B
D
Q
D
D
D
T
0RP
L
x
D
D
^
D
Pj
^
u
3
L
P
D
T
PQR
_
D
j
L
PQ
V
t
F
t
V
?
3
V
L
j
T
QR
F
F
F
^
C
t
h
A
h
A
h
A
h
A
D
j
j
P
2
D
j
j
P
B
|
SV
\
B
u
?
=
C
t
5
C
;
5
C
r
t
;
5
C
s
h
A
h
A
'
h
A
h
A
u
D
P
!
C
^
[
VW
t
|
;
v
t
;
w
_
^
VW
t
F
t
F
_
^
tBV
V
F
P
1
}
F
t
P
F
F
_
^
VWh
B
d
L
D
PQh
B
;
h
B
W
_
^
L
S
A
=
w
B
3
f
J
#
D
[
3
B
DX
t
T
D
L
L
D
L
j
j
QP
D
Pj
_
u
3
[
D
%
#
D
[
=
p
B
S
\
u
A
|
Z
[
}
0
=
B
~
j
S
"
B
3
f
Y
u
[
3
B
DP
t
L
D
\
\
D
L
j
j
p
B
QP
D
Ph
R
u
[
u
3
D
[
3
3
D
L
[
+
W
D
I
|
(
|
|
I
D
0
L
P
T
0
L
RQ
!
_
SVWU
h
B
=
T
+
h
B
q
Vj
R
;
u
)
-
D
B
x
B
B
h
B
j
3
h
B
S
~
]
_
^
[
SV
t
WU
l
3
]
_
^
[
|
Nt
+
G
H
G
x
3
A
W
t
C
<
u
]
_
^
[
;
u
3
]
_
^
[
D
D
S
D
V
D
D
WU
u
3
]
_
^
[
\
C
t
C
D
D
|
C
%
t3
S
t
;
r
;
t
+
)
C
T
9l
wc
t
S
|
t
+
t
+
D
VP
K
Q
?
tx
+
D
;
sF
D
+
K
+
t
]
_
^
[
D
S
Q
W
tXM
C
D
D
D
D
(
]
_
^
[
D
+
+
t
]
_
^
[
D
+
K
+
t
]
_
^
[
D
+
+
t
]
_
^
[
L
D
S
L
V
D
D
WU
u
3
]
_
^
[
\
C
t
C
D
D
|
C
t2
C
t
+
;
r
|
3
+
)
S
T
^
9l
w8
|
t
+
t
+
Q
C
L
QP
+
tA
tT
+
D
S
|
tV
L
M
D
C
D
_
D
(
]
_
^
[
D
+
K
+
t
]
_
^
[
D
+
K
+
t
]
_
^
[
D
+
+
t
]
_
^
[
V
t
F
t
F
^
F
u
V
F
F
N
P
V
QR
*
F
tl
tg
V
u3
N
B
t
C
<
u
V
~
u
F
t
u
F
N
A
3
^
F
F
^
^
B
L
PQ
VW
t
v
3
_
^
u
|
V
u
t
V
L
u
3
_
^
D
p
C
Pj
Q
C
SV
t
W
|
u
W
k
_
^
[
u
V
J
3
_
^
[
C
p
C
v
3
WVj
P
u
=
B
t
W
+
p
C
u
3
_
^
[
D
t
Pj
p
C
P
C
d
U
j
h
PA
h49A
Pd
%
SVW
e
C
3
B
B
B
B
d
+
E
5
C
C
C1
B
t
=
C
u
j
:
.
-
B
B
P
B
P
B
P
LG
P
'
E
E
E
P
E
P
+
e
E
P
E
E
_d
^
[
]
=
B
t
5
D
P
(
6
h
B
T
9
t
C
SVWU
C
D
L
D
D
+
3
4
t
;
u
3
]
_
^
[
t
j
j
R
D
L
A
D
0
+
0
;
\
+
0
;
s
G
<
u
FC
C
L
+
=
|
D
j
+
L
(
D
T
PSQ
L
R
C
t
=
D
D
;
}
9
D
j
4
PU
RQ
C
t
D
D
D
C
D
|
|
tG
|
u
#
B
D
]
_
B
^
[
D
P
k6
]
_
^
[
D
L
D
t
0
8
u
3
]
_
^
[
]
B
B
_
^
[
D
]
+
_
^
[
]
B
B
_
^
[
L
SV
;
t
C
W
C
4
D2
tiQ
8
u
_
B
^
[
L
T
Qj
RP
C
u
C
t
P
J5
_
^
[
_
d0
^
[
_
B
B
^
[
DSVWUh
u
j
5
C
t
C
;
v
%
3
N
F
V
C
;
w
D
P
C
f
|
B
|
D
D
D
8
X
4
|
;
=
t
C
~
]
C
h
tA
E
t
C
;
v
3
H
U
;
w
;
=
t
C
=
t
C
3
~
?
t
/
t
*
P
C
t
C
Q
EC
;
|
3
=
C
C
;
uS
C
t
F
P
t
(
U
C
t
%
+
u
K
u
K
K
K
F
|
t
C
P
C
]
_
^
[
D
V
B
t
h
F
t
N
F
N
F
F
F
F
F
^
T
9
t
C
w
3
C
3
D
VW
t
F
P
u
3
_
^
B
u
3
B
u
^
B
F
t
3
_
^
<
(
B
?
u
h
u
3
_
^
F
_
F
F
N
^
3
_
^
|
V
t
t
F
t5V
X
f
F
F
^
F
t
V
^
H
P
S
T
V
D
W
U
D
%
t
X
|
X
|
(
|
x
3
OA
3
L
PA
L
P
A
D
L
D
H
D
4
D
8
D
3
t
<
u
3
A
p
A
^
S
K
C
;
*
u
*
d
P
D
8
D
4
D
4
LQ
L
4
D
*
u
)
d
P
G
D
D
D
LQ
L
I
.
3
A
A
86u
x
4u
c
D
3
B
D
<
DA
t
)
D
(
\
PQR
l
D
(
\
PQR
D
(
]
_
^
[
H
C
5
3
A
A
0
u
d
P
u
#
P
D
\
P
1
f
D
H
Y
D
L
D
X
|
D
x
D
z
0
u
|
t
\
d
P
r
D
u
L
B
D
l
3
D
<
f
E
f
P
D
P
0
;
|
d
P
t
:
H
t3
t
D
<
8
L
D
<
8
L
H
B
D
+
y
c
y
d
P
L
t
f
D
H
)
t
<
4
D
D
D
t
D
0
D
8
D
D
Q
D
t
.
d
P
D
T
(
D
D
'
t3
d
Pt
D
T
D
+
d
Pt
D
T
D
D
t
/
|
(
|
|
s
D
L
D
L
0
D
L
D
L
0
u
d
d
0
|
}
D
|
0
u
|
u
D
8
W
D
D
L
|
0
u
|
t
]
|
D
L
0
T
T
\
SRQP
/
X0
L
0
D
T
l
URQP
.
D
9
T
0
~
\
D
D
L
W
+
|
D
D
80u
G
L
D
0
u
gu
D
d
d
H
P
L
P
D
L
L
T
TP
D
\
Q
L
XRP
Q
B
t
|
u
D
XP
B
gu
u
D
XP
B
|
X
-
u
D
Y
D
|
+
y
G
y
D
\
D
X
D
|
u
H
B
D
|
K
t
?
t
G
K
u
+
|
|
H
t3
t
D
-
t
D
+
t
D
D
8
D
4
+
+
D
8
D
u
D
(
\
T
PQRj
G
D
(
\
T
8P
D
QRP
h
t
u
D
(
\
T
PQRj0
|
<
tI
~
E
l
_
L
f
PQ
~
?
L
(
\
QRP
D
P
K
u
D
(
\
T
PQWR
D
(
\
T
PQRj
i
p
d
A
A
;
A
A
A
A
A
A
Y
A
a
A
l
A
t
A
|
A
A
I
:
A
A
A
A
A
A
e
A
e
A
A
A
%
A
A
A
p
A
A
A
A
A
A
9
A
A
A
T
B
H
B
x
L
3
A
L
RQ
D
u
SV
t
W
|
U
\
l
O
~
USV
}
u
]
_
^
[
SV
t
W
|
U
\
l
O
~
UFS
Q
G
}
u
]
_
^
[
D
A
D
A
Q
D
f
A
VW
|
|
u
5
C
p
C
v
3
Wj
P
u
=
B
t
W
p
C
u
3
_
^
SVW3
U
9
=
C
~
Y
C
t7
h
t
P
t
F
P
|
C
Q
C
G9
=
C
]
_
^
[
V
t
u
j
^
V
5
t
^
F
t
F
P
*
^
3
^
SV
t
W3
F
u
<
t5
F
+
~
*
SP
F
P
m
;
u
F
t
F
N
F
F
_
^
[
j
SVW3
U3
3
|
C
0
t8
A
t1
u
Q
t
C
u
t
Q
u
|
t
]
_
^
[
L
SV3
WU3
at
rt
wt
3
]
_
^
[
3
50
B
50
B
9
+
Iw
D
T
A
D
D
A
3
t
3
t
3
t
3
w
m
t
3
e
[
t
3
R
J
t
3
A
9
t
3
1
t
3
t
3
A
9
D
h
L
PRQ
(
}
3
]
_
^
[
D
3
B
]
_
p
^
H
[
H
H
P
A
D
A
U
A
g
A
y
A
A
A
A
A
A
VW3
3
95
C
~
P
C
t
P
t
G9
=
C
C
4
"
j
C
C
t
3
t
F
F
F
F
F
_
^
SVWU
|
9
=
t
C
C
4
D1
tr
t
u
j
H
j
<
;
t
W
/
P
C
u
C
3
W
#
t
U
!
]
_
^
[
]
_
D0
3
^
[
]
B
B
_
^
[
V
t
F
t
+
t
'
F
P
f
F
F
^
T
B
SVWUuL
D
5
!
C
Pj
hX
B
j
j
t
/
D
Pj
h
\
B
j
!
C
t
3
]
_
^
[
5
!
C
T
B
u
-
T
u
p
B
L
D
\
Q
L
PSQR
]
_
^
[
T
B
ux3
3
|
(
;
u
=
B
D
j
L
j
PQj
W
!
C
t
>
Uj
f
t
-
D
U
L
VPQj
W
!
C
t
L
QP
D
VP
!
C
V
]
_
^
[
S
d
B
V
WUuOj
5
!
C
j
j
hX
B
h
j
t
0j
j
j
h
\
B
h
j
!
C
t
3
]
_
^
[
5
!
C
|
d
B
~
D
WP
d
B
d
B
u
!
D
(
L
T
P
D
Q
L
WRPQ
]
_
^
[
d
B
3
9t
u
B
D
D
j
L
0j
WPj
Q
!
C
u
3
]
_
^
[
m
P
u
3
]
_
^
[
D
U
L
0SWPj
Q
!
C
tS
D
j
L
j
USPQ
!
C
t7
D
tI
D
(
;
L
P
D
(
T
PUSQR
!
C
S
V
3
]
_
^
[
}
P
t
D
W
L
VUSPQ
!
C
t
D
(
j
j
u
D
4j
j
-
!
C
WVh
P
u
&
L
4P
D
0
-
!
C
PWVh
Q
i
S
h
V
_
]
_
^
[
D
VW
|
H
t
:
t
B
I
u
:
u
+
_
^
D
D
D
8
SV
\
hWU
]
=
B
~
j
3
Q
P
3
B
3
f
J
t
;
D
U
L
UP
P
3
P
(
u
9
%
H
3
3
|
|
<
D
D
8
D
D
D
D
D
D
t
(
3
=
B
D
~
j
3
D
P
3
B
L
3
f
J
t
D
D
<
tH
q
L
*
Mwa3
*
A
*
A
D
P
y
6u
?
A
84u7
D
(
D
0
D
4
D
L
L
D
D
D
|
(
|
u
!
D
L
H
L
D
|
u
<
St
<
Ct
L
D
3
L
nt
)
ct
{
t
D
UP
D
U
|
<
t
L
c
w
3
+
A
+
A
3
;
L
|
O
D
L
?
|
<
u
F
D
<
|
~
D
D
(
B
T
|
p
-
u
D
p
-
|
q
+
u
NU
D
|
<
t
]
~
]
=
B
~
j
S
z
B
3
f
Y
t
N
t
G
D
U
D
8
B
ug
N
t
D
UG
i
B
G
=
B
~
j
S
B
3
f
Y
t
N
t
G
D
U
D
|
et
Eu
|
N
tu
eG
D
U
-
u
-
G
+
u
N
u
F
D
U
=
B
~
j
S
k
B
3
f
Y
t
N
t
G
D
L
US
|
"
|
q
D
p
L
D
HP
D
QHP
B
K
D
d
-
D
|
|
!
D
-
\
D
[
|
~
D
D
(
B
(
|
~
D
L
(
9
^
u
A
L
(
D
8
|
P3
|
{
u
D
(
8
]
u
D
]
D
[
D
(
D
(
8
]
D
(
D
(
-
uh
|
ta
D
(
<
]
tW
D
(
8D
s
D
D
L
L
D
D
D
:
D
Dw
*
D
L
L
T
P8D
Ds
D
3
L
D
P
D
(
8
]
d
D
(
8
|
{
u
|
U
L
S
|
<
t
N
D
U
D
P2D
8
tw
|
uj
|
tT3
B
\
DA
t
D
U
9
D
B
L
T
PQR
]
!
f
T
L
8
D
8
f
V
L
D
G
G
A
L
US
;
|
|
D
H
|
c
|
L
t
f
+
Nu
|
<
t
D
D
U
y
+
u
Nu
|
<
t
D
D
U
O
0u
^
D
U
;
xt3
Xt
.
D
|
xt
D
o
L
US
8
0
D
U
D
x
|
(
|
x
|
xuY
=
B
~
h
S
v
B
3
f
Y
%
D
0
L
4
S
D
4
L
8
;
=
B
~
j
S
B
3
f
Y
|
ou
"
8
D
0
L
4
D
0
L
4
q
D
8
D
8
D
D
D
T
D
8
D
D
T
D
D
D
8
T
0
D
8
D
4PR
D
PQ
D
0
T
4
D
|
u1
C
D
D
0
T
4
|
<
t
Nu
D
D
U
y
L
US
|
|
D
0
L
4
D
0
L
4
|
|
xtM
|
ptF
=
B
~
j
S
B
3
f
Y
t
[
|
ou
8
}
O
N
<
E
B
=
B
~
h
S
B
3
f
Y
%
t
S
\
D
|
u
)
|
;
D
|
<
t
Nu
D
D
U
h
L
US
|
!
|
t
|
Fu
D
|
|
u0
D
H
|
(
t
T
D
0
L
4
J
|
L
t
9
f
9
D
\
U
D
3
;
uf3
B
DH
t
'
U
D
3
;
u
%
L
9
%
u
(
y
n
L
UP
L
US
{
u
-
|
H
u
|
u
]
_
^
[
D
H
]
_
^
[
D
H
]
_
^
[
I
&
A
|
A
A
^
A
|
A
d
A
n
A
r
A
x
A
s
!
A
#
A
!
A
g
#
A
#
A
#
A
#
A
#
A
#
A
o
#
A
#
A
A
!
A
=
B
V
~
t
j
V
B
3
t
f
q
t
^
F
^
T
B
H
B
x
A
3
R
A
D
t
L
QP
<
SV
t
W
|
W
S
u
_
^
[
D
;
t
C
SVWU
+
C
D
E
T
(
L
D
Ht
<
t
BI
E
D
D
D
j
PQR
M
R
!
C
uL
C
u
]
B
_
B
^
[
mu
3
]
_
^
[
P
G
]
_
^
[
D
M
D
D
)
|
t
T
(
:
u
|
(
D
D
;
<
<
t
F
L
I
;
v
N
9
u
Fj
D
L
P
U
D
j
QP
!
C
u
C
D
|
uX
|
tQ
E
D
Ht
|
u
>
G
D
M
D
.
;
|
(
u
|
u
D
j
j
P
Y
|
t
G
;
t
&
E
D
u
+
|
(
|
D
]
_
^
[
3
]
_
^
[
]
B
B
_
^
[
B
t
D
P
t
3
j
h
j
C
p
C
U
SVWUj
j
h
.
A
u
]
_
^
[
]
L
A
t
D
T
SVW
D
Pj
h
.
A
d
5
d
%
D
X
p
t
.
;
t
t
(
4v
L
H
|
u
h
D
T
d
_
^
[
3
d
y
.
A
u
Q
R
9Q
u
SQ
B
SQ
B
M
K
C
k
Y
[
D
VWP
T
:
P
/
u
_
^
u
_
^
50
B
L
0
B
x
B
B
9
B
}
"
B
I
<
B
B
Iu
=
B
=
u
B
p
=
u
B
]
=
u
B
J
=
u
B
7
=
u
B
=
u
B
=
u
B
B
Pj
=
B
P
_
50
B
^
L
Q
!
C
_
^
B
L
9
t
(
B
B
;
w
+
#
B
SVW3
U
:
t
:
=
t
F
+
:
u
P
U
B
u
j
-
B
}
t
^
+
L
}
=
t
=
Q
u
j
"
+
+
;
l
}
u
B
P
]
_
^
[
VWh
B
Vj
(
!
C
C
5
B
8
t
5
C
D
L
PQj
j
V
^
D
D
P
Z
u
j
j
D
L
T
PQ
PWV
D
H
=
B
_
B
^
L
S
T
V
t
W
D
U
|
t
T
D
>
"
tF
t
F3
A
B
t
t
F
t
t
u
u
N
P
tL
FF
>
"
t0
t
*
3
A
B
t
t
F
t
F
>
"
u
t
>
"
u
F3
>
t
u
F
>
|
t
T
D
T
3
>
\
u
FE
>
\
t
>
"
u
u
t
V
:
"
u
3
M
t
t
\
M
u
tO
u
tF
tA
t7
t
!
3
A
B
t
F
F
P
o
3
A
B
t
F
F
W
t
|
t
T
T
]
_
^
[
=
8
B
SVWUu
58
!
C
t
8
B
\
0
0
!
C
t
8
B
3
]
_
^
[
|
\
58
!
C
=
8
B
u
u
3
]
_
^
[
f
?
t
f
>
u
f
>
u
+
j
j
Fj
j
VWj
j
!
C
tAU
o
t2j
j
USVWj
j
!
C
u
S
:
3
W
4
!
C
]
_
^
[
W
4
!
C
3
]
_
^
[
=
8
B
u
{
u
0
!
C
u
3
]
_
^
[
;
t
E
}
u
E
}
u
+
EU
D
u
S
!
C
3
]
_
^
[
|
S
!
C
D
]
_
^
[
3
]
_
^
[
D
SVWUP
9
-
D
B
u
3
]
_
^
[
u
_
3
]
_
^
[
D
h
B
9
(
0
D
=
X
B
r
D
PU
<
!
C
C
B
3
|
t
8D
t
N
t
%
3
3
;
r
A
B
3
N
;
s
>
u
A
B
=
r
U
-
D
B
M
B
3
L
I
<
U
8
4
x
B
>
t1
N
t
*
3
3
;
r
B
A
B
B3
^
;
s
>
u
r
U
-
D
B
H
B
D
p
B
P
B
l
B
]
_
^
I
3
Z
[
J
3
D
B
P
B
]
_
H
B
3
^
[
A
A
=
\
B
t
3
]
_
^
[
]
_
^
[
\
B
D
u
\
B
%
D
!
C
u
\
B
%
!
C
u
\
B
B
D
-
w
3
8A
8A
3
8A
8A
8A
8A
8A
W3
B
P
B
P
B
_
D
B
H
B
A
A
j
9
VC20XC00U
SVWU
]
E
E
E
E
E
C
s
{
ta
v
|
tEVU
k
T
]
^
]
t3x
<
{
S
E
k
VS
z
vj
D
C
T
{
v
4
U
k
j
S
:
]
]
_
^
[
]
U
L
)
A
P
A
P
]
B
t
u
.
=
B
u
%
h
H
B
t
h
3
B
S
VWU9
t
H
B
r
9
B
=
B
_
=
B
u
=
B
I
x
h
P
-
(
!
C
j
u
B
f
+
<
v
&
+
j
l
|
h
B
U
C
x
B
|
f
+
+
|
+
O
t
B
+
+
|
+
O
B
+
+
|
+
O
h
hL
B
D
P
]
_
^
[
C
p
u
j
C
B
j
D
P
+
IQRV
C
]
_
^
[
D
3
B
B
9
t
!
A
B
r
r
w
B
B
B
=
r
=
w
B
B
SVW
U3
3
C
tF
;
s
!
J
t
;
r
+
4
*
ui
G
C
r
]
_
^
[
h
tB
C
t
C
;
v
#
3
H
P
3
;
w
]
_
^
[
L
SV
;
t
C
Wsw
C
4
<
2
uU
=
B
u
=
t
t
t
-
\
Sj
H
!
C
"
\
Sj
H
!
C
\
Sj
H
!
C
\
_
03
^
[
_
B
B
^
[
L
VW9
t
C
vf
C
4
tB
8
t
=
=
B
u
&
t
t
t
j
j
j
j
j
j
H
!
C
_
0
3
^
_
B
B
^
L
9
t
C
v
C
t
B
B
L
u
3
=
p
B
u
+
f
|
v
B
*
D
D
B
D
Pj
R
B
Qj
L
Qh
P
!
C
t
|
t
B
*
SV
D
u
L
D
3
D
A
\
T
D
u
d
D
r
;
T
w
r
;
D
v
N3
^
[
S
D
u
L
D
3
D
3
P
\
T
D
u
d
d
r
;
T
w
r
;
D
v
+
D
T
+
D
T
[
T
;
t
C
sS
C
D
t8R
P
L
!
C
u
C
t
B
B
B
3
D
S
D
V
t
W
D
Uu
D
(
t
2
u
B
-
t
+
t0
t5
]
B
B
_
^
[
D
D
D
D
8
0w
3
DA
DA
]
B
B
_
^
[
D
D
D
D
%
=
tc
tU
2
=
th
=
tW
=
t
=
t1
=
t
<
=
tI
]
B
B
_
^
[
D
&
D
D
D
D
t
B
#
D
<
u
t
L
t
t
t
u
!
]
B
B
_
^
[
D
j
L
U
T
P
D
Q
L
RP
-
P
!
C
Q
u
C
P
]
_
^
[
U
C
u
#
U
C
C
P
]
_
^
[
u
u
U
W
C
U
D
\
H
D
j
j
W
]
u
&
=
B
W
]
_
^
[
D
j
D
PW
u
|
u
%
SW
u
W
]
_
^
[
j
j
W
u
W
]
_
^
[
|
u
t
E
L
L
]
_
^
[
I
AA
AA
AA
BA
AA
U
WV
u
}
M
;
v
;
uR
XEA
EA
EA
|
EA
hEA
f
f
F
G
E
^
_
f
f
E
^
_
.
E
^
_
v
#
+
XEA
.
E
^
_
.
u_
EA
.
FA
(
FA
FA
FA
f
F
f
G
F
G
E
^
_
f
F
f
G
E
^
_
F
G
E
^
_
NO
v
%
+
EA
E
^
_
U
WV
}
u
M
t
2
^
_
D
L
L
u
D
S
D
d
D
[
VW
t
|
u
L
t
f
3
_
^
=
p
B
u
L
t
f
f
_
^
3
B
DH
t
=
B
~
/
;
=
B
|
-
L
B
PQ
B
QVj
R
!
C
u
;
=
B
r
~
t
B
_
^
_
B
*
^
L
PQj
B
Vj
Q
!
C
u
_
B
*
^
_
^
3
_
^
=
B
~
L
j
Q
[
B
3
L
f
J
SV
\
tu
t
F
u
tf
ub
~
u
V
9F
u
~
t
^
[
F
t
H
8
t
^
[
H
F
F
F
F
%
^
[
^
[
SVW3
95l
B
uBh
B
X
!
C
tnh
B
=
T
!
C
S
l
B
tWh
B
S
hx
B
p
B
S
t
B
p
B
t
t
=
t
B
t
V
t
B
D
L
T
PQRV
l
B
_
^
[
3
_
^
[
j
SVW3
U95t
C
*
C
D
j
SV
D
j
SV
+
~
e
|
3
h
V
;
}
P
D
PV
.
t
+
=
B
u
B
WV
=
}
;
j
QV
"
V
Y
P
\
!
C
u
B
C
B
D
j
PV
]
_
^
[
]
_
^
[
]
B
_
^
[
U
WV
}
3
O
}
W
M
u
A
+
M
^
^
_
L
S
;
t
C
sb
C
L
tF
3
D
=
u
=
u
[
%
[
B
[
B
%
!
C
D
P
!
C
u
C
t
P
|
3
D
P
D
A
A
EEE
50
P
(
8PX
700WP
ppxxxx
P
-
%
s
State
#
%
d
is
non
-
accepting
-
dangerous
trailing
context
associated
rule
line
numbers
:
%
d
out
-
transitions
:
jam
-
transitions
:
EOF
consistency
check
failed
in
epsclosure
(
)
DFA
Dump
:
long
short
static
yyconst
%
s
yy_nxt
[
]
[
%
d
]
=
{
{
}
could
not
create
unique
end
-
of
-
buffer
state
state
#
%
d
:
%
d
%
d
%
d
%
d
{
}
consistency
check
failed
in
symfollowset
bad
transition
character
detected
in
sympartition
(
)
static
yyconst
int
%
s
[
%
d
]
=
{
0
static
yyconst
short
int
%
s
[
%
d
]
=
{
0
static
yyconst
long
int
%
s
[
%
d
]
=
{
0
static
yyconst
yy_state_type
%
s
[
%
d
]
=
{
0
if
(
yy_current_state
[
-
1
]
.
yy_nxt
)
if
(
yy_accept
[
yy_current_state
]
)
{
yy_last_accepting_state
=
yy_current_state
;
yy_last_accepting_cpos
=
yy_cp
;
}
case
0
:
/
*
must
back
up
*
/
/
*
undo
the
effects
of
YY_DO_BEFORE_ACTION
*
/
*
yy_cp
=
yy_hold_char
;
yy_cp
=
yy_last_accepting_cpos
+
1
;
yy_cp
=
yy_last_accepting_cpos
;
yy_current_state
=
yy_last_accepting_state
;
goto
yy_find_action
;
static
yyconst
struct
yy_trans_info
yy_transition
[
%
d
]
=
{
}
;
static
yyconst
struct
yy_trans_info
*
yy_start_state_list
[
%
d
]
=
{
&
yy_transition
[
%
d
]
yy_ec
Equivalence
Classes
:
%
4s
=
%
-
2d
yy_act
=
yy_current_state
[
-
1
]
.
yy_nxt
;
yy_act
=
yy_accept
[
yy_current_state
]
;
yy_current_state
=
*
-
-
yy_state_ptr
;
yy_lp
=
yy_accept
[
yy_current_state
]
;
find_rule
:
/
*
we
branch
to
this
label
when
backing
up
*
/
for
(
;
;
)
/
*
until
we
find
what
rule
we
matched
*
/
{
if
(
yy_lp
&
&
yy_lp
<
yy_accept
[
yy_current_state
+
1
]
)
{
yy_act
=
yy_acclist
[
yy_lp
]
;
if
(
yy_act
&
YY_TRAILING_HEAD_MASK
|
|
yy_looking_for_trail_begin
)
{
if
(
yy_act
=
=
yy_looking_for_trail_begin
)
{
yy_looking_for_trail_begin
=
0
;
yy_act
&
=
~
YY_TRAILING_HEAD_MASK
;
break
;
}
}
else
if
(
yy_act
&
YY_TRAILING_MASK
)
{
yy_looking_for_trail_begin
=
yy_act
&
~
YY_TRAILING_MASK
;
yy_looking_for_trail_begin
|
=
YY_TRAILING_HEAD_MASK
;
yy_full_match
=
yy_cp
;
yy_full_state
=
yy_state_ptr
;
yy_full_lp
=
yy_lp
;
}
else
{
yy_full_match
=
yy_cp
;
yy_full_state
=
yy_state_ptr
;
yy_full_lp
=
yy_lp
;
break
;
}
+
+
yy_lp
;
goto
find_rule
;
{
yy_full_match
=
yy_cp
;
break
;
}
}
-
-
yy_cp
;
yy_current_state
=
*
-
-
yy_state_ptr
;
yy_lp
=
yy_accept
[
yy_current_state
]
;
}
yy_act
=
yy_accept
[
yy_current_state
]
;
if
(
yy_act
=
=
0
)
{
/
*
have
to
back
up
*
/
yy_cp
=
yy_last_accepting_cpos
;
yy_current_state
=
yy_last_accepting_state
;
yy_act
=
yy_accept
[
yy_current_state
]
;
}
yy_accept
state
#
%
d
accepts
:
[
%
d
]
register
YY_CHAR
yy_c
=
%
s
;
while
(
yy_chk
[
yy_base
[
yy_current_state
]
+
yy_c
]
!
=
yy_current_state
)
{
yy_current_state
=
(
int
)
yy_def
[
yy_current_state
]
;
if
(
yy_current_state
>
=
%
d
)
yy_c
=
yy_meta
[
(
unsigned
int
)
yy_c
]
;
}
yy_current_state
=
yy_nxt
[
yy_base
[
yy_current_state
]
+
(
unsigned
int
)
yy_c
]
;
yy_ec
[
YY_SC_TO_UI
(
*
yy_cp
)
]
YY_SC_TO_UI
(
*
yy_cp
)
yy_ec
[
YY_SC_TO_UI
(
*
+
+
yy_cp
)
]
YY_SC_TO_UI
(
*
+
+
yy_cp
)
while
(
(
yy_current_state
=
yy_nxt
[
yy_current_state
]
[
%
s
]
)
>
0
)
{
+
+
yy_cp
;
}
yy_current_state
=
-
yy_current_state
;
{
register
yyconst
struct
yy_trans_info
*
yy_trans_info
;
register
YY_CHAR
yy_c
;
for
(
yy_c
=
%
s
;
(
yy_trans_info
=
&
yy_current_state
[
(
unsigned
int
)
yy_c
]
)
-
>
yy_verify
=
=
yy_c
;
yy_c
=
%
s
)
{
yy_current_state
+
=
yy_trans_info
-
>
yy_nxt
;
}
}
do
{
+
+
yy_cp
;
}
while
(
yy_base
[
yy_current_state
]
!
=
%
d
)
;
while
(
yy_current_state
!
=
%
d
)
;
yy_cp
=
yy_last_accepting_cpos
;
yy_current_state
=
yy_last_accepting_state
;
(
*
yy_cp
?
yy_ec
[
YY_SC_TO_UI
(
*
yy_cp
)
]
:
%
d
)
(
*
yy_cp
?
YY_SC_TO_UI
(
*
yy_cp
)
:
%
d
)
yy_ec
[
YY_SC_TO_UI
(
*
yy_cp
)
]
YY_SC_TO_UI
(
*
yy_cp
)
if
(
*
yy_cp
)
{
yy_current_state
=
yy_nxt
[
yy_current_state
]
[
%
s
]
;
yy_current_state
+
=
yy_current_state
[
%
s
]
.
yy_nxt
;
}
else
yy_current_state
=
yy_NUL_trans
[
yy_current_state
]
;
*
yy_state_ptr
+
+
=
yy_current_state
;
register
char
*
yy_cp
=
yy_c_buf_p
;
yy_current_state
=
yy_NUL_trans
[
yy_current_state
]
;
yy_is_jam
=
(
yy_current_state
=
=
0
)
;
yy_current_state
=
yy_nxt
[
yy_current_state
]
[
%
d
]
;
yy_is_jam
=
(
yy_current_state
<
=
0
)
;
register
int
yy_c
=
%
d
;
register
yyconst
struct
yy_trans_info
*
yy_trans_info
;
yy_trans_info
=
&
yy_current_state
[
(
unsigned
int
)
yy_c
]
;
yy_current_state
+
=
yy_trans_info
-
>
yy_nxt
;
yy_is_jam
=
(
yy_trans_info
-
>
yy_verify
!
=
yy_c
)
;
%
d
*
yy_state_ptr
+
+
=
yy_current_state
;
yy_is_jam
=
(
yy_current_state
=
=
%
d
)
;
if
(
!
yy_is_jam
)
{
}
yy_current_state
=
yy_start_state_list
[
yy_start
+
YY_AT_BOL
(
)
]
;
yy_current_state
=
yy_start_state_list
[
yy_start
]
;
yy_current_state
=
yy_start
;
yy_current_state
+
=
YY_AT_BOL
(
)
;
yy_state_ptr
=
yy_state_buf
;
*
yy_state_ptr
+
+
=
yy_current_state
;
yy_acclist
state
#
%
d
accepts
:
[
%
d
]
yy_accept
state
#
%
d
accepts
:
[
%
d
]
Meta
-
Equivalence
Classes
:
yy_meta
%
d
=
%
d
yy_base
yy_def
yy_nxt
yy_chk
yytext_ptr
-
=
yy_more_len
;
\
yyleng
=
(
int
)
(
yy_cp
-
yytext_ptr
)
;
\
yyleng
=
(
int
)
(
yy_cp
-
yy_bp
)
;
\
if
(
yyleng
>
=
YYLMAX
)
\
YY_FATAL_ERROR
(
"
token
too
large
exceeds
YYLMAX
"
)
;
\
yy_flex_strncpy
(
yytext
yytext_ptr
yyleng
+
1
)
;
\
#
define
YY_NUM_RULES
%
d
#
define
YY_END_OF_BUFFER
%
d
long
short
struct
yy_trans_info
{
long
yy_verify
;
short
yy_verify
;
%
s
yy_nxt
;
}
;
static
yy_state_type
yy_last_accepting_state
;
static
char
*
yy_last_accepting_cpos
;
yy_NUL_trans
&
yy_transition
[
%
d
]
extern
int
yy_flex_debug
;
int
yy_flex_debug
=
1
;
yy_rule_linenum
static
yy_state_type
yy_state_buf
[
YY_BUF_SIZE
+
2
]
*
yy_state_ptr
;
static
char
*
yy_full_match
;
static
int
yy_lp
;
static
int
yy_looking_for_trail_begin
=
0
;
static
int
yy_full_lp
;
static
int
*
yy_full_state
;
#
define
YY_TRAILING_MASK
0x
%
x
#
define
YY_TRAILING_HEAD_MASK
0x
%
x
#
define
REJECT
\
{
\
*
yy_cp
=
yy_hold_char
;
/
*
undo
effects
of
setting
up
yytext
*
/
\
yy_cp
=
yy_full_match
;
/
*
restore
poss
.
backed
-
over
text
*
/
\
yy_lp
=
yy_full_lp
;
/
*
restore
orig
.
accepting
pos
.
*
/
\
yy_state_ptr
=
yy_full_state
;
/
*
restore
orig
.
state
*
/
\
yy_current_state
=
*
yy_state_ptr
;
/
*
restore
curr
.
state
*
/
\
+
+
yy_lp
;
\
goto
find_rule
;
\
}
/
*
The
intent
behind
this
definition
is
that
it
'
ll
catch
*
any
uses
of
REJECT
which
flex
missed
.
*
/
#
define
REJECT
reject_used_but_not_detected
static
int
yy_more_flag
=
0
;
static
int
yy_more_len
=
0
;
#
define
yymore
(
)
(
yy_more_flag
=
1
)
#
define
YY_MORE_ADJ
yy_more_len
#
define
yymore
(
)
yymore_used_but_not_detected
#
define
YY_MORE_ADJ
0
#
ifndef
YYLMAX
#
define
YYLMAX
8192
#
endif
char
yytext
[
YYLMAX
]
;
char
*
yytext_ptr
;
char
*
yytext
;
if
(
(
result
=
read
(
fileno
(
yyin
)
(
char
*
)
buf
max_size
)
)
<
0
)
\
YY_FATAL_ERROR
(
"
input
in
flex
scanner
failed
"
)
;
if
(
yy_current_buffer
-
>
yy_is_interactive
)
\
{
\
int
c
=
'
*
'
n
;
\
for
(
n
=
0
;
n
<
max_size
&
&
\
(
c
=
getc
(
yyin
)
)
!
=
EOF
&
&
c
!
=
'
\
n
'
;
+
+
n
)
\
buf
[
n
]
=
(
char
)
c
;
\
if
(
c
=
=
'
\
n
'
)
\
buf
[
n
+
+
]
=
(
char
)
c
;
\
if
(
c
=
=
EOF
&
&
ferror
(
yyin
)
)
\
YY_FATAL_ERROR
(
"
input
in
flex
scanner
failed
"
)
;
\
result
=
n
;
\
}
\
else
if
(
(
(
result
=
fread
(
buf
1
max_size
yyin
)
)
=
=
0
)
\
&
&
ferror
(
yyin
)
)
\
YY_FATAL_ERROR
(
"
input
in
flex
scanner
failed
"
)
;
#
define
YY_RULE_SETUP
\
if
(
yyleng
>
0
)
\
yy_current_buffer
-
>
yy_at_bol
=
\
(
yytext
[
yyleng
-
1
]
=
=
'
\
n
'
)
;
\
YY_USER_ACTION
yy_more_len
=
0
;
if
(
yy_more_flag
)
{
yy_more_len
=
yyleng
;
yy_more_flag
=
0
;
}
yy_match
:
if
(
yy_act
!
=
YY_END_OF_BUFFER
)
{
int
yyl
;
for
(
yyl
=
0
;
yyl
<
yyleng
;
+
+
yyl
)
if
(
yytext
[
yyl
]
=
=
'
\
n
'
)
+
+
yylineno
;
}
if
(
yy_flex_debug
)
{
if
(
yy_act
=
=
0
)
cerr
<
<
"
-
-
scanner
backing
up
\
n
"
;
fprintf
(
stderr
"
-
-
scanner
backing
up
\
n
"
)
;
else
if
(
yy_act
<
%
d
)
cerr
<
<
"
-
-
accepting
rule
at
line
"
<
<
yy_rule_linenum
[
yy_act
]
<
<
"
(
\
"
"
<
<
yytext
<
<
"
\
"
)
\
n
"
;
fprintf
(
stderr
"
-
-
accepting
rule
at
line
%
d
(
\
"
%
s
\
"
)
\
n
"
yy_rule_linenum
[
yy_act
]
yytext
)
;
else
if
(
yy_act
=
=
%
d
)
cerr
<
<
"
-
-
accepting
default
rule
(
\
"
"
<
<
yytext
<
<
"
\
"
)
\
n
"
;
fprintf
(
stderr
"
-
-
accepting
default
rule
(
\
"
%
s
\
"
)
\
n
"
yytext
)
;
else
if
(
yy_act
=
=
%
d
)
cerr
<
<
"
-
-
(
end
of
buffer
or
a
NUL
)
\
n
"
;
fprintf
(
stderr
"
-
-
(
end
of
buffer
or
a
NUL
)
\
n
"
)
;
else
cerr
<
<
"
-
-
EOF
(
start
condition
"
<
<
YY_START
<
<
"
)
\
n
"
;
fprintf
(
stderr
"
-
-
EOF
(
start
condition
%
d
)
\
n
"
YY_START
)
;
}
case
YY_STATE_EOF
(
%
s
)
:
yyterminate
(
)
;
yy_cp
=
yy_c_buf_p
;
yy_cp
=
yy_last_accepting_cpos
;
yy_current_state
=
yy_last_accepting_state
;
yy_cp
=
yy_c_buf_p
;
if
(
c
=
=
'
\
n
'
)
-
-
yylineno
;
yy_current_buffer
-
>
yy_at_bol
=
(
c
=
=
'
\
n
'
)
;
if
(
yy_current_buffer
-
>
yy_at_bol
)
+
+
yylineno
;
if
(
c
=
=
'
\
n
'
)
+
+
yylineno
;
(
#
)
Copyright
(
c
)
1990
The
Regents
of
the
University
of
California
.
All
rights
reserved
.
2
.
5
.
2
P
A
X
A
d
A
FILE
*
yyin
=
stdin
*
yyout
=
stdout
;
FILE
*
yyin
=
(
FILE
*
)
0
*
yyout
=
(
FILE
*
)
0
;
flex
lex
.
%
s
.
%
s
lex
.
backup
rule
cannot
be
matched
-
s
option
given
but
default
rule
can
be
matched
Can
'
t
use
-
+
with
-
l
option
Can
'
t
use
-
f
or
-
F
with
-
l
option
-
Cf
/
-
CF
and
-
Cm
don
'
t
make
sense
together
-
Cf
/
-
CF
and
-
I
are
incompatible
-
Cf
/
-
CF
are
incompatible
with
lex
-
compatibility
mode
-
Cf
/
-
CF
and
%
option
yylineno
are
incompatible
-
Cf
and
-
CF
are
mutually
exclusive
Can
'
t
use
-
+
with
-
CF
option
%
array
incompatible
with
-
+
option
cc
c
w
could
not
create
%
s
r
can
'
t
open
skeleton
file
%
s
yy
FlexLexer
FlexLexer
#
define
yy
%
s
%
s
%
s
_create_buffer
_create_buffer
#
define
yy
%
s
%
s
%
s
_delete_buffer
_delete_buffer
#
define
yy
%
s
%
s
%
s
_scan_buffer
_scan_buffer
#
define
yy
%
s
%
s
%
s
_scan_string
_scan_string
#
define
yy
%
s
%
s
%
s
_scan_bytes
_scan_bytes
#
define
yy
%
s
%
s
%
s
_flex_debug
_flex_debug
#
define
yy
%
s
%
s
%
s
_init_buffer
_init_buffer
#
define
yy
%
s
%
s
%
s
_flush_buffer
_flush_buffer
#
define
yy
%
s
%
s
%
s
_load_buffer_state
_load_buffer_state
#
define
yy
%
s
%
s
%
s
_switch_to_buffer
_switch_to_buffer
#
define
yy
%
s
%
s
%
s
in
in
#
define
yy
%
s
%
s
%
s
leng
leng
#
define
yy
%
s
%
s
%
s
lex
lex
#
define
yy
%
s
%
s
%
s
out
out
#
define
yy
%
s
%
s
%
s
restart
restart
#
define
yy
%
s
%
s
%
s
text
text
#
define
yy
%
s
%
s
%
s
lineno
lineno
#
define
yy
%
s
%
s
%
s
wrap
wrap
#
define
yy
%
s
%
s
%
s
input
error
reading
skeleton
file
%
s
error
closing
skeleton
file
%
s
error
writing
output
file
%
s
error
closing
output
file
%
s
error
deleting
output
file
%
s
No
backing
up
.
%
d
backing
up
(
non
-
accepting
)
states
.
Compressed
tables
always
back
up
.
error
writing
backup
file
%
s
error
closing
backup
file
%
s
%
s
version
%
s
usage
statistics
:
scanner
options
:
-
-
C
-
o
%
s
-
S
%
s
yy
-
P
%
s
%
d
/
%
d
NFA
states
%
d
/
%
d
DFA
states
(
%
d
words
)
%
d
rules
No
backing
up
%
d
backing
-
up
(
non
-
accepting
)
states
Compressed
tables
always
back
-
up
Beginning
-
of
-
line
patterns
used
%
d
/
%
d
start
conditions
%
d
epsilon
states
%
d
double
epsilon
states
no
character
classes
%
d
/
%
d
character
classes
needed
%
d
/
%
d
words
of
storage
%
d
reused
%
d
state
/
nextstate
pairs
created
%
d
/
%
d
unique
/
duplicate
transitions
%
d
table
entries
%
d
/
%
d
base
-
def
entries
created
%
d
/
%
d
(
peak
%
d
)
nxt
-
chk
entries
created
%
d
/
%
d
(
peak
%
d
)
template
nxt
-
chk
entries
created
%
d
empty
table
entries
%
d
protos
created
%
d
templates
created
%
d
uses
%
d
/
%
d
equivalence
classes
created
%
d
/
%
d
meta
-
equivalence
classes
created
%
d
(
%
d
saved
)
hash
collisions
%
d
DFAs
equal
%
d
sets
of
reallocations
needed
%
d
total
table
entries
needed
yy
-
-
help
-
h
-
-
version
-
V
-
-
-
C
flag
must
be
given
separately
unknown
-
C
option
'
%
c
'
-
o
flag
must
be
given
separately
-
P
flag
must
be
given
separately
-
S
flag
must
be
given
separately
%
s
version
%
s
%
s
:
unknown
flag
'
%
c
'
.
For
usage
try
%
s
-
-
help
fatal
parse
error
w
could
not
create
backing
-
up
info
file
%
s
-
l
AT
&
T
lex
compatibility
option
entails
a
large
performance
penalty
and
may
be
the
actual
source
of
other
reported
performance
penalties
%
%
option
yylineno
entails
a
large
performance
penalty
-
I
(
interactive
)
entails
a
minor
performance
penalty
yymore
(
)
entails
a
minor
performance
penalty
REJECT
entails
a
large
performance
penalty
Variable
trailing
context
rules
entail
a
large
performance
penalty
REJECT
cannot
be
used
with
-
f
or
-
F
%
option
yylineno
cannot
be
used
with
-
f
or
-
F
variable
trailing
context
rules
cannot
be
used
with
-
f
or
-
F
#
define
YY_USES_REJECT
#
define
yywrap
(
)
1
#
define
YY_SKIP_YYWRAP
#
define
FLEX_DEBUG
typedef
unsigned
char
YY_CHAR
;
typedef
char
YY_CHAR
;
#
define
yytext_ptr
yytext
#
define
YY_INTERACTIVE
#
ifdef
VMS
#
ifndef
__VMS_POSIX
#
else
#
endif
#
else
#
endif
typedef
yyconst
struct
yy_trans_info
*
yy_state_type
;
typedef
int
yy_state_type
;
#
define
FLEX_DEBUG
#
define
YY_FLEX_LEX_COMPAT
extern
int
yylineno
;
int
yylineno
=
1
;
#
include
<
FlexLexer
.
h
>
int
yyFlexLexer
:
:
yylex
(
)
{
LexerError
(
"
yyFlexLexer
:
:
yylex
invoked
but
%
option
yyclass
used
"
)
;
return
0
;
}
#
define
YY_DECL
int
%
s
:
:
yylex
(
)
extern
char
yytext
[
]
;
extern
char
*
yytext
;
#
define
yytext_ptr
yytext
%
option
yyclass
only
meaningful
for
C
+
+
scanners
%
s
[
-
bcdfhilnpstvwBFILTV78
+
?
-
C
[
aefFmr
]
-
ooutput
-
Pprefix
-
Sskeleton
]
[
-
-
help
-
-
version
]
[
file
.
.
.
]
-
b
generate
backing
-
up
information
to
%
s
-
c
do
-
nothing
POSIX
option
-
d
turn
on
debug
mode
in
generated
scanner
-
f
generate
fast
large
scanner
-
h
produce
this
help
message
-
i
generate
case
-
insensitive
scanner
-
l
maximal
compatibility
with
original
lex
-
n
do
-
nothing
POSIX
option
-
p
generate
performance
report
to
stderr
-
s
suppress
default
rule
to
ECHO
unmatched
text
cc
c
-
t
write
generated
scanner
on
stdout
instead
of
%
s
-
v
write
summary
of
scanner
statistics
to
f
-
w
do
not
generate
warnings
-
B
generate
batch
scanner
(
opposite
of
-
I
)
-
F
use
alternative
fast
scanner
representation
-
I
generate
interactive
scanner
(
opposite
of
-
B
)
-
L
suppress
#
line
directives
in
scanner
-
T
%
s
should
run
in
trace
mode
-
V
report
%
s
version
-
7
generate
7
-
bit
scanner
-
8
generate
8
-
bit
scanner
-
+
generate
C
+
+
scanner
class
-
?
produce
this
help
message
-
C
specify
degree
of
table
compression
(
default
is
-
Cem
)
:
-
Ca
trade
off
larger
tables
for
better
memory
alignment
-
Ce
construct
equivalence
classes
-
Cf
do
not
compress
scanner
tables
;
use
-
f
representation
-
CF
do
not
compress
scanner
tables
;
use
-
F
representation
-
Cm
construct
meta
-
equivalence
classes
-
Cr
use
read
(
)
instead
of
stdio
for
scanner
input
-
o
specify
output
filename
-
P
specify
scanner
prefix
other
than
"
yy
"
-
S
specify
skeleton
file
-
-
help
produce
this
help
message
-
-
version
report
%
s
version
#
line
%
d
"
%
s
"
name
"
%
s
"
ridiculously
long
#
define
%
s
%
d
memory
allocation
failed
in
allocate_array
(
)
bad
character
'
%
s
'
detected
in
check_char
(
)
scanner
requires
-
8
flag
to
use
the
character
%
s
dynamic
memory
failure
in
copy_string
(
)
}
;
%
s
:
%
s
%
s
:
fatal
internal
error
%
s
%
x
%
5d
%
5d
%
d
%
o
\
b
\
f
\
n
\
r
\
t
\
%
.
3o
'
'
attempt
to
increase
array
size
failed
bad
line
in
skeleton
file
{
%
4d
%
4d
}
memory
allocation
failed
in
yy_flex_xmalloc
(
)
*
*
*
*
*
*
*
*
*
*
beginning
dump
of
nfa
with
start
state
%
d
state
#
%
4d
%
3d
:
%
4d
%
4d
[
%
d
]
*
*
*
*
*
*
*
*
*
*
end
of
dump
empty
machine
in
dupmachine
(
)
case
%
d
:
Variable
trailing
context
rule
at
line
%
d
yy_c_buf_p
=
yy_cp
yy_bp
*
yy_cp
=
yy_hold_char
;
/
*
undo
effects
of
setting
up
yytext
*
/
%
s
=
%
s
+
%
d
;
%
s
-
=
%
d
;
YY_DO_BEFORE_ACTION
;
/
*
set
up
yytext
again
*
/
YY_RULE_SETUP
bad
state
type
in
mark_beginning_as_normal
(
)
input
rules
are
too
complicated
(
>
=
%
d
NFA
states
)
found
too
many
transitions
in
mkxtion
(
)
too
many
rules
(
>
%
d
)
!
*
+
"
'
#
/
)
&
!
(
-
.
%
0
1
2
2
2
2
3
4
4
5
5
5
6
7
7
8
8
8
9
9
9
:
;
;
;
;
<
=
=
=
>
>
>
?
A
A
B
C
C
D
D
D
D
D
D
D
D
D
D
D
D
E
E
F
F
F
F
G
G
G
G
G
G
G
G
G
G
G
G
H
H
!
"
7
4
2
K
=
&
(
+
3
=
%
)
#
*
-
.
J
5
6
;
>
?
A
B
C
D
E
F
G
H
I
8
<
'
9
1
:
0
/
i
1
%
&
2
3
4
5
6
7
?
]
<
N
Q
7
A
J
9
:
?
E
)
Z
;
)
_
5
b
H
g
h
L
T
2
+
0
(
)
O
E
f
*
+
P
Q
R
S
T
U
V
W
X
Y
Z
[
)
K
#
g
*
c
O
d
-
.
/
0
E
\
P
Q
R
S
T
U
V
W
X
Y
Z
[
A
B
C
B
-
.
/
L
0
F
M
=
:
G
D
a
H
I
!
"
8
9
>
_
B
b
e
h
j
k
'
J
;
^
N
5
#
)
*
+
-
^
.
%
&
"
%
)
*
+
*
-
/
"
4
.
'
(
!
!
#
%
/
9
B
>
parser
stack
overflow
YY_FATAL_ERROR
(
"
flex
scanner
jammed
"
)
ECHO
;
YY_BREAK
INITIAL
unknown
error
processing
section
1
bad
start
condition
list
'
^
'
operator
results
in
sub
-
optimal
performance
all
start
conditions
already
have
<
<
EOF
>
>
rules
unrecognized
rule
bad
start
condition
list
undeclared
start
condition
%
s
<
%
s
>
specified
twice
trailing
context
made
variable
due
to
preceding
'
|
'
action
trailing
context
used
twice
trailing
context
used
twice
trailing
context
made
variable
due
to
preceding
'
|
'
action
trailing
context
used
twice
bad
iteration
values
bad
iteration
values
iteration
value
must
be
positive
iteration
value
must
be
positive
negative
range
in
character
class
parse
error
multiple
<
<
EOF
>
>
rules
for
start
condition
%
s
case
YY_STATE_EOF
(
%
s
)
:
warning
%
s
"
%
s
"
line
%
d
:
%
s
W
W
l
d
e
l
]
l
k
l
l
l
k
c
Y
l
l
[
\
W
X
W
V
U
V
V
q
m
n
p
r
s
u
s
t
s
x
x
x
x
z
|
z
z
z
z
{
R
Q
"
!
Q
Q
Q
Q
#
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
d
e
_
i
i
^
c
Y
[
\
h
Z
W
X
V
U
U
S
T
o
p
u
v
w
|
y
R
"
!
P
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
a
i
i
i
i
i
j
Z
b
h
S
T
Q
Q
Q
Q
Q
Q
Q
Q
1
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
i
i
i
i
i
i
%
&
Q
Q
Q
Q
Q
Q
Q
Q
2
3
Q
Q
Q
7
Q
Q
Q
Q
Q
Q
<
Q
Q
Q
Q
Q
Q
C
Q
Q
Q
Q
i
i
i
i
i
i
'
Q
)
Q
+
Q
Q
Q
/
Q
4
Q
Q
Q
Q
Q
Q
Q
Q
Q
>
Q
Q
A
Q
Q
Q
Q
Q
i
i
i
Q
*
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
N
=
Q
Q
Q
Q
E
F
g
f
Q
Q
Q
-
Q
0
Q
Q
Q
Q
M
Q
;
?
B
O
Q
f
Q
Q
Q
.
Q
Q
8
Q
Q
D
}
~
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
6
Q
Q
Q
Q
Q
5
Q
:
Q
Q
Q
Q
H
I
Q
Q
Q
Q
G
K
Q
Q
Q
J
L
Q
Q
Q
Q
Q
Q
9
(
!
"
#
%
&
'
(
)
*
+
-
.
/
0
1
2
3
4
5
6
7
/
!
"
#
%
&
'
(
)
*
+
-
.
/
0
1
2
3
4
5
6
7
/
8
9
:
:
s
x
{
z
X
[
w
}
]
a
h
:
A
|
~
O
z
f
Q
M
g
7
m
;
}
k
=
{
=
r
Y
D
d
k
v
u
=
k
R
=
q
o
l
P
O
O
C
J
K
>
?
G
2
6
K
E
5
:
B
E
]
d
z
^
}
]
X
8
[
%
]
Y
8
l
V
L
A
2
R
P
*
&
N
'
#
T
;
H
D
!
3
9
l
}
0
0
t
%
(
e
l
q
f
g
j
o
u
+
B
\
1
6
G
N
v
"
{
~
8
0
>
;
9
|
k
Q
9
B
x
w
{
G
y
=
~
j
n
Y
e
Q
N
O
v
y
u
x
e
T
Q
[
_
V
L
Y
E
D
?
E
C
B
<
;
:
7
6
2
/
q
P
Z
Y
H
8
(
#
"
{
z
y
[
U
c
C
<
;
H
B
3
2
/
-
3
t
E
>
V
/
?
O
_
o
(
8
H
X
b
q
{
(
3
B
R
b
j
q
!
1
A
K
Z
d
k
z
"
2
<
E
T
d
t
}
!
#
!
!
!
"
"
#
#
%
&
&
&
&
&
'
'
'
(
)
)
)
)
)
)
)
)
)
)
*
)
)
)
)
)
)
)
)
+
-
.
/
0
1
2
2
3
4
5
6
7
8
9
9
:
;
<
=
>
>
>
?
A
B
C
C
D
D
D
E
E
F
F
G
H
H
H
I
I
I
J
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
L
M
N
O
P
Q
R
R
S
S
T
T
T
T
T
U
V
W
:
;
>
>
A
A
A
A
A
A
A
A
A
A
A
D
D
I
I
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
O
O
O
O
P
Q
U
T
W
U
T
W
>
>
h
A
A
A
A
A
A
A
A
A
A
A
D
D
I
I
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
O
O
T
W
T
T
T
>
>
A
A
A
A
A
A
A
A
A
A
A
A
D
D
I
I
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
X
T
T
T
>
>
A
A
A
A
A
A
A
A
A
A
A
A
D
D
I
I
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
X
X
A
A
A
A
A
A
A
A
A
A
A
A
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
Y
A
K
K
K
K
K
K
K
K
K
K
Y
Y
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
K
(
)
*
+
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
-
.
/
(
0
(
1
(
(
(
(
(
(
2
(
(
(
(
(
(
(
(
3
3
(
(
(
(
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
(
(
(
5
6
7
8
9
F
G
:
:
:
:
I
F
J
;
K
W
X
Y
<
=
W
X
Y
a
a
b
c
c
c
c
b
c
c
c
c
>
:
:
?
A
8
9
B
(
:
:
:
:
f
g
h
(
C
f
g
h
<
=
D
d
k
l
m
d
i
k
l
<
m
i
>
:
:
N
N
O
P
N
N
N
N
N
N
Q
N
N
N
N
N
N
N
N
N
N
N
N
R
R
N
N
N
N
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
S
R
R
R
R
R
R
T
N
N
N
Z
Z
(
Z
Z
Z
Z
Z
Z
Z
[
Z
[
Z
Z
Z
Z
Z
Z
Z
Z
Z
\
]
]
Z
Z
Z
Z
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
]
Z
Z
Z
o
p
(
o
p
q
q
)
r
s
t
r
s
t
u
u
v
w
x
u
u
u
y
u
u
u
u
u
z
u
u
u
u
u
u
u
u
{
{
u
u
u
u
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
|
{
{
{
{
{
{
}
~
u
K
L
-
!
"
/
0
O
P
%
2
=
=
=
=
3
4
A
B
C
S
T
A
B
C
A
B
C
D
D
D
D
V
V
D
D
D
D
D
D
D
D
A
B
C
U
X
X
|
S
T
D
D
D
D
E
}
F
W
G
K
L
=
=
=
=
K
L
e
e
f
g
e
e
e
e
e
e
h
e
e
e
e
e
e
e
e
e
e
e
e
h
h
e
e
e
e
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
e
e
e
j
k
l
m
O
P
n
O
P
S
T
o
p
q
r
s
v
v
v
v
v
v
v
v
v
w
v
v
v
v
v
v
v
v
v
v
v
v
w
w
v
v
v
v
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
v
v
v
B
C
S
T
D
D
D
D
R
S
T
B
C
(
)
S
T
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
S
T
R
R
R
R
R
S
T
S
T
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
h
i
S
T
~
S
T
h
h
h
w
w
D
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
S
T
E
6
6
w
w
w
=
B
S
T
S
T
S
T
F
>
C
?
7
7
7
7
N
S
T
R
7
A
G
q
O
7
7
7
7
7
7
p
h
i
o
h
i
t
r
x
z
.
.
s
u
v
w
y
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
E
E
E
E
E
E
E
E
E
E
E
E
E
E
E
E
H
H
H
H
H
H
H
H
H
H
H
H
H
H
H
H
L
L
L
L
L
L
L
L
L
L
L
L
L
L
L
L
V
V
V
V
V
V
V
V
V
V
V
V
V
V
V
V
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
_
_
_
_
_
_
_
_
_
_
_
_
_
_
_
_
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
H
H
H
H
H
I
I
I
I
I
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
R
R
R
R
R
R
R
R
R
R
R
R
R
R
Y
Y
Y
Z
Z
Z
Z
Z
Z
Z
Z
_
_
_
_
_
_
_
_
_
_
_
_
_
_
_
a
a
a
a
a
a
a
a
a
a
a
a
a
a
a
b
b
b
b
b
b
b
b
b
b
b
b
b
b
b
i
i
i
i
~
}
|
{
n
m
l
k
j
0
f
e
d
;
c
;
;
;
;
;
;
;
;
;
;
;
;
;
;
?
b
?
?
?
?
?
?
?
?
?
?
?
?
?
?
a
_
^
]
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
J
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
R
\
R
R
R
R
R
R
R
R
R
[
R
R
R
R
Z
Y
X
W
Z
Z
Z
Z
V
U
Z
Z
Z
Z
_
T
_
_
_
_
_
_
_
_
_
_
_
_
_
_
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
g
S
R
Q
P
M
L
K
J
I
H
;
:
9
8
5
4
3
2
1
0
/
.
-
+
*
'
&
%
#
"
!
[
B
<
~
{
z
y
x
u
t
d
c
^
]
\
[
Q
M
>
<
:
9
8
7
6
5
1
+
*
'
&
#
^
^
U
M
M
'
0
B
<
<
6
6
=
=
m
0
m
B
=
%
%
K
K
%
%
%
%
&
&
)
)
)
-
-
-
&
&
&
&
9
9
9
>
>
>
>
c
c
c
c
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
1
5
5
5
y
i
i
5
l
l
s
s
?
?
?
#
?
y
1
1
1
?
1
?
#
1
1
1
1
1
?
i
1
l
1
s
5
?
&
&
!
!
j
*
5
:
*
j
:
A
A
A
5
J
J
:
:
=
=
=
=
A
A
A
A
:
L
L
N
N
P
P
R
R
X
X
D
D
D
S
k
l
T
T
m
S
S
V
V
n
D
D
D
D
T
s
V
V
k
m
l
s
n
T
U
U
o
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
o
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
U
W
W
W
W
q
W
W
W
W
W
W
W
W
W
h
h
p
h
h
h
h
h
h
h
q
h
h
h
h
h
h
h
h
h
h
h
h
r
h
h
h
h
p
p
1
1
r
h
h
h
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
w
6
6
7
7
>
5
5
5
<
=
>
?
=
A
B
C
D
G
E
F
g
g
z
<
i
i
A
?
E
G
*
*
B
C
D
F
z
!
!
!
!
!
!
!
"
"
"
"
"
"
"
"
"
"
"
"
"
"
"
"
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
&
&
&
&
&
&
&
&
&
'
'
'
'
'
'
'
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
)
)
)
)
)
)
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
.
.
.
.
.
/
/
/
/
/
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
2
2
2
2
2
2
2
2
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
5
5
5
5
5
5
5
5
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
7
}
7
7
7
7
7
7
7
7
7
7
7
7
7
7
8
|
8
8
8
8
8
8
8
8
8
8
8
8
8
8
9
{
9
9
9
9
9
9
9
9
9
9
9
9
9
9
:
y
:
:
:
:
:
:
:
:
:
:
:
:
:
:
;
x
;
;
;
;
;
;
;
;
;
;
;
;
;
;
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
=
w
=
=
v
=
=
=
u
t
=
=
s
r
q
=
>
>
>
>
p
o
>
>
>
?
m
?
?
?
?
?
?
?
?
?
?
?
?
?
?
k
d
A
A
c
b
a
A
A
B
_
^
B
B
B
B
\
Y
B
B
C
X
C
C
C
C
C
C
C
C
C
C
C
C
C
C
D
D
D
D
W
V
D
D
D
E
E
E
E
E
E
E
E
E
E
E
E
E
E
E
E
F
F
F
F
U
F
F
F
F
F
F
F
F
F
F
F
G
T
S
G
G
G
G
G
G
G
R
G
G
G
G
G
H
Q
H
H
P
H
H
H
O
N
H
H
L
9
8
H
I
I
I
I
4
3
I
I
I
J
2
J
J
J
J
J
J
J
J
J
J
J
J
J
J
K
K
0
K
K
/
.
-
K
K
L
L
L
L
L
L
L
L
L
L
L
L
L
L
L
M
+
M
M
M
M
M
M
M
M
M
M
M
M
M
M
N
*
N
N
N
N
N
N
N
N
N
N
N
N
N
N
O
O
O
O
O
O
O
O
O
O
O
O
O
O
O
O
P
P
P
P
)
(
P
P
P
Q
Q
Q
Q
'
%
Q
Q
Q
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
R
S
S
S
S
S
S
S
S
S
S
S
S
S
S
S
S
T
T
T
T
T
T
T
T
T
T
"
T
T
T
T
U
U
!
U
V
V
V
V
V
V
V
V
W
W
W
W
W
W
W
W
W
W
W
W
W
W
W
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
X
Y
Y
Y
Y
Y
Y
Y
Y
Y
Y
Y
Y
Y
Y
Y
Y
~
}
|
{
z
y
x
u
t
i
d
c
^
Z
Q
G
F
E
C
>
;
9
8
7
4
3
2
1
/
-
+
)
(
'
%
"
}
|
z
w
r
p
k
g
a
\
Y
W
U
T
S
P
L
J
I
G
C
A
;
7
2
/
+
'
unrecognized
'
%
'
directive
incomplete
name
definition
YY_ALWAYS_INTERACTIVE
YY_NO_INPUT
YY_MAIN
YY_NEVER_INTERACTIVE
YY_STACK_USED
YY_NO_UNPUT
YY_NO_PUSH_STATE
YY_NO_POP_STATE
YY_NO_TOP_STATE
YY_NO_SCAN_BUFFER
YY_NO_SCAN_BYTES
YY_NO_SCAN_STRING
unrecognized
%
%
option
:
%
s
bad
character
class
undefined
definition
{
%
s
}
bad
<
start
condition
>
:
%
s
missing
quote
bad
character
class
bad
character
class
expression
:
%
s
bad
character
inside
{
}
'
s
missing
}
YY_BREAK
YY_BREAK
EOF
encountered
inside
an
action
bad
character
:
%
s
flex
scanner
jammed
fatal
flex
scanner
internal
error
-
-
no
action
found
fatal
flex
scanner
internal
error
-
-
end
of
buffer
missed
fatal
error
-
scanner
input
buffer
overflow
input
in
flex
scanner
failed
input
in
flex
scanner
failed
flex
scanner
push
-
back
overflow
unexpected
last
match
in
input
(
)
out
of
dynamic
memory
in
yy_create_buffer
(
)
out
of
dynamic
memory
in
yy_create_buffer
(
)
out
of
dynamic
memory
in
yy_scan_buffer
(
)
out
of
dynamic
memory
in
yy_scan_bytes
(
)
bad
buffer
in
yy_scan_bytes
(
)
out
of
memory
expanding
start
-
condition
stack
start
-
condition
stack
underflow
%
s
-
r
can
'
t
open
%
s
<
stdin
>
B
l
B
p
B
B
B
B
B
B
(
B
H
B
L
B
P
B
d
B
h
B
l
B
p
B
B
B
B
B
B
B
B
B
B
B
0
B
4
B
D
B
H
B
\
B
B
B
B
B
B
B
B
B
B
B
0
B
H
B
B
d
B
|
B
B
B
B
B
B
B
B
B
B
4
B
8
B
L
B
d
B
l
B
|
B
B
B
B
B
B
B
B
B
B
B
B
0
B
x
B
B
B
B
B
T
B
X
B
B
B
B
B
B
0
B
|
B
B
B
B
B
B
B
\
B
B
B
B
B
B
B
(
B
L
B
h
B
l
B
B
B
B
B
B
B
B
B
B
B
D
B
B
B
B
B
B
8
B
B
\
B
B
B
B
B
(
B
B
|
B
B
B
B
B
B
B
B
X
B
B
p
B
t
B
B
B
B
0
B
h
B
l
B
B
B
B
B
B
B
B
B
B
B
B
B
X
B
\
B
B
B
B
B
B
B
B
(
B
<
B
B
B
B
B
B
B
B
4
B
t
B
B
B
B
B
B
0
B
t
B
B
B
B
B
B
B
B
B
B
(
B
B
\
B
B
B
(
B
h
B
B
B
B
B
8
B
B
B
d
B
h
B
B
B
B
B
B
D
B
X
B
\
B
B
B
B
B
B
B
B
B
d
B
h
B
t
B
x
B
B
B
B
D
B
H
B
B
B
B
B
B
!
B
(
!
B
l
!
B
!
B
!
B
"
B
"
B
"
B
"
B
"
B
(
#
B
h
#
B
#
B
#
B
#
B
#
B
0
B
B
d
B
B
B
B
B
B
(
%
B
d
%
B
h
%
B
l
%
B
%
B
%
B
%
B
%
B
&
B
&
B
(
&
B
\
&
B
&
B
&
B
&
B
&
B
'
B
d
'
B
'
B
'
B
'
B
'
B
(
B
P
(
B
T
(
B
t
(
B
(
B
(
B
(
B
(
B
4
)
B
L
)
B
P
)
B
)
B
)
B
)
B
)
B
)
B
)
B
*
B
(
*
B
T
*
B
\
*
B
*
B
*
B
*
B
*
B
*
B
*
B
*
B
*
B
*
B
*
B
+
B
T
+
B
\
+
B
+
B
t
+
B
+
B
+
B
+
B
+
B
B
B
B
B
B
0
B
T
B
|
B
B
B
B
B
-
B
-
B
H
-
B
-
B
-
B
-
B
-
B
-
B
-
B
-
B
-
B
-
B
.
B
.
B
(
.
B
0
.
B
.
B
T
.
B
h
.
B
p
.
B
x
.
B
.
B
/
B
0
/
B
4
/
B
<
/
B
D
/
B
H
/
B
|
/
B
/
B
/
B
/
B
/
B
0B
0B
0B
0B
0B
0B
0B
0B
0B
1B
1B
1B
01B
1B
1B
1B
1B
1B
(
2B
<
2B
|
2B
2B
2B
2B
2B
3B
X3B
3B
3B
3B
3B
3B
3B
4B
<
4B
\
4B
d4B
h4B
4B
4B
4B
4B
4B
5B
5B
5B
5B
5B
|
5B
5B
5B
5B
5B
5B
6B
(
6B
06B
46B
|
6B
6B
6B
6B
6B
6B
6B
7B
7B
07B
87B
<
7B
d7B
h7B
p7B
t7B
7B
7B
7B
7B
7B
8B
8B
8B
8B
(
8B
<
8B
L8B
T8B
X8B
l8B
8B
8B
8B
8B
8B
8B
8B
8B
8B
8B
8B
9B
9B
9B
(
9B
9B
L9B
d9B
9B
9B
9B
9B
9B
9B
9B
:
B
0
:
B
4
:
B
P
:
B
l
:
B
p
:
B
:
B
:
B
:
B
:
B
:
B
;
B
;
B
;
B
X
;
B
\
;
B
t
;
B
x
;
B
;
B
;
B
;
B
;
B
<
B
<
B
<
B
<
<
B
P
<
B
T
<
B
l
<
B
p
<
B
<
B
<
B
<
B
(
=
B
D
=
B
H
=
B
=
B
=
B
=
B
=
B
0
>
B
>
B
>
B
>
B
?
B
D
?
B
L
?
B
|
?
B
?
B
?
B
?
B
?
B
0
B
l
B
B
B
AB
AB
4AB
xAB
AB
AB
AB
AB
AB
BB
0BB
dBB
BB
BB
BB
CB
XCB
xCB
CB
CB
CB
CB
CB
CB
DB
DB
DB
HDB
pDB
DB
DB
DB
DB
DB
DB
EB
EB
EB
EB
EB
HEB
hEB
pEB
EB
EB
EB
EB
EB
FB
4FB
FB
FB
FB
FB
GB
GB
DGB
HGB
pGB
GB
GB
GB
GB
GB
GB
GB
GB
GB
HB
HB
(
HB
<
HB
lHB
pHB
HB
HB
HB
HB
HB
HB
IB
IB
\
IB
IB
IB
IB
IB
IB
IB
IB
JB
JB
JB
JB
JB
hJB
JB
JB
JB
JB
JB
KB
KB
(
KB
<
KB
PKB
KB
pKB
KB
KB
KB
KB
KB
LB
LB
LB
DLB
tLB
LB
LB
LB
LB
LB
LB
MB
MB
MB
MB
MB
MB
DMB
\
MB
MB
MB
MB
MB
MB
MB
MB
NB
\
NB
NB
dNB
tNB
NB
NB
NB
NB
NB
NB
(
OB
0OB
4OB
XOB
dOB
hOB
OB
OB
OB
OB
OB
OB
OB
OB
OB
OB
OB
PB
(
PB
PB
PB
PPB
XPB
tPB
|
PB
PB
PB
PB
PB
PB
PB
PB
PB
(
QB
QB
XQB
pQB
QB
QB
QB
QB
QB
RB
RB
4RB
8RB
<
RB
tRB
RB
RB
RB
RB
SB
SB
lSB
pSB
SB
SB
TB
TB
LTB
pTB
xTB
TB
TB
TB
TB
TB
TB
TB
UB
UB
UB
0UB
4UB
TUB
XUB
UB
UB
UB
UB
VB
VB
XVB
VB
VB
VB
VB
VB
VB
VB
VB
(
WB
WB
LWB
WB
WB
WB
WB
XB
XB
<
XB
hXB
lXB
XB
XB
XB
XB
XB
YB
YB
YB
PYB
\
YB
xYB
|
YB
YB
YB
YB
ZB
ZB
ZB
PZB
hZB
lZB
ZB
ZB
ZB
ZB
[
B
[
B
D
[
B
[
B
h
[
B
p
[
B
t
[
B
[
B
[
B
[
B
[
B
\
B
\
B
D
\
B
H
\
B
\
B
d
\
B
\
B
\
B
\
B
\
B
\
B
\
B
\
B
\
B
]
B
<
]
B
X
]
B
]
B
d
]
B
h
]
B
p
]
B
]
B
]
B
]
B
]
B
D
^
B
H
^
B
x
^
B
|
^
B
^
B
^
B
^
B
^
B
^
B
^
B
^
B
(
_B
_B
_B
d_B
h_B
_B
_B
_B
_B
_B
<
B
B
l
B
p
B
t
B
B
B
B
B
B
B
B
aB
(
aB
aB
0aB
HaB
aB
aB
aB
aB
aB
bB
PbB
TbB
XbB
tbB
bB
bB
bB
bB
bB
bB
bB
cB
(
cB
\
cB
dcB
cB
cB
cB
cB
cB
cB
cB
cB
dB
dB
HdB
dB
ddB
dB
dB
dB
eB
LeB
xeB
eB
eB
eB
fB
fB
fB
fB
dfB
fB
fB
fB
gB
gB
gB
gB
(
gB
gB
DgB
\
gB
tgB
gB
gB
gB
gB
gB
gB
gB
gB
gB
gB
gB
hB
hB
hB
4hB
8hB
<
hB
DhB
HhB
hhB
lhB
hB
hB
hB
iB
iB
hiB
iB
iB
iB
iB
iB
jB
jB
8jB
<
jB
jB
hjB
jB
jB
jB
jB
jB
jB
jB
kB
kB
0kB
DkB
XkB
pkB
xkB
kB
kB
kB
kB
kB
kB
kB
lB
lB
4lB
LlB
|
lB
lB
lB
lB
lB
lB
lB
lB
lB
(
mB
TmB
tmB
xmB
mB
mB
mB
mB
mB
mB
mB
mB
mB
mB
nB
nB
4nB
8nB
lnB
pnB
tnB
nB
nB
nB
oB
oB
(
oB
oB
0oB
4oB
LoB
oB
oB
oB
oB
oB
oB
pB
pB
(
pB
PpB
\
pB
pB
|
pB
pB
pB
pB
qB
0qB
4qB
8qB
\
qB
xqB
|
qB
qB
qB
4rB
XrB
rB
rB
rB
rB
rB
rB
rB
rB
rB
rB
rB
sB
sB
0sB
4sB
dsB
sB
sB
sB
sB
sB
sB
sB
tB
PtB
XtB
tB
tB
tB
tB
tB
tB
tB
uB
uB
uB
duB
puB
uB
uB
uB
uB
vB
PvB
XvB
vB
vB
vB
vB
wB
wB
4wB
8wB
DwB
HwB
LwB
PwB
TwB
lwB
wB
wB
wB
wB
wB
wB
xB
xB
xB
(
xB
4xB
8xB
XxB
xB
xB
xB
xB
xB
xB
xB
xB
yB
yB
yB
DyB
lyB
tyB
|
yB
yB
yB
yB
yB
yB
zB
zB
zB
zB
(
zB
TzB
zB
zB
zB
zB
zB
zB
zB
zB
zB
{
B
{
B
8
{
B
{
B
\
{
B
x
{
B
{
B
{
B
{
B
{
B
{
B
{
B
{
B
{
B
|
B
|
B
|
B
|
B
L
|
B
T
|
B
p
|
B
|
B
|
B
|
B
|
B
|
B
|
B
|
B
|
B
|
B
0
}
B
p
}
B
}
B
}
B
}
B
}
B
}
B
~
B
~
B
~
B
T
~
B
X
~
B
x
~
B
~
B
~
B
~
B
~
B
~
B
~
B
~
B
~
B
B
B
T
B
B
p
B
x
B
|
B
B
B
B
B
B
<
B
H
B
L
B
B
B
B
B
B
T
B
p
B
B
B
B
B
B
B
B
<
B
B
L
B
P
B
T
B
\
B
B
d
B
B
B
B
B
B
B
B
B
B
B
P
B
T
B
X
B
|
B
B
B
B
B
B
B
B
B
B
B
B
X
B
d
B
l
B
p
B
B
B
B
B
B
B
B
(
B
8
B
x
B
|
B
B
B
B
B
B
B
B
P
B
T
B
B
B
B
B
B
B
B
B
B
B
B
B
B
4
B
B
h
B
B
B
B
B
B
B
B
B
B
8
B
<
B
l
B
B
B
B
B
B
B
4
B
B
d
B
B
B
B
B
B
B
B
B
B
B
0
B
4
B
L
B
P
B
l
B
p
B
B
B
B
B
B
B
(
B
B
4
B
8
B
<
B
T
B
X
B
t
B
x
B
B
B
B
B
B
B
B
B
B
B
B
B
<
B
p
B
x
B
B
B
B
B
B
B
B
B
B
B
<
B
B
X
B
t
B
x
B
|
B
B
B
B
B
B
B
B
B
B
H
B
t
B
B
B
B
B
B
B
B
B
B
B
0
B
t
B
|
B
B
B
B
B
B
B
B
B
B
B
B
0
B
4
B
L
B
|
B
B
B
B
B
B
B
B
B
B
D
B
L
B
x
B
B
B
B
B
B
B
\
B
B
B
B
B
<
B
B
D
B
\
B
B
B
B
B
B
B
B
B
B
B
B
B
B
B
B
/
*
A
lexical
scanner
generated
by
flex
*
/
/
*
Scanner
skeleton
version
:
*
Header
:
/
home
/
daffy
/
u0
/
vern
/
flex
/
RCS
/
flex
.
skl
v
2
.
85
95
/
04
/
24
10
:
48
:
47
vern
Exp
*
/
#
define
FLEX_SCANNER
#
define
YY_FLEX_MAJOR_VERSION
2
#
define
YY_FLEX_MINOR_VERSION
5
%
-
#
include
<
stdio
.
h
>
%
*
/
*
cfront
1
.
2
defines
"
c_plusplus
"
instead
of
"
__cplusplus
"
*
/
#
ifdef
c_plusplus
#
ifndef
__cplusplus
#
define
__cplusplus
#
endif
#
endif
#
ifdef
__cplusplus
#
include
<
stdlib
.
h
>
%
+
class
istream
;
%
*
#
include
<
unistd
.
h
>
/
*
Use
prototypes
in
function
declarations
.
*
/
#
define
YY_USE_PROTOS
/
*
The
"
const
"
storage
-
class
-
modifier
is
valid
.
*
/
#
define
YY_USE_CONST
#
else
/
*
!
__cplusplus
*
/
#
if
__STDC__
#
define
YY_USE_PROTOS
#
define
YY_USE_CONST
#
endif
/
*
__STDC__
*
/
#
endif
/
*
!
__cplusplus
*
/
#
ifdef
__TURBOC__
#
pragma
warn
-
rch
#
pragma
warn
-
use
#
include
<
io
.
h
>
#
include
<
stdlib
.
h
>
#
define
YY_USE_CONST
#
define
YY_USE_PROTOS
#
endif
#
ifdef
YY_USE_CONST
#
define
yyconst
const
#
else
#
define
yyconst
#
endif
#
ifdef
YY_USE_PROTOS
#
define
YY_PROTO
(
proto
)
proto
#
else
#
define
YY_PROTO
(
proto
)
(
)
#
endif
/
*
Returned
upon
end
-
of
-
file
.
*
/
#
define
YY_NULL
0
/
*
Promotes
a
possibly
negative
possibly
signed
char
to
an
unsigned
*
integer
for
use
as
an
array
index
.
If
the
signed
char
is
negative
*
we
want
to
instead
treat
it
as
an
8
-
bit
unsigned
char
hence
the
*
double
cast
.
*
/
#
define
YY_SC_TO_UI
(
c
)
(
(
unsigned
int
)
(
unsigned
char
)
c
)
/
*
Enter
a
start
condition
.
This
macro
really
ought
to
take
a
parameter
*
but
we
do
it
the
disgusting
crufty
way
forced
on
us
by
the
(
)
-
less
*
definition
of
BEGIN
.
*
/
#
define
BEGIN
yy_start
=
1
+
2
*
/
*
Translate
the
current
start
state
into
a
value
that
can
be
later
handed
*
to
BEGIN
to
return
to
the
state
.
The
YYSTATE
alias
is
for
lex
*
compatibility
.
*
/
#
define
YY_START
(
(
yy_start
-
1
)
/
2
)
#
define
YYSTATE
YY_START
/
*
Action
number
for
EOF
rule
of
a
given
start
state
.
*
/
#
define
YY_STATE_EOF
(
state
)
(
YY_END_OF_BUFFER
+
state
+
1
)
/
*
Special
action
meaning
"
start
processing
a
new
file
"
.
*
/
#
define
YY_NEW_FILE
yyrestart
(
yyin
)
#
define
YY_END_OF_BUFFER_CHAR
0
/
*
Size
of
default
input
buffer
.
*
/
#
define
YY_BUF_SIZE
16384
typedef
struct
yy_buffer_state
*
YY_BUFFER_STATE
;
extern
int
yyleng
;
%
-
extern
FILE
*
yyin
*
yyout
;
%
*
#
define
EOB_ACT_CONTINUE_SCAN
0
#
define
EOB_ACT_END_OF_FILE
1
#
define
EOB_ACT_LAST_MATCH
2
/
*
The
funky
do
-
while
in
the
following
#
define
is
used
to
turn
the
definition
*
int
a
single
C
statement
(
which
needs
a
semi
-
colon
terminator
)
.
This
*
avoids
problems
with
code
like
:
*
*
if
(
condition_holds
)
*
yyless
(
5
)
;
*
else
*
do_something_else
(
)
;
*
*
Prior
to
using
the
do
-
while
the
compiler
would
get
upset
at
the
*
"
else
"
because
it
interpreted
the
"
if
"
statement
as
being
all
*
done
when
it
reached
the
'
;
'
after
the
yyless
(
)
call
.
*
/
/
*
Return
all
but
the
first
'
n
'
matched
characters
back
to
the
input
stream
.
*
/
#
define
yyless
(
n
)
\
do
\
{
\
/
*
Undo
effects
of
setting
up
yytext
.
*
/
\
*
yy_cp
=
yy_hold_char
;
\
yy_c_buf_p
=
yy_cp
=
yy_bp
+
n
-
YY_MORE_ADJ
;
\
YY_DO_BEFORE_ACTION
;
/
*
set
up
yytext
again
*
/
\
}
\
while
(
0
)
#
define
unput
(
c
)
yyunput
(
c
yytext_ptr
)
/
*
The
following
is
because
we
cannot
portably
get
our
hands
on
size_t
*
(
without
autoconf
'
s
help
which
isn
'
t
available
because
we
want
*
flex
-
generated
scanners
to
compile
on
their
own
)
.
*
/
typedef
unsigned
int
yy_size_t
;
struct
yy_buffer_state
{
%
-
FILE
*
yy_input_file
;
%
+
istream
*
yy_input_file
;
%
*
char
*
yy_ch_buf
;
/
*
input
buffer
*
/
char
*
yy_buf_pos
;
/
*
current
position
in
input
buffer
*
/
/
*
Size
of
input
buffer
in
bytes
not
including
room
for
EOB
*
characters
.
*
/
yy_size_t
yy_buf_size
;
/
*
Number
of
characters
read
into
yy_ch_buf
not
including
EOB
*
characters
.
*
/
int
yy_n_chars
;
/
*
Whether
we
"
own
"
the
buffer
-
i
.
e
.
we
know
we
created
it
*
and
can
realloc
(
)
it
to
grow
it
and
should
free
(
)
it
to
*
delete
it
.
*
/
int
yy_is_our_buffer
;
/
*
Whether
this
is
an
"
interactive
"
input
source
;
if
so
and
*
if
we
'
re
using
stdio
for
input
then
we
want
to
use
getc
(
)
*
instead
of
fread
(
)
to
make
sure
we
stop
fetching
input
after
*
each
newline
.
*
/
int
yy_is_interactive
;
/
*
Whether
we
'
re
considered
to
be
at
the
beginning
of
a
line
.
*
If
so
'
^
'
rules
will
be
active
on
the
next
match
otherwise
*
not
.
*
/
int
yy_at_bol
;
/
*
Whether
to
try
to
fill
the
input
buffer
when
we
reach
the
*
end
of
it
.
*
/
int
yy_fill_buffer
;
int
yy_buffer_status
;
#
define
YY_BUFFER_NEW
0
#
define
YY_BUFFER_NORMAL
1
/
*
When
an
EOF
'
s
been
seen
but
there
'
s
still
some
text
to
process
*
then
we
mark
the
buffer
as
YY_EOF_PENDING
to
indicate
that
we
*
shouldn
'
t
try
reading
from
the
input
source
any
more
.
We
might
*
still
have
a
bunch
of
tokens
to
match
though
because
of
*
possible
backing
-
up
.
*
*
When
we
actually
see
the
EOF
we
change
the
status
to
"
new
"
*
(
via
yyrestart
(
)
)
so
that
the
user
can
continue
scanning
by
*
just
pointing
yyin
at
a
new
input
file
.
*
/
#
define
YY_BUFFER_EOF_PENDING
2
}
;
%
-
Standard
(
non
-
C
+
+
)
definition
static
YY_BUFFER_STATE
yy_current_buffer
=
0
;
%
*
/
*
We
provide
macros
for
accessing
buffer
states
in
case
in
the
*
future
we
want
to
put
the
buffer
states
in
a
more
general
*
"
scanner
state
"
.
*
/
#
define
YY_CURRENT_BUFFER
yy_current_buffer
%
-
Standard
(
non
-
C
+
+
)
definition
/
*
yy_hold_char
holds
the
character
lost
when
yytext
is
formed
.
*
/
static
char
yy_hold_char
;
static
int
yy_n_chars
;
/
*
number
of
characters
read
into
yy_ch_buf
*
/
int
yyleng
;
/
*
Points
to
current
character
in
buffer
.
*
/
static
char
*
yy_c_buf_p
=
(
char
*
)
0
;
static
int
yy_init
=
1
;
/
*
whether
we
need
to
initialize
*
/
static
int
yy_start
=
0
;
/
*
start
state
number
*
/
/
*
Flag
which
is
used
to
allow
yywrap
(
)
'
s
to
do
buffer
switches
*
instead
of
setting
up
a
fresh
yyin
.
A
bit
of
a
hack
.
.
.
*
/
static
int
yy_did_buffer_switch_on_eof
;
void
yyrestart
YY_PROTO
(
(
FILE
*
input_file
)
)
;
void
yy_switch_to_buffer
YY_PROTO
(
(
YY_BUFFER_STATE
new_buffer
)
)
;
void
yy_load_buffer_state
YY_PROTO
(
(
void
)
)
;
YY_BUFFER_STATE
yy_create_buffer
YY_PROTO
(
(
FILE
*
file
int
size
)
)
;
void
yy_delete_buffer
YY_PROTO
(
(
YY_BUFFER_STATE
b
)
)
;
void
yy_init_buffer
YY_PROTO
(
(
YY_BUFFER_STATE
b
FILE
*
file
)
)
;
void
yy_flush_buffer
YY_PROTO
(
(
YY_BUFFER_STATE
b
)
)
;
#
define
YY_FLUSH_BUFFER
yy_flush_buffer
(
yy_current_buffer
)
YY_BUFFER_STATE
yy_scan_buffer
YY_PROTO
(
(
char
*
base
yy_size_t
size
)
)
;
YY_BUFFER_STATE
yy_scan_string
YY_PROTO
(
(
yyconst
char
*
str
)
)
;
YY_BUFFER_STATE
yy_scan_bytes
YY_PROTO
(
(
yyconst
char
*
bytes
int
len
)
)
;
%
*
static
void
*
yy_flex_alloc
YY_PROTO
(
(
yy_size_t
)
)
;
static
void
*
yy_flex_realloc
YY_PROTO
(
(
void
*
yy_size_t
)
)
;
static
void
yy_flex_free
YY_PROTO
(
(
void
*
)
)
;
#
define
yy_new_buffer
yy_create_buffer
#
define
yy_set_interactive
(
is_interactive
)
\
{
\
if
(
!
yy_current_buffer
)
\
yy_current_buffer
=
yy_create_buffer
(
yyin
YY_BUF_SIZE
)
;
\
yy_current_buffer
-
>
yy_is_interactive
=
is_interactive
;
\
}
#
define
yy_set_bol
(
at_bol
)
\
{
\
if
(
!
yy_current_buffer
)
\
yy_current_buffer
=
yy_create_buffer
(
yyin
YY_BUF_SIZE
)
;
\
yy_current_buffer
-
>
yy_at_bol
=
at_bol
;
\
}
#
define
YY_AT_BOL
(
)
(
yy_current_buffer
-
>
yy_at_bol
)
%
%
yytext
/
yyin
/
yyout
/
yy_state_type
/
yylineno
etc
.
def
'
s
&
init
go
here
%
-
Standard
(
non
-
C
+
+
)
definition
static
yy_state_type
yy_get_previous_state
YY_PROTO
(
(
void
)
)
;
static
yy_state_type
yy_try_NUL_trans
YY_PROTO
(
(
yy_state_type
current_state
)
)
;
static
int
yy_get_next_buffer
YY_PROTO
(
(
void
)
)
;
static
void
yy_fatal_error
YY_PROTO
(
(
yyconst
char
msg
[
]
)
)
;
%
*
/
*
Done
after
the
current
pattern
has
been
matched
and
before
the
*
corresponding
action
-
sets
up
yytext
.
*
/
#
define
YY_DO_BEFORE_ACTION
\
yytext_ptr
=
yy_bp
;
\
%
%
code
to
fiddle
yytext
and
yyleng
for
yymore
(
)
goes
here
yy_hold_char
=
*
yy_cp
;
\
*
yy_cp
=
'
\
0
'
;
\
%
%
code
to
copy
yytext_ptr
to
yytext
[
]
goes
here
if
%
array
yy_c_buf_p
=
yy_cp
;
%
%
data
tables
for
the
DFA
and
the
user
'
s
section
1
definitions
go
here
/
*
Macros
after
this
point
can
all
be
overridden
by
user
definitions
in
*
section
1
.
*
/
#
ifndef
YY_SKIP_YYWRAP
#
ifdef
__cplusplus
extern
"
C
"
int
yywrap
YY_PROTO
(
(
void
)
)
;
#
else
extern
int
yywrap
YY_PROTO
(
(
void
)
)
;
#
endif
#
endif
%
-
#
ifndef
YY_NO_UNPUT
static
void
yyunput
YY_PROTO
(
(
int
c
char
*
buf_ptr
)
)
;
#
endif
%
*
#
ifndef
yytext_ptr
static
void
yy_flex_strncpy
YY_PROTO
(
(
char
*
yyconst
char
*
int
)
)
;
#
endif
#
ifndef
YY_NO_INPUT
%
-
Standard
(
non
-
C
+
+
)
definition
#
ifdef
__cplusplus
static
int
yyinput
YY_PROTO
(
(
void
)
)
;
#
else
static
int
input
YY_PROTO
(
(
void
)
)
;
#
endif
%
*
#
endif
#
if
YY_STACK_USED
static
int
yy_start_stack_ptr
=
0
;
static
int
yy_start_stack_depth
=
0
;
static
int
*
yy_start_stack
=
0
;
#
ifndef
YY_NO_PUSH_STATE
static
void
yy_push_state
YY_PROTO
(
(
int
new_state
)
)
;
#
endif
#
ifndef
YY_NO_POP_STATE
static
void
yy_pop_state
YY_PROTO
(
(
void
)
)
;
#
endif
#
ifndef
YY_NO_TOP_STATE
static
int
yy_top_state
YY_PROTO
(
(
void
)
)
;
#
endif
#
else
#
define
YY_NO_PUSH_STATE
1
#
define
YY_NO_POP_STATE
1
#
define
YY_NO_TOP_STATE
1
#
endif
#
ifdef
YY_MALLOC_DECL
YY_MALLOC_DECL
#
else
#
if
__STDC__
#
ifndef
__cplusplus
#
include
<
stdlib
.
h
>
#
endif
#
else
/
*
Just
try
to
get
by
without
declaring
the
routines
.
This
will
fail
*
miserably
on
non
-
ANSI
systems
for
which
sizeof
(
size_t
)
!
=
sizeof
(
int
)
*
or
sizeof
(
void
*
)
!
=
sizeof
(
int
)
.
*
/
#
endif
#
endif
/
*
Amount
of
stuff
to
slurp
up
with
each
read
.
*
/
#
ifndef
YY_READ_BUF_SIZE
#
define
YY_READ_BUF_SIZE
8192
#
endif
/
*
Copy
whatever
the
last
rule
matched
to
the
standard
output
.
*
/
#
ifndef
ECHO
%
-
Standard
(
non
-
C
+
+
)
definition
/
*
This
used
to
be
an
fputs
(
)
but
since
the
string
might
contain
NUL
'
s
*
we
now
use
fwrite
(
)
.
*
/
#
define
ECHO
(
void
)
fwrite
(
yytext
yyleng
1
yyout
)
%
+
C
+
+
definition
#
define
ECHO
LexerOutput
(
yytext
yyleng
)
%
*
#
endif
/
*
Gets
input
and
stuffs
it
into
"
buf
"
.
number
of
characters
read
or
YY_NULL
*
is
returned
in
"
result
"
.
*
/
#
ifndef
YY_INPUT
#
define
YY_INPUT
(
buf
result
max_size
)
\
%
%
fread
(
)
/
read
(
)
definition
of
YY_INPUT
goes
here
unless
we
'
re
doing
C
+
+
%
+
C
+
+
definition
if
(
(
result
=
LexerInput
(
(
char
*
)
buf
max_size
)
)
<
0
)
\
YY_FATAL_ERROR
(
"
input
in
flex
scanner
failed
"
)
;
%
*
#
endif
/
*
No
semi
-
colon
after
return
;
correct
usage
is
to
write
"
yyterminate
(
)
;
"
-
*
we
don
'
t
want
an
extra
'
;
'
after
the
"
return
"
because
that
will
cause
*
some
compilers
to
complain
about
unreachable
statements
.
*
/
#
ifndef
yyterminate
#
define
yyterminate
(
)
return
YY_NULL
#
endif
/
*
Number
of
entries
by
which
start
-
condition
stack
grows
.
*
/
#
ifndef
YY_START_STACK_INCR
#
define
YY_START_STACK_INCR
25
#
endif
/
*
Report
a
fatal
error
.
*
/
#
ifndef
YY_FATAL_ERROR
%
-
#
define
YY_FATAL_ERROR
(
msg
)
yy_fatal_error
(
msg
)
%
+
#
define
YY_FATAL_ERROR
(
msg
)
LexerError
(
msg
)
%
*
#
endif
/
*
Default
declaration
of
generated
scanner
-
a
define
so
the
user
can
*
easily
add
parameters
.
*
/
#
ifndef
YY_DECL
%
-
Standard
(
non
-
C
+
+
)
definition
#
define
YY_DECL
int
yylex
YY_PROTO
(
(
void
)
)
%
+
C
+
+
definition
#
define
YY_DECL
int
yyFlexLexer
:
:
yylex
(
)
%
*
#
endif
/
*
Code
executed
at
the
beginning
of
each
rule
after
yytext
and
yyleng
*
have
been
set
up
.
*
/
#
ifndef
YY_USER_ACTION
#
define
YY_USER_ACTION
#
endif
/
*
Code
executed
at
the
end
of
each
rule
.
*
/
#
ifndef
YY_BREAK
#
define
YY_BREAK
break
;
#
endif
%
%
YY_RULE_SETUP
definition
goes
here
YY_DECL
{
register
yy_state_type
yy_current_state
;
register
char
*
yy_cp
*
yy_bp
;
register
int
yy_act
;
%
%
user
'
s
declarations
go
here
if
(
yy_init
)
{
yy_init
=
0
;
#
ifdef
YY_USER_INIT
YY_USER_INIT
;
#
endif
if
(
!
yy_start
)
yy_start
=
1
;
/
*
first
start
state
*
/
if
(
!
yyin
)
%
-
yyin
=
stdin
;
%
+
yyin
=
&
cin
;
%
*
if
(
!
yyout
)
%
-
yyout
=
stdout
;
%
+
yyout
=
&
cout
;
%
*
if
(
!
yy_current_buffer
)
yy_current_buffer
=
yy_create_buffer
(
yyin
YY_BUF_SIZE
)
;
yy_load_buffer_state
(
)
;
}
while
(
1
)
/
*
loops
until
end
-
of
-
file
is
reached
*
/
{
%
%
yymore
(
)
-
related
code
goes
here
yy_cp
=
yy_c_buf_p
;
/
*
Support
of
yytext
.
*
/
*
yy_cp
=
yy_hold_char
;
/
*
yy_bp
points
to
the
position
in
yy_ch_buf
of
the
start
of
*
the
current
run
.
*
/
yy_bp
=
yy_cp
;
%
%
code
to
set
up
and
find
next
match
goes
here
yy_find_action
:
%
%
code
to
find
the
action
number
goes
here
YY_DO_BEFORE_ACTION
;
%
%
code
for
yylineno
update
goes
here
do_action
:
/
*
This
label
is
used
only
to
access
EOF
actions
.
*
/
%
%
debug
code
goes
here
switch
(
yy_act
)
{
/
*
beginning
of
action
switch
*
/
%
%
actions
go
here
case
YY_END_OF_BUFFER
:
{
/
*
Amount
of
text
matched
not
including
the
EOB
char
.
*
/
int
yy_amount_of_matched_text
=
(
int
)
(
yy_cp
-
yytext_ptr
)
-
1
;
/
*
Undo
the
effects
of
YY_DO_BEFORE_ACTION
.
*
/
*
yy_cp
=
yy_hold_char
;
if
(
yy_current_buffer
-
>
yy_buffer_status
=
=
YY_BUFFER_NEW
)
{
/
*
We
'
re
scanning
a
new
file
or
input
source
.
It
'
s
*
possible
that
this
happened
because
the
user
*
just
pointed
yyin
at
a
new
source
and
called
*
yylex
(
)
.
If
so
then
we
have
to
assure
*
consistency
between
yy_current_buffer
and
our
*
globals
.
Here
is
the
right
place
to
do
so
because
*
this
is
the
first
action
(
other
than
possibly
a
*
back
-
up
)
that
will
match
for
the
new
input
source
.
*
/
yy_n_chars
=
yy_current_buffer
-
>
yy_n_chars
;
yy_current_buffer
-
>
yy_input_file
=
yyin
;
yy_current_buffer
-
>
yy_buffer_status
=
YY_BUFFER_NORMAL
;
}
/
*
Note
that
here
we
test
for
yy_c_buf_p
"
<
=
"
to
the
position
*
of
the
first
EOB
in
the
buffer
since
yy_c_buf_p
will
*
already
have
been
incremented
past
the
NUL
character
*
(
since
all
states
make
transitions
on
EOB
to
the
*
end
-
of
-
buffer
state
)
.
Contrast
this
with
the
test
*
in
input
(
)
.
*
/
if
(
yy_c_buf_p
<
=
&
yy_current_buffer
-
>
yy_ch_buf
[
yy_n_chars
]
)
{
/
*
This
was
really
a
NUL
.
*
/
yy_state_type
yy_next_state
;
yy_c_buf_p
=
yytext_ptr
+
yy_amount_of_matched_text
;
yy_current_state
=
yy_get_previous_state
(
)
;
/
*
Okay
we
'
re
now
positioned
to
make
the
NUL
*
transition
.
We
couldn
'
t
have
*
yy_get_previous_state
(
)
go
ahead
and
do
it
*
for
us
because
it
doesn
'
t
know
how
to
deal
*
with
the
possibility
of
jamming
(
and
we
don
'
t
*
want
to
build
jamming
into
it
because
then
it
*
will
run
more
slowly
)
.
*
/
yy_next_state
=
yy_try_NUL_trans
(
yy_current_state
)
;
yy_bp
=
yytext_ptr
+
YY_MORE_ADJ
;
if
(
yy_next_state
)
{
/
*
Consume
the
NUL
.
*
/
yy_cp
=
+
+
yy_c_buf_p
;
yy_current_state
=
yy_next_state
;
goto
yy_match
;
}
else
{
%
%
code
to
do
back
-
up
for
compressed
tables
and
set
up
yy_cp
goes
here
goto
yy_find_action
;
}
}
else
switch
(
yy_get_next_buffer
(
)
)
{
case
EOB_ACT_END_OF_FILE
:
{
yy_did_buffer_switch_on_eof
=
0
;
if
(
yywrap
(
)
)
{
/
*
Note
:
because
we
'
ve
taken
care
in
*
yy_get_next_buffer
(
)
to
have
set
up
*
yytext
we
can
now
set
up
*
yy_c_buf_p
so
that
if
some
total
*
hoser
(
like
flex
itself
)
wants
to
*
call
the
scanner
after
we
return
the
*
YY_NULL
it
'
ll
still
work
-
another
*
YY_NULL
will
get
returned
.
*
/
yy_c_buf_p
=
yytext_ptr
+
YY_MORE_ADJ
;
yy_act
=
YY_STATE_EOF
(
YY_START
)
;
goto
do_action
;
}
else
{
if
(
!
yy_did_buffer_switch_on_eof
)
YY_NEW_FILE
;
}
break
;
}
case
EOB_ACT_CONTINUE_SCAN
:
yy_c_buf_p
=
yytext_ptr
+
yy_amount_of_matched_text
;
yy_current_state
=
yy_get_previous_state
(
)
;
yy_cp
=
yy_c_buf_p
;
yy_bp
=
yytext_ptr
+
YY_MORE_ADJ
;
goto
yy_match
;
case
EOB_ACT_LAST_MATCH
:
yy_c_buf_p
=
&
yy_current_buffer
-
>
yy_ch_buf
[
yy_n_chars
]
;
yy_current_state
=
yy_get_previous_state
(
)
;
yy_cp
=
yy_c_buf_p
;
yy_bp
=
yytext_ptr
+
YY_MORE_ADJ
;
goto
yy_find_action
;
}
break
;
}
default
:
YY_FATAL_ERROR
(
"
fatal
flex
scanner
internal
error
-
-
no
action
found
"
)
;
}
/
*
end
of
action
switch
*
/
}
/
*
end
of
scanning
one
token
*
/
}
/
*
end
of
yylex
*
/
%
+
yyFlexLexer
:
:
yyFlexLexer
(
istream
*
arg_yyin
ostream
*
arg_yyout
)
{
yyin
=
arg_yyin
;
yyout
=
arg_yyout
;
yy_c_buf_p
=
0
;
yy_init
=
1
;
yy_start
=
0
;
yy_flex_debug
=
0
;
yylineno
=
1
;
/
/
this
will
only
get
updated
if
%
option
yylineno
yy_did_buffer_switch_on_eof
=
0
;
yy_looking_for_trail_begin
=
0
;
yy_more_flag
=
0
;
yy_more_len
=
0
;
yy_start_stack_ptr
=
yy_start_stack_depth
=
0
;
yy_start_stack
=
0
;
yy_current_buffer
=
0
;
#
ifdef
YY_USES_REJECT
yy_state_buf
=
new
yy_state_type
[
YY_BUF_SIZE
+
2
]
;
#
else
yy_state_buf
=
0
;
#
endif
}
yyFlexLexer
:
:
~
yyFlexLexer
(
)
{
delete
yy_state_buf
;
yy_delete_buffer
(
yy_current_buffer
)
;
}
void
yyFlexLexer
:
:
switch_streams
(
istream
*
new_in
ostream
*
new_out
)
{
if
(
new_in
)
{
yy_delete_buffer
(
yy_current_buffer
)
;
yy_switch_to_buffer
(
yy_create_buffer
(
new_in
YY_BUF_SIZE
)
)
;
}
if
(
new_out
)
yyout
=
new_out
;
}
#
ifdef
YY_INTERACTIVE
int
yyFlexLexer
:
:
LexerInput
(
char
*
buf
int
/
*
max_size
*
/
)
#
else
int
yyFlexLexer
:
:
LexerInput
(
char
*
buf
int
max_size
)
#
endif
{
if
(
yyin
-
>
eof
(
)
|
|
yyin
-
>
fail
(
)
)
return
0
;
#
ifdef
YY_INTERACTIVE
yyin
-
>
get
(
buf
[
0
]
)
;
if
(
yyin
-
>
eof
(
)
)
return
0
;
if
(
yyin
-
>
bad
(
)
)
return
-
1
;
return
1
;
#
else
(
void
)
yyin
-
>
read
(
buf
max_size
)
;
if
(
yyin
-
>
bad
(
)
)
return
-
1
;
else
return
yyin
-
>
gcount
(
)
;
#
endif
}
void
yyFlexLexer
:
:
LexerOutput
(
const
char
*
buf
int
size
)
{
(
void
)
yyout
-
>
write
(
buf
size
)
;
}
%
*
/
*
yy_get_next_buffer
-
try
to
read
in
a
new
buffer
*
*
Returns
a
code
representing
an
action
:
*
EOB_ACT_LAST_MATCH
-
*
EOB_ACT_CONTINUE_SCAN
-
continue
scanning
from
current
position
*
EOB_ACT_END_OF_FILE
-
end
of
file
*
/
%
-
static
int
yy_get_next_buffer
(
)
%
+
int
yyFlexLexer
:
:
yy_get_next_buffer
(
)
%
*
{
register
char
*
dest
=
yy_current_buffer
-
>
yy_ch_buf
;
register
char
*
source
=
yytext_ptr
;
register
int
number_to_move
i
;
int
ret_val
;
if
(
yy_c_buf_p
>
&
yy_current_buffer
-
>
yy_ch_buf
[
yy_n_chars
+
1
]
)
YY_FATAL_ERROR
(
"
fatal
flex
scanner
internal
error
-
-
end
of
buffer
missed
"
)
;
if
(
yy_current_buffer
-
>
yy_fill_buffer
=
=
0
)
{
/
*
Don
'
t
try
to
fill
the
buffer
so
this
is
an
EOF
.
*
/
if
(
yy_c_buf_p
-
yytext_ptr
-
YY_MORE_ADJ
=
=
1
)
{
/
*
We
matched
a
singled
characater
the
EOB
so
*
treat
this
as
a
final
EOF
.
*
/
return
EOB_ACT_END_OF_FILE
;
}
else
{
/
*
We
matched
some
text
prior
to
the
EOB
first
*
process
it
.
*
/
return
EOB_ACT_LAST_MATCH
;
}
}
/
*
Try
to
read
more
data
.
*
/
/
*
First
move
last
chars
to
start
of
buffer
.
*
/
number_to_move
=
(
int
)
(
yy_c_buf_p
-
yytext_ptr
)
-
1
;
for
(
i
=
0
;
i
<
number_to_move
;
+
+
i
)
*
(
dest
+
+
)
=
*
(
source
+
+
)
;
if
(
yy_current_buffer
-
>
yy_buffer_status
=
=
YY_BUFFER_EOF_PENDING
)
/
*
don
'
t
do
the
read
it
'
s
not
guaranteed
to
return
an
EOF
*
just
force
an
EOF
*
/
yy_n_chars
=
0
;
else
{
int
num_to_read
=
yy_current_buffer
-
>
yy_buf_size
-
number_to_move
-
1
;
while
(
num_to_read
<
=
0
)
{
/
*
Not
enough
room
in
the
buffer
-
grow
it
.
*
/
#
ifdef
YY_USES_REJECT
YY_FATAL_ERROR
(
"
input
buffer
overflow
can
'
t
enlarge
buffer
because
scanner
uses
REJECT
"
)
;
#
else
/
*
just
a
shorter
name
for
the
current
buffer
*
/
YY_BUFFER_STATE
b
=
yy_current_buffer
;
int
yy_c_buf_p_offset
=
(
int
)
(
yy_c_buf_p
-
b
-
>
yy_ch_buf
)
;
if
(
b
-
>
yy_is_our_buffer
)
{
int
new_size
=
b
-
>
yy_buf_size
*
2
;
if
(
new_size
<
=
0
)
b
-
>
yy_buf_size
+
=
b
-
>
yy_buf_size
/
8
;
else
b
-
>
yy_buf_size
*
=
2
;
b
-
>
yy_ch_buf
=
(
char
*
)
/
*
Include
room
in
for
2
EOB
chars
.
*
/
yy_flex_realloc
(
(
void
*
)
b
-
>
yy_ch_buf
b
-
>
yy_buf_size
+
2
)
;
}
else
/
*
Can
'
t
grow
it
we
don
'
t
own
it
.
*
/
b
-
>
yy_ch_buf
=
0
;
if
(
!
b
-
>
yy_ch_buf
)
YY_FATAL_ERROR
(
"
fatal
error
-
scanner
input
buffer
overflow
"
)
;
yy_c_buf_p
=
&
b
-
>
yy_ch_buf
[
yy_c_buf_p_offset
]
;
num_to_read
=
yy_current_buffer
-
>
yy_buf_size
-
number_to_move
-
1
;
#
endif
}
if
(
num_to_read
>
YY_READ_BUF_SIZE
)
num_to_read
=
YY_READ_BUF_SIZE
;
/
*
Read
in
more
data
.
*
/
YY_INPUT
(
(
&
yy_current_buffer
-
>
yy_ch_buf
[
number_to_move
]
)
yy_n_chars
num_to_read
)
;
}
if
(
yy_n_chars
=
=
0
)
{
if
(
number_to_move
=
=
YY_MORE_ADJ
)
{
ret_val
=
EOB_ACT_END_OF_FILE
;
yyrestart
(
yyin
)
;
}
else
{
ret_val
=
EOB_ACT_LAST_MATCH
;
yy_current_buffer
-
>
yy_buffer_status
=
YY_BUFFER_EOF_PENDING
;
}
}
else
ret_val
=
EOB_ACT_CONTINUE_SCAN
;
yy_n_chars
+
=
number_to_move
;
yy_current_buffer
-
>
yy_ch_buf
[
yy_n_chars
]
=
YY_END_OF_BUFFER_CHAR
;
yy_current_buffer
-
>
yy_ch_buf
[
yy_n_chars
+
1
]
=
YY_END_OF_BUFFER_CHAR
;
yytext_ptr
=
&
yy_current_buffer
-
>
yy_ch_buf
[
0
]
;
return
ret_val
;
}
/
*
yy_get_previous_state
-
get
the
state
just
before
the
EOB
char
was
reached
*
/
%
-
static
yy_state_type
yy_get_previous_state
(
)
%
+
yy_state_type
yyFlexLexer
:
:
yy_get_previous_state
(
)
%
*
{
register
yy_state_type
yy_current_state
;
register
char
*
yy_cp
;
%
%
code
to
get
the
start
state
into
yy_current_state
goes
here
for
(
yy_cp
=
yytext_ptr
+
YY_MORE_ADJ
;
yy_cp
<
yy_c_buf_p
;
+
+
yy_cp
)
{
%
%
code
to
find
the
next
state
goes
here
}
return
yy_current_state
;
}
/
*
yy_try_NUL_trans
-
try
to
make
a
transition
on
the
NUL
character
*
*
synopsis
*
next_state
=
yy_try_NUL_trans
(
current_state
)
;
*
/
%
-
#
ifdef
YY_USE_PROTOS
static
yy_state_type
yy_try_NUL_trans
(
yy_state_type
yy_current_state
)
#
else
static
yy_state_type
yy_try_NUL_trans
(
yy_current_state
)
yy_state_type
yy_current_state
;
#
endif
%
+
yy_state_type
yyFlexLexer
:
:
yy_try_NUL_trans
(
yy_state_type
yy_current_state
)
%
*
{
register
int
yy_is_jam
;
%
%
code
to
find
the
next
state
and
perhaps
do
backing
up
goes
here
return
yy_is_jam
?
0
:
yy_current_state
;
}
%
-
#
ifndef
YY_NO_UNPUT
#
ifdef
YY_USE_PROTOS
static
void
yyunput
(
int
c
register
char
*
yy_bp
)
#
else
static
void
yyunput
(
c
yy_bp
)
int
c
;
register
char
*
yy_bp
;
#
endif
%
+
void
yyFlexLexer
:
:
yyunput
(
int
c
register
char
*
yy_bp
)
%
*
{
register
char
*
yy_cp
=
yy_c_buf_p
;
/
*
undo
effects
of
setting
up
yytext
*
/
*
yy_cp
=
yy_hold_char
;
if
(
yy_cp
<
yy_current_buffer
-
>
yy_ch_buf
+
2
)
{
/
*
need
to
shift
things
up
to
make
room
*
/
/
*
+
2
for
EOB
chars
.
*
/
register
int
number_to_move
=
yy_n_chars
+
2
;
register
char
*
dest
=
&
yy_current_buffer
-
>
yy_ch_buf
[
yy_current_buffer
-
>
yy_buf_size
+
2
]
;
register
char
*
source
=
&
yy_current_buffer
-
>
yy_ch_buf
[
number_to_move
]
;
while
(
source
>
yy_current_buffer
-
>
yy_ch_buf
)
*
-
-
dest
=
*
-
-
source
;
yy_cp
+
=
(
int
)
(
dest
-
source
)
;
yy_bp
+
=
(
int
)
(
dest
-
source
)
;
yy_n_chars
=
yy_current_buffer
-
>
yy_buf_size
;
if
(
yy_cp
<
yy_current_buffer
-
>
yy_ch_buf
+
2
)
YY_FATAL_ERROR
(
"
flex
scanner
push
-
back
overflow
"
)
;
}
*
-
-
yy_cp
=
(
char
)
c
;
%
%
update
yylineno
here
yytext_ptr
=
yy_bp
;
yy_hold_char
=
*
yy_cp
;
yy_c_buf_p
=
yy_cp
;
}
%
-
#
endif
/
*
ifndef
YY_NO_UNPUT
*
/
%
*
%
-
#
ifdef
__cplusplus
static
int
yyinput
(
)
#
else
static
int
input
(
)
#
endif
%
+
int
yyFlexLexer
:
:
yyinput
(
)
%
*
{
int
c
;
*
yy_c_buf_p
=
yy_hold_char
;
if
(
*
yy_c_buf_p
=
=
YY_END_OF_BUFFER_CHAR
)
{
/
*
yy_c_buf_p
now
points
to
the
character
we
want
to
return
.
*
If
this
occurs
*
before
*
the
EOB
characters
then
it
'
s
a
*
valid
NUL
;
if
not
then
we
'
ve
hit
the
end
of
the
buffer
.
*
/
if
(
yy_c_buf_p
<
&
yy_current_buffer
-
>
yy_ch_buf
[
yy_n_chars
]
)
/
*
This
was
really
a
NUL
.
*
/
*
yy_c_buf_p
=
'
\
0
'
;
else
{
/
*
need
more
input
*
/
yytext_ptr
=
yy_c_buf_p
;
+
+
yy_c_buf_p
;
switch
(
yy_get_next_buffer
(
)
)
{
case
EOB_ACT_END_OF_FILE
:
{
if
(
yywrap
(
)
)
{
yy_c_buf_p
=
yytext_ptr
+
YY_MORE_ADJ
;
return
EOF
;
}
if
(
!
yy_did_buffer_switch_on_eof
)
YY_NEW_FILE
;
#
ifdef
__cplusplus
return
yyinput
(
)
;
#
else
return
input
(
)
;
#
endif
}
case
EOB_ACT_CONTINUE_SCAN
:
yy_c_buf_p
=
yytext_ptr
+
YY_MORE_ADJ
;
break
;
case
EOB_ACT_LAST_MATCH
:
#
ifdef
__cplusplus
YY_FATAL_ERROR
(
"
unexpected
last
match
in
yyinput
(
)
"
)
;
#
else
YY_FATAL_ERROR
(
"
unexpected
last
match
in
input
(
)
"
)
;
#
endif
}
}
}
c
=
*
(
unsigned
char
*
)
yy_c_buf_p
;
/
*
cast
for
8
-
bit
char
'
s
*
/
*
yy_c_buf_p
=
'
\
0
'
;
/
*
preserve
yytext
*
/
yy_hold_char
=
*
+
+
yy_c_buf_p
;
%
%
update
BOL
and
yylineno
return
c
;
}
%
-
#
ifdef
YY_USE_PROTOS
void
yyrestart
(
FILE
*
input_file
)
#
else
void
yyrestart
(
input_file
)
FILE
*
input_file
;
#
endif
%
+
void
yyFlexLexer
:
:
yyrestart
(
istream
*
input_file
)
%
*
{
if
(
!
yy_current_buffer
)
yy_current_buffer
=
yy_create_buffer
(
yyin
YY_BUF_SIZE
)
;
yy_init_buffer
(
yy_current_buffer
input_file
)
;
yy_load_buffer_state
(
)
;
}
%
-
#
ifdef
YY_USE_PROTOS
void
yy_switch_to_buffer
(
YY_BUFFER_STATE
new_buffer
)
#
else
void
yy_switch_to_buffer
(
new_buffer
)
YY_BUFFER_STATE
new_buffer
;
#
endif
%
+
void
yyFlexLexer
:
:
yy_switch_to_buffer
(
YY_BUFFER_STATE
new_buffer
)
%
*
{
if
(
yy_current_buffer
=
=
new_buffer
)
return
;
if
(
yy_current_buffer
)
{
/
*
Flush
out
information
for
old
buffer
.
*
/
*
yy_c_buf_p
=
yy_hold_char
;
yy_current_buffer
-
>
yy_buf_pos
=
yy_c_buf_p
;
yy_current_buffer
-
>
yy_n_chars
=
yy_n_chars
;
}
yy_current_buffer
=
new_buffer
;
yy_load_buffer_state
(
)
;
/
*
We
don
'
t
actually
know
whether
we
did
this
switch
during
*
EOF
(
yywrap
(
)
)
processing
but
the
only
time
this
flag
*
is
looked
at
is
after
yywrap
(
)
is
called
so
it
'
s
safe
*
to
go
ahead
and
always
set
it
.
*
/
yy_did_buffer_switch_on_eof
=
1
;
}
%
-
#
ifdef
YY_USE_PROTOS
void
yy_load_buffer_state
(
void
)
#
else
void
yy_load_buffer_state
(
)
#
endif
%
+
void
yyFlexLexer
:
:
yy_load_buffer_state
(
)
%
*
{
yy_n_chars
=
yy_current_buffer
-
>
yy_n_chars
;
yytext_ptr
=
yy_c_buf_p
=
yy_current_buffer
-
>
yy_buf_pos
;
yyin
=
yy_current_buffer
-
>
yy_input_file
;
yy_hold_char
=
*
yy_c_buf_p
;
}
%
-
#
ifdef
YY_USE_PROTOS
YY_BUFFER_STATE
yy_create_buffer
(
FILE
*
file
int
size
)
#
else
YY_BUFFER_STATE
yy_create_buffer
(
file
size
)
FILE
*
file
;
int
size
;
#
endif
%
+
YY_BUFFER_STATE
yyFlexLexer
:
:
yy_create_buffer
(
istream
*
file
int
size
)
%
*
{
YY_BUFFER_STATE
b
;
b
=
(
YY_BUFFER_STATE
)
yy_flex_alloc
(
sizeof
(
struct
yy_buffer_state
)
)
;
if
(
!
b
)
YY_FATAL_ERROR
(
"
out
of
dynamic
memory
in
yy_create_buffer
(
)
"
)
;
b
-
>
yy_buf_size
=
size
;
/
*
yy_ch_buf
has
to
be
2
characters
longer
than
the
size
given
because
*
we
need
to
put
in
2
end
-
of
-
buffer
characters
.
*
/
b
-
>
yy_ch_buf
=
(
char
*
)
yy_flex_alloc
(
b
-
>
yy_buf_size
+
2
)
;
if
(
!
b
-
>
yy_ch_buf
)
YY_FATAL_ERROR
(
"
out
of
dynamic
memory
in
yy_create_buffer
(
)
"
)
;
b
-
>
yy_is_our_buffer
=
1
;
yy_init_buffer
(
b
file
)
;
return
b
;
}
%
-
#
ifdef
YY_USE_PROTOS
void
yy_delete_buffer
(
YY_BUFFER_STATE
b
)
#
else
void
yy_delete_buffer
(
b
)
YY_BUFFER_STATE
b
;
#
endif
%
+
void
yyFlexLexer
:
:
yy_delete_buffer
(
YY_BUFFER_STATE
b
)
%
*
{
if
(
!
b
)
return
;
if
(
b
=
=
yy_current_buffer
)
yy_current_buffer
=
(
YY_BUFFER_STATE
)
0
;
if
(
b
-
>
yy_is_our_buffer
)
yy_flex_free
(
(
void
*
)
b
-
>
yy_ch_buf
)
;
yy_flex_free
(
(
void
*
)
b
)
;
}
%
-
#
ifndef
YY_ALWAYS_INTERACTIVE
#
ifndef
YY_NEVER_INTERACTIVE
extern
int
isatty
YY_PROTO
(
(
int
)
)
;
#
endif
#
endif
#
ifdef
YY_USE_PROTOS
void
yy_init_buffer
(
YY_BUFFER_STATE
b
FILE
*
file
)
#
else
void
yy_init_buffer
(
b
file
)
YY_BUFFER_STATE
b
;
FILE
*
file
;
#
endif
%
+
extern
"
C
"
int
isatty
YY_PROTO
(
(
int
)
)
;
void
yyFlexLexer
:
:
yy_init_buffer
(
YY_BUFFER_STATE
b
istream
*
file
)
%
*
{
yy_flush_buffer
(
b
)
;
b
-
>
yy_input_file
=
file
;
b
-
>
yy_fill_buffer
=
1
;
%
-
#
if
YY_ALWAYS_INTERACTIVE
b
-
>
yy_is_interactive
=
1
;
#
else
#
if
YY_NEVER_INTERACTIVE
b
-
>
yy_is_interactive
=
0
;
#
else
b
-
>
yy_is_interactive
=
file
?
(
isatty
(
fileno
(
file
)
)
>
0
)
:
0
;
#
endif
#
endif
%
+
b
-
>
yy_is_interactive
=
0
;
%
*
}
%
-
#
ifdef
YY_USE_PROTOS
void
yy_flush_buffer
(
YY_BUFFER_STATE
b
)
#
else
void
yy_flush_buffer
(
b
)
YY_BUFFER_STATE
b
;
#
endif
%
+
void
yyFlexLexer
:
:
yy_flush_buffer
(
YY_BUFFER_STATE
b
)
%
*
{
b
-
>
yy_n_chars
=
0
;
/
*
We
always
need
two
end
-
of
-
buffer
characters
.
The
first
causes
*
a
transition
to
the
end
-
of
-
buffer
state
.
The
second
causes
*
a
jam
in
that
state
.
*
/
b
-
>
yy_ch_buf
[
0
]
=
YY_END_OF_BUFFER_CHAR
;
b
-
>
yy_ch_buf
[
1
]
=
YY_END_OF_BUFFER_CHAR
;
b
-
>
yy_buf_pos
=
&
b
-
>
yy_ch_buf
[
0
]
;
b
-
>
yy_at_bol
=
1
;
b
-
>
yy_buffer_status
=
YY_BUFFER_NEW
;
if
(
b
=
=
yy_current_buffer
)
yy_load_buffer_state
(
)
;
}
%
*
#
ifndef
YY_NO_SCAN_BUFFER
%
-
#
ifdef
YY_USE_PROTOS
YY_BUFFER_STATE
yy_scan_buffer
(
char
*
base
yy_size_t
size
)
#
else
YY_BUFFER_STATE
yy_scan_buffer
(
base
size
)
char
*
base
;
yy_size_t
size
;
#
endif
{
YY_BUFFER_STATE
b
;
if
(
size
<
2
|
|
base
[
size
-
2
]
!
=
YY_END_OF_BUFFER_CHAR
|
|
base
[
size
-
1
]
!
=
YY_END_OF_BUFFER_CHAR
)
/
*
They
forgot
to
leave
room
for
the
EOB
'
s
.
*
/
return
0
;
b
=
(
YY_BUFFER_STATE
)
yy_flex_alloc
(
sizeof
(
struct
yy_buffer_state
)
)
;
if
(
!
b
)
YY_FATAL_ERROR
(
"
out
of
dynamic
memory
in
yy_scan_buffer
(
)
"
)
;
b
-
>
yy_buf_size
=
size
-
2
;
/
*
"
-
2
"
to
take
care
of
EOB
'
s
*
/
b
-
>
yy_buf_pos
=
b
-
>
yy_ch_buf
=
base
;
b
-
>
yy_is_our_buffer
=
0
;
b
-
>
yy_input_file
=
0
;
b
-
>
yy_n_chars
=
b
-
>
yy_buf_size
;
b
-
>
yy_is_interactive
=
0
;
b
-
>
yy_at_bol
=
1
;
b
-
>
yy_fill_buffer
=
0
;
b
-
>
yy_buffer_status
=
YY_BUFFER_NEW
;
yy_switch_to_buffer
(
b
)
;
return
b
;
}
%
*
#
endif
#
ifndef
YY_NO_SCAN_STRING
%
-
#
ifdef
YY_USE_PROTOS
YY_BUFFER_STATE
yy_scan_string
(
yyconst
char
*
str
)
#
else
YY_BUFFER_STATE
yy_scan_string
(
str
)
yyconst
char
*
str
;
#
endif
{
int
len
;
for
(
len
=
0
;
str
[
len
]
;
+
+
len
)
;
return
yy_scan_bytes
(
str
len
)
;
}
%
*
#
endif
#
ifndef
YY_NO_SCAN_BYTES
%
-
#
ifdef
YY_USE_PROTOS
YY_BUFFER_STATE
yy_scan_bytes
(
yyconst
char
*
bytes
int
len
)
#
else
YY_BUFFER_STATE
yy_scan_bytes
(
bytes
len
)
yyconst
char
*
bytes
;
int
len
;
#
endif
{
YY_BUFFER_STATE
b
;
char
*
buf
;
yy_size_t
n
;
int
i
;
/
*
Get
memory
for
full
buffer
including
space
for
trailing
EOB
'
s
.
*
/
n
=
len
+
2
;
buf
=
(
char
*
)
yy_flex_alloc
(
n
)
;
if
(
!
buf
)
YY_FATAL_ERROR
(
"
out
of
dynamic
memory
in
yy_scan_bytes
(
)
"
)
;
for
(
i
=
0
;
i
<
len
;
+
+
i
)
buf
[
i
]
=
bytes
[
i
]
;
buf
[
len
]
=
buf
[
len
+
1
]
=
YY_END_OF_BUFFER_CHAR
;
b
=
yy_scan_buffer
(
buf
n
)
;
if
(
!
b
)
YY_FATAL_ERROR
(
"
bad
buffer
in
yy_scan_bytes
(
)
"
)
;
/
*
It
'
s
okay
to
grow
etc
.
this
buffer
and
we
should
throw
it
*
away
when
we
'
re
done
.
*
/
b
-
>
yy_is_our_buffer
=
1
;
return
b
;
}
%
*
#
endif
#
ifndef
YY_NO_PUSH_STATE
%
-
#
ifdef
YY_USE_PROTOS
static
void
yy_push_state
(
int
new_state
)
#
else
static
void
yy_push_state
(
new_state
)
int
new_state
;
#
endif
%
+
void
yyFlexLexer
:
:
yy_push_state
(
int
new_state
)
%
*
{
if
(
yy_start_stack_ptr
>
=
yy_start_stack_depth
)
{
yy_size_t
new_size
;
yy_start_stack_depth
+
=
YY_START_STACK_INCR
;
new_size
=
yy_start_stack_depth
*
sizeof
(
int
)
;
if
(
!
yy_start_stack
)
yy_start_stack
=
(
int
*
)
yy_flex_alloc
(
new_size
)
;
else
yy_start_stack
=
(
int
*
)
yy_flex_realloc
(
(
void
*
)
yy_start_stack
new_size
)
;
if
(
!
yy_start_stack
)
YY_FATAL_ERROR
(
"
out
of
memory
expanding
start
-
condition
stack
"
)
;
}
yy_start_stack
[
yy_start_stack_ptr
+
+
]
=
YY_START
;
BEGIN
(
new_state
)
;
}
#
endif
#
ifndef
YY_NO_POP_STATE
%
-
static
void
yy_pop_state
(
)
%
+
void
yyFlexLexer
:
:
yy_pop_state
(
)
%
*
{
if
(
-
-
yy_start_stack_ptr
<
0
)
YY_FATAL_ERROR
(
"
start
-
condition
stack
underflow
"
)
;
BEGIN
(
yy_start_stack
[
yy_start_stack_ptr
]
)
;
}
#
endif
#
ifndef
YY_NO_TOP_STATE
%
-
static
int
yy_top_state
(
)
%
+
int
yyFlexLexer
:
:
yy_top_state
(
)
%
*
{
return
yy_start_stack
[
yy_start_stack_ptr
-
1
]
;
}
#
endif
#
ifndef
YY_EXIT_FAILURE
#
define
YY_EXIT_FAILURE
2
#
endif
%
-
#
ifdef
YY_USE_PROTOS
static
void
yy_fatal_error
(
yyconst
char
msg
[
]
)
#
else
static
void
yy_fatal_error
(
msg
)
char
msg
[
]
;
#
endif
{
(
void
)
fprintf
(
stderr
"
%
s
\
n
"
msg
)
;
exit
(
YY_EXIT_FAILURE
)
;
}
%
+
void
yyFlexLexer
:
:
LexerError
(
yyconst
char
msg
[
]
)
{
cerr
<
<
msg
<
<
'
\
n
'
;
exit
(
YY_EXIT_FAILURE
)
;
}
%
*
/
*
Redefine
yyless
(
)
so
it
works
in
section
3
code
.
*
/
#
undef
yyless
#
define
yyless
(
n
)
\
do
\
{
\
/
*
Undo
effects
of
setting
up
yytext
.
*
/
\
yytext
[
yyleng
]
=
yy_hold_char
;
\
yy_c_buf_p
=
yytext
+
n
-
YY_MORE_ADJ
;
\
yy_hold_char
=
*
yy_c_buf_p
;
\
*
yy_c_buf_p
=
'
\
0
'
;
\
yyleng
=
n
;
\
}
\
while
(
0
)
/
*
Internal
utility
routines
.
*
/
#
ifndef
yytext_ptr
#
ifdef
YY_USE_PROTOS
static
void
yy_flex_strncpy
(
char
*
s1
yyconst
char
*
s2
int
n
)
#
else
static
void
yy_flex_strncpy
(
s1
s2
n
)
char
*
s1
;
yyconst
char
*
s2
;
int
n
;
#
endif
{
register
int
i
;
for
(
i
=
0
;
i
<
n
;
+
+
i
)
s1
[
i
]
=
s2
[
i
]
;
}
#
endif
#
ifdef
YY_USE_PROTOS
static
void
*
yy_flex_alloc
(
yy_size_t
size
)
#
else
static
void
*
yy_flex_alloc
(
size
)
yy_size_t
size
;
#
endif
{
return
(
void
*
)
malloc
(
size
)
;
}
#
ifdef
YY_USE_PROTOS
static
void
*
yy_flex_realloc
(
void
*
ptr
yy_size_t
size
)
#
else
static
void
*
yy_flex_realloc
(
ptr
size
)
void
*
ptr
;
yy_size_t
size
;
#
endif
{
/
*
The
cast
to
(
char
*
)
in
the
following
accommodates
both
*
implementations
that
use
char
*
generic
pointers
and
those
*
that
use
void
*
generic
pointers
.
It
works
with
the
latter
*
because
both
ANSI
C
and
C
+
+
allow
castless
assignment
from
*
any
pointer
type
to
void
*
and
deal
with
argument
conversions
*
as
though
doing
an
assignment
.
*
/
return
(
void
*
)
realloc
(
(
char
*
)
ptr
size
)
;
}
#
ifdef
YY_USE_PROTOS
static
void
yy_flex_free
(
void
*
ptr
)
#
else
static
void
yy_flex_free
(
ptr
)
void
*
ptr
;
#
endif
{
free
(
ptr
)
;
}
#
if
YY_MAIN
int
main
(
)
{
yylex
(
)
;
return
0
;
}
#
endif
symbol
table
memory
allocation
failed
name
defined
twice
start
condition
%
s
declared
twice
premature
EOF
%
d
%
s
%
x
%
%
'
%
s
'
\
%
c
\
%
.
3o
%
d
[
%
d
]
<
<
EOF
>
>
%
s
%
s
End
Marker
*
Something
Weird
*
-
tok
:
%
d
val
:
%
d
C
C
B
B
(
(
(
(
(
H
.
(
n
u
l
l
)
(
null
)
B
0
B
-
]
]
y
!
~
A
[
~
Q
Q
^
_
j
2
1
~
runtime
error
TLOSS
error
SING
error
DOMAIN
error
R6027
-
not
enough
space
for
lowio
initialization
R6026
-
not
enough
space
for
stdio
initialization
R6025
-
pure
virtual
function
call
R6024
-
not
enough
space
for
_onexit
/
atexit
table
R6019
-
unable
to
open
console
device
R6018
-
unexpected
heap
error
R6017
-
unexpected
multithread
lock
error
R6016
-
not
enough
space
for
thread
data
abnormal
program
termination
R6009
-
not
enough
space
for
environment
R6008
-
not
enough
space
for
arguments
R6002
-
floating
point
not
loaded
B
h
B
<
B
B
B
B
B
l
B
4
B
B
B
B
x
B
y
|
B
z
l
B
h
B
X
B
Microsoft
Visual
C
+
+
Runtime
Library
Runtime
Error
!
Program
:
.
.
.
<
program
name
unknown
>
!
5
A
C
P
R
S
W
Y
l
m
p
r
)
PIA
PIA
PIA
PIA
PIA
PIA
Assertion
failed
:
%
s
file
%
s
line
%
d
B
4
B
t
B
GetLastActivePopup
GetActiveWindow
MessageBoxA
user32
.
dll
(
#
"
v
!
!
!
!
!
!
!
!
!
!
"
"
"
:
"
L
"
b
"
t
"
"
"
"
h
!
"
"
"
#
#
4
#
N
#
h
#
t
#
~
#
#
#
#
#
#
#
#
"
v
!
!
!
!
!
!
!
!
!
!
"
"
"
:
"
L
"
b
"
t
"
"
"
"
h
!
"
"
"
#
#
4
#
N
#
h
#
t
#
~
#
#
#
#
#
#
#
#
b
ExitProcess
S
HeapAlloc
\
HeapReAlloc
Y
HeapFree
GetCommandLineA
7
GetVersion
GetLastError
O
WriteFile
SetFilePointer
SetHandleCount
GetFileType
GetStdHandle
GetStartupInfoA
CloseHandle
GetStringTypeA
B
WideCharToMultiByte
GetStringTypeW
MultiByteToWideChar
u
LCMapStringA
v
LCMapStringW
ReadFile
U
HeapCreate
RtlUnwind
&
UnhandledExceptionFilter
GetModuleFileNameA
FreeEnvironmentStringsA
GetEnvironmentStrings
FreeEnvironmentStringsW
GetEnvironmentStringsW
GetCPInfo
GetACP
GetOEMCP
SetStdHandle
FlushFileBuffers
+
CreateFileA
GetProcAddress
x
LoadLibraryA
SetEndOfFile
KERNEL32
.
dll
E
DeleteFileA
0
0
.
0H0R0X0a0g0v0
|
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
1
1
1
&
151
;
1C1S1Y1e1k1w1
1
1
!
2A2j2
2
2
2
2
2
2
2
2
2
3
3
(
393A3
3
3
3
3
3
3
4
!
4
)
4
4
4
5
%
525P5m5y5
5
5
5
6
6J6c6m6s6
|
6
6
6
6
6
6
6
7
757U7_7e7n7
7
7
7
7
7
7
7
7
7
7
7
8
8
8
8
8Q8
[
8a8j8
{
8
8
8
8
8
8
8
8
8
8
8
9
9
9E9Q9f9
9
9
9
9
9
9
9
9
9
9
:
:
:
:
&
:
+
:
=
:
C
:
H
:
Z
:
:
e
:
w
:
|
:
:
:
:
:
:
:
;
;
'
;
/
;
;
E
;
X
;
;
f
;
m
;
s
;
;
;
;
;
;
;
;
;
;
;
<
<
<
#
<
2
<
9
<
?
<
L
<
v
<
<
<
<
<
?
=
E
=
O
=
z
=
=
=
=
=
=
=
=
>
>
>
T
>
>
?
?
(
?
:
?
?
?
V
?
x
?
?
?
?
?
?
?
60T0
\
0f0r0
0
0
0
0
0
0
1
1
1
1
1
1
1
1
1
1
1
%
2R2
2j2
2
2
2
2
2
2
3
3
"
3M3c3t3
3
3
3
3
3
3
3
3
4
4
:
4C4J4
4
4
4
4
4
4
4
5
5
;
5C5
\
5
5
5
5
6
&
62696L6u6
{
6
6
6
6
6
6
6
7
727E7
7
7
7
7
7
7
7
7
7
8D9U9
\
9
9
9
"
:
+
:
4
:
<
:
C
:
Q
:
V
:
c
:
p
:
}
:
:
:
:
:
:
:
:
:
:
:
:
;
;
;
2
;
9
;
;
H
;
U
;
b
;
k
;
w
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
<
<
&
<
/
<
;
<
D
<
N
<
X
<
a
<
o
<
t
<
<
<
<
<
<
<
<
<
<
=
=
=
*
=
3
=
D
=
Q
=
\
=
j
=
w
=
=
=
=
=
=
=
=
=
=
=
>
#
>
/
>
4
>
A
>
^
>
g
>
w
>
|
>
>
>
>
>
>
>
>
>
>
>
>
?
?
?
?
9
?
F
?
S
?
a
?
f
?
s
?
?
?
?
?
?
?
?
?
?
?
?
?
0
0
0
!
0
/
040B0G0U0Z0g0t0
0
0
0
0
0
0
0
0
0
0
0
0
1
1
&
1
+
181G1M1Z1g1t1
1
1
1
1
1
1
1
1
1
1
1
1
2
2
2
!
2
.
2
;
2I2R2
[
2b2g2m2u2
2
2
2
2
2
2
2
2
2
2
3
3
3
(
363C3L3Z3_3m3r3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
494J4V4c4p4
~
4
4
4
4
4
4
4
4
4
4
5
5
5
%
5
*
5A5N5
\
5g5o5u5
|
5
5
5
5
5
5
5
5
5
5
6
6
6
#
6
)
606_6h6u6
6
6
6
6
6
6
6
6
6
6
7
7
7
7
(
767
>
7e7o7
7
7
7
7
7
7
7
7
7
7
7
8
8
#
808
=
8J8W8f8p8
8
8
8
8
8
8
8
8
8
8
9
"
9
+
939A9O9
]
9e9s9
{
9
9
9
9
9
9
9
9
9
9
:
:
:
:
%
:
:
:
w
:
:
:
:
:
:
:
:
:
;
;
;
"
;
/
;
6
;
?
;
F
;
q
;
;
;
;
;
;
;
;
;
;
;
<
<
4
<
<
<
K
<
P
<
_
<
y
<
<
<
<
<
<
<
<
<
<
<
<
=
=
=
.
=
;
=
A
=
G
=
S
=
Y
=
=
n
=
}
=
=
=
=
=
=
=
=
=
=
=
>
)
>
/
>
I
>
O
>
V
>
_
>
y
>
>
>
>
>
>
>
>
>
>
>
>
?
)
?
/
?
6
?
<
?
H
?
W
?
c
?
p
?
?
?
?
0
0
0
"
050
=
0K0P0
^
0c0q0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
1
1
!
1
.
1
<
1B1R1g1p1y1
1
1
1
1
1
1
1
1
1
1
1
2
2
2
%
222
2F2L2Q2X2l2x2
2
2
2
2
2
2
2
2
2
2
3
3
(
353B3O3
\
3j3r3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
'
4
.
4
;
4I4R4Z4g4t4
4
4
4
4
4
4
4
4
4
4
4
5
5
5
+
585E5R5_5l5y5
5
5
5
5
5
5
5
5
5
5
5
6
6
6
&
6
6
<
6O6Y6a6n6
|
6
6
6
6
6
6
6
6
6
6
7
7
7
&
74797G7L7Z7
7e7s7
~
7
7
7
7
7
7
7
7
7
7
7
7
7
7
8
8
8
'
858
?
8E8S8Y8a8h8u8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
9
9
9
'
9
-
9B9P9
\
9q9z9
9
9
9
9
9
9
9
9
9
9
9
9
9
:
!
:
9
:
N
:
V
:
d
:
i
:
w
:
:
:
:
:
:
:
:
:
:
:
:
:
:
4
;
;
;
G
;
N
;
W
;
f
;
n
;
w
;
;
;
;
;
;
;
;
;
;
;
<
<
<
<
#
<
(
<
-
<
5
<
;
<
A
<
J
<
T
<
e
<
n
<
z
<
<
<
<
<
<
<
<
<
<
<
<
<
=
=
=
=
#
=
+
=
9
=
?
=
L
=
Z
=
=
l
=
z
=
=
=
=
=
=
=
=
=
=
=
=
=
>
>
>
#
>
+
>
4
>
=
>
C
>
J
>
Q
>
V
>
]
>
j
>
q
>
v
>
{
>
>
>
>
>
>
>
>
>
>
>
>
>
?
?
?
?
?
"
?
(
?
-
?
:
?
?
?
E
?
J
?
W
?
\
?
b
?
g
?
t
?
y
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
P
l
0
0
0
0
"
0
'
0
-
020
?
0D0J0O0
\
0a0g0l0y0
~
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
1
1
1
!
1
'
1
191G1Q1r1
}
1
1
1
1
1
1
1
1
1
1
1
1
1
2
2
2
292A2F2W2
2h2m2
}
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
3
3
3
!
3
*
313A3J3Q3Z3a3q3z3
3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
4
!
414
:
4A4J4Q4a4j4q4z4
4
4
4
4
4
4
4
4
4
4
4
4
4
5
5
5
!
5
*
515
:
5A5Q5Z5a5j5q5
5
5
5
5
5
5
5
5
5
5
5
5
5
6
6
6
6
!
6
(
61686G6L6Z6c6j6s6z6
6
6
6
6
6
6
6
6
6
6
6
6
6
7
7
7
#
7
*
737
:
7J7S7Z7c7j7z7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
8
8
8
8
.
84898A8F8S8Y8
8e8s8
{
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
9
9
9
9
(
90959E9K9T9Z9a9m9t9
{
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
:
:
:
:
"
:
0
:
6
:
;
:
C
:
H
:
U
:
\
:
c
:
i
:
p
:
v
:
{
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
;
;
;
;
;
)
;
6
;
<
;
C
;
J
;
O
;
]
;
c
;
h
;
v
;
{
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
<
<
<
<
"
<
-
<
3
<
9
<
?
<
E
<
K
<
Q
<
W
<
]
<
c
<
i
<
o
<
u
<
<
<
<
<
<
<
<
<
<
<
=
-
=
4
=
D
=
K
=
=
=
=
=
=
=
=
=
=
=
=
>
>
>
>
*
>
1
>
6
>
<
>
T
>
j
>
r
>
z
>
>
>
>
>
>
>
>
>
>
>
>
>
>
?
&
?
?
<
?
D
?
L
?
T
?
\
?
d
?
v
?
?
?
?
?
?
?
?
?
0
0
0
!
0
&
0
+
00050
:
0
?
0D0I0N0S0X0
]
0b0g0l0q0v0
{
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
1
1
1
1
1
1
1
1
1
(
1
1014181
1
1
1
1
1
1
1
1
2
!
2
)
2
.
2
<
2E2K2
[
2d2o2
2
2
2
2
2
2
2
2
2
2
2
2
2
3
3
3
3
&
3
+
393A3F3S3
\
3a3n3t3
}
3
3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
474
>
4L4T4b4n4v4
~
4
4
4
4
4
4
4
4
4
4
4
5
5
5
"
5
(
505
>
5D5L5Z5
5l5y5
5
5
5
5
5
5
5
5
5
5
6
6
6
6
+
636A6F6P6U6c6h6m6t6
{
6
6
6
6
6
6
6
6
6
6
6
6
7
7
#
7
(
787
=
7M7R7b7h7
}
7
7
7
7
7
7
7
7
7
7
7
7
8
8
8
81868F8K8
[
8a8y8
8
8
8
8
8
8
8
8
8
8
9
9
9
!
91969F9K9
[
9b9p9v9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
:
:
:
"
:
/
:
4
:
A
:
F
:
S
:
X
:
f
:
n
:
s
:
y
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
;
;
;
;
;
2
;
7
;
D
;
J
;
O
;
\
;
a
;
n
;
s
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
<
<
<
"
<
'
<
4
<
9
<
F
<
K
<
X
<
]
<
j
<
p
<
u
<
<
<
=
=
&
=
T
=
[
=
g
=
m
=
=
=
=
>
#
>
h
>
>
?
?
'
?
O
?
e
?
?
p
0
0
0
0
0
0
1
1
&
1
-
121V1
]
1b1
1
262G2X2
2
2
2
2
2
2
21373
=
3J3P3V3
\
3b3q3w3
3
3
3
3
3
3
3
3
3
4
4
#
4
>
4D4u4
4
4
4
4c5
5
5
5
5
5
5
5
5
5
5
5
=
6b6
7
7
7
7
7
7
888
>
8D8J8
[
8a8f8s8y8
8
8
8
8
8
8
8
8
8
8
8
8
9
9
9
%
9G9N9S9g9o9
9
9
9
9
9
9
9
9
:
:
:
5
:
U
:
:
:
:
:
O
;
T
;
b
;
s
;
x
;
;
;
;
;
;
;
;
;
;
;
;
;
;
<
'
<
B
<
Q
<
h
<
{
<
<
<
<
<
<
<
<
=
+
=
:
=
=
I
=
R
=
Z
=
=
h
=
r
=
=
=
=
=
=
=
=
=
=
>
>
>
1
>
6
>
Q
>
_
>
g
>
>
>
>
>
>
>
?
0
?
>
?
S
?
a
?
?
?
?
t
<
0
0
0
0
0
0
0
0
0
0
%
1
:
1R1_1m1R2X2
^
2j2t2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
3
3
3
3
*
3
/
3A3G3L3
^
3c3l3
{
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
4
'
4
424D4K4
[
4h4m4r4
4
4
4
4
4
4
4
4
4
4
4
5
5
5
5
565
<
5A5R5X5h5v5
{
5
5
5
5
5
5
6
6
6
6
6
6
7
757D7d7
7
7
7
7
7
7
7
7
8
858
>
8
8
8
8
8
8
8
8
8
8
8
9
9
9
9
!
9
.
9B9T9m9
|
9
9
9
9
9
9
9
9
9
9
9
9
:
:
:
-
:
:
:
G
:
R
:
\
:
f
:
o
:
u
:
z
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
;
;
;
#
;
)
;
3
;
;
;
A
;
P
;
X
;
k
;
q
;
w
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
<
<
<
%
<
+
<
8
<
D
<
J
<
Y
<
a
<
t
<
z
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
=
=
1
=
7
=
=
N
=
U
=
^
=
l
=
t
=
|
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
>
>
>
>
%
>
.
>
4
>
=
>
J
>
P
>
\
>
b
>
g
>
m
>
|
>
>
>
>
>
>
>
>
>
>
>
?
?
?
?
4
?
M
?
?
f
?
l
?
v
?
?
?
?
?
?
?
?
?
?
?
?
D
0
0
=
0O0X0a0i0n0y0
0
0
0
0
0
0
0
0
0
0
1
-
1A1U1n1
1
1
1
1
2
:
2I2W2f2o2u2
2
2
2
2
2
2
2
2
2
2
2
2
2
3
3
3
3
3
'
363F3f3l3
3
3
4
4
424
<
4D4O4W4b4p4
4
4
4
4
4
4
4
4
5
5
#
5
;
5P5
5o5
5
5
5
5
5
5
5
6
656H6X6g6
{
6
6
6
6
6
6
6
7
7
"
767K7
^
7n7
}
7
7
7
7
7
7
7
8
8
)
888L8a8t8
8
8
8
8
8
8
8
8
9
919A9P9d9
|
9
9
9
9
9
:
0
:
E
:
N
:
Z
:
d
:
:
:
:
:
:
:
:
:
:
:
;
;
;
;
;
;
;
;
;
;
(
;
;
0
;
4
;
8
;
<
;
;
D
;
H
;
L
;
P
;
T
;
X
;
\
;
;
d
;
h
;
l
;
p
;
t
;
x
;
|
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
<
O
<
[
<
c
<
r
<
{
<
<
<
<
<
<
<
"
=
q
=
=
=
=
;
>
B
>
G
>
z
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
?
?
?
(
?
.
?
5
?
C
?
O
?
b
?
j
?
x
?
?
?
?
?
?
?
?
?
?
?
?
?
?
0
0
0
0
&
0
-
090B0H0p0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
1
1
1
)
101
=
1C1M1
1h1n1x1
1
1
1
1
1
1
1
1
1
1
2
2
(
2
.
282K2X2b2t2
2
2
2
2
2
2
2
2
2
2
2
2
2
3
3
"
3
*
303
:
3K3V3
^
3d3n3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
/
474
=
4G4X4c4k4q4
{
4
4
4
4
4
4
4
4
4
4
4
4
5
"
5
+
505
=
5I5
]
5e5k5u5
5
5
5
5
5
5
5
5
5
5
5
6
6
6
!
6
+
6
;
6I6_6h6z6
6
6
6
6
6
6
6
6
6
6
6
6
7
7
&
7
.
747
>
7N7T7c7p7
7
7
7
7
7
7
7
7
7
-
888J8R8X8b8s8
{
8
8
8
8
8
8
8
8
8
8
8
8
8
9
9
9
"
9
9
=
9G9R9Z9
9j9
{
9
9
9
9
9
9
9
9
9
9
9
9
:
:
:
:
"
:
:
<
:
B
:
U
:
]
:
c
:
m
:
}
:
:
:
:
:
:
:
:
:
:
:
:
:
:
;
;
;
;
+
;
0
;
;
;
C
;
I
;
S
;
d
;
n
;
y
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
<
<
<
'
<
0
<
5
<
?
<
O
<
T
<
_
<
g
<
m
<
w
<
<
<
<
<
<
<
<
<
<
<
<
<
=
=
=
#
=
4
=
B
=
U
=
]
=
c
=
m
=
}
=
=
=
=
=
=
=
=
=
=
=
=
=
=
>
>
>
>
>
.
>
>
>
C
>
N
>
V
>
\
>
f
>
v
>
|
>
>
>
>
>
>
>
>
>
>
>
>
?
?
?
?
&
?
6
?
;
?
F
?
N
?
T
?
^
?
n
?
s
?
~
?
?
?
?
?
?
?
?
?
?
?
?
?
?
0
0
0
0
/
080
=
0G0X0f0y0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
1
1
'
10151
?
1O1T1_1g1m1w1
1
1
1
1
1
1
1
1
1
1
1
1
2
2
+
23292C2T2b2u2
}
2
2
2
2
2
2
2
2
2
2
2
3
3
3
!
323
3S3
\
3a3k3
{
3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
4
4
444
?
4G4M4W4g4m4y4
4
4
4
4
4
4
4
4
4
4
4
4
4
5
5
5
!
5
&
5
/
595
5L5Z5_5q5
5
5
5
5
5
5
5
5
5
5
5
5
6
6
6
)
6
:
6E6M6S6
]
6n6
6
6
6
6
6
6
6
6
6
6
6
7
7
7
7
/
777
=
7H7P7X7a7k7u7
~
7
7
7
7
7
7
7
7
7
7
7
7
8
8
838
;
8A8K8
\
8f8p8y8
8
8
8
8
8
8
8
8
8
9
9
9
919R9j9
9
9
9
9
9
:
:
:
:
*
:
=
:
F
:
K
:
U
:
f
:
u
:
}
:
:
:
:
:
:
:
:
:
:
;
;
;
%
;
/
;
?
;
M
;
d
;
s
;
|
;
;
;
;
;
;
;
;
;
;
;
<
<
<
+
<
5
<
D
<
L
<
R
<
\
<
l
<
{
<
<
<
<
<
<
<
<
<
<
<
<
=
=
=
=
=
=
I
=
N
=
X
=
h
=
|
=
=
=
=
=
=
=
=
=
=
=
=
=
>
>
!
>
+
>
:
>
B
>
H
>
R
>
b
>
v
>
>
>
>
>
>
>
>
>
>
>
>
>
?
?
?
/
?
7
?
=
?
G
?
W
?
c
?
u
?
~
?
?
?
?
?
?
?
?
?
?
?
?
0
0
0
%
0
+
0
>
0F0L0V0f0y0
0
0
0
0
0
0
0
0
0
1
1
1
#
141
>
1
^
1s1
{
1
1
1
1
1
1
1
1
1
1
2
2
%
2
/
2P2X2
^
2h2
2
2
2
2
2
2
2
2
2
3
3
3
#
3
=
3K3e3s3
{
3
3
3
3
3
3
3
3
3
3
3
4
414
=
4E4K4S4
\
4b4i4o4y4
4
4
4
4
4
4
4
4
4
4
4
5
5
5
5
<
5B5U5
]
5c5m5
5
5
5
5
5
5
5
5
5
5
6
6
#
6E6Z6a6n6u6
6
6
6
6
6
6
6
6
6
6
6
6
7
7
7
#
737L7S7
[
7a7k7
|
7
7
7
7
7
7
7
7
7
7
7
7
8
8
8
828F8N8T8
^
8o8
8
8
8
8
8
8
8
8
8
9
9
+
929
;
9
9J9a9u9
}
9
9
9
9
9
9
9
9
9
9
9
9
9
:
:
:
)
:
<
:
H
:
P
:
V
:
^
:
g
:
m
:
t
:
z
:
:
:
:
:
:
:
:
:
:
;
;
;
;
!
;
'
;
.
;
4
;
>
;
_
;
h
;
m
;
w
;
;
;
;
;
;
;
;
;
;
;
<
<
%
<
:
<
B
<
H
<
R
<
i
<
}
<
<
<
<
<
<
<
<
<
<
=
=
=
=
2
=
F
=
N
=
T
=
^
=
u
=
=
=
=
=
=
=
=
=
=
=
>
>
>
'
>
>
>
R
>
[
>
>
j
>
>
>
>
>
>
>
>
>
>
>
?
?
"
?
(
?
2
?
I
?
]
?
e
?
k
?
u
?
?
?
?
?
?
?
?
?
?
?
0
0
080
0F0P0g0
{
0
0
0
0
0
0
0
0
0
0
0
1
1
!
1
)
1
/
191I1
[
1b1s1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
2
2
2
2
(
2
2024282
<
2
2D2H2L2P2T2X2
\
2
2d2h2l2p2t2x2
|
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
3
3
3
3
3
3
3
3
3
3
(
3
3034383
<
3
3D3H3L3P3T3X3
\
3
3d3h3l3p3t3x3
|
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
4
4
4
4
4
4
4
(
4
4044484
<
4
4D4H4L4P4T4X4
\
4
4d4h4l4p4t4x4
|
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
5
5
5
%
5
+
5
5L5Z5p5v5
5
5
5
5
6
6
616
?
6X6q6
6
6
6
6
6
6
6
6
6
6
7
7
7
"
7
/
747B7N7b7i7r7x7
7
7
7
7
7
7
7
7
7
7
8
8
8B8J8P8U8
\
8d8p8
8
8
8
8
8
8
8
8
8
9
9
9
;
9V9
^
9d9s9x9
9
9
9
9
9
9
9
9
9
9
9
9
:
:
:
:
#
:
1
:
A
:
J
:
P
:
Y
:
q
:
:
:
:
:
:
:
:
:
:
:
:
:
;
;
#
;
)
;
1
;
8
;
R
;
y
;
;
;
V
<
<
*
=
g
=
=
=
=
=
=
=
=
=
=
=
=
=
=
>
>
>
&
>
>
7
>
F
>
K
>
>
>
>
>
>
?
?
?
"
?
2
?
6
?
;
?
H
?
N
?
0k0
0
1G1r1
1
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
)
2
:
2B2V2
\
2b2x2
~
2
2
2
2
2
2
2
2
2
2
2
3
3
'
3b3
3
3
3
%
4l4
4
4
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
6
6
%
6
-
686Y6a6o6
6
6
6
6
6
6
6
6
6
7
"
7
(
707
<
7D7P7X7i7
}
7
7
7
7
7
7
7
7
8
8
8
#
8
)
838
?
8E8T8
]
8l8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
9
9
9
9
&
9
92979
?
9E9S9Y9_9
9
9R
:
d
:
:
:
:
:
:
:
:
;
;
=
;
H
;
P
;
;
;
;
;
;
;
;
;
;
;
;
<
<
<
<
!
<
-
<
3
<
C
<
J
<
W
<
<
e
<
n
<
t
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
=
=
=
"
=
0
=
6
=
=
=
D
=
J
=
X
=
=
=
=
=
=
=
=
=
=
=
=
=
>
>
>
=
>
G
>
Q
>
V
>
f
>
v
>
>
>
>
>
>
>
?
?
?
?
#
?
.
?
4
?
:
?
?
K
?
t
?
?
?
?
?
?
?
?
?
?
?
H
&
000
:
0D0J0e0k0r0
0
0
0
0
0
1
1
1
!
1
&
111J1Q1V1t1
{
1
1
1
1
1
1
1
1
1
1
1
1
1
2
2
2
2
292J2P2e2m2r2
}
2
2
2
2
2
2
2
2
2
2
2
2
2
2
3
3
3
31363G3L3Q3b3h3m3
~
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
4
4
4
5
5
5
5
5
5
(
5
5
5
5U6m6
7
7
7
7
7
7
7
7
7
7
8
898W8
9
9
9
9
9
:
'
:
/
:
8
:
A
:
T
:
[
:
:
m
:
r
:
:
#
;
<
;
K
;
t
;
;
<
/
<
E
<
d
<
<
J
=
g
=
=
=
=
=
=
r1
1
1V2
2
2
2
2
2
2
2
3
3
(
3
=
3C3H3S3o3t3
~
3
3
3
3
3
3
424L4c4
5k5
5
5
5
6
6O6Y6x6
6
6
6
6
7
!
7
\
7b7
7
7
7
7
7
%
8
/
8H8_8
|
8
8
8
8
8
9f9
|
9
9
9
9
9
:
:
;
N
;
U
;
/
<
6
<
h
<
=
=
=
t
>
I1f1
}
1
1P3T3X3
\
3
3d3h3l3p3t3x3
|
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
4
4
4
4
4
4
5
5
5
5
5
5
6
%
666
/
7
7
7
8
8
9
9094989
<
9
9D9H9L9P9
9
9
9
9
9
9
*
:
>
:
:
:
:
:
4
;
F
;
N
;
k
;
s
;
;
;
;
;
;
;
<
:
<
b
<
q
<
z
<
<
<
<
<
<
<
=
&
=
A
=
=
=
=
>
8
>
Y
>
>
?
?
?
0
"
061
=
1
1
1
1
2
=
2F2
\
2
2
2
[
3
3L5o5
6
617G7
8
8
8
8
9
:
:
:
:
:
:
:
:
:
;
;
;
;
;
;
(
;
;
0
;
4
;
8
;
<
;
b
;
}
;
)
<
?
<
<
<
<
<
=
=
j
>
t
>
>
>
>
>
%
?
?
?
?
0
4
0
0
/
050
;
0C0M0S0e0t0
0
0
0
0
0
0
0
0
1
(
111A1K1e1
1
1
2K2T2Y2_2j2
2
2
+
3o3T4u4
4
4
4
4
4
5
5q5
5
5
5
5
5
6A6x6
6
6
6
6
7
*
7
:
7L7n7
7
7
7
7
7
7
7
7
7
8
8B8U8_8j8t8
8
8
8
8
8
8
8
8
8
8
9
9
9
9
:
:
5
:
Y
:
r
:
{
:
:
:
:
:
:
#
;
1
;
r
;
;
;
;
<
<
/
<
G
<
L
<
Z
<
l
<
x
<
}
<
<
<
<
=
"
=
.
=
x
=
=
=
=
=
=
=
>
(
>
8
>
Y
>
>
>
>
>
>
>
>
?
-
?
K
?
\
?
p
?
?
0
0
0
0
0
0
0D1q1
{
1
1
1
1
1X2b2
2
3
"
3N3
^
3
{
3
3
3
3
4
4
4
4
4
4S5X5
\
5
5d5
5
5
5
5
5
5_6
777D7M7_7g7r7
|
7
7
7
7
7
7
7
8
8
8
8
8
8
8
8
8
8
8
9
9
949y9
9
:
-
:
]
:
m
:
w
:
|
:
:
;
*
;
v
;
;
;
;
;
P
0
0
0
0
2
2
2
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
1
1
1
1
1
1
1
1
1
(
1
1014181
<
1
1D1H1L1P1T1X1
\
1
1d1h1l1p1t1x1
|
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
2
2
2
2
(
2
2024282
<
2
2D2H2L2P2T2X2
\
2
2d2h2l2p2t2x2
|
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
3
3
3
3
3
3
3
3
3
3
(
3
3034383
<
3
3D3H3L3P3T3X3
\
3
3d3h3l3p3t3x3
|
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
4
4
4
4
4
4
4
(
4
4044484
<
4
4D4H4L4P4T4X4
\
4
4d4h4l4p4t4x4
|
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
5
5
5
5
5
5
5
5
5
5
(
5
5054585
<
5
5D5H5L5P5T5X5
\
5
5d5h5l5p5t5x5
|
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
6
6
6
6
6
6
6
6
6
6
(
6
6064686
<
6
6D6H6L6P6T6X6
\
6
6d6h6l6p6t6x6
|
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
7
7
7
7
7
7
7
7
7
7
(
7
7074787
<
7
7D7H7L7P7T7X7
\
7
7d7h7l7p7t7x7
|
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
8
8
8
8
8
8
8
8
8
8
(
8
8084888
<
8
8D8H8L8P8T8X8
\
8
8d8h8l8p8t8x8
|
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
9
9
9
9
9
9
9
9
9
9
(
9
9094989
<
9
9D9H9L9P9T9X9
\
9
9d9h9l9p9t9x9
|
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
:
:
:
:
:
:
:
:
:
:
(
:
:
0
:
4
:
8
:
<
:
:
D
:
H
:
L
:
P
:
T
:
X
:
\
:
:
d
:
h
:
l
:
p
:
t
:
x
:
|
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
:
;
;
;
;
;
;
;
;
;
;
(
;
;
0
;
4
;
8
;
<
;
;
D
;
H
;
L
;
P
;
T
;
X
;
\
;
;
d
;
h
;
l
;
p
;
t
;
x
;
|
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
<
<
<
<
<
<
<
<
<
<
(
<
<
0
<
4
<
8
<
<
<
<
D
<
H
<
L
<
P
<
T
<
X
<
\
<
<
d
<
h
<
l
<
p
<
t
<
x
<
|
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
<
=
=
=
=
=
=
=
=
=
=
(
=
=
0
=
4
=
8
=
<
=
=
D
=
H
=
L
=
P
=
T
=
X
=
\
=
=
d
=
h
=
l
=
p
=
t
=
x
=
|
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
>
>
>
>
>
>
>
>
>
>
(
>
>
0
>
4
>
8
>
<
>
>
D
>
H
>
L
>
P
>
T
>
X
>
\
>
>
d
>
h
>
l
>
p
>
t
>
x
>
|
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
?
?
?
?
?
?
?
?
?
?
(
?
?
0
?
4
?
8
?
<
?
?
D
?
H
?
L
?
P
?
T
?
X
?
\
?
?
d
?
h
?
l
?
p
?
t
?
x
?
|
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
(
0
0
0
0
0
0
0
0
0
0
(
0
0004080
<
0
0D0H0L0P0T0X0
\
0
0d0h0l0p0t0x0
|
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
1
1
1
1
1
1
1
1
1
(
1
1014181
<
1
1D1H1L1P1T1X1
\
1
1d1h1l1p1t1x1
|
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
2
2
2
2
(
2
2024282
<
2
2D2H2L2P2T2X2
\
2
2d2h2l2p2t2x2
|
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
3
3
3
3
3
3
3
3
3
3
(
3
3034383
<
3
3D3H3L3P3T3X3
\
3
3d3h3l3p3t3x3
|
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
4
4
4
4
4
4
4
(
4
4044484
<
4
4D4H4L4P4T4X4
\
4
4d4h4l4p4t4x4
|
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
5
5
5
5
5
5
5
5
5
5
(
5
5054585
<
5
5D5H5L5P5T5X5
\
5
5d5h5l5p5t5x5
|
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
6
6
6
6
6
6
6
6
6
6
(
6
6064686
<
6
6D6H6L6P6T6X6
\
6
6d6h6l6p6t6x6
|
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
7
7
7
7
7
7
7
7
7
7
(
7
7074787
<
7
7D7H7L7P7T7X7
\
7
7d7h7l7p7t7x7
|
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
8
8
8
8
8
8
8
8
8
8
(
8
8084888
(
5
(
5
7
7
:
H
:
L
:
?
?
?
?
?
?
?
?
0
0
0
0
0
040
<
0D0
2
2
2
2
(
2
2
2d2h2
