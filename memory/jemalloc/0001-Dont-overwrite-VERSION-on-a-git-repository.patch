diff
-
-
git
a
/
configure
b
/
configure
index
d727561
.
.
2c4d994
100755
-
-
-
a
/
configure
+
+
+
b
/
configure
-
6970
31
+
6970
8
fi
-
if
test
"
x
test
!
\
"
{
srcroot
}
\
"
&
&
cd
\
"
{
srcroot
}
\
"
;
git
rev
-
parse
-
-
is
-
inside
-
work
-
tree
2
>
/
dev
/
null
"
=
"
xtrue
"
;
then
-
rm
-
f
"
{
objroot
}
VERSION
"
-
for
pattern
in
'
[
0
-
9
]
.
[
0
-
9
]
.
[
0
-
9
]
'
'
[
0
-
9
]
.
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
'
\
-
'
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
'
'
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
'
\
-
'
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
.
[
0
-
9
]
'
'
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
'
\
-
'
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
'
\
-
'
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
'
;
do
-
if
test
!
-
e
"
{
objroot
}
VERSION
"
;
then
-
(
test
!
"
{
srcroot
}
"
&
&
cd
"
{
srcroot
}
"
;
git
describe
-
-
long
-
-
abbrev
=
40
-
-
match
=
"
{
pattern
}
"
)
>
"
{
objroot
}
VERSION
.
tmp
"
2
>
/
dev
/
null
-
if
test
?
-
eq
0
;
then
-
mv
"
{
objroot
}
VERSION
.
tmp
"
"
{
objroot
}
VERSION
"
-
break
-
fi
-
fi
-
done
-
fi
-
rm
-
f
"
{
objroot
}
VERSION
.
tmp
"
if
test
!
-
e
"
{
objroot
}
VERSION
"
;
then
-
if
test
!
-
e
"
{
srcroot
}
VERSION
"
;
then
-
{
as_echo
"
as_me
:
{
as_lineno
-
LINENO
}
:
result
:
Missing
VERSION
file
and
unable
to
generate
it
;
creating
bogus
VERSION
"
>
&
5
-
as_echo
"
Missing
VERSION
file
and
unable
to
generate
it
;
creating
bogus
VERSION
"
>
&
6
;
}
-
echo
"
0
.
0
.
0
-
0
-
g0000000000000000000000000000000000000000
"
>
"
{
objroot
}
VERSION
"
-
else
cp
{
srcroot
}
VERSION
{
objroot
}
VERSION
-
fi
fi
jemalloc_version
=
cat
"
{
objroot
}
VERSION
"
jemalloc_version_major
=
echo
{
jemalloc_version
}
|
tr
"
.
g
-
"
"
"
|
awk
'
{
print
1
}
'
diff
-
-
git
a
/
configure
.
ac
b
/
configure
.
ac
index
6f44b6c
.
.
b842e71
100644
-
-
-
a
/
configure
.
ac
+
+
+
b
/
configure
.
ac
-
1137
35
+
1137
8
dnl
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
dnl
jemalloc
configuration
.
dnl
-
dnl
Set
VERSION
if
source
directory
is
inside
a
git
repository
.
-
if
test
"
x
test
!
\
"
{
srcroot
}
\
"
&
&
cd
\
"
{
srcroot
}
\
"
;
git
rev
-
parse
-
-
is
-
inside
-
work
-
tree
2
>
/
dev
/
null
"
=
"
xtrue
"
;
then
-
dnl
Pattern
globs
aren
'
t
powerful
enough
to
match
both
single
-
and
-
dnl
double
-
digit
version
numbers
so
iterate
over
patterns
to
support
up
to
-
dnl
version
99
.
99
.
99
without
any
accidental
matches
.
-
rm
-
f
"
{
objroot
}
VERSION
"
-
for
pattern
in
[
'
[
0
-
9
]
.
[
0
-
9
]
.
[
0
-
9
]
'
'
[
0
-
9
]
.
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
'
\
-
'
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
'
'
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
'
\
-
'
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
.
[
0
-
9
]
'
'
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
'
\
-
'
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
'
\
-
'
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
.
[
0
-
9
]
[
0
-
9
]
'
]
;
do
-
if
test
!
-
e
"
{
objroot
}
VERSION
"
;
then
-
(
test
!
"
{
srcroot
}
"
&
&
cd
"
{
srcroot
}
"
;
git
describe
-
-
long
-
-
abbrev
=
40
-
-
match
=
"
{
pattern
}
"
)
>
"
{
objroot
}
VERSION
.
tmp
"
2
>
/
dev
/
null
-
if
test
?
-
eq
0
;
then
-
mv
"
{
objroot
}
VERSION
.
tmp
"
"
{
objroot
}
VERSION
"
-
break
-
fi
-
fi
-
done
-
fi
-
rm
-
f
"
{
objroot
}
VERSION
.
tmp
"
if
test
!
-
e
"
{
objroot
}
VERSION
"
;
then
-
if
test
!
-
e
"
{
srcroot
}
VERSION
"
;
then
-
AC_MSG_RESULT
(
-
[
Missing
VERSION
file
and
unable
to
generate
it
;
creating
bogus
VERSION
]
)
-
echo
"
0
.
0
.
0
-
0
-
g0000000000000000000000000000000000000000
"
>
"
{
objroot
}
VERSION
"
-
else
cp
{
srcroot
}
VERSION
{
objroot
}
VERSION
-
fi
fi
jemalloc_version
=
cat
"
{
objroot
}
VERSION
"
jemalloc_version_major
=
echo
{
jemalloc_version
}
|
tr
"
.
g
-
"
"
"
|
awk
'
{
print
[
]
1
}
'
