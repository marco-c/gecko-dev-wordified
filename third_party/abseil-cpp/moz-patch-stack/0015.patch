From
:
Michael
Froman
<
mfroman
mozilla
.
com
>
Date
:
Thu
10
Jul
2025
10
:
39
:
00
-
0500
Subject
:
Bug
1978462
-
disable
ABSL_HAVE_LEAK_SANITIZER
due
to
missing
symbols
(
like
__lsan_ignore_object
)
Mercurial
Revision
:
https
:
/
/
hg
.
mozilla
.
org
/
mozilla
-
central
/
rev
/
fdbec58643d95ef27963b070e162931c6354d1e8
-
-
-
abseil
-
cpp
/
absl
/
base
/
config
.
h
|
2
+
+
1
file
changed
2
insertions
(
+
)
diff
-
-
git
a
/
abseil
-
cpp
/
absl
/
base
/
config
.
h
b
/
abseil
-
cpp
/
absl
/
base
/
config
.
h
index
0e4c31cf0d3
.
.
e15578f1e5d
100644
-
-
-
a
/
abseil
-
cpp
/
absl
/
base
/
config
.
h
+
+
+
b
/
abseil
-
cpp
/
absl
/
base
/
config
.
h
-
798
6
+
798
7
static_assert
(
ABSL_INTERNAL_INLINE_NAMESPACE_STR
[
0
]
!
=
'
h
'
|
|
/
/
LeakSanitizer
is
available
does
not
mean
it
is
active
.
Use
the
/
/
always
-
available
run
-
time
interface
in
/
/
absl
/
debugging
/
leak_check
.
h
for
/
/
interacting
with
LeakSanitizer
.
+
#
if
0
/
/
mozilla
-
builds
fail
missing
lsan
symbols
like
__lsan_ignore_object
#
ifdef
ABSL_HAVE_LEAK_SANITIZER
#
error
"
ABSL_HAVE_LEAK_SANITIZER
cannot
be
directly
set
.
"
#
elif
defined
(
LEAK_SANITIZER
)
-
812
6
+
813
7
static_assert
(
ABSL_INTERNAL_INLINE_NAMESPACE_STR
[
0
]
!
=
'
h
'
|
|
/
/
GCC
or
Clang
using
the
LeakSanitizer
integrated
into
AddressSanitizer
.
#
define
ABSL_HAVE_LEAK_SANITIZER
1
#
endif
+
#
endif
/
/
ABSL_HAVE_CLASS_TEMPLATE_ARGUMENT_DEDUCTION
/
/
