#
THIS
FILE
IS
AUTOMATICALLY
GENERATED
BY
CARGO
#
#
When
uploading
crates
to
the
registry
Cargo
will
automatically
#
"
normalize
"
Cargo
.
toml
files
for
maximal
compatibility
#
with
all
versions
of
Cargo
and
also
rewrite
path
dependencies
#
to
registry
(
e
.
g
.
crates
.
io
)
dependencies
.
#
#
If
you
are
reading
this
file
be
aware
that
the
original
Cargo
.
toml
#
will
likely
look
very
different
(
and
much
more
reasonable
)
.
#
See
Cargo
.
toml
.
orig
for
the
original
contents
.
[
package
]
edition
=
"
2021
"
name
=
"
midir
"
version
=
"
0
.
10
.
1
"
authors
=
[
"
Patrick
Reisert
"
]
build
=
false
autolib
=
false
autobins
=
false
autoexamples
=
false
autotests
=
false
autobenches
=
false
description
=
"
A
cross
-
platform
realtime
MIDI
processing
library
inspired
by
RtMidi
.
"
readme
=
"
README
.
md
"
keywords
=
[
"
midi
"
"
audio
"
"
music
"
"
sound
"
]
categories
=
[
"
multimedia
:
:
audio
"
"
api
-
bindings
"
]
license
=
"
MIT
"
repository
=
"
https
:
/
/
github
.
com
/
Boddlnagg
/
midir
"
[
features
]
avoid_timestamping
=
[
]
coremidi_send_timestamped
=
[
]
default
=
[
]
jack
=
[
"
jack
-
sys
"
"
libc
"
]
winrt
=
[
"
windows
/
Foundation
"
"
windows
/
Foundation_Collections
"
"
windows
/
Devices_Midi
"
"
windows
/
Devices_Enumeration
"
"
windows
/
Storage_Streams
"
"
windows
/
Win32_System_WinRT
"
]
[
lib
]
name
=
"
midir
"
path
=
"
src
/
lib
.
rs
"
[
[
example
]
]
name
=
"
test_forward
"
path
=
"
examples
/
test_forward
.
rs
"
[
[
example
]
]
name
=
"
test_list_ports
"
path
=
"
examples
/
test_list_ports
.
rs
"
[
[
example
]
]
name
=
"
test_play
"
path
=
"
examples
/
test_play
.
rs
"
[
[
example
]
]
name
=
"
test_read_input
"
path
=
"
examples
/
test_read_input
.
rs
"
[
[
example
]
]
name
=
"
test_reuse
"
path
=
"
examples
/
test_reuse
.
rs
"
[
[
example
]
]
name
=
"
test_sysex
"
path
=
"
examples
/
test_sysex
.
rs
"
[
[
test
]
]
name
=
"
virtual
"
path
=
"
tests
/
virtual
.
rs
"
[
dependencies
.
bitflags
]
version
=
"
2
"
optional
=
true
[
dependencies
.
jack
-
sys
]
version
=
"
0
.
5
"
optional
=
true
[
dependencies
.
libc
]
version
=
"
0
.
2
.
21
"
optional
=
true
[
target
.
'
cfg
(
target_arch
=
"
wasm32
"
)
'
.
dependencies
]
js
-
sys
=
"
0
.
3
"
wasm
-
bindgen
=
"
0
.
2
"
[
target
.
'
cfg
(
target_arch
=
"
wasm32
"
)
'
.
dependencies
.
web
-
sys
]
version
=
"
0
.
3
"
features
=
[
"
Event
"
"
Navigator
"
"
Window
"
"
MidiAccess
"
"
MidiInput
"
"
MidiInputMap
"
"
MidiMessageEvent
"
"
MidiOptions
"
"
MidiOutput
"
"
MidiOutputMap
"
"
MidiPort
"
"
MidiPortType
"
]
[
target
.
'
cfg
(
target_arch
=
"
wasm32
"
)
'
.
dev
-
dependencies
]
wasm
-
bindgen
-
test
=
"
0
.
2
"
[
target
.
'
cfg
(
target_os
=
"
ios
"
)
'
.
dependencies
]
coremidi
=
"
0
.
8
.
0
"
[
target
.
'
cfg
(
target_os
=
"
linux
"
)
'
.
dependencies
]
alsa
=
"
0
.
9
.
0
"
libc
=
"
0
.
2
.
21
"
[
target
.
'
cfg
(
target_os
=
"
macos
"
)
'
.
dependencies
]
coremidi
=
"
0
.
8
.
0
"
[
target
.
'
cfg
(
target_os
=
"
windows
"
)
'
.
dependencies
.
parking_lot
]
version
=
"
0
.
12
.
1
"
[
target
.
'
cfg
(
target_os
=
"
windows
"
)
'
.
dependencies
.
windows
]
version
=
"
0
.
58
"
features
=
[
"
Win32_Foundation
"
"
Win32_Media
"
"
Win32_Media_Multimedia
"
"
Win32_Media_Audio
"
]
[
workspace
]
members
=
[
"
.
"
"
examples
/
browser
"
]
