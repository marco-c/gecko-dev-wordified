{
%
-
if
func
.
is_async
(
)
%
}
async
def
{
{
func
.
name
(
)
|
fn_name
}
}
(
{
%
-
call
py
:
:
arg_list_decl
(
func
)
-
%
}
)
:
    
{
%
-
call
py
:
:
setup_args
(
func
)
%
}
    
return
await
rust_call_async
(
        
_UniFFILib
.
{
{
func
.
ffi_func
(
)
.
name
(
)
}
}
        
{
{
func
.
result_type
(
)
.
borrow
(
)
|
async_callback_fn
}
}
        
{
%
call
py
:
:
arg_list_lowered
(
func
)
%
}
    
)
{
%
-
else
%
}
{
%
-
match
func
.
return_type
(
)
-
%
}
{
%
-
when
Some
with
(
return_type
)
%
}
def
{
{
func
.
name
(
)
|
fn_name
}
}
(
{
%
-
call
py
:
:
arg_list_decl
(
func
)
-
%
}
)
:
    
{
%
-
call
py
:
:
setup_args
(
func
)
%
}
    
return
{
{
return_type
|
lift_fn
}
}
(
{
%
call
py
:
:
to_ffi_call
(
func
)
%
}
)
{
%
when
None
%
}
def
{
{
func
.
name
(
)
|
fn_name
}
}
(
{
%
-
call
py
:
:
arg_list_decl
(
func
)
-
%
}
)
:
    
{
%
-
call
py
:
:
setup_args
(
func
)
%
}
    
{
%
call
py
:
:
to_ffi_call
(
func
)
%
}
{
%
endmatch
%
}
{
%
-
endif
%
}
