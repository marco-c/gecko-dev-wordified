v
#
include
<
metal_stdlib
>
#
include
<
simd
/
simd
.
h
>
using
namespace
metal
;
struct
Args
{
float4x4
mvp
;
}
;
struct
spvDescriptorSetBuffer0
{
constant
Args
*
uniform_buffer
[
[
id
(
0
)
]
]
;
}
;
struct
main0_out
{
float4
out_color
[
[
user
(
locn0
)
]
]
;
float4
gl_Position
[
[
position
]
]
;
}
;
struct
main0_in
{
float3
in_pos
[
[
attribute
(
0
)
]
]
;
float4
in_color
[
[
attribute
(
1
)
]
]
;
}
;
vertex
main0_out
main0
(
main0_in
in
[
[
stage_in
]
]
constant
spvDescriptorSetBuffer0
&
spvDescriptorSet0
[
[
buffer
(
0
)
]
]
)
{
main0_out
out
=
{
}
;
out
.
out_color
=
in
.
in_color
;
out
.
gl_Position
=
(
*
spvDescriptorSet0
.
uniform_buffer
)
.
mvp
*
float4
(
in
.
in_pos
1
.
0
)
;
return
out
;
}
#
'
GLSL
.
std
.
450
main
GL_ARB_separate_shader_objects
GL_GOOGLE_cpp_style_line_directive
GL_GOOGLE_include_directive
main
out_color
in_color
gl_PerVertex
gl_Position
gl_PointSize
gl_ClipDistance
gl_CullDistance
Args
mvp
uniform_buffer
in_pos
G
G
H
H
H
H
G
H
H
#
H
G
G
"
G
!
G
!
;
;
+
;
+
;
;
+
?
6
=
>
A
=
=
Q
!
Q
"
Q
#
P
!
"
#
%
A
&
>
&
%
8
Args
main
in_color
COLOR
in_pos
POSITION
