#
THIS
FILE
IS
AUTOMATICALLY
GENERATED
BY
CARGO
#
#
When
uploading
crates
to
the
registry
Cargo
will
automatically
#
"
normalize
"
Cargo
.
toml
files
for
maximal
compatibility
#
with
all
versions
of
Cargo
and
also
rewrite
path
dependencies
#
to
registry
(
e
.
g
.
crates
.
io
)
dependencies
.
#
#
If
you
are
reading
this
file
be
aware
that
the
original
Cargo
.
toml
#
will
likely
look
very
different
(
and
much
more
reasonable
)
.
#
See
Cargo
.
toml
.
orig
for
the
original
contents
.
[
package
]
edition
=
"
2021
"
name
=
"
icu_capi
"
version
=
"
1
.
2
.
2
"
authors
=
[
"
The
ICU4X
Project
Developers
"
]
include
=
[
"
src
/
*
*
/
*
"
"
examples
/
*
*
/
*
"
"
benches
/
*
*
/
*
"
"
tests
/
*
*
/
*
"
"
*
*
/
include
/
*
*
/
*
"
"
Cargo
.
toml
"
"
LICENSE
"
"
README
.
md
"
]
description
=
"
C
interface
to
ICU4X
"
readme
=
"
README
.
md
"
categories
=
[
"
internationalization
"
]
license
=
"
Unicode
-
DFS
-
2016
"
repository
=
"
https
:
/
/
github
.
com
/
unicode
-
org
/
icu4x
"
resolver
=
"
2
"
[
package
.
metadata
.
cargo
-
all
-
features
]
denylist
=
[
"
bench
"
"
logging
"
"
cpp_default
"
"
wasm_default
"
]
max_combination_size
=
2
[
package
.
metadata
.
docs
.
rs
]
all
-
features
=
true
[
dependencies
.
diplomat
]
version
=
"
0
.
5
.
2
"
[
dependencies
.
diplomat
-
runtime
]
version
=
"
0
.
5
.
2
"
[
dependencies
.
fixed_decimal
]
version
=
"
0
.
5
.
2
"
features
=
[
"
ryu
"
]
optional
=
true
[
dependencies
.
icu_calendar
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
icu_collator
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
icu_collections
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
icu_datetime
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
icu_decimal
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
icu_displaynames
]
version
=
"
0
.
10
.
0
"
optional
=
true
[
dependencies
.
icu_list
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
icu_locid
]
version
=
"
1
.
2
.
0
"
[
dependencies
.
icu_locid_transform
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
icu_normalizer
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
icu_plurals
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
icu_properties
]
version
=
"
1
.
2
.
0
"
features
=
[
"
bidi
"
]
optional
=
true
[
dependencies
.
icu_provider
]
version
=
"
1
.
2
.
0
"
[
dependencies
.
icu_provider_adapters
]
version
=
"
1
.
2
.
0
"
[
dependencies
.
icu_provider_blob
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
icu_segmenter
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
icu_testdata
]
version
=
"
1
.
2
.
0
"
features
=
[
"
icu_segmenter
"
]
optional
=
true
[
dependencies
.
icu_timezone
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
dependencies
.
serde
]
version
=
"
1
.
0
"
optional
=
true
default
-
features
=
false
[
dependencies
.
tinystr
]
version
=
"
0
.
7
.
1
"
default
-
features
=
false
[
dependencies
.
unicode
-
bidi
]
version
=
"
0
.
3
.
13
"
optional
=
true
default
-
features
=
false
[
dependencies
.
writeable
]
version
=
"
0
.
5
.
1
"
[
features
]
any_provider
=
[
]
buffer_provider
=
[
"
dep
:
icu_provider_blob
"
"
dep
:
serde
"
"
icu_calendar
?
/
serde
"
"
icu_collator
?
/
serde
"
"
icu_datetime
?
/
serde
"
"
icu_decimal
?
/
serde
"
"
icu_displaynames
?
/
serde
"
"
icu_list
?
/
serde
"
"
icu_locid_transform
?
/
serde
"
"
icu_locid
/
serde
"
"
icu_normalizer
?
/
serde
"
"
icu_plurals
?
/
serde
"
"
icu_properties
?
/
serde
"
"
icu_provider
/
serde
"
"
icu_provider_adapters
/
serde
"
"
icu_segmenter
?
/
serde
"
"
icu_testdata
?
/
buffer
"
"
icu_timezone
?
/
serde
"
]
cpp_default
=
[
"
provider_test
"
"
logging
"
"
simple_logger
"
]
default
=
[
"
any_provider
"
"
default_components
"
]
default_components
=
[
"
icu_calendar
"
"
icu_collator
"
"
icu_datetime
"
"
icu_decimal
"
"
icu_list
"
"
icu_locid_transform
"
"
icu_normalizer
"
"
icu_plurals
"
"
icu_properties
"
"
icu_segmenter
"
"
icu_timezone
"
]
icu_calendar
=
[
"
dep
:
icu_calendar
"
]
icu_collator
=
[
"
dep
:
icu_collator
"
]
icu_datetime
=
[
"
dep
:
icu_datetime
"
"
dep
:
icu_calendar
"
"
dep
:
icu_timezone
"
"
dep
:
icu_decimal
"
"
dep
:
icu_plurals
"
]
icu_decimal
=
[
"
dep
:
icu_decimal
"
"
dep
:
fixed_decimal
"
]
icu_displaynames
=
[
"
dep
:
icu_displaynames
"
]
icu_list
=
[
"
dep
:
icu_list
"
]
icu_locid_transform
=
[
"
dep
:
icu_locid_transform
"
]
icu_normalizer
=
[
"
dep
:
icu_normalizer
"
]
icu_plurals
=
[
"
dep
:
icu_plurals
"
"
dep
:
fixed_decimal
"
]
icu_properties
=
[
"
dep
:
icu_properties
"
"
dep
:
icu_collections
"
"
dep
:
unicode
-
bidi
"
]
icu_segmenter
=
[
"
dep
:
icu_segmenter
"
]
icu_timezone
=
[
"
dep
:
icu_timezone
"
"
dep
:
icu_calendar
"
]
logging
=
[
"
icu_provider
/
log_error_context
"
"
dep
:
log
"
]
provider_fs
=
[
"
dep
:
icu_provider_fs
"
"
buffer_provider
"
]
provider_test
=
[
"
dep
:
icu_testdata
"
]
simple_logger
=
[
"
dep
:
simple_logger
"
]
wasm_default
=
[
"
buffer_provider
"
"
logging
"
]
[
target
.
"
cfg
(
not
(
any
(
target_arch
=
\
"
wasm32
\
"
target_os
=
\
"
none
\
"
)
)
)
"
.
dependencies
.
icu_provider_fs
]
version
=
"
1
.
2
.
0
"
optional
=
true
[
target
.
"
cfg
(
not
(
target_arch
=
\
"
wasm32
\
"
)
)
"
.
dependencies
.
log
]
version
=
"
0
.
4
"
optional
=
true
[
target
.
"
cfg
(
not
(
target_arch
=
\
"
wasm32
\
"
)
)
"
.
dependencies
.
simple_logger
]
version
=
"
4
.
1
.
0
"
optional
=
true
[
target
.
"
cfg
(
target_arch
=
\
"
wasm32
\
"
)
"
.
dependencies
.
log
]
version
=
"
0
.
4
"
