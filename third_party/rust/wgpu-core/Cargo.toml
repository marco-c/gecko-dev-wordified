#
THIS
FILE
IS
AUTOMATICALLY
GENERATED
BY
CARGO
#
#
When
uploading
crates
to
the
registry
Cargo
will
automatically
#
"
normalize
"
Cargo
.
toml
files
for
maximal
compatibility
#
with
all
versions
of
Cargo
and
also
rewrite
path
dependencies
#
to
registry
(
e
.
g
.
crates
.
io
)
dependencies
.
#
#
If
you
are
reading
this
file
be
aware
that
the
original
Cargo
.
toml
#
will
likely
look
very
different
(
and
much
more
reasonable
)
.
#
See
Cargo
.
toml
.
orig
for
the
original
contents
.
[
package
]
edition
=
"
2021
"
rust
-
version
=
"
1
.
76
"
name
=
"
wgpu
-
core
"
version
=
"
24
.
0
.
0
"
authors
=
[
"
gfx
-
rs
developers
"
]
build
=
"
build
.
rs
"
autolib
=
false
autobins
=
false
autoexamples
=
false
autotests
=
false
autobenches
=
false
description
=
"
Core
implementation
logic
of
wgpu
the
cross
-
platform
safe
pure
-
rust
graphics
API
"
homepage
=
"
https
:
/
/
wgpu
.
rs
/
"
readme
=
false
keywords
=
[
"
graphics
"
]
license
=
"
MIT
OR
Apache
-
2
.
0
"
repository
=
"
https
:
/
/
github
.
com
/
gfx
-
rs
/
wgpu
"
[
package
.
metadata
.
cargo
-
machete
]
ignored
=
[
"
cfg_aliases
"
]
[
package
.
metadata
.
docs
.
rs
]
all
-
features
=
true
rustdoc
-
args
=
[
"
-
-
cfg
"
"
docsrs
"
]
targets
=
[
"
x86_64
-
unknown
-
linux
-
gnu
"
"
x86_64
-
apple
-
darwin
"
"
x86_64
-
pc
-
windows
-
msvc
"
"
wasm32
-
unknown
-
unknown
"
]
[
lib
]
name
=
"
wgpu_core
"
path
=
"
src
/
lib
.
rs
"
[
dependencies
.
arrayvec
]
version
=
"
0
.
7
.
6
"
default
-
features
=
false
[
dependencies
.
bit
-
vec
]
version
=
"
0
.
8
"
default
-
features
=
false
[
dependencies
.
bitflags
]
version
=
"
2
.
7
"
[
dependencies
.
bytemuck
]
version
=
"
1
.
21
"
features
=
[
"
derive
"
"
min_const_generics
"
]
optional
=
true
[
dependencies
.
document
-
features
]
version
=
"
0
.
2
.
10
"
[
dependencies
.
hashbrown
]
version
=
"
0
.
14
.
5
"
features
=
[
"
ahash
"
"
inline
-
more
"
]
default
-
features
=
false
[
dependencies
.
indexmap
]
version
=
"
2
.
5
.
0
"
default
-
features
=
false
[
dependencies
.
log
]
version
=
"
0
.
4
"
[
dependencies
.
naga
]
version
=
"
24
.
0
.
0
"
path
=
"
.
.
/
naga
"
[
dependencies
.
once_cell
]
version
=
"
1
.
20
.
2
"
features
=
[
"
std
"
]
default
-
features
=
false
[
dependencies
.
parking_lot
]
version
=
"
0
.
12
.
1
"
[
dependencies
.
profiling
]
version
=
"
1
"
default
-
features
=
false
[
dependencies
.
raw
-
window
-
handle
]
version
=
"
0
.
6
"
optional
=
true
default
-
features
=
false
[
dependencies
.
ron
]
version
=
"
0
.
8
"
optional
=
true
[
dependencies
.
rustc
-
hash
]
version
=
"
1
"
default
-
features
=
false
[
dependencies
.
serde
]
version
=
"
1
"
features
=
[
"
default
"
"
derive
"
]
optional
=
true
default
-
features
=
false
[
dependencies
.
smallvec
]
version
=
"
1
"
[
dependencies
.
thiserror
]
version
=
"
2
"
default
-
features
=
false
[
dependencies
.
wgpu
-
hal
]
version
=
"
24
.
0
.
0
"
path
=
"
.
.
/
wgpu
-
hal
"
[
dependencies
.
wgpu
-
types
]
version
=
"
24
.
0
.
0
"
path
=
"
.
.
/
wgpu
-
types
"
[
build
-
dependencies
.
cfg_aliases
]
version
=
"
0
.
2
.
1
"
[
features
]
api_log_info
=
[
]
counters
=
[
"
wgpu
-
types
/
counters
"
]
dx12
=
[
"
wgpu
-
hal
/
dx12
"
]
fragile
-
send
-
sync
-
non
-
atomic
-
wasm
=
[
"
wgpu
-
hal
/
fragile
-
send
-
sync
-
non
-
atomic
-
wasm
"
"
wgpu
-
types
/
fragile
-
send
-
sync
-
non
-
atomic
-
wasm
"
]
gles
=
[
"
wgpu
-
hal
/
gles
"
]
glsl
=
[
"
naga
/
glsl
-
in
"
]
indirect
-
validation
=
[
"
naga
/
wgsl
-
in
"
]
metal
=
[
"
wgpu
-
hal
/
metal
"
]
observe_locks
=
[
"
dep
:
ron
"
"
serde
/
serde_derive
"
]
raw
-
window
-
handle
=
[
"
dep
:
raw
-
window
-
handle
"
]
renderdoc
=
[
"
wgpu
-
hal
/
renderdoc
"
]
replay
=
[
"
serde
"
"
naga
/
deserialize
"
]
resource_log_info
=
[
]
serde
=
[
"
dep
:
serde
"
"
wgpu
-
types
/
serde
"
"
arrayvec
/
serde
"
"
hashbrown
/
serde
"
]
spirv
=
[
"
naga
/
spv
-
in
"
"
dep
:
bytemuck
"
]
strict_asserts
=
[
"
wgpu
-
types
/
strict_asserts
"
]
trace
=
[
"
dep
:
ron
"
"
serde
"
"
naga
/
serialize
"
]
vulkan
=
[
"
wgpu
-
hal
/
vulkan
"
]
wgsl
=
[
"
naga
/
wgsl
-
in
"
]
[
lints
.
rust
.
unexpected_cfgs
]
level
=
"
warn
"
priority
=
0
check
-
cfg
=
[
"
cfg
(
wgpu_validate_locks
)
"
]
