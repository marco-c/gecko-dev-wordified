From
:
Michael
Froman
<
mjfroman
mac
.
com
>
Date
:
Fri
18
Jul
2025
11
:
16
:
44
-
0500
Subject
:
(
tmp
-
cherry
-
pick
)
Revert
"
p2p
:
add
getters
for
local
and
remote
ice
parameters
"
(
cbe982879c
)
This
reverts
commit
cff7428afb1c3ba12b679d9f7794108cdb18279c
.
Reason
for
revert
:
Breaks
downstream
project
Original
change
'
s
description
:
>
p2p
:
add
getters
for
local
and
remote
ice
parameters
>
>
Also
makes
the
tests
use
those
rather
than
individual
accessors
.
>
>
BUG
=
webrtc
:
367395350
>
>
Change
-
Id
:
I2cfef501957eed73cbb2e87c5c7306dc58247b41
>
Reviewed
-
on
:
https
:
/
/
webrtc
-
review
.
googlesource
.
com
/
c
/
src
/
+
/
383963
>
Reviewed
-
by
:
Jonas
Oreland
<
jonaso
webrtc
.
org
>
>
Commit
-
Queue
:
Philipp
Hancke
<
phancke
meta
.
com
>
>
Reviewed
-
by
:
Harald
Alvestrand
<
hta
webrtc
.
org
>
>
Cr
-
Commit
-
Position
:
refs
/
heads
/
main
{
#
44368
}
Bug
:
webrtc
:
367395350
No
-
Presubmit
:
true
No
-
Tree
-
Checks
:
true
No
-
Try
:
true
Change
-
Id
:
I7e4711631c9bfad459e660f79c9dae43f6537490
Reviewed
-
on
:
https
:
/
/
webrtc
-
review
.
googlesource
.
com
/
c
/
src
/
+
/
386040
Commit
-
Queue
:
Harald
Alvestrand
<
hta
webrtc
.
org
>
Auto
-
Submit
:
Fredrik
Solenberg
<
solenberg
webrtc
.
org
>
Reviewed
-
by
:
Jonas
Oreland
<
jonaso
webrtc
.
org
>
Reviewed
-
by
:
Harald
Alvestrand
<
hta
webrtc
.
org
>
Cr
-
Commit
-
Position
:
refs
/
heads
/
main
{
#
44370
}
-
-
-
p2p
/
base
/
ice_transport_internal
.
h
|
6
-
-
-
p2p
/
base
/
p2p_transport_channel
.
cc
|
12
+
+
+
-
-
p2p
/
base
/
p2p_transport_channel
.
h
|
21
+
+
+
-
-
-
-
-
p2p
/
test
/
fake_ice_transport
.
h
|
16
+
+
+
-
-
-
p2p
/
test
/
mock_ice_transport
.
h
|
84
+
+
+
+
+
+
+
+
+
+
+
+
+
+
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
pc
/
jsep_transport_unittest
.
cc
|
28
+
+
+
+
+
-
-
-
-
-
-
6
files
changed
77
insertions
(
+
)
90
deletions
(
-
)
diff
-
-
git
a
/
p2p
/
base
/
ice_transport_internal
.
h
b
/
p2p
/
base
/
ice_transport_internal
.
h
index
3b602d3350
.
.
84254d930a
100644
-
-
-
a
/
p2p
/
base
/
ice_transport_internal
.
h
+
+
+
b
/
p2p
/
base
/
ice_transport_internal
.
h
-
283
12
+
283
6
class
RTC_EXPORT
IceTransportInternal
:
public
PacketTransportInternal
{
virtual
void
SetRemoteIceCredentials
(
absl
:
:
string_view
ice_ufrag
absl
:
:
string_view
ice_pwd
)
;
-
/
/
Returns
the
current
local
ICE
parameters
.
-
virtual
const
cricket
:
:
IceParameters
*
local_ice_parameters
(
)
const
=
0
;
-
/
/
Returns
the
latest
remote
ICE
parameters
or
nullptr
if
there
are
no
remote
-
/
/
ICE
parameters
yet
.
-
virtual
const
cricket
:
:
IceParameters
*
remote_ice_parameters
(
)
const
=
0
;
-
/
/
The
ufrag
and
pwd
in
ice_params
must
be
set
/
/
before
candidate
gathering
can
start
.
virtual
void
SetIceParameters
(
const
IceParameters
&
ice_params
)
=
0
;
diff
-
-
git
a
/
p2p
/
base
/
p2p_transport_channel
.
cc
b
/
p2p
/
base
/
p2p_transport_channel
.
cc
index
a7dfab868d
.
.
1e860a1a5a
100644
-
-
-
a
/
p2p
/
base
/
p2p_transport_channel
.
cc
+
+
+
b
/
p2p
/
base
/
p2p_transport_channel
.
cc
-
37
8
+
37
10
#
include
"
api
/
ice_transport_interface
.
h
"
#
include
"
api
/
rtc_error
.
h
"
#
include
"
api
/
sequence_checker
.
h
"
+
#
include
"
api
/
task_queue
/
pending_task_safety_flag
.
h
"
#
include
"
api
/
transport
/
enums
.
h
"
#
include
"
api
/
transport
/
stun
.
h
"
+
#
include
"
api
/
units
/
time_delta
.
h
"
#
include
"
logging
/
rtc_event_log
/
events
/
rtc_event_ice_candidate_pair_config
.
h
"
#
include
"
logging
/
rtc_event_log
/
ice_logger
.
h
"
#
include
"
p2p
/
base
/
active_ice_controller_factory_interface
.
h
"
-
491
7
+
493
7
void
P2PTransportChannel
:
:
SetRemoteIceParameters
(
RTC_LOG
(
LS_INFO
)
<
<
"
Received
remote
ICE
parameters
:
ufrag
=
"
<
<
ice_params
.
ufrag
<
<
"
renomination
"
<
<
(
ice_params
.
renomination
?
"
enabled
"
:
"
disabled
"
)
;
-
const
IceParameters
*
current_ice
=
remote_ice_parameters
(
)
;
+
const
IceParameters
*
current_ice
=
remote_ice
(
)
;
if
(
!
current_ice
|
|
*
current_ice
!
=
ice_params
)
{
/
/
Keep
the
ICE
credentials
so
that
newer
connections
/
/
are
prioritized
over
the
older
ones
.
-
1209
13
+
1211
13
void
P2PTransportChannel
:
:
AddRemoteCandidate
(
const
Candidate
&
candidate
)
{
/
/
the
code
below
this
(
specifically
ConnectionRequest
:
:
Prepare
in
/
/
port
.
cc
)
uses
the
remote
candidates
'
s
username
.
So
we
set
it
/
/
here
.
-
if
(
remote_ice_parameters
(
)
)
{
+
if
(
remote_ice
(
)
)
{
if
(
candidate
.
username
(
)
.
empty
(
)
)
{
-
new_remote_candidate
.
set_username
(
remote_ice_parameters
(
)
-
>
ufrag
)
;
+
new_remote_candidate
.
set_username
(
remote_ice
(
)
-
>
ufrag
)
;
}
-
if
(
new_remote_candidate
.
username
(
)
=
=
remote_ice_parameters
(
)
-
>
ufrag
)
{
+
if
(
new_remote_candidate
.
username
(
)
=
=
remote_ice
(
)
-
>
ufrag
)
{
if
(
candidate
.
password
(
)
.
empty
(
)
)
{
-
new_remote_candidate
.
set_password
(
remote_ice_parameters
(
)
-
>
pwd
)
;
+
new_remote_candidate
.
set_password
(
remote_ice
(
)
-
>
pwd
)
;
}
}
else
{
/
/
The
candidate
belongs
to
the
next
generation
.
Its
pwd
will
be
set
diff
-
-
git
a
/
p2p
/
base
/
p2p_transport_channel
.
h
b
/
p2p
/
base
/
p2p_transport_channel
.
h
index
d213e638b1
.
.
ce0a14c059
100644
-
-
-
a
/
p2p
/
base
/
p2p_transport_channel
.
h
+
+
+
b
/
p2p
/
base
/
p2p_transport_channel
.
h
-
47
6
+
47
7
#
include
"
p2p
/
base
/
connection
.
h
"
#
include
"
p2p
/
base
/
ice_agent_interface
.
h
"
#
include
"
p2p
/
base
/
ice_controller_factory_interface
.
h
"
+
#
include
"
p2p
/
base
/
ice_controller_interface
.
h
"
#
include
"
p2p
/
base
/
ice_switch_reason
.
h
"
#
include
"
p2p
/
base
/
ice_transport_internal
.
h
"
#
include
"
p2p
/
base
/
p2p_constants
.
h
"
-
253
19
+
254
6
class
RTC_EXPORT
P2PTransportChannel
:
public
IceTransportInternal
void
SetDtlsStunPiggybackCallbacks
(
DtlsStunPiggybackCallbacks
&
&
callbacks
)
override
;
-
/
/
Returns
the
local
ICE
parameters
.
-
const
IceParameters
*
local_ice_parameters
(
)
const
override
{
-
RTC_DCHECK_RUN_ON
(
network_thread_
)
;
-
return
&
ice_parameters_
;
-
}
-
/
/
Returns
the
latest
remote
ICE
parameters
or
nullptr
if
there
are
no
remote
-
/
/
ICE
parameters
yet
.
-
const
IceParameters
*
remote_ice_parameters
(
)
const
override
{
-
RTC_DCHECK_RUN_ON
(
network_thread_
)
;
-
return
remote_ice_parameters_
.
empty
(
)
?
nullptr
-
:
&
remote_ice_parameters_
.
back
(
)
;
-
}
-
private
:
P2PTransportChannel
(
absl
:
:
string_view
transport_name
-
364
6
+
352
13
class
RTC_EXPORT
P2PTransportChannel
:
public
IceTransportInternal
bool
AllowedToPruneConnections
(
)
const
;
+
/
/
Returns
the
latest
remote
ICE
parameters
or
nullptr
if
there
are
no
remote
+
/
/
ICE
parameters
yet
.
+
const
IceParameters
*
remote_ice
(
)
const
{
+
RTC_DCHECK_RUN_ON
(
network_thread_
)
;
+
return
remote_ice_parameters_
.
empty
(
)
?
nullptr
+
:
&
remote_ice_parameters_
.
back
(
)
;
+
}
/
/
Returns
the
remote
IceParameters
and
generation
that
match
ufrag
/
/
if
found
and
returns
nullptr
otherwise
.
const
IceParameters
*
FindRemoteIceFromUfrag
(
absl
:
:
string_view
ufrag
diff
-
-
git
a
/
p2p
/
test
/
fake_ice_transport
.
h
b
/
p2p
/
test
/
fake_ice_transport
.
h
index
23aa263592
.
.
f0c31ecbe6
100644
-
-
-
a
/
p2p
/
test
/
fake_ice_transport
.
h
+
+
+
b
/
p2p
/
test
/
fake_ice_transport
.
h
-
195
13
+
195
17
class
FakeIceTransport
:
public
IceTransportInternal
{
RTC_DCHECK_RUN_ON
(
network_thread_
)
;
return
remote_ice_mode_
;
}
-
const
IceParameters
*
local_ice_parameters
(
)
const
override
{
-
RTC_DCHECK_RUN_ON
(
network_thread_
)
;
-
return
&
ice_parameters_
;
+
const
std
:
:
string
&
ice_ufrag
(
)
const
{
return
ice_parameters_
.
ufrag
;
}
+
const
std
:
:
string
&
ice_pwd
(
)
const
{
return
ice_parameters_
.
pwd
;
}
+
const
std
:
:
string
&
remote_ice_ufrag
(
)
const
{
+
return
remote_ice_parameters_
.
ufrag
;
}
-
const
IceParameters
*
remote_ice_parameters
(
)
const
override
{
-
RTC_DCHECK_RUN_ON
(
network_thread_
)
;
-
return
&
remote_ice_parameters_
;
+
const
std
:
:
string
&
remote_ice_pwd
(
)
const
{
+
return
remote_ice_parameters_
.
pwd
;
+
}
+
const
IceParameters
&
ice_parameters
(
)
const
{
return
ice_parameters_
;
}
+
const
IceParameters
&
remote_ice_parameters
(
)
const
{
+
return
remote_ice_parameters_
;
}
cricket
:
:
IceTransportState
GetState
(
)
const
override
{
diff
-
-
git
a
/
p2p
/
test
/
mock_ice_transport
.
h
b
/
p2p
/
test
/
mock_ice_transport
.
h
index
13530b2b3e
.
.
ae2ed24ee9
100644
-
-
-
a
/
p2p
/
test
/
mock_ice_transport
.
h
+
+
+
b
/
p2p
/
test
/
mock_ice_transport
.
h
-
50
56
+
50
48
class
MockIceTransport
:
public
IceTransportInternal
{
(
webrtc
:
:
IceTransportStats
*
ice_transport_stats
)
(
override
)
)
;
-
MOCK_METHOD
(
cricket
:
:
IceTransportState
GetState
(
)
(
const
override
)
)
;
-
MOCK_METHOD
(
IceTransportState
GetIceTransportState
(
)
(
const
override
)
)
;
+
cricket
:
:
IceTransportState
GetState
(
)
const
override
{
+
return
cricket
:
:
IceTransportState
:
:
STATE_INIT
;
+
}
+
IceTransportState
GetIceTransportState
(
)
const
override
{
+
return
IceTransportState
:
:
kNew
;
+
}
-
MOCK_METHOD
(
const
std
:
:
string
&
transport_name
(
)
(
const
override
)
)
;
-
MOCK_METHOD
(
int
component
(
)
(
const
override
)
)
;
-
MOCK_METHOD
(
void
SetIceRole
(
cricket
:
:
IceRole
)
(
override
)
)
;
+
const
std
:
:
string
&
transport_name
(
)
const
override
{
return
transport_name_
;
}
+
int
component
(
)
const
override
{
return
0
;
}
+
void
SetIceRole
(
cricket
:
:
IceRole
/
*
role
*
/
)
override
{
}
/
/
The
ufrag
and
pwd
in
ice_params
must
be
set
/
/
before
candidate
gathering
can
start
.
-
MOCK_METHOD
(
void
-
SetIceParameters
-
(
const
cricket
:
:
IceParameters
&
)
-
(
override
)
)
;
-
MOCK_METHOD
(
void
-
SetRemoteIceParameters
-
(
const
cricket
:
:
IceParameters
&
)
-
(
override
)
)
;
-
MOCK_METHOD
(
cricket
:
:
IceParameters
*
-
local_ice_parameters
-
(
)
-
(
const
override
)
)
;
-
MOCK_METHOD
(
cricket
:
:
IceParameters
*
-
remote_ice_parameters
-
(
)
-
(
const
override
)
)
;
-
MOCK_METHOD
(
void
SetRemoteIceMode
(
cricket
:
:
IceMode
)
(
override
)
)
;
-
MOCK_METHOD
(
void
SetIceConfig
(
const
IceConfig
&
config
)
(
override
)
)
;
-
MOCK_METHOD
(
const
IceConfig
&
config
(
)
(
const
override
)
)
;
-
MOCK_METHOD
(
std
:
:
optional
<
int
>
GetRttEstimate
(
)
(
override
)
)
;
-
MOCK_METHOD
(
const
cricket
:
:
Connection
*
-
selected_connection
-
(
)
-
(
const
override
)
)
;
-
MOCK_METHOD
(
std
:
:
optional
<
const
cricket
:
:
CandidatePair
>
-
GetSelectedCandidatePair
-
(
)
-
(
const
override
)
)
;
-
MOCK_METHOD
(
void
MaybeStartGathering
(
)
(
override
)
)
;
-
MOCK_METHOD
(
void
-
AddRemoteCandidate
-
(
const
cricket
:
:
Candidate
&
)
-
(
override
)
)
;
-
MOCK_METHOD
(
void
-
RemoveRemoteCandidate
-
(
const
cricket
:
:
Candidate
&
)
-
(
override
)
)
;
-
MOCK_METHOD
(
void
RemoveAllRemoteCandidates
(
)
(
override
)
)
;
-
MOCK_METHOD
(
IceGatheringState
gathering_state
(
)
(
const
override
)
)
;
+
void
SetIceParameters
(
+
const
cricket
:
:
IceParameters
&
/
*
ice_params
*
/
)
override
{
}
+
void
SetRemoteIceParameters
(
+
const
cricket
:
:
IceParameters
&
/
*
ice_params
*
/
)
override
{
}
+
void
SetRemoteIceMode
(
cricket
:
:
IceMode
/
*
mode
*
/
)
override
{
}
+
void
SetIceConfig
(
const
IceConfig
&
config
)
override
{
ice_config_
=
config
;
}
+
const
IceConfig
&
config
(
)
const
override
{
return
ice_config_
;
}
+
std
:
:
optional
<
int
>
GetRttEstimate
(
)
override
{
return
std
:
:
nullopt
;
}
+
const
cricket
:
:
Connection
*
selected_connection
(
)
const
override
{
+
return
nullptr
;
+
}
+
std
:
:
optional
<
const
cricket
:
:
CandidatePair
>
GetSelectedCandidatePair
(
)
+
const
override
{
+
return
std
:
:
nullopt
;
+
}
+
void
MaybeStartGathering
(
)
override
{
}
+
void
AddRemoteCandidate
(
const
cricket
:
:
Candidate
&
/
*
candidate
*
/
)
override
{
}
+
void
RemoveRemoteCandidate
(
+
const
cricket
:
:
Candidate
&
/
*
candidate
*
/
)
override
{
}
+
void
RemoveAllRemoteCandidates
(
)
override
{
}
+
IceGatheringState
gathering_state
(
)
const
override
{
+
return
IceGatheringState
:
:
kIceGatheringComplete
;
+
}
+
+
bool
receiving
(
)
const
override
{
return
true
;
}
+
bool
writable
(
)
const
override
{
return
true
;
}
-
MOCK_METHOD
(
bool
receiving
(
)
(
const
override
)
)
;
-
MOCK_METHOD
(
bool
writable
(
)
(
const
override
)
)
;
+
private
:
+
std
:
:
string
transport_name_
;
+
IceConfig
ice_config_
;
}
;
}
/
/
namespace
webrtc
diff
-
-
git
a
/
pc
/
jsep_transport_unittest
.
cc
b
/
pc
/
jsep_transport_unittest
.
cc
index
9a3098593a
.
.
ad4807109e
100644
-
-
-
a
/
pc
/
jsep_transport_unittest
.
cc
+
+
+
b
/
pc
/
jsep_transport_unittest
.
cc
-
223
15
+
223
15
TEST_P
(
JsepTransport2WithRtcpMux
SetIceParameters
)
{
auto
fake_ice_transport
=
static_cast
<
FakeIceTransport
*
>
(
jsep_transport_
-
>
rtp_dtls_transport
(
)
-
>
ice_transport
(
)
)
;
EXPECT_EQ
(
ICEMODE_FULL
fake_ice_transport
-
>
remote_ice_mode
(
)
)
;
-
EXPECT_EQ
(
kIceUfrag1
fake_ice_transport
-
>
local_ice_parameters
(
)
-
>
ufrag
)
;
-
EXPECT_EQ
(
kIcePwd1
fake_ice_transport
-
>
local_ice_parameters
(
)
-
>
pwd
)
;
+
EXPECT_EQ
(
kIceUfrag1
fake_ice_transport
-
>
ice_ufrag
(
)
)
;
+
EXPECT_EQ
(
kIcePwd1
fake_ice_transport
-
>
ice_pwd
(
)
)
;
if
(
!
rtcp_mux_enabled
)
{
fake_ice_transport
=
static_cast
<
FakeIceTransport
*
>
(
jsep_transport_
-
>
rtcp_dtls_transport
(
)
-
>
ice_transport
(
)
)
;
ASSERT_TRUE
(
fake_ice_transport
)
;
EXPECT_EQ
(
ICEMODE_FULL
fake_ice_transport
-
>
remote_ice_mode
(
)
)
;
-
EXPECT_EQ
(
kIceUfrag1
fake_ice_transport
-
>
local_ice_parameters
(
)
-
>
ufrag
)
;
-
EXPECT_EQ
(
kIcePwd1
fake_ice_transport
-
>
local_ice_parameters
(
)
-
>
pwd
)
;
+
EXPECT_EQ
(
kIceUfrag1
fake_ice_transport
-
>
ice_ufrag
(
)
)
;
+
EXPECT_EQ
(
kIcePwd1
fake_ice_transport
-
>
ice_pwd
(
)
)
;
}
jsep_description
.
transport_desc
=
TransportDescription
(
kIceUfrag2
kIcePwd2
)
;
-
242
15
+
242
15
TEST_P
(
JsepTransport2WithRtcpMux
SetIceParameters
)
{
fake_ice_transport
=
static_cast
<
FakeIceTransport
*
>
(
jsep_transport_
-
>
rtp_dtls_transport
(
)
-
>
ice_transport
(
)
)
;
EXPECT_EQ
(
ICEMODE_FULL
fake_ice_transport
-
>
remote_ice_mode
(
)
)
;
-
EXPECT_EQ
(
kIceUfrag2
fake_ice_transport
-
>
remote_ice_parameters
(
)
-
>
ufrag
)
;
-
EXPECT_EQ
(
kIcePwd2
fake_ice_transport
-
>
remote_ice_parameters
(
)
-
>
pwd
)
;
+
EXPECT_EQ
(
kIceUfrag2
fake_ice_transport
-
>
remote_ice_ufrag
(
)
)
;
+
EXPECT_EQ
(
kIcePwd2
fake_ice_transport
-
>
remote_ice_pwd
(
)
)
;
if
(
!
rtcp_mux_enabled
)
{
fake_ice_transport
=
static_cast
<
FakeIceTransport
*
>
(
jsep_transport_
-
>
rtcp_dtls_transport
(
)
-
>
ice_transport
(
)
)
;
ASSERT_TRUE
(
fake_ice_transport
)
;
EXPECT_EQ
(
ICEMODE_FULL
fake_ice_transport
-
>
remote_ice_mode
(
)
)
;
-
EXPECT_EQ
(
kIceUfrag2
fake_ice_transport
-
>
remote_ice_parameters
(
)
-
>
ufrag
)
;
-
EXPECT_EQ
(
kIcePwd2
fake_ice_transport
-
>
remote_ice_parameters
(
)
-
>
pwd
)
;
+
EXPECT_EQ
(
kIceUfrag2
fake_ice_transport
-
>
remote_ice_ufrag
(
)
)
;
+
EXPECT_EQ
(
kIcePwd2
fake_ice_transport
-
>
remote_ice_pwd
(
)
)
;
}
}
-
1257
9
+
1257
9
TEST_F
(
JsepTransport2Test
SetIceParametersWithRenomination
)
{
auto
fake_ice_transport
=
static_cast
<
FakeIceTransport
*
>
(
jsep_transport_
-
>
rtp_dtls_transport
(
)
-
>
ice_transport
(
)
)
;
EXPECT_EQ
(
ICEMODE_FULL
fake_ice_transport
-
>
remote_ice_mode
(
)
)
;
-
EXPECT_EQ
(
kIceUfrag1
fake_ice_transport
-
>
local_ice_parameters
(
)
-
>
ufrag
)
;
-
EXPECT_EQ
(
kIcePwd1
fake_ice_transport
-
>
local_ice_parameters
(
)
-
>
pwd
)
;
-
EXPECT_TRUE
(
fake_ice_transport
-
>
local_ice_parameters
(
)
-
>
renomination
)
;
+
EXPECT_EQ
(
kIceUfrag1
fake_ice_transport
-
>
ice_ufrag
(
)
)
;
+
EXPECT_EQ
(
kIcePwd1
fake_ice_transport
-
>
ice_pwd
(
)
)
;
+
EXPECT_TRUE
(
fake_ice_transport
-
>
ice_parameters
(
)
.
renomination
)
;
jsep_description
.
transport_desc
=
TransportDescription
(
kIceUfrag2
kIcePwd2
)
;
jsep_description
.
transport_desc
.
AddOption
(
ICE_OPTION_RENOMINATION
)
;
-
1270
9
+
1270
9
TEST_F
(
JsepTransport2Test
SetIceParametersWithRenomination
)
{
fake_ice_transport
=
static_cast
<
FakeIceTransport
*
>
(
jsep_transport_
-
>
rtp_dtls_transport
(
)
-
>
ice_transport
(
)
)
;
EXPECT_EQ
(
ICEMODE_FULL
fake_ice_transport
-
>
remote_ice_mode
(
)
)
;
-
EXPECT_EQ
(
kIceUfrag2
fake_ice_transport
-
>
remote_ice_parameters
(
)
-
>
ufrag
)
;
-
EXPECT_EQ
(
kIcePwd2
fake_ice_transport
-
>
remote_ice_parameters
(
)
-
>
pwd
)
;
-
EXPECT_TRUE
(
fake_ice_transport
-
>
remote_ice_parameters
(
)
-
>
renomination
)
;
+
EXPECT_EQ
(
kIceUfrag2
fake_ice_transport
-
>
remote_ice_ufrag
(
)
)
;
+
EXPECT_EQ
(
kIcePwd2
fake_ice_transport
-
>
remote_ice_pwd
(
)
)
;
+
EXPECT_TRUE
(
fake_ice_transport
-
>
remote_ice_parameters
(
)
.
renomination
)
;
}
}
/
/
namespace
