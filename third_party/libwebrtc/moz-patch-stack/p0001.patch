From
:
Michael
Froman
<
mjfroman
mac
.
com
>
Date
:
Tue
16
Sep
2025
10
:
17
:
18
-
0500
Subject
:
(
tmp
-
cherry
-
pick
)
Revert
"
Support
setting
a
list
of
CSRCs
in
RtpEncodingParameters
"
(
8d1e058b6d
)
MIME
-
Version
:
1
.
0
Content
-
Type
:
text
/
plain
;
charset
=
UTF
-
8
Content
-
Transfer
-
Encoding
:
8bit
This
reverts
commit
612314044e844a37aeb6190c246b9c3a8bccc357
.
Reason
for
revert
:
Part
of
chain
that
breaks
downstream
projects
Bug
:
b
/
410811496
Original
change
'
s
description
:
>
Support
setting
a
list
of
CSRCs
in
RtpEncodingParameters
>
>
CSRCs
are
commonly
used
to
indicate
which
participants
have
contributed
>
to
media
packet
.
This
change
makes
it
possible
to
specify
the
CSRCs
for
>
both
audio
and
video
tracks
.
>
>
As
demonstrated
in
the
integration
test
the
CSRCs
can
be
set
either
>
when
adding
a
track
to
a
peer
connection
or
via
a
SetParameters
call
on
>
an
existing
track
.
>
>
This
is
the
final
CL
in
a
chain
that
also
includes
>
https
:
/
/
webrtc
-
review
.
googlesource
.
com
/
c
/
src
/
+
/
392940
and
>
https
:
/
/
webrtc
-
review
.
googlesource
.
com
/
c
/
src
/
+
/
392961
.
>
>
Bug
:
b
/
410811496
>
Change
-
Id
:
Id0b80d22ef7e31313d43edd92b390546e376f88b
>
Reviewed
-
on
:
https
:
/
/
webrtc
-
review
.
googlesource
.
com
/
c
/
src
/
+
/
392980
>
Reviewed
-
by
:
Jonas
Oreland
<
jonaso
webrtc
.
org
>
>
Reviewed
-
by
:
Harald
Alvestrand
<
hta
webrtc
.
org
>
>
Commit
-
Queue
:
Helmer
Nyl
n
<
helmern
google
.
com
>
>
Cr
-
Commit
-
Position
:
refs
/
heads
/
main
{
#
44826
}
Bug
:
b
/
410811496
No
-
Presubmit
:
true
No
-
Tree
-
Checks
:
true
No
-
Try
:
true
Change
-
Id
:
Ia4ffa8540b78cf223fdf61d7ba9208a72bb8ebd8
Reviewed
-
on
:
https
:
/
/
webrtc
-
review
.
googlesource
.
com
/
c
/
src
/
+
/
395004
Commit
-
Queue
:
Philip
Eliasson
<
philipel
webrtc
.
org
>
Auto
-
Submit
:
Helmer
Nyl
n
<
helmern
google
.
com
>
Reviewed
-
by
:
Philip
Eliasson
<
philipel
webrtc
.
org
>
Reviewed
-
by
:
Harald
Alvestrand
<
hta
webrtc
.
org
>
Cr
-
Commit
-
Position
:
refs
/
heads
/
main
{
#
44836
}
-
-
-
api
/
rtp_parameters
.
h
|
11
+
-
-
api
/
transport
/
rtp
/
BUILD
.
gn
|
1
-
api
/
transport
/
rtp
/
DEPS
|
5
-
-
api
/
transport
/
rtp
/
rtp_source
.
h
|
8
-
-
media
/
BUILD
.
gn
|
1
-
media
/
base
/
media_engine
.
cc
|
15
-
-
-
-
media
/
engine
/
webrtc_video_engine
.
cc
|
10
-
-
-
media
/
engine
/
webrtc_voice_engine
.
cc
|
9
+
-
pc
/
peer_connection_integrationtest
.
cc
|
114
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
9
files
changed
2
insertions
(
+
)
172
deletions
(
-
)
delete
mode
100644
api
/
transport
/
rtp
/
DEPS
diff
-
-
git
a
/
api
/
rtp_parameters
.
h
b
/
api
/
rtp_parameters
.
h
index
664493997b
.
.
57d77f2fe4
100644
-
-
-
a
/
api
/
rtp_parameters
.
h
+
+
+
b
/
api
/
rtp_parameters
.
h
-
466
14
+
466
6
struct
RTC_EXPORT
RtpEncodingParameters
{
/
/
unset
SSRC
acts
as
a
"
wildcard
"
SSRC
.
std
:
:
optional
<
uint32_t
>
ssrc
;
-
/
/
The
list
of
CSRCs
to
be
included
in
the
RTP
header
.
Defaults
to
an
empty
-
/
/
list
.
At
most
15
CSRCs
can
be
specified
and
they
must
be
the
same
for
all
-
/
/
encodings
in
an
RtpParameters
struct
.
-
/
/
-
/
/
If
this
field
is
set
the
list
is
replaced
with
the
specified
values
.
-
/
/
Otherwise
it
is
left
unchanged
.
Specify
an
empty
vector
to
clear
the
list
.
-
std
:
:
optional
<
std
:
:
vector
<
uint32_t
>
>
csrcs
;
-
/
/
The
relative
bitrate
priority
of
this
encoding
.
Currently
this
is
/
/
implemented
for
the
entire
rtp
sender
by
using
the
value
of
the
first
/
/
encoding
parameter
.
-
558
8
+
550
7
struct
RTC_EXPORT
RtpEncodingParameters
{
std
:
:
optional
<
RtpCodec
>
codec
;
bool
operator
=
=
(
const
RtpEncodingParameters
&
o
)
const
{
-
return
ssrc
=
=
o
.
ssrc
&
&
csrcs
=
=
o
.
csrcs
&
&
-
bitrate_priority
=
=
o
.
bitrate_priority
&
&
+
return
ssrc
=
=
o
.
ssrc
&
&
bitrate_priority
=
=
o
.
bitrate_priority
&
&
network_priority
=
=
o
.
network_priority
&
&
max_bitrate_bps
=
=
o
.
max_bitrate_bps
&
&
min_bitrate_bps
=
=
o
.
min_bitrate_bps
&
&
diff
-
-
git
a
/
api
/
transport
/
rtp
/
BUILD
.
gn
b
/
api
/
transport
/
rtp
/
BUILD
.
gn
index
9facb7afa8
.
.
9982346e12
100644
-
-
-
a
/
api
/
transport
/
rtp
/
BUILD
.
gn
+
+
+
b
/
api
/
transport
/
rtp
/
BUILD
.
gn
-
16
7
+
16
6
rtc_source_set
(
"
rtp_source
"
)
{
"
.
.
/
.
.
/
.
.
/
api
/
units
:
time_delta
"
"
.
.
/
.
.
/
.
.
/
api
/
units
:
timestamp
"
"
.
.
/
.
.
/
.
.
/
rtc_base
:
checks
"
-
"
/
/
third_party
/
abseil
-
cpp
/
absl
/
strings
:
str_format
"
]
}
diff
-
-
git
a
/
api
/
transport
/
rtp
/
DEPS
b
/
api
/
transport
/
rtp
/
DEPS
deleted
file
mode
100644
index
97daa2bb67
.
.
0000000000
-
-
-
a
/
api
/
transport
/
rtp
/
DEPS
+
+
+
/
dev
/
null
-
1
5
+
0
0
-
specific_include_rules
=
{
-
"
rtp_source
\
.
h
"
:
[
-
"
+
absl
/
strings
/
str_format
.
h
"
-
]
-
}
diff
-
-
git
a
/
api
/
transport
/
rtp
/
rtp_source
.
h
b
/
api
/
transport
/
rtp
/
rtp_source
.
h
index
3f73fdc271
.
.
4732044be2
100644
-
-
-
a
/
api
/
transport
/
rtp
/
rtp_source
.
h
+
+
+
b
/
api
/
transport
/
rtp
/
rtp_source
.
h
-
15
7
+
15
6
#
include
<
optional
>
-
#
include
"
absl
/
strings
/
str_format
.
h
"
#
include
"
api
/
rtp_headers
.
h
"
#
include
"
api
/
units
/
time_delta
.
h
"
#
include
"
api
/
units
/
timestamp
.
h
"
-
85
13
+
84
6
class
RtpSource
{
return
extensions_
.
local_capture_clock_offset
;
}
-
template
<
typename
Sink
>
-
friend
void
AbslStringify
(
Sink
&
sink
const
RtpSource
&
source
)
{
-
absl
:
:
Format
(
&
sink
"
{
source_type
:
%
s
source_id
:
%
u
}
"
-
source
.
source_type
(
)
=
=
RtpSourceType
:
:
CSRC
?
"
CSRC
"
:
"
SSRC
"
-
source
.
source_id
(
)
)
;
-
}
-
bool
operator
=
=
(
const
RtpSource
&
o
)
const
{
return
timestamp_
=
=
o
.
timestamp
(
)
&
&
source_id_
=
=
o
.
source_id
(
)
&
&
source_type_
=
=
o
.
source_type
(
)
&
&
diff
-
-
git
a
/
media
/
BUILD
.
gn
b
/
media
/
BUILD
.
gn
index
203a55ba9d
.
.
f6359d4fe7
100644
-
-
-
a
/
media
/
BUILD
.
gn
+
+
+
b
/
media
/
BUILD
.
gn
-
245
7
+
245
6
rtc_library
(
"
media_engine
"
)
{
"
.
.
/
api
:
audio_options_api
"
"
.
.
/
api
:
field_trials_view
"
"
.
.
/
api
:
rtc_error
"
-
"
.
.
/
api
:
rtp_headers
"
"
.
.
/
api
:
rtp_parameters
"
"
.
.
/
api
:
rtp_transceiver_direction
"
"
.
.
/
api
:
scoped_refptr
"
diff
-
-
git
a
/
media
/
base
/
media_engine
.
cc
b
/
media
/
base
/
media_engine
.
cc
index
47ec3db721
.
.
e9d9c6c72a
100644
-
-
-
a
/
media
/
base
/
media_engine
.
cc
+
+
+
b
/
media
/
base
/
media_engine
.
cc
-
23
7
+
23
6
#
include
"
api
/
array_view
.
h
"
#
include
"
api
/
field_trials_view
.
h
"
#
include
"
api
/
rtc_error
.
h
"
-
#
include
"
api
/
rtp_headers
.
h
"
#
include
"
api
/
rtp_parameters
.
h
"
#
include
"
api
/
rtp_transceiver_direction
.
h
"
#
include
"
api
/
video
/
video_codec_constants
.
h
"
-
218
20
+
217
6
RTCError
CheckRtpParametersValues
(
const
RtpParameters
&
rtp_parameters
"
different
encodings
.
"
)
;
}
}
-
-
if
(
rtp_parameters
.
encodings
[
i
]
.
csrcs
.
has_value
(
)
&
&
-
rtp_parameters
.
encodings
[
i
]
.
csrcs
.
value
(
)
.
size
(
)
>
kRtpCsrcSize
)
{
-
LOG_AND_RETURN_ERROR
(
-
RTCErrorType
:
:
INVALID_RANGE
-
"
Attempted
to
set
more
than
the
maximum
allowed
number
of
CSRCs
.
"
)
-
}
-
-
if
(
i
>
0
&
&
rtp_parameters
.
encodings
[
i
-
1
]
.
csrcs
!
=
-
rtp_parameters
.
encodings
[
i
]
.
csrcs
)
{
-
LOG_AND_RETURN_ERROR
(
RTCErrorType
:
:
INVALID_MODIFICATION
-
"
Attempted
to
set
different
CSRCs
for
different
"
-
"
encodings
.
"
)
;
-
}
}
if
(
has_scale_resolution_down_to
&
&
diff
-
-
git
a
/
media
/
engine
/
webrtc_video_engine
.
cc
b
/
media
/
engine
/
webrtc_video_engine
.
cc
index
ab04ba0094
.
.
3a3d197cc6
100644
-
-
-
a
/
media
/
engine
/
webrtc_video_engine
.
cc
+
+
+
b
/
media
/
engine
/
webrtc_video_engine
.
cc
-
2155
9
+
2155
6
RTCError
WebRtcVideoSendChannel
:
:
WebRtcVideoSendStream
:
:
SetRtpParameters
(
new_send_state
=
true
;
}
}
-
bool
new_csrcs
=
-
(
new_parameters
.
encodings
[
0
]
.
csrcs
.
has_value
(
)
&
&
-
new_parameters
.
encodings
[
0
]
.
csrcs
!
=
rtp_parameters_
.
encodings
[
0
]
.
csrcs
)
;
rtp_parameters_
=
new_parameters
;
/
/
Codecs
are
currently
handled
at
the
WebRtcVideoSendChannel
level
.
-
2172
9
+
2169
6
RTCError
WebRtcVideoSendChannel
:
:
WebRtcVideoSendStream
:
:
SetRtpParameters
(
stream_
-
>
SetSource
(
source_
GetDegradationPreference
(
)
)
;
}
}
-
if
(
stream_
&
&
new_csrcs
)
{
-
stream_
-
>
SetCsrcs
(
rtp_parameters_
.
encodings
[
0
]
.
csrcs
.
value
(
)
)
;
-
}
/
/
Check
if
a
key
frame
was
requested
via
setParameters
.
std
:
:
vector
<
std
:
:
string
>
key_frames_requested_by_rid
;
for
(
const
auto
&
encoding
:
rtp_parameters_
.
encodings
)
{
-
2677
10
+
2671
6
void
WebRtcVideoSendChannel
:
:
WebRtcVideoSendStream
:
:
RecreateWebRtcStream
(
)
{
stream_
=
call_
-
>
CreateVideoSendStream
(
std
:
:
move
(
config
)
parameters_
.
encoder_config
.
Copy
(
)
)
;
}
-
if
(
!
rtp_parameters_
.
encodings
.
empty
(
)
&
&
-
rtp_parameters_
.
encodings
[
0
]
.
csrcs
.
has_value
(
)
)
{
-
stream_
-
>
SetCsrcs
(
rtp_parameters_
.
encodings
[
0
]
.
csrcs
.
value
(
)
)
;
-
}
parameters_
.
encoder_config
.
encoder_specific_settings
=
nullptr
;
diff
-
-
git
a
/
media
/
engine
/
webrtc_voice_engine
.
cc
b
/
media
/
engine
/
webrtc_voice_engine
.
cc
index
ed08e9c8e8
.
.
2d397c6008
100644
-
-
-
a
/
media
/
engine
/
webrtc_voice_engine
.
cc
+
+
+
b
/
media
/
engine
/
webrtc_voice_engine
.
cc
-
1102
23
+
1102
16
class
WebRtcVoiceSendChannel
:
:
WebRtcAudioSendStream
:
public
AudioSource
:
:
Sink
{
double
old_priority
=
rtp_parameters_
.
encodings
[
0
]
.
bitrate_priority
;
Priority
old_dscp
=
rtp_parameters_
.
encodings
[
0
]
.
network_priority
;
bool
old_adaptive_ptime
=
rtp_parameters_
.
encodings
[
0
]
.
adaptive_ptime
;
-
std
:
:
optional
<
std
:
:
vector
<
uint32_t
>
>
old_csrcs
=
-
rtp_parameters_
.
encodings
[
0
]
.
csrcs
;
-
rtp_parameters_
=
parameters
;
config_
.
bitrate_priority
=
rtp_parameters_
.
encodings
[
0
]
.
bitrate_priority
;
config_
.
has_dscp
=
(
rtp_parameters_
.
encodings
[
0
]
.
network_priority
!
=
Priority
:
:
kLow
)
;
-
if
(
rtp_parameters_
.
encodings
[
0
]
.
csrcs
.
has_value
(
)
)
{
-
config_
.
rtp
.
csrcs
=
rtp_parameters_
.
encodings
[
0
]
.
csrcs
.
value
(
)
;
-
}
bool
reconfigure_send_stream
=
(
rtp_parameters_
.
encodings
[
0
]
.
max_bitrate_bps
!
=
old_rtp_max_bitrate
)
|
|
(
rtp_parameters_
.
encodings
[
0
]
.
bitrate_priority
!
=
old_priority
)
|
|
(
rtp_parameters_
.
encodings
[
0
]
.
network_priority
!
=
old_dscp
)
|
|
-
(
rtp_parameters_
.
encodings
[
0
]
.
adaptive_ptime
!
=
old_adaptive_ptime
)
|
|
-
(
rtp_parameters_
.
encodings
[
0
]
.
csrcs
!
=
old_csrcs
)
;
+
(
rtp_parameters_
.
encodings
[
0
]
.
adaptive_ptime
!
=
old_adaptive_ptime
)
;
if
(
rtp_parameters_
.
encodings
[
0
]
.
max_bitrate_bps
!
=
old_rtp_max_bitrate
)
{
/
/
Update
the
bitrate
range
.
if
(
send_rate
)
{
diff
-
-
git
a
/
pc
/
peer_connection_integrationtest
.
cc
b
/
pc
/
peer_connection_integrationtest
.
cc
index
7ce2609f82
.
.
76d0833336
100644
-
-
-
a
/
pc
/
peer_connection_integrationtest
.
cc
+
+
+
b
/
pc
/
peer_connection_integrationtest
.
cc
-
1288
120
+
1288
6
TEST_F
(
PeerConnectionIntegrationTestUnifiedPlan
NoStreamsMsidLineMissing
)
{
callee_receivers
[
1
]
-
>
streams
(
)
[
0
]
)
;
}
-
/
/
Used
by
the
CSRC
tests
below
.
-
MATCHER_P
(
IsCsrcWithId
csrc
"
"
)
{
-
return
arg
.
source_type
(
)
=
=
RtpSourceType
:
:
CSRC
&
&
arg
.
source_id
(
)
=
=
csrc
;
-
}
-
-
/
/
Test
that
CSRCs
can
be
set
upon
adding
tracks
and
that
they
are
received
by
-
/
/
the
other
side
.
-
TEST_F
(
PeerConnectionIntegrationTestUnifiedPlan
EndToEndCallForwardsCsrcs
)
{
-
ASSERT_TRUE
(
CreatePeerConnectionWrappers
(
)
)
;
-
ConnectFakeSignaling
(
)
;
-
-
constexpr
uint32_t
kAudioCsrc
=
1234
;
-
constexpr
uint32_t
kVideoCsrc
=
5678
;
-
RtpEncodingParameters
audio_encoding
;
-
RtpEncodingParameters
video_encoding
;
-
audio_encoding
.
csrcs
=
{
kAudioCsrc
}
;
-
video_encoding
.
csrcs
=
{
kVideoCsrc
}
;
-
ASSERT_THAT
(
caller
(
)
-
>
pc
(
)
-
>
AddTrack
(
caller
(
)
-
>
CreateLocalAudioTrack
(
)
{
}
-
{
audio_encoding
}
)
-
IsRtcOk
(
)
)
;
-
ASSERT_THAT
(
caller
(
)
-
>
pc
(
)
-
>
AddTrack
(
caller
(
)
-
>
CreateLocalVideoTrack
(
)
{
}
-
{
video_encoding
}
)
-
IsRtcOk
(
)
)
;
-
-
caller
(
)
-
>
CreateAndSetAndSignalOffer
(
)
;
-
-
/
/
Wait
for
some
packets
to
arrive
.
-
ASSERT_THAT
(
-
WaitUntil
(
[
&
]
{
return
SignalingStateStable
(
)
;
}
:
:
testing
:
:
IsTrue
(
)
)
-
IsRtcOk
(
)
)
;
-
ASSERT_THAT
(
WaitUntil
(
-
[
&
]
{
-
return
callee
(
)
-
>
audio_frames_received
(
)
>
0
&
&
-
callee
(
)
-
>
min_video_frames_received_per_track
(
)
>
0
;
-
}
-
:
:
testing
:
:
IsTrue
(
)
{
.
timeout
=
kMaxWaitForFrames
}
)
-
IsRtcOk
(
)
)
;
-
-
std
:
:
vector
<
scoped_refptr
<
RtpReceiverInterface
>
>
audio_receivers
=
-
callee
(
)
-
>
GetReceiversOfType
(
webrtc
:
:
MediaType
:
:
AUDIO
)
;
-
ASSERT_EQ
(
audio_receivers
.
size
(
)
1u
)
;
-
std
:
:
vector
<
scoped_refptr
<
RtpReceiverInterface
>
>
video_receivers
=
-
callee
(
)
-
>
GetReceiversOfType
(
webrtc
:
:
MediaType
:
:
VIDEO
)
;
-
ASSERT_EQ
(
video_receivers
.
size
(
)
1u
)
;
-
-
EXPECT_THAT
(
audio_receivers
[
0
]
-
>
GetSources
(
)
-
Contains
(
IsCsrcWithId
(
kAudioCsrc
)
)
)
;
-
EXPECT_THAT
(
video_receivers
[
0
]
-
>
GetSources
(
)
-
Contains
(
IsCsrcWithId
(
kVideoCsrc
)
)
)
;
-
}
-
-
/
/
Test
that
CSRCs
can
be
updated
on
active
tracks
.
-
TEST_F
(
PeerConnectionIntegrationTestUnifiedPlan
EndToEndCallCanUpdateCsrcs
)
{
-
ASSERT_TRUE
(
CreatePeerConnectionWrappers
(
)
)
;
-
ConnectFakeSignaling
(
)
;
-
-
RtpEncodingParameters
audio_encoding
;
-
RtpEncodingParameters
video_encoding
;
-
audio_encoding
.
csrcs
=
{
1234
}
;
-
video_encoding
.
csrcs
=
{
5678
}
;
-
-
scoped_refptr
<
RtpSenderInterface
>
audio_sender
=
-
caller
(
)
-
-
>
pc
(
)
-
-
>
AddTrack
(
caller
(
)
-
>
CreateLocalAudioTrack
(
)
{
}
{
audio_encoding
}
)
-
.
MoveValue
(
)
;
-
scoped_refptr
<
RtpSenderInterface
>
video_sender
=
-
caller
(
)
-
-
>
pc
(
)
-
-
>
AddTrack
(
caller
(
)
-
>
CreateLocalVideoTrack
(
)
{
}
{
video_encoding
}
)
-
.
MoveValue
(
)
;
-
-
caller
(
)
-
>
CreateAndSetAndSignalOffer
(
)
;
-
-
/
/
Wait
for
some
packets
to
arrive
.
-
ASSERT_THAT
(
-
WaitUntil
(
[
&
]
{
return
SignalingStateStable
(
)
;
}
:
:
testing
:
:
IsTrue
(
)
)
-
IsRtcOk
(
)
)
;
-
ASSERT_THAT
(
WaitUntil
(
-
[
&
]
{
-
return
callee
(
)
-
>
audio_frames_received
(
)
>
0
&
&
-
callee
(
)
-
>
min_video_frames_received_per_track
(
)
>
0
;
-
}
-
:
:
testing
:
:
IsTrue
(
)
{
.
timeout
=
kMaxWaitForFrames
}
)
-
IsRtcOk
(
)
)
;
-
-
/
/
Update
the
CSRCs
.
-
constexpr
uint32_t
kUpdatedAudioCsrc
=
4321
;
-
constexpr
uint32_t
kUpdatedVideoCsrc
=
8765
;
-
RtpParameters
audio_parameters
=
audio_sender
-
>
GetParameters
(
)
;
-
RtpParameters
video_parameters
=
video_sender
-
>
GetParameters
(
)
;
-
audio_parameters
.
encodings
[
0
]
.
csrcs
=
{
kUpdatedAudioCsrc
}
;
-
video_parameters
.
encodings
[
0
]
.
csrcs
=
{
kUpdatedVideoCsrc
}
;
-
ASSERT_THAT
(
audio_sender
-
>
SetParameters
(
audio_parameters
)
IsRtcOk
(
)
)
;
-
ASSERT_THAT
(
video_sender
-
>
SetParameters
(
video_parameters
)
IsRtcOk
(
)
)
;
-
-
std
:
:
vector
<
scoped_refptr
<
RtpReceiverInterface
>
>
audio_receivers
=
-
callee
(
)
-
>
GetReceiversOfType
(
webrtc
:
:
MediaType
:
:
AUDIO
)
;
-
ASSERT_EQ
(
audio_receivers
.
size
(
)
1u
)
;
-
std
:
:
vector
<
scoped_refptr
<
RtpReceiverInterface
>
>
video_receivers
=
-
callee
(
)
-
>
GetReceiversOfType
(
webrtc
:
:
MediaType
:
:
VIDEO
)
;
-
ASSERT_EQ
(
video_receivers
.
size
(
)
1u
)
;
-
-
/
/
Ensure
that
the
new
CSRCs
are
used
.
-
EXPECT_THAT
(
WaitUntil
(
[
&
]
{
return
audio_receivers
[
0
]
-
>
GetSources
(
)
;
}
-
Contains
(
IsCsrcWithId
(
kUpdatedAudioCsrc
)
)
-
{
.
timeout
=
kMaxWaitForFrames
}
)
-
IsRtcOk
(
)
)
;
-
EXPECT_THAT
(
WaitUntil
(
[
&
]
{
return
video_receivers
[
0
]
-
>
GetSources
(
)
;
}
-
Contains
(
IsCsrcWithId
(
kUpdatedVideoCsrc
)
)
-
{
.
timeout
=
kMaxWaitForFrames
}
)
-
IsRtcOk
(
)
)
;
-
}
-
/
/
Test
that
if
two
video
tracks
are
sent
(
from
caller
to
callee
in
this
test
)
/
/
they
'
re
transmitted
correctly
end
-
to
-
end
.
TEST_P
(
PeerConnectionIntegrationTest
EndToEndCallWithTwoVideoTracks
)
{
