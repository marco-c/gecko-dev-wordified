#
Copyright
(
c
)
2019
The
WebRTC
project
authors
.
All
Rights
Reserved
.
#
#
Use
of
this
source
code
is
governed
by
a
BSD
-
style
license
#
that
can
be
found
in
the
LICENSE
file
in
the
root
of
the
source
#
tree
.
An
additional
intellectual
property
rights
grant
can
be
found
#
in
the
file
PATENTS
.
All
contributing
project
authors
may
#
be
found
in
the
AUTHORS
file
in
the
root
of
the
source
tree
.
import
(
"
.
.
/
.
.
/
.
.
/
webrtc
.
gni
"
)
if
(
rtc_include_tests
)
{
rtc_library
(
"
tests
"
)
{
testonly
=
true
sources
=
[
"
bwe_ramp_up_test
.
cc
"
"
l4s_test
.
cc
"
"
peer_scenario_quality_test
.
cc
"
"
remote_estimate_test
.
cc
"
"
unsignaled_stream_test
.
cc
"
]
deps
=
[
"
.
.
:
peer_scenario
"
"
.
.
/
.
.
:
create_frame_generator_capturer
"
"
.
.
/
.
.
:
test_support
"
"
.
.
/
.
.
/
.
.
/
api
:
audio_options_api
"
"
.
.
/
.
.
/
.
.
/
api
:
libjingle_peerconnection_api
"
"
.
.
/
.
.
/
.
.
/
api
:
make_ref_counted
"
"
.
.
/
.
.
/
.
.
/
api
:
rtc_stats_api
"
"
.
.
/
.
.
/
.
.
/
api
:
rtp_parameters
"
"
.
.
/
.
.
/
.
.
/
api
:
rtp_transceiver_direction
"
"
.
.
/
.
.
/
.
.
/
api
:
scoped_refptr
"
"
.
.
/
.
.
/
.
.
/
api
/
test
/
network_emulation
"
"
.
.
/
.
.
/
.
.
/
api
/
transport
:
ecn_marking
"
"
.
.
/
.
.
/
.
.
/
api
/
units
:
data_rate
"
"
.
.
/
.
.
/
.
.
/
api
/
units
:
time_delta
"
"
.
.
/
.
.
/
.
.
/
api
/
video
:
video_frame
"
"
.
.
/
.
.
/
.
.
/
media
:
stream_params
"
"
.
.
/
.
.
/
.
.
/
modules
/
rtp_rtcp
:
rtp_rtcp_format
"
"
.
.
/
.
.
/
.
.
/
pc
:
media_session
"
"
.
.
/
.
.
/
.
.
/
pc
:
pc_test_utils
"
"
.
.
/
.
.
/
.
.
/
pc
:
session_description
"
"
.
.
/
.
.
/
.
.
/
rtc_base
:
checks
"
"
.
.
/
.
.
/
.
.
/
rtc_base
:
copy_on_write_buffer
"
"
.
.
/
.
.
/
.
.
/
rtc_base
:
logging
"
"
.
.
/
.
.
/
.
.
/
rtc_base
:
network_constants
"
"
.
.
/
.
.
/
scenario
"
"
/
/
third_party
/
abseil
-
cpp
/
absl
/
strings
"
]
if
(
rtc_enable_protobuf
)
{
deps
+
=
[
"
.
.
/
.
.
/
.
.
/
api
/
test
/
network_emulation
:
network_config_schedule_proto
"
"
.
.
/
.
.
/
.
.
/
api
/
test
/
network_emulation
:
schedulable_network_node_builder
"
]
}
}
}
