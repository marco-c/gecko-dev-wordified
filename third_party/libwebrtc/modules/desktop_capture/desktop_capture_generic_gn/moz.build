#
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
#
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
#
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
#
#
#
This
moz
.
build
was
AUTOMATICALLY
GENERATED
from
a
GN
config
#
#
#
#
#
#
DO
NOT
edit
it
by
hand
.
#
#
#
if
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
gtk
"
:
CXXFLAGS
+
=
CONFIG
[
"
TK_CFLAGS
"
]
COMPILE_FLAGS
[
"
OS_INCLUDES
"
]
=
[
]
AllowCompilerWarnings
(
)
DEFINES
[
"
ABSL_ALLOCATOR_NOTHROW
"
]
=
"
1
"
DEFINES
[
"
MULTI_MONITOR_SCREENSHARE
"
]
=
True
DEFINES
[
"
WEBRTC_ENABLE_PROTOBUF
"
]
=
"
0
"
DEFINES
[
"
WEBRTC_LIBRARY_IMPL
"
]
=
True
DEFINES
[
"
WEBRTC_MOZILLA_BUILD
"
]
=
True
DEFINES
[
"
WEBRTC_NON_STATIC_TRACE_EVENT_HANDLERS
"
]
=
"
0
"
DEFINES
[
"
WEBRTC_POSIX
"
]
=
True
DEFINES
[
"
__STDC_CONSTANT_MACROS
"
]
=
True
DEFINES
[
"
__STDC_FORMAT_MACROS
"
]
=
True
FINAL_LIBRARY
=
"
webrtc
"
LOCAL_INCLUDES
+
=
[
"
!
/
ipc
/
ipdl
/
_ipdlheaders
"
"
/
ipc
/
chromium
/
src
"
"
/
ipc
/
glue
"
"
/
media
/
libyuv
/
"
"
/
media
/
libyuv
/
libyuv
/
include
/
"
"
/
media
/
libyuv
/
libyuv
/
include
/
"
"
/
third_party
/
libwebrtc
/
"
"
/
third_party
/
libwebrtc
/
third_party
/
abseil
-
cpp
/
"
"
/
third_party
/
pipewire
/
"
]
UNIFIED_SOURCES
+
=
[
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
blank_detector_desktop_capturer_wrapper
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
capture_result_desktop_capturer_wrapper
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
cropped_desktop_frame
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
cropping_window_capturer
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
desktop_and_cursor_composer
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
desktop_capture_options
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
desktop_capturer
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
desktop_capturer_differ_wrapper
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
desktop_capturer_wrapper
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
desktop_frame_generator
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
desktop_frame_rotation
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
differ_block
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
fake_desktop_capturer
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
fallback_desktop_capturer_wrapper
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
full_screen_application_handler
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
full_screen_window_detector
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
mouse_cursor
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
resolution_tracker
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
rgba_color
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
screen_capturer_helper
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
window_finder
.
cc
"
]
if
not
CONFIG
[
"
MOZ_DEBUG
"
]
:
DEFINES
[
"
DYNAMIC_ANNOTATIONS_ENABLED
"
]
=
"
0
"
DEFINES
[
"
NDEBUG
"
]
=
True
DEFINES
[
"
NVALGRIND
"
]
=
True
DEFINES
[
"
_FORTIFY_SOURCE
"
]
=
"
2
"
if
CONFIG
[
"
MOZ_DEBUG
"
]
=
=
"
1
"
:
DEFINES
[
"
DYNAMIC_ANNOTATIONS_ENABLED
"
]
=
"
1
"
DEFINES
[
"
_DEBUG
"
]
=
True
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
Darwin
"
:
DEFINES
[
"
WEBRTC_MAC
"
]
=
True
DEFINES
[
"
_LIBCPP_HAS_NO_ALIGNED_ALLOCATION
"
]
=
True
DEFINES
[
"
__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES
"
]
=
"
0
"
UNIFIED_SOURCES
+
=
[
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
mac
/
desktop_configuration_monitor
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
mac
/
full_screen_mac_application_handler
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
mac
/
window_list_utils
.
cc
"
]
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
Linux
"
:
DEFINES
[
"
USE_AURA
"
]
=
"
1
"
DEFINES
[
"
USE_GLIB
"
]
=
"
1
"
DEFINES
[
"
USE_NSS_CERTS
"
]
=
"
1
"
DEFINES
[
"
USE_OZONE
"
]
=
"
1
"
DEFINES
[
"
USE_UDEV
"
]
=
True
DEFINES
[
"
USE_X11
"
]
=
"
1
"
DEFINES
[
"
WEBRTC_LINUX
"
]
=
True
DEFINES
[
"
WEBRTC_USE_X11
"
]
=
True
DEFINES
[
"
_FILE_OFFSET_BITS
"
]
=
"
64
"
DEFINES
[
"
_GNU_SOURCE
"
]
=
True
DEFINES
[
"
_LARGEFILE64_SOURCE
"
]
=
True
DEFINES
[
"
_LARGEFILE_SOURCE
"
]
=
True
OS_LIBS
+
=
[
"
atomic
"
"
dl
"
"
rt
"
"
X11
"
"
Xcomposite
"
"
Xdamage
"
"
Xext
"
"
Xfixes
"
"
Xrandr
"
"
Xrender
"
"
Xtst
"
]
SOURCES
+
=
[
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
base_capturer_pipewire
.
cc
"
]
UNIFIED_SOURCES
+
=
[
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
mouse_cursor_monitor_x11
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
screen_capturer_pipewire
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
screen_capturer_x11
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
shared_x_display
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
window_capturer_pipewire
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
window_capturer_x11
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
window_finder_x11
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
window_list_utils
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
x_atom_cache
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
x_error_trap
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
x_server_pixel_buffer
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
linux
/
x_window_property
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
mouse_cursor_monitor_linux
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
screen_capturer_linux
.
cc
"
"
/
third_party
/
libwebrtc
/
modules
/
desktop_capture
/
window_capturer_linux
.
cc
"
]
if
CONFIG
[
"
CPU_ARCH
"
]
=
=
"
aarch64
"
:
DEFINES
[
"
WEBRTC_ARCH_ARM64
"
]
=
True
DEFINES
[
"
WEBRTC_HAS_NEON
"
]
=
True
if
CONFIG
[
"
CPU_ARCH
"
]
=
=
"
x86
"
:
CXXFLAGS
+
=
[
"
-
msse2
"
]
DEFINES
[
"
CR_SYSROOT_HASH
"
]
=
"
d967bcef40477dbc39acef141ff22bf73f3e7cdb
"
if
CONFIG
[
"
CPU_ARCH
"
]
=
=
"
x86_64
"
and
CONFIG
[
"
OS_TARGET
"
]
=
=
"
Linux
"
:
DEFINES
[
"
CR_SYSROOT_HASH
"
]
=
"
5f64b417e1018dcf8fcc81dc2714e0f264b9b911
"
Library
(
"
desktop_capture_generic_gn
"
)
