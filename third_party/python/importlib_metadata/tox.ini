[
tox
]
envlist
=
python
minversion
=
3
.
2
#
https
:
/
/
github
.
com
/
jaraco
/
skeleton
/
issues
/
6
tox_pip_extensions_ext_venv_update
=
true
toxworkdir
=
{
env
:
TOX_WORK_DIR
:
.
tox
}
[
testenv
]
deps
=
commands
=
pytest
{
posargs
}
usedevelop
=
True
extras
=
testing
setenv
=
#
workaround
pypa
/
pip
#
9143
PIP_USE_DEPRECATED
=
legacy
-
resolver
[
testenv
:
docs
]
extras
=
docs
testing
changedir
=
docs
commands
=
python
-
m
sphinx
.
{
toxinidir
}
/
build
/
html
[
testenv
:
diffcov
]
deps
=
diff
-
cover
commands
=
pytest
{
posargs
}
-
-
cov
-
report
xml
diff
-
cover
coverage
.
xml
-
-
compare
-
branch
=
origin
/
main
-
-
html
-
report
diffcov
.
html
diff
-
cover
coverage
.
xml
-
-
compare
-
branch
=
origin
/
main
-
-
fail
-
under
=
100
[
perf
]
deps
=
ipython
pyperf
path
commands
=
python
-
c
"
import
path
;
path
.
Path
(
'
{
env
:
SCOPE
}
.
json
'
)
.
remove_p
(
)
"
python
-
m
pyperf
timeit
-
-
name
discovery
-
-
append
{
env
:
SCOPE
}
.
json
-
s
'
import
importlib_metadata
'
'
importlib_metadata
.
distribution
(
"
ipython
"
)
'
python
-
m
pyperf
timeit
-
-
name
'
entry_points
(
)
'
-
-
append
{
env
:
SCOPE
}
.
json
-
s
'
import
importlib_metadata
'
'
importlib_metadata
.
entry_points
(
)
'
python
-
m
pyperf
timeit
-
-
name
'
cached
distribution
'
-
-
append
{
env
:
SCOPE
}
.
json
-
s
'
import
importlib_metadata
;
importlib_metadata
.
distribution
(
"
ipython
"
)
'
'
importlib_metadata
.
distribution
(
"
ipython
"
)
'
python
-
m
pyperf
timeit
-
-
name
'
uncached
distribution
'
-
-
append
{
env
:
SCOPE
}
.
json
-
s
'
import
importlib
importlib_metadata
'
'
importlib
.
invalidate_caches
(
)
;
importlib_metadata
.
distribution
(
"
ipython
"
)
'
[
testenv
:
perf
]
use_develop
=
False
#
change
dir
to
avoid
picking
up
local
package
.
changedir
=
{
toxworkdir
}
setenv
=
SCOPE
=
local
deps
=
{
[
perf
]
deps
}
commands
=
{
[
perf
]
commands
}
[
testenv
:
perf
-
ref
]
#
compare
perf
results
to
the
main
branch
skip_install
=
True
#
change
dir
to
avoid
picking
up
local
package
.
changedir
=
{
toxworkdir
}
setenv
=
SCOPE
=
main
deps
=
{
[
perf
]
deps
}
git
+
https
:
/
/
github
.
com
/
python
/
importlib_metadata
commands
=
{
[
perf
]
commands
}
python
-
m
pyperf
compare_to
-
-
verbose
main
.
json
local
.
json
-
-
table
[
testenv
:
release
]
skip_install
=
True
deps
=
build
twine
>
=
3
path
jaraco
.
develop
>
=
7
.
1
passenv
=
TWINE_PASSWORD
GITHUB_TOKEN
setenv
=
TWINE_USERNAME
=
{
env
:
TWINE_USERNAME
:
__token__
}
commands
=
python
-
c
"
import
path
;
path
.
Path
(
'
dist
'
)
.
rmtree_p
(
)
"
python
-
m
build
python
-
m
twine
upload
dist
/
*
python
-
m
jaraco
.
develop
.
create
-
github
-
release
