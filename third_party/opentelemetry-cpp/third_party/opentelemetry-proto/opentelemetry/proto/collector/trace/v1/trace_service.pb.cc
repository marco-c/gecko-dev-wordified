/
/
Generated
by
the
protocol
buffer
compiler
.
DO
NOT
EDIT
!
/
/
source
:
opentelemetry
/
proto
/
collector
/
trace
/
v1
/
trace_service
.
proto
#
include
"
opentelemetry
/
proto
/
collector
/
trace
/
v1
/
trace_service
.
pb
.
h
"
#
include
<
algorithm
>
#
include
<
google
/
protobuf
/
io
/
coded_stream
.
h
>
#
include
<
google
/
protobuf
/
extension_set
.
h
>
#
include
<
google
/
protobuf
/
wire_format_lite
.
h
>
#
include
<
google
/
protobuf
/
io
/
zero_copy_stream_impl_lite
.
h
>
/
/
protoc_insertion_point
(
includes
)
#
include
<
google
/
protobuf
/
port_def
.
inc
>
PROTOBUF_PRAGMA_INIT_SEG
namespace
_pb
=
:
:
PROTOBUF_NAMESPACE_ID
;
namespace
_pbi
=
_pb
:
:
internal
;
namespace
opentelemetry
{
namespace
proto
{
namespace
collector
{
namespace
trace
{
namespace
v1
{
PROTOBUF_CONSTEXPR
ExportTraceServiceRequest
:
:
ExportTraceServiceRequest
(
:
:
_pbi
:
:
ConstantInitialized
)
:
_impl_
{
/
*
decltype
(
_impl_
.
resource_spans_
)
*
/
{
}
/
*
decltype
(
_impl_
.
_cached_size_
)
*
/
{
}
}
{
}
struct
ExportTraceServiceRequestDefaultTypeInternal
{
PROTOBUF_CONSTEXPR
ExportTraceServiceRequestDefaultTypeInternal
(
)
:
_instance
(
:
:
_pbi
:
:
ConstantInitialized
{
}
)
{
}
~
ExportTraceServiceRequestDefaultTypeInternal
(
)
{
}
union
{
ExportTraceServiceRequest
_instance
;
}
;
}
;
PROTOBUF_ATTRIBUTE_NO_DESTROY
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
ExportTraceServiceRequestDefaultTypeInternal
_ExportTraceServiceRequest_default_instance_
;
PROTOBUF_CONSTEXPR
ExportTraceServiceResponse
:
:
ExportTraceServiceResponse
(
:
:
_pbi
:
:
ConstantInitialized
)
:
_impl_
{
/
*
decltype
(
_impl_
.
partial_success_
)
*
/
nullptr
/
*
decltype
(
_impl_
.
_cached_size_
)
*
/
{
}
}
{
}
struct
ExportTraceServiceResponseDefaultTypeInternal
{
PROTOBUF_CONSTEXPR
ExportTraceServiceResponseDefaultTypeInternal
(
)
:
_instance
(
:
:
_pbi
:
:
ConstantInitialized
{
}
)
{
}
~
ExportTraceServiceResponseDefaultTypeInternal
(
)
{
}
union
{
ExportTraceServiceResponse
_instance
;
}
;
}
;
PROTOBUF_ATTRIBUTE_NO_DESTROY
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
ExportTraceServiceResponseDefaultTypeInternal
_ExportTraceServiceResponse_default_instance_
;
PROTOBUF_CONSTEXPR
ExportTracePartialSuccess
:
:
ExportTracePartialSuccess
(
:
:
_pbi
:
:
ConstantInitialized
)
:
_impl_
{
/
*
decltype
(
_impl_
.
error_message_
)
*
/
{
&
:
:
_pbi
:
:
fixed_address_empty_string
:
:
_pbi
:
:
ConstantInitialized
{
}
}
/
*
decltype
(
_impl_
.
rejected_spans_
)
*
/
int64_t
{
0
}
/
*
decltype
(
_impl_
.
_cached_size_
)
*
/
{
}
}
{
}
struct
ExportTracePartialSuccessDefaultTypeInternal
{
PROTOBUF_CONSTEXPR
ExportTracePartialSuccessDefaultTypeInternal
(
)
:
_instance
(
:
:
_pbi
:
:
ConstantInitialized
{
}
)
{
}
~
ExportTracePartialSuccessDefaultTypeInternal
(
)
{
}
union
{
ExportTracePartialSuccess
_instance
;
}
;
}
;
PROTOBUF_ATTRIBUTE_NO_DESTROY
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
ExportTracePartialSuccessDefaultTypeInternal
_ExportTracePartialSuccess_default_instance_
;
}
/
/
namespace
v1
}
/
/
namespace
trace
}
/
/
namespace
collector
}
/
/
namespace
proto
}
/
/
namespace
opentelemetry
namespace
opentelemetry
{
namespace
proto
{
namespace
collector
{
namespace
trace
{
namespace
v1
{
/
/
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
class
ExportTraceServiceRequest
:
:
_Internal
{
public
:
}
;
void
ExportTraceServiceRequest
:
:
clear_resource_spans
(
)
{
_impl_
.
resource_spans_
.
Clear
(
)
;
}
ExportTraceServiceRequest
:
:
ExportTraceServiceRequest
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
bool
is_message_owned
)
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
(
arena
is_message_owned
)
{
SharedCtor
(
arena
is_message_owned
)
;
/
/
protoc_insertion_point
(
arena_constructor
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceRequest
)
}
ExportTraceServiceRequest
:
:
ExportTraceServiceRequest
(
const
ExportTraceServiceRequest
&
from
)
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
(
)
{
ExportTraceServiceRequest
*
const
_this
=
this
;
(
void
)
_this
;
new
(
&
_impl_
)
Impl_
{
decltype
(
_impl_
.
resource_spans_
)
{
from
.
_impl_
.
resource_spans_
}
/
*
decltype
(
_impl_
.
_cached_size_
)
*
/
{
}
}
;
_internal_metadata_
.
MergeFrom
<
std
:
:
string
>
(
from
.
_internal_metadata_
)
;
/
/
protoc_insertion_point
(
copy_constructor
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceRequest
)
}
inline
void
ExportTraceServiceRequest
:
:
SharedCtor
(
:
:
_pb
:
:
Arena
*
arena
bool
is_message_owned
)
{
(
void
)
arena
;
(
void
)
is_message_owned
;
new
(
&
_impl_
)
Impl_
{
decltype
(
_impl_
.
resource_spans_
)
{
arena
}
/
*
decltype
(
_impl_
.
_cached_size_
)
*
/
{
}
}
;
}
ExportTraceServiceRequest
:
:
~
ExportTraceServiceRequest
(
)
{
/
/
protoc_insertion_point
(
destructor
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceRequest
)
if
(
auto
*
arena
=
_internal_metadata_
.
DeleteReturnArena
<
std
:
:
string
>
(
)
)
{
(
void
)
arena
;
return
;
}
SharedDtor
(
)
;
}
inline
void
ExportTraceServiceRequest
:
:
SharedDtor
(
)
{
GOOGLE_DCHECK
(
GetArenaForAllocation
(
)
=
=
nullptr
)
;
_impl_
.
resource_spans_
.
~
RepeatedPtrField
(
)
;
}
void
ExportTraceServiceRequest
:
:
SetCachedSize
(
int
size
)
const
{
_impl_
.
_cached_size_
.
Set
(
size
)
;
}
void
ExportTraceServiceRequest
:
:
Clear
(
)
{
/
/
protoc_insertion_point
(
message_clear_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceRequest
)
uint32_t
cached_has_bits
=
0
;
/
/
Prevent
compiler
warnings
about
cached_has_bits
being
unused
(
void
)
cached_has_bits
;
_impl_
.
resource_spans_
.
Clear
(
)
;
_internal_metadata_
.
Clear
<
std
:
:
string
>
(
)
;
}
const
char
*
ExportTraceServiceRequest
:
:
_InternalParse
(
const
char
*
ptr
:
:
_pbi
:
:
ParseContext
*
ctx
)
{
#
define
CHK_
(
x
)
if
(
PROTOBUF_PREDICT_FALSE
(
!
(
x
)
)
)
goto
failure
while
(
!
ctx
-
>
Done
(
&
ptr
)
)
{
uint32_t
tag
;
ptr
=
:
:
_pbi
:
:
ReadTag
(
ptr
&
tag
)
;
switch
(
tag
>
>
3
)
{
/
/
repeated
.
opentelemetry
.
proto
.
trace
.
v1
.
ResourceSpans
resource_spans
=
1
;
case
1
:
if
(
PROTOBUF_PREDICT_TRUE
(
static_cast
<
uint8_t
>
(
tag
)
=
=
10
)
)
{
ptr
-
=
1
;
do
{
ptr
+
=
1
;
ptr
=
ctx
-
>
ParseMessage
(
_internal_add_resource_spans
(
)
ptr
)
;
CHK_
(
ptr
)
;
if
(
!
ctx
-
>
DataAvailable
(
ptr
)
)
break
;
}
while
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ExpectTag
<
10
>
(
ptr
)
)
;
}
else
goto
handle_unusual
;
continue
;
default
:
goto
handle_unusual
;
}
/
/
switch
handle_unusual
:
if
(
(
tag
=
=
0
)
|
|
(
(
tag
&
7
)
=
=
4
)
)
{
CHK_
(
ptr
)
;
ctx
-
>
SetLastTag
(
tag
)
;
goto
message_done
;
}
ptr
=
UnknownFieldParse
(
tag
_internal_metadata_
.
mutable_unknown_fields
<
std
:
:
string
>
(
)
ptr
ctx
)
;
CHK_
(
ptr
!
=
nullptr
)
;
}
/
/
while
message_done
:
return
ptr
;
failure
:
ptr
=
nullptr
;
goto
message_done
;
#
undef
CHK_
}
uint8_t
*
ExportTraceServiceRequest
:
:
_InternalSerialize
(
uint8_t
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
{
/
/
protoc_insertion_point
(
serialize_to_array_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceRequest
)
uint32_t
cached_has_bits
=
0
;
(
void
)
cached_has_bits
;
/
/
repeated
.
opentelemetry
.
proto
.
trace
.
v1
.
ResourceSpans
resource_spans
=
1
;
for
(
unsigned
i
=
0
n
=
static_cast
<
unsigned
>
(
this
-
>
_internal_resource_spans_size
(
)
)
;
i
<
n
;
i
+
+
)
{
const
auto
&
repfield
=
this
-
>
_internal_resource_spans
(
i
)
;
target
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
WireFormatLite
:
:
InternalWriteMessage
(
1
repfield
repfield
.
GetCachedSize
(
)
target
stream
)
;
}
if
(
PROTOBUF_PREDICT_FALSE
(
_internal_metadata_
.
have_unknown_fields
(
)
)
)
{
target
=
stream
-
>
WriteRaw
(
_internal_metadata_
.
unknown_fields
<
std
:
:
string
>
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyString
)
.
data
(
)
static_cast
<
int
>
(
_internal_metadata_
.
unknown_fields
<
std
:
:
string
>
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyString
)
.
size
(
)
)
target
)
;
}
/
/
protoc_insertion_point
(
serialize_to_array_end
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceRequest
)
return
target
;
}
size_t
ExportTraceServiceRequest
:
:
ByteSizeLong
(
)
const
{
/
/
protoc_insertion_point
(
message_byte_size_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceRequest
)
size_t
total_size
=
0
;
uint32_t
cached_has_bits
=
0
;
/
/
Prevent
compiler
warnings
about
cached_has_bits
being
unused
(
void
)
cached_has_bits
;
/
/
repeated
.
opentelemetry
.
proto
.
trace
.
v1
.
ResourceSpans
resource_spans
=
1
;
total_size
+
=
1UL
*
this
-
>
_internal_resource_spans_size
(
)
;
for
(
const
auto
&
msg
:
this
-
>
_impl_
.
resource_spans_
)
{
total_size
+
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
WireFormatLite
:
:
MessageSize
(
msg
)
;
}
if
(
PROTOBUF_PREDICT_FALSE
(
_internal_metadata_
.
have_unknown_fields
(
)
)
)
{
total_size
+
=
_internal_metadata_
.
unknown_fields
<
std
:
:
string
>
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyString
)
.
size
(
)
;
}
int
cached_size
=
:
:
_pbi
:
:
ToCachedSize
(
total_size
)
;
SetCachedSize
(
cached_size
)
;
return
total_size
;
}
void
ExportTraceServiceRequest
:
:
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
{
MergeFrom
(
*
:
:
_pbi
:
:
DownCast
<
const
ExportTraceServiceRequest
*
>
(
&
from
)
)
;
}
void
ExportTraceServiceRequest
:
:
MergeFrom
(
const
ExportTraceServiceRequest
&
from
)
{
ExportTraceServiceRequest
*
const
_this
=
this
;
/
/
protoc_insertion_point
(
class_specific_merge_from_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceRequest
)
GOOGLE_DCHECK_NE
(
&
from
_this
)
;
uint32_t
cached_has_bits
=
0
;
(
void
)
cached_has_bits
;
_this
-
>
_impl_
.
resource_spans_
.
MergeFrom
(
from
.
_impl_
.
resource_spans_
)
;
_this
-
>
_internal_metadata_
.
MergeFrom
<
std
:
:
string
>
(
from
.
_internal_metadata_
)
;
}
void
ExportTraceServiceRequest
:
:
CopyFrom
(
const
ExportTraceServiceRequest
&
from
)
{
/
/
protoc_insertion_point
(
class_specific_copy_from_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceRequest
)
if
(
&
from
=
=
this
)
return
;
Clear
(
)
;
MergeFrom
(
from
)
;
}
bool
ExportTraceServiceRequest
:
:
IsInitialized
(
)
const
{
return
true
;
}
void
ExportTraceServiceRequest
:
:
InternalSwap
(
ExportTraceServiceRequest
*
other
)
{
using
std
:
:
swap
;
_internal_metadata_
.
InternalSwap
(
&
other
-
>
_internal_metadata_
)
;
_impl_
.
resource_spans_
.
InternalSwap
(
&
other
-
>
_impl_
.
resource_spans_
)
;
}
std
:
:
string
ExportTraceServiceRequest
:
:
GetTypeName
(
)
const
{
return
"
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceRequest
"
;
}
/
/
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
class
ExportTraceServiceResponse
:
:
_Internal
{
public
:
static
const
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTracePartialSuccess
&
partial_success
(
const
ExportTraceServiceResponse
*
msg
)
;
}
;
const
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTracePartialSuccess
&
ExportTraceServiceResponse
:
:
_Internal
:
:
partial_success
(
const
ExportTraceServiceResponse
*
msg
)
{
return
*
msg
-
>
_impl_
.
partial_success_
;
}
ExportTraceServiceResponse
:
:
ExportTraceServiceResponse
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
bool
is_message_owned
)
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
(
arena
is_message_owned
)
{
SharedCtor
(
arena
is_message_owned
)
;
/
/
protoc_insertion_point
(
arena_constructor
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceResponse
)
}
ExportTraceServiceResponse
:
:
ExportTraceServiceResponse
(
const
ExportTraceServiceResponse
&
from
)
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
(
)
{
ExportTraceServiceResponse
*
const
_this
=
this
;
(
void
)
_this
;
new
(
&
_impl_
)
Impl_
{
decltype
(
_impl_
.
partial_success_
)
{
nullptr
}
/
*
decltype
(
_impl_
.
_cached_size_
)
*
/
{
}
}
;
_internal_metadata_
.
MergeFrom
<
std
:
:
string
>
(
from
.
_internal_metadata_
)
;
if
(
from
.
_internal_has_partial_success
(
)
)
{
_this
-
>
_impl_
.
partial_success_
=
new
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTracePartialSuccess
(
*
from
.
_impl_
.
partial_success_
)
;
}
/
/
protoc_insertion_point
(
copy_constructor
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceResponse
)
}
inline
void
ExportTraceServiceResponse
:
:
SharedCtor
(
:
:
_pb
:
:
Arena
*
arena
bool
is_message_owned
)
{
(
void
)
arena
;
(
void
)
is_message_owned
;
new
(
&
_impl_
)
Impl_
{
decltype
(
_impl_
.
partial_success_
)
{
nullptr
}
/
*
decltype
(
_impl_
.
_cached_size_
)
*
/
{
}
}
;
}
ExportTraceServiceResponse
:
:
~
ExportTraceServiceResponse
(
)
{
/
/
protoc_insertion_point
(
destructor
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceResponse
)
if
(
auto
*
arena
=
_internal_metadata_
.
DeleteReturnArena
<
std
:
:
string
>
(
)
)
{
(
void
)
arena
;
return
;
}
SharedDtor
(
)
;
}
inline
void
ExportTraceServiceResponse
:
:
SharedDtor
(
)
{
GOOGLE_DCHECK
(
GetArenaForAllocation
(
)
=
=
nullptr
)
;
if
(
this
!
=
internal_default_instance
(
)
)
delete
_impl_
.
partial_success_
;
}
void
ExportTraceServiceResponse
:
:
SetCachedSize
(
int
size
)
const
{
_impl_
.
_cached_size_
.
Set
(
size
)
;
}
void
ExportTraceServiceResponse
:
:
Clear
(
)
{
/
/
protoc_insertion_point
(
message_clear_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceResponse
)
uint32_t
cached_has_bits
=
0
;
/
/
Prevent
compiler
warnings
about
cached_has_bits
being
unused
(
void
)
cached_has_bits
;
if
(
GetArenaForAllocation
(
)
=
=
nullptr
&
&
_impl_
.
partial_success_
!
=
nullptr
)
{
delete
_impl_
.
partial_success_
;
}
_impl_
.
partial_success_
=
nullptr
;
_internal_metadata_
.
Clear
<
std
:
:
string
>
(
)
;
}
const
char
*
ExportTraceServiceResponse
:
:
_InternalParse
(
const
char
*
ptr
:
:
_pbi
:
:
ParseContext
*
ctx
)
{
#
define
CHK_
(
x
)
if
(
PROTOBUF_PREDICT_FALSE
(
!
(
x
)
)
)
goto
failure
while
(
!
ctx
-
>
Done
(
&
ptr
)
)
{
uint32_t
tag
;
ptr
=
:
:
_pbi
:
:
ReadTag
(
ptr
&
tag
)
;
switch
(
tag
>
>
3
)
{
/
/
.
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
partial_success
=
1
;
case
1
:
if
(
PROTOBUF_PREDICT_TRUE
(
static_cast
<
uint8_t
>
(
tag
)
=
=
10
)
)
{
ptr
=
ctx
-
>
ParseMessage
(
_internal_mutable_partial_success
(
)
ptr
)
;
CHK_
(
ptr
)
;
}
else
goto
handle_unusual
;
continue
;
default
:
goto
handle_unusual
;
}
/
/
switch
handle_unusual
:
if
(
(
tag
=
=
0
)
|
|
(
(
tag
&
7
)
=
=
4
)
)
{
CHK_
(
ptr
)
;
ctx
-
>
SetLastTag
(
tag
)
;
goto
message_done
;
}
ptr
=
UnknownFieldParse
(
tag
_internal_metadata_
.
mutable_unknown_fields
<
std
:
:
string
>
(
)
ptr
ctx
)
;
CHK_
(
ptr
!
=
nullptr
)
;
}
/
/
while
message_done
:
return
ptr
;
failure
:
ptr
=
nullptr
;
goto
message_done
;
#
undef
CHK_
}
uint8_t
*
ExportTraceServiceResponse
:
:
_InternalSerialize
(
uint8_t
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
{
/
/
protoc_insertion_point
(
serialize_to_array_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceResponse
)
uint32_t
cached_has_bits
=
0
;
(
void
)
cached_has_bits
;
/
/
.
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
partial_success
=
1
;
if
(
this
-
>
_internal_has_partial_success
(
)
)
{
target
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
WireFormatLite
:
:
InternalWriteMessage
(
1
_Internal
:
:
partial_success
(
this
)
_Internal
:
:
partial_success
(
this
)
.
GetCachedSize
(
)
target
stream
)
;
}
if
(
PROTOBUF_PREDICT_FALSE
(
_internal_metadata_
.
have_unknown_fields
(
)
)
)
{
target
=
stream
-
>
WriteRaw
(
_internal_metadata_
.
unknown_fields
<
std
:
:
string
>
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyString
)
.
data
(
)
static_cast
<
int
>
(
_internal_metadata_
.
unknown_fields
<
std
:
:
string
>
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyString
)
.
size
(
)
)
target
)
;
}
/
/
protoc_insertion_point
(
serialize_to_array_end
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceResponse
)
return
target
;
}
size_t
ExportTraceServiceResponse
:
:
ByteSizeLong
(
)
const
{
/
/
protoc_insertion_point
(
message_byte_size_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceResponse
)
size_t
total_size
=
0
;
uint32_t
cached_has_bits
=
0
;
/
/
Prevent
compiler
warnings
about
cached_has_bits
being
unused
(
void
)
cached_has_bits
;
/
/
.
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
partial_success
=
1
;
if
(
this
-
>
_internal_has_partial_success
(
)
)
{
total_size
+
=
1
+
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
WireFormatLite
:
:
MessageSize
(
*
_impl_
.
partial_success_
)
;
}
if
(
PROTOBUF_PREDICT_FALSE
(
_internal_metadata_
.
have_unknown_fields
(
)
)
)
{
total_size
+
=
_internal_metadata_
.
unknown_fields
<
std
:
:
string
>
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyString
)
.
size
(
)
;
}
int
cached_size
=
:
:
_pbi
:
:
ToCachedSize
(
total_size
)
;
SetCachedSize
(
cached_size
)
;
return
total_size
;
}
void
ExportTraceServiceResponse
:
:
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
{
MergeFrom
(
*
:
:
_pbi
:
:
DownCast
<
const
ExportTraceServiceResponse
*
>
(
&
from
)
)
;
}
void
ExportTraceServiceResponse
:
:
MergeFrom
(
const
ExportTraceServiceResponse
&
from
)
{
ExportTraceServiceResponse
*
const
_this
=
this
;
/
/
protoc_insertion_point
(
class_specific_merge_from_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceResponse
)
GOOGLE_DCHECK_NE
(
&
from
_this
)
;
uint32_t
cached_has_bits
=
0
;
(
void
)
cached_has_bits
;
if
(
from
.
_internal_has_partial_success
(
)
)
{
_this
-
>
_internal_mutable_partial_success
(
)
-
>
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTracePartialSuccess
:
:
MergeFrom
(
from
.
_internal_partial_success
(
)
)
;
}
_this
-
>
_internal_metadata_
.
MergeFrom
<
std
:
:
string
>
(
from
.
_internal_metadata_
)
;
}
void
ExportTraceServiceResponse
:
:
CopyFrom
(
const
ExportTraceServiceResponse
&
from
)
{
/
/
protoc_insertion_point
(
class_specific_copy_from_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceResponse
)
if
(
&
from
=
=
this
)
return
;
Clear
(
)
;
MergeFrom
(
from
)
;
}
bool
ExportTraceServiceResponse
:
:
IsInitialized
(
)
const
{
return
true
;
}
void
ExportTraceServiceResponse
:
:
InternalSwap
(
ExportTraceServiceResponse
*
other
)
{
using
std
:
:
swap
;
_internal_metadata_
.
InternalSwap
(
&
other
-
>
_internal_metadata_
)
;
swap
(
_impl_
.
partial_success_
other
-
>
_impl_
.
partial_success_
)
;
}
std
:
:
string
ExportTraceServiceResponse
:
:
GetTypeName
(
)
const
{
return
"
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTraceServiceResponse
"
;
}
/
/
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
class
ExportTracePartialSuccess
:
:
_Internal
{
public
:
}
;
ExportTracePartialSuccess
:
:
ExportTracePartialSuccess
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
bool
is_message_owned
)
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
(
arena
is_message_owned
)
{
SharedCtor
(
arena
is_message_owned
)
;
/
/
protoc_insertion_point
(
arena_constructor
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
)
}
ExportTracePartialSuccess
:
:
ExportTracePartialSuccess
(
const
ExportTracePartialSuccess
&
from
)
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
(
)
{
ExportTracePartialSuccess
*
const
_this
=
this
;
(
void
)
_this
;
new
(
&
_impl_
)
Impl_
{
decltype
(
_impl_
.
error_message_
)
{
}
decltype
(
_impl_
.
rejected_spans_
)
{
}
/
*
decltype
(
_impl_
.
_cached_size_
)
*
/
{
}
}
;
_internal_metadata_
.
MergeFrom
<
std
:
:
string
>
(
from
.
_internal_metadata_
)
;
_impl_
.
error_message_
.
InitDefault
(
)
;
#
ifdef
PROTOBUF_FORCE_COPY_DEFAULT_STRING
_impl_
.
error_message_
.
Set
(
"
"
GetArenaForAllocation
(
)
)
;
#
endif
/
/
PROTOBUF_FORCE_COPY_DEFAULT_STRING
if
(
!
from
.
_internal_error_message
(
)
.
empty
(
)
)
{
_this
-
>
_impl_
.
error_message_
.
Set
(
from
.
_internal_error_message
(
)
_this
-
>
GetArenaForAllocation
(
)
)
;
}
_this
-
>
_impl_
.
rejected_spans_
=
from
.
_impl_
.
rejected_spans_
;
/
/
protoc_insertion_point
(
copy_constructor
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
)
}
inline
void
ExportTracePartialSuccess
:
:
SharedCtor
(
:
:
_pb
:
:
Arena
*
arena
bool
is_message_owned
)
{
(
void
)
arena
;
(
void
)
is_message_owned
;
new
(
&
_impl_
)
Impl_
{
decltype
(
_impl_
.
error_message_
)
{
}
decltype
(
_impl_
.
rejected_spans_
)
{
int64_t
{
0
}
}
/
*
decltype
(
_impl_
.
_cached_size_
)
*
/
{
}
}
;
_impl_
.
error_message_
.
InitDefault
(
)
;
#
ifdef
PROTOBUF_FORCE_COPY_DEFAULT_STRING
_impl_
.
error_message_
.
Set
(
"
"
GetArenaForAllocation
(
)
)
;
#
endif
/
/
PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ExportTracePartialSuccess
:
:
~
ExportTracePartialSuccess
(
)
{
/
/
protoc_insertion_point
(
destructor
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
)
if
(
auto
*
arena
=
_internal_metadata_
.
DeleteReturnArena
<
std
:
:
string
>
(
)
)
{
(
void
)
arena
;
return
;
}
SharedDtor
(
)
;
}
inline
void
ExportTracePartialSuccess
:
:
SharedDtor
(
)
{
GOOGLE_DCHECK
(
GetArenaForAllocation
(
)
=
=
nullptr
)
;
_impl_
.
error_message_
.
Destroy
(
)
;
}
void
ExportTracePartialSuccess
:
:
SetCachedSize
(
int
size
)
const
{
_impl_
.
_cached_size_
.
Set
(
size
)
;
}
void
ExportTracePartialSuccess
:
:
Clear
(
)
{
/
/
protoc_insertion_point
(
message_clear_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
)
uint32_t
cached_has_bits
=
0
;
/
/
Prevent
compiler
warnings
about
cached_has_bits
being
unused
(
void
)
cached_has_bits
;
_impl_
.
error_message_
.
ClearToEmpty
(
)
;
_impl_
.
rejected_spans_
=
int64_t
{
0
}
;
_internal_metadata_
.
Clear
<
std
:
:
string
>
(
)
;
}
const
char
*
ExportTracePartialSuccess
:
:
_InternalParse
(
const
char
*
ptr
:
:
_pbi
:
:
ParseContext
*
ctx
)
{
#
define
CHK_
(
x
)
if
(
PROTOBUF_PREDICT_FALSE
(
!
(
x
)
)
)
goto
failure
while
(
!
ctx
-
>
Done
(
&
ptr
)
)
{
uint32_t
tag
;
ptr
=
:
:
_pbi
:
:
ReadTag
(
ptr
&
tag
)
;
switch
(
tag
>
>
3
)
{
/
/
int64
rejected_spans
=
1
;
case
1
:
if
(
PROTOBUF_PREDICT_TRUE
(
static_cast
<
uint8_t
>
(
tag
)
=
=
8
)
)
{
_impl_
.
rejected_spans_
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ReadVarint64
(
&
ptr
)
;
CHK_
(
ptr
)
;
}
else
goto
handle_unusual
;
continue
;
/
/
string
error_message
=
2
;
case
2
:
if
(
PROTOBUF_PREDICT_TRUE
(
static_cast
<
uint8_t
>
(
tag
)
=
=
18
)
)
{
auto
str
=
_internal_mutable_error_message
(
)
;
ptr
=
:
:
_pbi
:
:
InlineGreedyStringParser
(
str
ptr
ctx
)
;
CHK_
(
ptr
)
;
CHK_
(
:
:
_pbi
:
:
VerifyUTF8
(
str
nullptr
)
)
;
}
else
goto
handle_unusual
;
continue
;
default
:
goto
handle_unusual
;
}
/
/
switch
handle_unusual
:
if
(
(
tag
=
=
0
)
|
|
(
(
tag
&
7
)
=
=
4
)
)
{
CHK_
(
ptr
)
;
ctx
-
>
SetLastTag
(
tag
)
;
goto
message_done
;
}
ptr
=
UnknownFieldParse
(
tag
_internal_metadata_
.
mutable_unknown_fields
<
std
:
:
string
>
(
)
ptr
ctx
)
;
CHK_
(
ptr
!
=
nullptr
)
;
}
/
/
while
message_done
:
return
ptr
;
failure
:
ptr
=
nullptr
;
goto
message_done
;
#
undef
CHK_
}
uint8_t
*
ExportTracePartialSuccess
:
:
_InternalSerialize
(
uint8_t
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
{
/
/
protoc_insertion_point
(
serialize_to_array_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
)
uint32_t
cached_has_bits
=
0
;
(
void
)
cached_has_bits
;
/
/
int64
rejected_spans
=
1
;
if
(
this
-
>
_internal_rejected_spans
(
)
!
=
0
)
{
target
=
stream
-
>
EnsureSpace
(
target
)
;
target
=
:
:
_pbi
:
:
WireFormatLite
:
:
WriteInt64ToArray
(
1
this
-
>
_internal_rejected_spans
(
)
target
)
;
}
/
/
string
error_message
=
2
;
if
(
!
this
-
>
_internal_error_message
(
)
.
empty
(
)
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
WireFormatLite
:
:
VerifyUtf8String
(
this
-
>
_internal_error_message
(
)
.
data
(
)
static_cast
<
int
>
(
this
-
>
_internal_error_message
(
)
.
length
(
)
)
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
WireFormatLite
:
:
SERIALIZE
"
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
.
error_message
"
)
;
target
=
stream
-
>
WriteStringMaybeAliased
(
2
this
-
>
_internal_error_message
(
)
target
)
;
}
if
(
PROTOBUF_PREDICT_FALSE
(
_internal_metadata_
.
have_unknown_fields
(
)
)
)
{
target
=
stream
-
>
WriteRaw
(
_internal_metadata_
.
unknown_fields
<
std
:
:
string
>
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyString
)
.
data
(
)
static_cast
<
int
>
(
_internal_metadata_
.
unknown_fields
<
std
:
:
string
>
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyString
)
.
size
(
)
)
target
)
;
}
/
/
protoc_insertion_point
(
serialize_to_array_end
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
)
return
target
;
}
size_t
ExportTracePartialSuccess
:
:
ByteSizeLong
(
)
const
{
/
/
protoc_insertion_point
(
message_byte_size_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
)
size_t
total_size
=
0
;
uint32_t
cached_has_bits
=
0
;
/
/
Prevent
compiler
warnings
about
cached_has_bits
being
unused
(
void
)
cached_has_bits
;
/
/
string
error_message
=
2
;
if
(
!
this
-
>
_internal_error_message
(
)
.
empty
(
)
)
{
total_size
+
=
1
+
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
WireFormatLite
:
:
StringSize
(
this
-
>
_internal_error_message
(
)
)
;
}
/
/
int64
rejected_spans
=
1
;
if
(
this
-
>
_internal_rejected_spans
(
)
!
=
0
)
{
total_size
+
=
:
:
_pbi
:
:
WireFormatLite
:
:
Int64SizePlusOne
(
this
-
>
_internal_rejected_spans
(
)
)
;
}
if
(
PROTOBUF_PREDICT_FALSE
(
_internal_metadata_
.
have_unknown_fields
(
)
)
)
{
total_size
+
=
_internal_metadata_
.
unknown_fields
<
std
:
:
string
>
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyString
)
.
size
(
)
;
}
int
cached_size
=
:
:
_pbi
:
:
ToCachedSize
(
total_size
)
;
SetCachedSize
(
cached_size
)
;
return
total_size
;
}
void
ExportTracePartialSuccess
:
:
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
{
MergeFrom
(
*
:
:
_pbi
:
:
DownCast
<
const
ExportTracePartialSuccess
*
>
(
&
from
)
)
;
}
void
ExportTracePartialSuccess
:
:
MergeFrom
(
const
ExportTracePartialSuccess
&
from
)
{
ExportTracePartialSuccess
*
const
_this
=
this
;
/
/
protoc_insertion_point
(
class_specific_merge_from_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
)
GOOGLE_DCHECK_NE
(
&
from
_this
)
;
uint32_t
cached_has_bits
=
0
;
(
void
)
cached_has_bits
;
if
(
!
from
.
_internal_error_message
(
)
.
empty
(
)
)
{
_this
-
>
_internal_set_error_message
(
from
.
_internal_error_message
(
)
)
;
}
if
(
from
.
_internal_rejected_spans
(
)
!
=
0
)
{
_this
-
>
_internal_set_rejected_spans
(
from
.
_internal_rejected_spans
(
)
)
;
}
_this
-
>
_internal_metadata_
.
MergeFrom
<
std
:
:
string
>
(
from
.
_internal_metadata_
)
;
}
void
ExportTracePartialSuccess
:
:
CopyFrom
(
const
ExportTracePartialSuccess
&
from
)
{
/
/
protoc_insertion_point
(
class_specific_copy_from_start
:
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
)
if
(
&
from
=
=
this
)
return
;
Clear
(
)
;
MergeFrom
(
from
)
;
}
bool
ExportTracePartialSuccess
:
:
IsInitialized
(
)
const
{
return
true
;
}
void
ExportTracePartialSuccess
:
:
InternalSwap
(
ExportTracePartialSuccess
*
other
)
{
using
std
:
:
swap
;
auto
*
lhs_arena
=
GetArenaForAllocation
(
)
;
auto
*
rhs_arena
=
other
-
>
GetArenaForAllocation
(
)
;
_internal_metadata_
.
InternalSwap
(
&
other
-
>
_internal_metadata_
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
:
:
InternalSwap
(
&
_impl_
.
error_message_
lhs_arena
&
other
-
>
_impl_
.
error_message_
rhs_arena
)
;
swap
(
_impl_
.
rejected_spans_
other
-
>
_impl_
.
rejected_spans_
)
;
}
std
:
:
string
ExportTracePartialSuccess
:
:
GetTypeName
(
)
const
{
return
"
opentelemetry
.
proto
.
collector
.
trace
.
v1
.
ExportTracePartialSuccess
"
;
}
/
/
protoc_insertion_point
(
namespace_scope
)
}
/
/
namespace
v1
}
/
/
namespace
trace
}
/
/
namespace
collector
}
/
/
namespace
proto
}
/
/
namespace
opentelemetry
PROTOBUF_NAMESPACE_OPEN
template
<
>
PROTOBUF_NOINLINE
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTraceServiceRequest
*
Arena
:
:
CreateMaybeMessage
<
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTraceServiceRequest
>
(
Arena
*
arena
)
{
return
Arena
:
:
CreateMessageInternal
<
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTraceServiceRequest
>
(
arena
)
;
}
template
<
>
PROTOBUF_NOINLINE
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTraceServiceResponse
*
Arena
:
:
CreateMaybeMessage
<
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTraceServiceResponse
>
(
Arena
*
arena
)
{
return
Arena
:
:
CreateMessageInternal
<
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTraceServiceResponse
>
(
arena
)
;
}
template
<
>
PROTOBUF_NOINLINE
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTracePartialSuccess
*
Arena
:
:
CreateMaybeMessage
<
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTracePartialSuccess
>
(
Arena
*
arena
)
{
return
Arena
:
:
CreateMessageInternal
<
:
:
opentelemetry
:
:
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTracePartialSuccess
>
(
arena
)
;
}
PROTOBUF_NAMESPACE_CLOSE
/
/
protoc_insertion_point
(
global_scope
)
#
include
<
google
/
protobuf
/
port_undef
.
inc
>
