cdocutils
.
nodes
document
q
)
q
}
q
(
U
nametypesq
}
q
(
U
2
X
mock
.
MagicMockq
X
mock
.
NonCallableMagicMockq
X
mocking
magic
methodsq
NX
magic
methodsq
U
1
X
magic
-
methodsq
X
magic
mockq
NuU
substitution_defsq
}
q
U
parse_messagesq
]
q
U
current_sourceq
NU
decorationq
NU
autofootnote_startq
K
U
nameidsq
}
q
(
U
2U
id5q
h
h
h
h
h
U
mocking
-
magic
-
methodsq
h
U
id1q
U
1U
id4q
h
U
magic
-
methodsq
h
U
magic
-
mockq
uU
childrenq
]
q
(
cdocutils
.
nodes
target
q
)
q
}
q
(
U
rawsourceq
X
.
.
_magic
-
methods
:
q
!
U
parentq
"
h
U
sourceq
#
cdocutils
.
nodes
reprunicode
q
X
/
compile
/
mock
/
docs
/
magicmock
.
txtq
%
q
&
}
q
'
bU
tagnameq
(
U
targetq
)
U
attributesq
*
}
q
+
(
U
idsq
]
q
-
U
backrefsq
.
]
q
/
U
dupnamesq0
]
q1U
classesq2
]
q3U
namesq4
]
q5U
refidq6h
uU
lineq7K
U
documentq8h
h
]
q9ubcdocutils
.
nodes
section
q
:
)
q
;
}
q
<
(
h
U
h
"
h
h
#
h
&
U
expect_referenced_by_nameq
=
}
q
>
h
h
sh
(
U
sectionq
?
h
*
}
q
(
h0
]
qAh2
]
qBh
.
]
qCh
]
qD
(
h
h
eh4
]
qE
(
h
h
euh7K
h8h
U
expect_referenced_by_idqF
}
qGh
h
sh
]
qH
(
cdocutils
.
nodes
title
qI
)
qJ
}
qK
(
h
X
Mocking
Magic
MethodsqLh
"
h
;
h
#
h
&
h
(
U
titleqMh
*
}
qN
(
h0
]
qOh2
]
qPh
.
]
qQh
]
qRh4
]
qSuh7K
h8h
h
]
qTcdocutils
.
nodes
Text
qUX
Mocking
Magic
MethodsqV
qW
}
qX
(
h
hLh
"
hJubaubcdocutils
.
nodes
paragraph
qY
)
qZ
}
q
[
(
h
X
:
class
:
Mock
supports
mocking
magic
methods
<
http
:
/
/
www
.
ironpythoninaction
.
com
/
magic
-
methods
.
html
>
_
.
This
allows
mock
objects
to
replace
containers
or
other
objects
that
implement
Python
protocols
.
q
\
h
"
h
;
h
#
h
&
h
(
U
paragraphq
]
h
*
}
q
^
(
h0
]
q_h2
]
q
h
.
]
qah
]
qbh4
]
qcuh7K
h8h
h
]
qd
(
csphinx
.
addnodes
pending_xref
qe
)
qf
}
qg
(
h
X
:
class
:
Mock
qhh
"
hZh
#
h
&
h
(
U
pending_xrefqih
*
}
qj
(
U
reftypeqkX
classqlU
refwarnqm
U
reftargetqnX
MockqoU
refdomainqpX
pyqqh
]
qrh
.
]
qsU
refexplicitqt
h0
]
quh2
]
qvh4
]
qwU
refdocqxU
magicmockqyU
py
:
classqzNU
py
:
moduleq
{
X
mockq
|
uh7K
h
]
q
}
cdocutils
.
nodes
literal
q
~
)
q
}
q
(
h
hhh
*
}
q
(
h0
]
q
h2
]
q
(
U
xrefq
hqX
py
-
classq
eh
.
]
q
h
]
q
h4
]
q
uh
"
hfh
]
q
hUX
Mockq
q
}
q
(
h
U
h
"
h
ubah
(
U
literalq
ubaubhUX
supports
mocking
q
q
}
q
(
h
X
supports
mocking
q
h
"
hZubcdocutils
.
nodes
reference
q
)
q
}
q
(
h
XG
magic
methods
<
http
:
/
/
www
.
ironpythoninaction
.
com
/
magic
-
methods
.
html
>
_q
h
*
}
q
(
U
nameq
X
magic
methodsq
U
refuriq
X4
http
:
/
/
www
.
ironpythoninaction
.
com
/
magic
-
methods
.
htmlq
h
]
q
h
.
]
q
h0
]
q
h2
]
q
h4
]
q
uh
"
hZh
]
q
hUX
magic
methodsq
q
}
q
(
h
U
h
"
h
ubah
(
U
referenceq
ubh
)
q
}
q
(
h
X7
<
http
:
/
/
www
.
ironpythoninaction
.
com
/
magic
-
methods
.
html
>
q
U
referencedq
K
h
"
hZh
(
h
)
h
*
}
q
(
U
refuriq
h
h
]
q
h
ah
.
]
q
h0
]
q
h2
]
q
h4
]
q
h
auh
]
q
ubhUXb
.
This
allows
mock
objects
to
replace
containers
or
other
objects
that
implement
Python
protocols
.
q
q
}
q
(
h
Xb
.
This
allows
mock
objects
to
replace
containers
or
other
objects
that
implement
Python
protocols
.
q
h
"
hZubeubhY
)
q
}
q
(
h
X
Because
magic
methods
are
looked
up
differently
from
normal
methods
[
#
]
_
this
support
has
been
specially
implemented
.
This
means
that
only
specific
magic
methods
are
supported
.
The
supported
list
includes
*
almost
*
all
of
them
.
If
there
are
any
missing
that
you
need
please
let
us
know
!
q
h
"
h
;
h
#
h
&
h
(
h
]
h
*
}
q
(
h0
]
q
h2
]
q
h
.
]
q
h
]
q
h4
]
q
uh7K
h8h
h
]
q
(
hUXD
Because
magic
methods
are
looked
up
differently
from
normal
methods
q
q
}
q
(
h
XD
Because
magic
methods
are
looked
up
differently
from
normal
methods
q
h
"
h
ubcdocutils
.
nodes
footnote_reference
q
)
q
}
q
(
h
X
[
#
]
_q
U
resolvedq
K
h
"
h
h
(
U
footnote_referenceq
h
*
}
q
(
U
autoq
K
h
]
q
U
id2q
ah
.
]
q
h0
]
q
h2
]
q
h4
]
q
h6h
uh
]
q
hUX
1
q
}
q
(
h
U
h
"
h
ubaubhUX
this
support
has
been
specially
implemented
.
This
means
that
only
specific
magic
methods
are
supported
.
The
supported
list
includes
q
q
}
q
(
h
X
this
support
has
been
specially
implemented
.
This
means
that
only
specific
magic
methods
are
supported
.
The
supported
list
includes
q
h
"
h
ubcdocutils
.
nodes
emphasis
q
)
q
}
q
(
h
X
*
almost
*
q
h
*
}
q
(
h0
]
q
h2
]
q
h
.
]
q
h
]
q
h4
]
q
uh
"
h
h
]
q
hUX
almostq
q
}
q
(
h
U
h
"
h
ubah
(
U
emphasisq
ubhUXH
all
of
them
.
If
there
are
any
missing
that
you
need
please
let
us
know
!
q
q
}
q
(
h
XH
all
of
them
.
If
there
are
any
missing
that
you
need
please
let
us
know
!
q
h
"
h
ubeubhY
)
q
}
q
(
h
X
You
mock
magic
methods
by
setting
the
method
you
are
interested
in
to
a
function
or
a
mock
instance
.
If
you
are
using
a
function
then
it
*
must
*
take
self
as
the
first
argument
[
#
]
_
.
q
h
"
h
;
h
#
h
&
h
(
h
]
h
*
}
q
(
h0
]
q
h2
]
q
h
.
]
q
h
]
q
h4
]
q
uh7K
h8h
h
]
q
(
hUX
You
mock
magic
methods
by
setting
the
method
you
are
interested
in
to
a
function
or
a
mock
instance
.
If
you
are
using
a
function
then
it
q
q
}
q
(
h
X
You
mock
magic
methods
by
setting
the
method
you
are
interested
in
to
a
function
or
a
mock
instance
.
If
you
are
using
a
function
then
it
q
h
"
h
ubh
)
q
}
q
(
h
X
*
must
*
q
h
*
}
q
(
h0
]
q
h2
]
q
h
.
]
q
h
]
r
h4
]
r
uh
"
h
h
]
r
hUX
mustr
r
}
r
(
h
U
h
"
h
ubah
(
h
ubhUX
take
r
r
}
r
(
h
X
take
r
h
"
h
ubh
~
)
r
}
r
(
h
X
self
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
h
h
]
r
hUX
selfr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
as
the
first
argument
r
r
}
r
(
h
X
as
the
first
argument
r
h
"
h
ubh
)
r
}
r
(
h
X
[
#
]
_r
h
K
h
"
h
h
(
h
h
*
}
r
(
h
K
h
]
r
U
id3r
ah
.
]
r
!
h0
]
r
"
h2
]
r
#
h4
]
r
h6h
uh
]
r
%
hUX
2
r
&
}
r
'
(
h
U
h
"
j
ubaubhUX
.
r
(
}
r
)
(
h
X
.
h
"
h
ubeubcdocutils
.
nodes
literal_block
r
*
)
r
+
}
r
(
h
X8
>
>
>
def
__str__
(
self
)
:
.
.
.
return
'
fooble
'
.
.
.
>
>
>
mock
=
Mock
(
)
>
>
>
mock
.
__str__
=
__str__
>
>
>
str
(
mock
)
'
fooble
'
>
>
>
mock
=
Mock
(
)
>
>
>
mock
.
__str__
=
Mock
(
)
>
>
>
mock
.
__str__
.
return_value
=
'
fooble
'
>
>
>
str
(
mock
)
'
fooble
'
>
>
>
mock
=
Mock
(
)
>
>
>
mock
.
__iter__
=
Mock
(
return_value
=
iter
(
[
]
)
)
>
>
>
list
(
mock
)
[
]
r
-
h
"
h
;
h
#
h
&
h
(
U
literal_blockr
.
h
*
}
r
/
(
U
testnodetyper0
X
doctestr1
U
xml
:
spacer2
U
preserver3
h
]
r4
h
.
]
r5
h0
]
r6
h2
]
r7
h4
]
r8
U
groupsr9
]
r
:
U
defaultr
;
aU
optionsr
<
}
r
=
uh7K
h8h
h
]
r
>
hUX8
>
>
>
def
__str__
(
self
)
:
.
.
.
return
'
fooble
'
.
.
.
>
>
>
mock
=
Mock
(
)
>
>
>
mock
.
__str__
=
__str__
>
>
>
str
(
mock
)
'
fooble
'
>
>
>
mock
=
Mock
(
)
>
>
>
mock
.
__str__
=
Mock
(
)
>
>
>
mock
.
__str__
.
return_value
=
'
fooble
'
>
>
>
str
(
mock
)
'
fooble
'
>
>
>
mock
=
Mock
(
)
>
>
>
mock
.
__iter__
=
Mock
(
return_value
=
iter
(
[
]
)
)
>
>
>
list
(
mock
)
[
]
r
?
r
}
rA
(
h
U
h
"
j
+
ubaubhY
)
rB
}
rC
(
h
X
\
One
use
case
for
this
is
for
mocking
objects
used
as
context
managers
in
a
with
statement
:
rD
h
"
h
;
h
#
h
&
h
(
h
]
h
*
}
rE
(
h0
]
rF
h2
]
rG
h
.
]
rH
h
]
rI
h4
]
rJ
uh7K
/
h8h
h
]
rK
(
hUXK
One
use
case
for
this
is
for
mocking
objects
used
as
context
managers
in
a
rL
rM
}
rN
(
h
XK
One
use
case
for
this
is
for
mocking
objects
used
as
context
managers
in
a
rO
h
"
jB
ubcdocutils
.
nodes
title_reference
rP
)
rQ
}
rR
(
h
X
with
rS
h
*
}
rT
(
h0
]
rU
h2
]
rV
h
.
]
rW
h
]
rX
h4
]
rY
uh
"
jB
h
]
rZ
hUX
withr
[
r
\
}
r
]
(
h
U
h
"
jQ
ubah
(
U
title_referencer
^
ubhUX
statement
:
r_
r
}
ra
(
h
X
statement
:
rb
h
"
jB
ubeubj
*
)
rc
}
rd
(
h
X
>
>
>
mock
=
Mock
(
)
>
>
>
mock
.
__enter__
=
Mock
(
return_value
=
'
foo
'
)
>
>
>
mock
.
__exit__
=
Mock
(
return_value
=
False
)
>
>
>
with
mock
as
m
:
.
.
.
assert
m
=
=
'
foo
'
.
.
.
>
>
>
mock
.
__enter__
.
assert_called_with
(
)
>
>
>
mock
.
__exit__
.
assert_called_with
(
None
None
None
)
re
h
"
h
;
h
#
h
&
h
(
j
.
h
*
}
rf
(
U
testnodetyperg
X
doctestrh
j2
j3
h
]
ri
h
.
]
rj
h0
]
rk
h2
]
rl
h4
]
rm
U
groupsrn
]
ro
j
;
aj
<
}
rp
uh7K2h8h
h
]
rq
hUX
>
>
>
mock
=
Mock
(
)
>
>
>
mock
.
__enter__
=
Mock
(
return_value
=
'
foo
'
)
>
>
>
mock
.
__exit__
=
Mock
(
return_value
=
False
)
>
>
>
with
mock
as
m
:
.
.
.
assert
m
=
=
'
foo
'
.
.
.
>
>
>
mock
.
__enter__
.
assert_called_with
(
)
>
>
>
mock
.
__exit__
.
assert_called_with
(
None
None
None
)
rr
rs
}
rt
(
h
U
h
"
jc
ubaubhY
)
ru
}
rv
(
h
Xv
Calls
to
magic
methods
do
not
appear
in
:
attr
:
~
Mock
.
method_calls
but
they
are
recorded
in
:
attr
:
~
Mock
.
mock_calls
.
rw
h
"
h
;
h
#
h
&
h
(
h
]
h
*
}
rx
(
h0
]
ry
h2
]
rz
h
.
]
r
{
h
]
r
|
h4
]
r
}
uh7K
=
h8h
h
]
r
~
(
hUX
(
Calls
to
magic
methods
do
not
appear
in
r
r
}
r
(
h
X
(
Calls
to
magic
methods
do
not
appear
in
r
h
"
ju
ubhe
)
r
}
r
(
h
X
:
attr
:
~
Mock
.
method_calls
r
h
"
ju
h
#
h
&
h
(
hih
*
}
r
(
U
reftyper
X
attrr
hm
hnX
Mock
.
method_callsr
U
refdomainr
X
pyr
h
]
r
h
.
]
r
U
refexplicitr
h0
]
r
h2
]
r
h4
]
r
hxhyhzNh
{
h
|
uh7K
=
h
]
r
h
~
)
r
}
r
(
h
j
h
*
}
r
(
h0
]
r
h2
]
r
(
h
j
X
py
-
attrr
eh
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
method_callsr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubaubhUX
but
they
are
recorded
in
r
r
}
r
(
h
X
but
they
are
recorded
in
r
h
"
ju
ubhe
)
r
}
r
(
h
X
:
attr
:
~
Mock
.
mock_calls
r
h
"
ju
h
#
h
&
h
(
hih
*
}
r
(
U
reftyper
X
attrr
hm
hnX
Mock
.
mock_callsr
U
refdomainr
X
pyr
h
]
r
h
.
]
r
U
refexplicitr
h0
]
r
h2
]
r
h4
]
r
hxhyhzNh
{
h
|
uh7K
=
h
]
r
h
~
)
r
}
r
(
h
j
h
*
}
r
(
h0
]
r
h2
]
r
(
h
j
X
py
-
attrr
eh
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
mock_callsr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubaubhUX
.
r
}
r
(
h
X
.
h
"
ju
ubeubcdocutils
.
nodes
note
r
)
r
}
r
(
h
X
If
you
use
the
spec
keyword
argument
to
create
a
mock
then
attempting
to
set
a
magic
method
that
isn
'
t
in
the
spec
will
raise
an
AttributeError
.
r
h
"
h
;
h
#
h
&
h
(
U
noter
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
X
If
you
use
the
spec
keyword
argument
to
create
a
mock
then
attempting
to
set
a
magic
method
that
isn
'
t
in
the
spec
will
raise
an
AttributeError
.
r
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7KBh
]
r
(
hUX
If
you
use
the
r
r
}
r
(
h
X
If
you
use
the
r
h
"
j
ubjP
)
r
}
r
(
h
X
spec
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
specr
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUXn
keyword
argument
to
create
a
mock
then
attempting
to
set
a
magic
method
that
isn
'
t
in
the
spec
will
raise
an
r
r
}
r
(
h
Xn
keyword
argument
to
create
a
mock
then
attempting
to
set
a
magic
method
that
isn
'
t
in
the
spec
will
raise
an
r
h
"
j
ubjP
)
r
}
r
(
h
X
AttributeError
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
AttributeErrorr
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUX
.
r
}
r
(
h
X
.
h
"
j
ubeubaubhY
)
r
}
r
(
h
X
The
full
list
of
supported
magic
methods
is
:
r
h
"
h
;
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7KEh8h
h
]
r
hUX
The
full
list
of
supported
magic
methods
is
:
r
r
}
r
(
h
j
h
"
j
ubaubcdocutils
.
nodes
bullet_list
r
)
r
}
r
(
h
U
h
"
h
;
h
#
h
&
h
(
U
bullet_listr
h
*
}
r
(
U
bulletr
X
*
h
]
r
h
.
]
r
h0
]
r
h2
]
r
h4
]
r
uh7KGh8h
h
]
r
(
cdocutils
.
nodes
list_item
r
)
r
}
r
(
h
X
:
__hash__
__sizeof__
__repr__
and
__str__
r
h
"
j
h
#
h
&
h
(
U
list_itemr
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
!
hY
)
r
"
}
r
#
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
%
h2
]
r
&
h
.
]
r
'
h
]
r
(
h4
]
r
)
uh7KGh
]
r
*
(
h
~
)
r
+
}
r
(
h
X
__hash__
r
-
h
*
}
r
.
(
h0
]
r
/
h2
]
r0
h
.
]
r1
h
]
r2
h4
]
r3
uh
"
j
"
h
]
r4
hUX
__hash__r5
r6
}
r7
(
h
U
h
"
j
+
ubah
(
h
ubhUX
r8
r9
}
r
:
(
h
X
r
;
h
"
j
"
ubh
~
)
r
<
}
r
=
(
h
X
__sizeof__
r
>
h
*
}
r
?
(
h0
]
r
h2
]
rA
h
.
]
rB
h
]
rC
h4
]
rD
uh
"
j
"
h
]
rE
hUX
__sizeof__rF
rG
}
rH
(
h
U
h
"
j
<
ubah
(
h
ubhUX
rI
rJ
}
rK
(
h
X
rL
h
"
j
"
ubh
~
)
rM
}
rN
(
h
X
__repr__
rO
h
*
}
rP
(
h0
]
rQ
h2
]
rR
h
.
]
rS
h
]
rT
h4
]
rU
uh
"
j
"
h
]
rV
hUX
__repr__rW
rX
}
rY
(
h
U
h
"
jM
ubah
(
h
ubhUX
and
rZ
r
[
}
r
\
(
h
X
and
r
]
h
"
j
"
ubh
~
)
r
^
}
r_
(
h
X
__str__
r
h
*
}
ra
(
h0
]
rb
h2
]
rc
h
.
]
rd
h
]
re
h4
]
rf
uh
"
j
"
h
]
rg
hUX
__str__rh
ri
}
rj
(
h
U
h
"
j
^
ubah
(
h
ubeubaubj
)
rk
}
rl
(
h
X2
__dir__
__format__
and
__subclasses__
rm
h
"
j
h
#
h
&
h
(
j
h
*
}
rn
(
h0
]
ro
h2
]
rp
h
.
]
rq
h
]
rr
h4
]
rs
uh7Nh8h
h
]
rt
hY
)
ru
}
rv
(
h
jm
h
"
jk
h
#
h
&
h
(
h
]
h
*
}
rw
(
h0
]
rx
h2
]
ry
h
.
]
rz
h
]
r
{
h4
]
r
|
uh7KHh
]
r
}
(
h
~
)
r
~
}
r
(
h
X
__dir__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
ju
h
]
r
hUX
__dir__r
r
}
r
(
h
U
h
"
j
~
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
ju
ubh
~
)
r
}
r
(
h
X
__format__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
ju
h
]
r
hUX
__format__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
ju
ubh
~
)
r
}
r
(
h
X
__subclasses__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
ju
h
]
r
hUX
__subclasses__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubeubaubj
)
r
}
r
(
h
X
-
__floor__
__trunc__
and
__ceil__
r
h
"
j
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7KIh
]
r
(
h
~
)
r
}
r
(
h
X
__floor__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__floor__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__trunc__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__trunc__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__ceil__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__ceil__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubeubaubj
)
r
}
r
(
h
Xc
Comparisons
:
__cmp__
__lt__
__gt__
__le__
__ge__
__eq__
and
__ne__
r
h
"
j
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
Xc
Comparisons
:
__cmp__
__lt__
__gt__
__le__
__ge__
__eq__
and
__ne__
r
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7KJh
]
r
(
hUX
Comparisons
:
r
r
}
r
(
h
X
Comparisons
:
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__cmp__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__cmp__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__lt__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
!
hUX
__lt__r
"
r
#
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
%
r
&
}
r
'
(
h
X
r
(
h
"
j
ubh
~
)
r
)
}
r
*
(
h
X
__gt__
r
+
h
*
}
r
(
h0
]
r
-
h2
]
r
.
h
.
]
r
/
h
]
r0
h4
]
r1
uh
"
j
h
]
r2
hUX
__gt__r3
r4
}
r5
(
h
U
h
"
j
)
ubah
(
h
ubhUX
r6
r7
}
r8
(
h
X
r9
h
"
j
ubh
~
)
r
:
}
r
;
(
h
X
__le__
r
<
h
*
}
r
=
(
h0
]
r
>
h2
]
r
?
h
.
]
r
h
]
rA
h4
]
rB
uh
"
j
h
]
rC
hUX
__le__rD
rE
}
rF
(
h
U
h
"
j
:
ubah
(
h
ubhUX
rG
rH
}
rI
(
h
X
rJ
h
"
j
ubh
~
)
rK
}
rL
(
h
X
__ge__
rM
h
*
}
rN
(
h0
]
rO
h2
]
rP
h
.
]
rQ
h
]
rR
h4
]
rS
uh
"
j
h
]
rT
hUX
__ge__rU
rV
}
rW
(
h
U
h
"
jK
ubah
(
h
ubhUX
rX
rY
}
rZ
(
h
X
r
[
h
"
j
ubh
~
)
r
\
}
r
]
(
h
X
__eq__
r
^
h
*
}
r_
(
h0
]
r
h2
]
ra
h
.
]
rb
h
]
rc
h4
]
rd
uh
"
j
h
]
re
hUX
__eq__rf
rg
}
rh
(
h
U
h
"
j
\
ubah
(
h
ubhUX
and
ri
rj
}
rk
(
h
X
and
rl
h
"
j
ubh
~
)
rm
}
rn
(
h
X
__ne__
ro
h
*
}
rp
(
h0
]
rq
h2
]
rr
h
.
]
rs
h
]
rt
h4
]
ru
uh
"
j
h
]
rv
hUX
__ne__rw
rx
}
ry
(
h
U
h
"
jm
ubah
(
h
ubeubaubj
)
rz
}
r
{
(
h
X
Container
methods
:
__getitem__
__setitem__
__delitem__
__contains__
__len__
__iter__
__getslice__
__setslice__
__reversed__
and
__missing__
r
|
h
"
j
h
#
h
&
h
(
j
h
*
}
r
}
(
h0
]
r
~
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
X
Container
methods
:
__getitem__
__setitem__
__delitem__
__contains__
__len__
__iter__
__getslice__
__setslice__
__reversed__
and
__missing__
r
h
"
jz
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7KLh
]
r
(
hUX
Container
methods
:
r
r
}
r
(
h
X
Container
methods
:
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__getitem__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__getitem__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__setitem__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__setitem__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__delitem__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__delitem__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__contains__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__contains__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__len__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__len__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__iter__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__iter__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__getslice__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__getslice__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__setslice__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__setslice__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__reversed__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
!
h4
]
r
"
uh
"
j
h
]
r
#
hUX
__reversed__r
r
%
}
r
&
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
'
r
(
}
r
)
(
h
X
and
r
*
h
"
j
ubh
~
)
r
+
}
r
(
h
X
__missing__
r
-
h
*
}
r
.
(
h0
]
r
/
h2
]
r0
h
.
]
r1
h
]
r2
h4
]
r3
uh
"
j
h
]
r4
hUX
__missing__r5
r6
}
r7
(
h
U
h
"
j
+
ubah
(
h
ubeubaubj
)
r8
}
r9
(
h
X
/
Context
manager
:
__enter__
and
__exit__
r
:
h
"
j
h
#
h
&
h
(
j
h
*
}
r
;
(
h0
]
r
<
h2
]
r
=
h
.
]
r
>
h
]
r
?
h4
]
r
uh7Nh8h
h
]
rA
hY
)
rB
}
rC
(
h
j
:
h
"
j8
h
#
h
&
h
(
h
]
h
*
}
rD
(
h0
]
rE
h2
]
rF
h
.
]
rG
h
]
rH
h4
]
rI
uh7KOh
]
rJ
(
hUX
Context
manager
:
rK
rL
}
rM
(
h
X
Context
manager
:
rN
h
"
jB
ubh
~
)
rO
}
rP
(
h
X
__enter__
rQ
h
*
}
rR
(
h0
]
rS
h2
]
rT
h
.
]
rU
h
]
rV
h4
]
rW
uh
"
jB
h
]
rX
hUX
__enter__rY
rZ
}
r
[
(
h
U
h
"
jO
ubah
(
h
ubhUX
and
r
\
r
]
}
r
^
(
h
X
and
r_
h
"
jB
ubh
~
)
r
}
ra
(
h
X
__exit__
rb
h
*
}
rc
(
h0
]
rd
h2
]
re
h
.
]
rf
h
]
rg
h4
]
rh
uh
"
jB
h
]
ri
hUX
__exit__rj
rk
}
rl
(
h
U
h
"
j
ubah
(
h
ubeubaubj
)
rm
}
rn
(
h
XB
Unary
numeric
methods
:
__neg__
__pos__
and
__invert__
ro
h
"
j
h
#
h
&
h
(
j
h
*
}
rp
(
h0
]
rq
h2
]
rr
h
.
]
rs
h
]
rt
h4
]
ru
uh7Nh8h
h
]
rv
hY
)
rw
}
rx
(
h
jo
h
"
jm
h
#
h
&
h
(
h
]
h
*
}
ry
(
h0
]
rz
h2
]
r
{
h
.
]
r
|
h
]
r
}
h4
]
r
~
uh7KPh
]
r
(
hUX
Unary
numeric
methods
:
r
r
}
r
(
h
X
Unary
numeric
methods
:
r
h
"
jw
ubh
~
)
r
}
r
(
h
X
__neg__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
jw
h
]
r
hUX
__neg__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
jw
ubh
~
)
r
}
r
(
h
X
__pos__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
jw
h
]
r
hUX
__pos__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
jw
ubh
~
)
r
}
r
(
h
X
__invert__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
jw
h
]
r
hUX
__invert__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubeubaubj
)
r
}
r
(
h
X
The
numeric
methods
(
including
right
hand
and
in
-
place
variants
)
:
__add__
__sub__
__mul__
__div__
__floordiv__
__mod__
__divmod__
__lshift__
__rshift__
__and__
__xor__
__or__
and
__pow__
r
h
"
j
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
X
The
numeric
methods
(
including
right
hand
and
in
-
place
variants
)
:
__add__
__sub__
__mul__
__div__
__floordiv__
__mod__
__divmod__
__lshift__
__rshift__
__and__
__xor__
__or__
and
__pow__
r
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7KQh
]
r
(
hUXB
The
numeric
methods
(
including
right
hand
and
in
-
place
variants
)
:
r
r
}
r
(
h
XB
The
numeric
methods
(
including
right
hand
and
in
-
place
variants
)
:
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__add__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__add__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__sub__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__sub__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__mul__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__mul__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__div__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__div__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__floordiv__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__floordiv__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
!
(
h
X
__mod__
r
"
h
*
}
r
#
(
h0
]
r
h2
]
r
%
h
.
]
r
&
h
]
r
'
h4
]
r
(
uh
"
j
h
]
r
)
hUX
__mod__r
*
r
+
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
-
r
.
}
r
/
(
h
X
r0
h
"
j
ubh
~
)
r1
}
r2
(
h
X
__divmod__
r3
h
*
}
r4
(
h0
]
r5
h2
]
r6
h
.
]
r7
h
]
r8
h4
]
r9
uh
"
j
h
]
r
:
hUX
__divmod__r
;
r
<
}
r
=
(
h
U
h
"
j1
ubah
(
h
ubhUX
r
>
r
?
}
r
(
h
X
rA
h
"
j
ubh
~
)
rB
}
rC
(
h
X
__lshift__
rD
h
*
}
rE
(
h0
]
rF
h2
]
rG
h
.
]
rH
h
]
rI
h4
]
rJ
uh
"
j
h
]
rK
hUX
__lshift__rL
rM
}
rN
(
h
U
h
"
jB
ubah
(
h
ubhUX
rO
rP
}
rQ
(
h
X
rR
h
"
j
ubh
~
)
rS
}
rT
(
h
X
__rshift__
rU
h
*
}
rV
(
h0
]
rW
h2
]
rX
h
.
]
rY
h
]
rZ
h4
]
r
[
uh
"
j
h
]
r
\
hUX
__rshift__r
]
r
^
}
r_
(
h
U
h
"
jS
ubah
(
h
ubhUX
r
ra
}
rb
(
h
X
rc
h
"
j
ubh
~
)
rd
}
re
(
h
X
__and__
rf
h
*
}
rg
(
h0
]
rh
h2
]
ri
h
.
]
rj
h
]
rk
h4
]
rl
uh
"
j
h
]
rm
hUX
__and__rn
ro
}
rp
(
h
U
h
"
jd
ubah
(
h
ubhUX
rq
rr
}
rs
(
h
X
rt
h
"
j
ubh
~
)
ru
}
rv
(
h
X
__xor__
rw
h
*
}
rx
(
h0
]
ry
h2
]
rz
h
.
]
r
{
h
]
r
|
h4
]
r
}
uh
"
j
h
]
r
~
hUX
__xor__r
r
}
r
(
h
U
h
"
ju
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__or__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__or__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__pow__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__pow__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubeubaubj
)
r
}
r
(
h
Xi
Numeric
conversion
methods
:
__complex__
__int__
__float__
__index__
and
__coerce__
r
h
"
j
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
Xi
Numeric
conversion
methods
:
__complex__
__int__
__float__
__index__
and
__coerce__
r
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7KUh
]
r
(
hUX
Numeric
conversion
methods
:
r
r
}
r
(
h
X
Numeric
conversion
methods
:
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__complex__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__complex__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__int__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__int__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__float__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__float__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__index__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__index__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__coerce__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__coerce__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubeubaubj
)
r
}
r
(
h
X
?
Descriptor
methods
:
__get__
__set__
and
__delete__
r
h
"
j
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7KWh
]
r
(
hUX
Descriptor
methods
:
r
r
!
}
r
"
(
h
X
Descriptor
methods
:
r
#
h
"
j
ubh
~
)
r
}
r
%
(
h
X
__get__
r
&
h
*
}
r
'
(
h0
]
r
(
h2
]
r
)
h
.
]
r
*
h
]
r
+
h4
]
r
uh
"
j
h
]
r
-
hUX
__get__r
.
r
/
}
r0
(
h
U
h
"
j
ubah
(
h
ubhUX
r1
r2
}
r3
(
h
X
r4
h
"
j
ubh
~
)
r5
}
r6
(
h
X
__set__
r7
h
*
}
r8
(
h0
]
r9
h2
]
r
:
h
.
]
r
;
h
]
r
<
h4
]
r
=
uh
"
j
h
]
r
>
hUX
__set__r
?
r
}
rA
(
h
U
h
"
j5
ubah
(
h
ubhUX
and
rB
rC
}
rD
(
h
X
and
rE
h
"
j
ubh
~
)
rF
}
rG
(
h
X
__delete__
rH
h
*
}
rI
(
h0
]
rJ
h2
]
rK
h
.
]
rL
h
]
rM
h4
]
rN
uh
"
j
h
]
rO
hUX
__delete__rP
rQ
}
rR
(
h
U
h
"
jF
ubah
(
h
ubeubaubj
)
rS
}
rT
(
h
X
}
Pickling
:
__reduce__
__reduce_ex__
__getinitargs__
__getnewargs__
__getstate__
and
__setstate__
rU
h
"
j
h
#
h
&
h
(
j
h
*
}
rV
(
h0
]
rW
h2
]
rX
h
.
]
rY
h
]
rZ
h4
]
r
[
uh7Nh8h
h
]
r
\
hY
)
r
]
}
r
^
(
h
X
{
Pickling
:
__reduce__
__reduce_ex__
__getinitargs__
__getnewargs__
__getstate__
and
__setstate__
r_
h
"
jS
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
ra
h2
]
rb
h
.
]
rc
h
]
rd
h4
]
re
uh7KXh
]
rf
(
hUX
Pickling
:
rg
rh
}
ri
(
h
X
Pickling
:
rj
h
"
j
]
ubh
~
)
rk
}
rl
(
h
X
__reduce__
rm
h
*
}
rn
(
h0
]
ro
h2
]
rp
h
.
]
rq
h
]
rr
h4
]
rs
uh
"
j
]
h
]
rt
hUX
__reduce__ru
rv
}
rw
(
h
U
h
"
jk
ubah
(
h
ubhUX
rx
ry
}
rz
(
h
X
r
{
h
"
j
]
ubh
~
)
r
|
}
r
}
(
h
X
__reduce_ex__
r
~
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
]
h
]
r
hUX
__reduce_ex__r
r
}
r
(
h
U
h
"
j
|
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
]
ubh
~
)
r
}
r
(
h
X
__getinitargs__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
]
h
]
r
hUX
__getinitargs__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
]
ubh
~
)
r
}
r
(
h
X
__getnewargs__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
]
h
]
r
hUX
__getnewargs__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
]
ubh
~
)
r
}
r
(
h
X
__getstate__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
]
h
]
r
hUX
__getstate__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
j
]
ubh
~
)
r
}
r
(
h
X
__setstate__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
]
h
]
r
hUX
__setstate__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubeubaubeubhY
)
r
}
r
(
h
XL
The
following
methods
are
supported
in
Python
2
but
don
'
t
exist
in
Python
3
:
r
h
"
h
;
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
\
h8h
h
]
r
hUXL
The
following
methods
are
supported
in
Python
2
but
don
'
t
exist
in
Python
3
:
r
r
}
r
(
h
j
h
"
j
ubaubj
)
r
}
r
(
h
U
h
"
h
;
h
#
h
&
h
(
j
h
*
}
r
(
j
X
*
h
]
r
h
.
]
r
h0
]
r
h2
]
r
h4
]
r
uh7K
^
h8h
h
]
r
(
j
)
r
}
r
(
h
XK
__unicode__
__long__
__oct__
__hex__
and
__nonzero__
r
h
"
j
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
^
h
]
r
(
h
~
)
r
}
r
(
h
X
__unicode__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__unicode__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__long__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__long__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__oct__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
!
hUX
__oct__r
"
r
#
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
%
r
&
}
r
'
(
h
X
r
(
h
"
j
ubh
~
)
r
)
}
r
*
(
h
X
__hex__
r
+
h
*
}
r
(
h0
]
r
-
h2
]
r
.
h
.
]
r
/
h
]
r0
h4
]
r1
uh
"
j
h
]
r2
hUX
__hex__r3
r4
}
r5
(
h
U
h
"
j
)
ubah
(
h
ubhUX
and
r6
r7
}
r8
(
h
X
and
r9
h
"
j
ubh
~
)
r
:
}
r
;
(
h
X
__nonzero__
r
<
h
*
}
r
=
(
h0
]
r
>
h2
]
r
?
h
.
]
r
h
]
rA
h4
]
rB
uh
"
j
h
]
rC
hUX
__nonzero__rD
rE
}
rF
(
h
U
h
"
j
:
ubah
(
h
ubeubaubj
)
rG
}
rH
(
h
X
%
__truediv__
and
__rtruediv__
rI
h
"
j
h
#
h
&
h
(
j
h
*
}
rJ
(
h0
]
rK
h2
]
rL
h
.
]
rM
h
]
rN
h4
]
rO
uh7Nh8h
h
]
rP
hY
)
rQ
}
rR
(
h
X
__truediv__
and
__rtruediv__
rS
h
"
jG
h
#
h
&
h
(
h
]
h
*
}
rT
(
h0
]
rU
h2
]
rV
h
.
]
rW
h
]
rX
h4
]
rY
uh7K_h
]
rZ
(
h
~
)
r
[
}
r
\
(
h
X
__truediv__
r
]
h
*
}
r
^
(
h0
]
r_
h2
]
r
h
.
]
ra
h
]
rb
h4
]
rc
uh
"
jQ
h
]
rd
hUX
__truediv__re
rf
}
rg
(
h
U
h
"
j
[
ubah
(
h
ubhUX
and
rh
ri
}
rj
(
h
X
and
rk
h
"
jQ
ubh
~
)
rl
}
rm
(
h
X
__rtruediv__
rn
h
*
}
ro
(
h0
]
rp
h2
]
rq
h
.
]
rr
h
]
rs
h4
]
rt
uh
"
jQ
h
]
ru
hUX
__rtruediv__rv
rw
}
rx
(
h
U
h
"
jl
ubah
(
h
ubeubaubeubhY
)
ry
}
rz
(
h
XL
The
following
methods
are
supported
in
Python
3
but
don
'
t
exist
in
Python
2
:
r
{
h
"
h
;
h
#
h
&
h
(
h
]
h
*
}
r
|
(
h0
]
r
}
h2
]
r
~
h
.
]
r
h
]
r
h4
]
r
uh7Kah8h
h
]
r
hUXL
The
following
methods
are
supported
in
Python
3
but
don
'
t
exist
in
Python
2
:
r
r
}
r
(
h
j
{
h
"
jy
ubaubj
)
r
}
r
(
h
U
h
"
h
;
h
#
h
&
h
(
j
h
*
}
r
(
j
X
*
h
]
r
h
.
]
r
h0
]
r
h2
]
r
h4
]
r
uh7Kch8h
h
]
r
j
)
r
}
r
(
h
X
__bool__
and
__next__
r
h
"
j
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
X
__bool__
and
__next__
r
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Kch
]
r
(
h
~
)
r
}
r
(
h
X
__bool__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__bool__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__next__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__next__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubeubaubaubhY
)
r
}
r
(
h
X
The
following
methods
exist
but
are
*
not
*
supported
as
they
are
either
in
use
by
mock
can
'
t
be
set
dynamically
or
can
cause
problems
:
r
h
"
h
;
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Keh8h
h
]
r
(
hUX
The
following
methods
exist
but
are
r
r
}
r
(
h
X
The
following
methods
exist
but
are
r
h
"
j
ubh
)
r
}
r
(
h
X
*
not
*
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
notr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
^
supported
as
they
are
either
in
use
by
mock
can
'
t
be
set
dynamically
or
can
cause
problems
:
r
r
}
r
(
h
X
^
supported
as
they
are
either
in
use
by
mock
can
'
t
be
set
dynamically
or
can
cause
problems
:
r
h
"
j
ubeubj
)
r
}
r
(
h
U
h
"
h
;
h
#
h
&
h
(
j
h
*
}
r
(
j
X
*
h
]
r
h
.
]
r
h0
]
r
h2
]
r
h4
]
r
uh7Khh8h
h
]
r
(
j
)
r
}
r
(
h
X
>
__getattr__
__setattr__
__init__
and
__new__
r
h
"
j
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Khh
]
r
(
h
~
)
r
}
r
(
h
X
__getattr__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__getattr__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__setattr__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__setattr__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__init__
r
h
*
}
r
!
(
h0
]
r
"
h2
]
r
#
h
.
]
r
h
]
r
%
h4
]
r
&
uh
"
j
h
]
r
'
hUX
__init__r
(
r
)
}
r
*
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
+
r
}
r
-
(
h
X
and
r
.
h
"
j
ubh
~
)
r
/
}
r0
(
h
X
__new__
r1
h
*
}
r2
(
h0
]
r3
h2
]
r4
h
.
]
r5
h
]
r6
h4
]
r7
uh
"
j
h
]
r8
hUX
__new__r9
r
:
}
r
;
(
h
U
h
"
j
/
ubah
(
h
ubeubaubj
)
r
<
}
r
=
(
h
XM
__prepare__
__instancecheck__
__subclasscheck__
__del__
r
>
h
"
j
h
#
h
&
h
(
j
h
*
}
r
?
(
h0
]
r
h2
]
rA
h
.
]
rB
h
]
rC
h4
]
rD
uh7Nh8h
h
]
rE
hY
)
rF
}
rG
(
h
XJ
__prepare__
__instancecheck__
__subclasscheck__
__del__
rH
h
"
j
<
h
#
h
&
h
(
h
]
h
*
}
rI
(
h0
]
rJ
h2
]
rK
h
.
]
rL
h
]
rM
h4
]
rN
uh7Kih
]
rO
(
h
~
)
rP
}
rQ
(
h
X
__prepare__
rR
h
*
}
rS
(
h0
]
rT
h2
]
rU
h
.
]
rV
h
]
rW
h4
]
rX
uh
"
jF
h
]
rY
hUX
__prepare__rZ
r
[
}
r
\
(
h
U
h
"
jP
ubah
(
h
ubhUX
r
]
r
^
}
r_
(
h
X
r
h
"
jF
ubh
~
)
ra
}
rb
(
h
X
__instancecheck__
rc
h
*
}
rd
(
h0
]
re
h2
]
rf
h
.
]
rg
h
]
rh
h4
]
ri
uh
"
jF
h
]
rj
hUX
__instancecheck__rk
rl
}
rm
(
h
U
h
"
ja
ubah
(
h
ubhUX
rn
ro
}
rp
(
h
X
rq
h
"
jF
ubh
~
)
rr
}
rs
(
h
X
__subclasscheck__
rt
h
*
}
ru
(
h0
]
rv
h2
]
rw
h
.
]
rx
h
]
ry
h4
]
rz
uh
"
jF
h
]
r
{
hUX
__subclasscheck__r
|
r
}
}
r
~
(
h
U
h
"
jr
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
jF
ubh
~
)
r
}
r
(
h
X
__del__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
jF
h
]
r
hUX
__del__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubeubaubeubeubh
:
)
r
}
r
(
h
U
h
"
h
h
#
h
&
h
(
h
?
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h
ah4
]
r
h
auh7Knh8h
h
]
r
(
hI
)
r
}
r
(
h
X
Magic
Mockr
h
"
j
h
#
h
&
h
(
hMh
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Knh8h
h
]
r
hUX
Magic
Mockr
r
}
r
(
h
j
h
"
j
ubaubhY
)
r
}
r
(
h
XK
There
are
two
MagicMock
variants
:
MagicMock
and
NonCallableMagicMock
.
r
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Kph8h
h
]
r
(
hUX
There
are
two
r
r
}
r
(
h
X
There
are
two
r
h
"
j
ubjP
)
r
}
r
(
h
X
MagicMock
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
MagicMockr
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUX
variants
:
r
r
}
r
(
h
X
variants
:
r
h
"
j
ubjP
)
r
}
r
(
h
X
MagicMock
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
MagicMockr
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
j
ubjP
)
r
}
r
(
h
X
NonCallableMagicMock
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
NonCallableMagicMockr
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUX
.
r
}
r
(
h
X
.
h
"
j
ubeubcsphinx
.
addnodes
index
r
)
r
}
r
(
h
U
h
"
j
h
#
h
&
h
(
U
indexr
h
*
}
r
(
h
]
r
h
.
]
r
h0
]
r
h2
]
r
h4
]
r
U
entriesr
]
r
(
U
singler
X
MagicMock
(
class
in
mock
)
h
U
tr
auh7Nh8h
h
]
r
ubcsphinx
.
addnodes
desc
r
)
r
}
r
(
h
U
h
"
j
h
#
h
&
h
(
U
descr
h
*
}
r
(
U
noindexr
U
domainr
X
pyr
h
]
r
h
.
]
r
h0
]
r
h2
]
r
h4
]
r
U
objtyper
X
classr
U
desctyper
j
uh7Nh8h
h
]
r
(
csphinx
.
addnodes
desc_signature
r
)
r
}
r
(
h
X
MagicMock
(
*
args
*
*
kw
)
r
h
"
j
h
#
h
&
h
(
U
desc_signaturer
h
*
}
r
(
h
]
r
h
aU
moduler
h
|
h
.
]
r
h0
]
r
h2
]
r
h4
]
r
h
aU
fullnamer
X
MagicMockr
U
classr
U
U
firstr
uh7K
~
h8h
h
]
r
(
csphinx
.
addnodes
desc_annotation
r
)
r
}
r
(
h
X
class
r
h
"
j
h
#
h
&
h
(
U
desc_annotationr
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
~
h8h
h
]
r
!
hUX
class
r
"
r
#
}
r
(
h
U
h
"
j
ubaubcsphinx
.
addnodes
desc_name
r
%
)
r
&
}
r
'
(
h
j
h
"
j
h
#
h
&
h
(
U
desc_namer
(
h
*
}
r
)
(
h0
]
r
*
h2
]
r
+
h
.
]
r
h
]
r
-
h4
]
r
.
uh7K
~
h8h
h
]
r
/
hUX
MagicMockr0
r1
}
r2
(
h
U
h
"
j
&
ubaubcsphinx
.
addnodes
desc_parameterlist
r3
)
r4
}
r5
(
h
U
h
"
j
h
#
h
&
h
(
U
desc_parameterlistr6
h
*
}
r7
(
h0
]
r8
h2
]
r9
h
.
]
r
:
h
]
r
;
h4
]
r
<
uh7K
~
h8h
h
]
r
=
(
csphinx
.
addnodes
desc_parameter
r
>
)
r
?
}
r
(
h
X
*
argsrA
h
*
}
rB
(
h0
]
rC
h2
]
rD
h
.
]
rE
h
]
rF
h4
]
rG
uh
"
j4
h
]
rH
hUX
*
argsrI
rJ
}
rK
(
h
U
h
"
j
?
ubah
(
U
desc_parameterrL
ubj
>
)
rM
}
rN
(
h
X
*
*
kwrO
h
*
}
rP
(
h0
]
rQ
h2
]
rR
h
.
]
rS
h
]
rT
h4
]
rU
uh
"
j4
h
]
rV
hUX
*
*
kwrW
rX
}
rY
(
h
U
h
"
jM
ubah
(
jL
ubeubeubcsphinx
.
addnodes
desc_content
rZ
)
r
[
}
r
\
(
h
U
h
"
j
h
#
h
&
h
(
U
desc_contentr
]
h
*
}
r
^
(
h0
]
r_
h2
]
r
h
.
]
ra
h
]
rb
h4
]
rc
uh7K
~
h8h
h
]
rd
(
hY
)
re
}
rf
(
h
X
MagicMock
is
a
subclass
of
:
class
:
Mock
with
default
implementations
of
most
of
the
magic
methods
.
You
can
use
MagicMock
without
having
to
configure
the
magic
methods
yourself
.
rg
h
"
j
[
h
#
h
&
h
(
h
]
h
*
}
rh
(
h0
]
ri
h2
]
rj
h
.
]
rk
h
]
rl
h4
]
rm
uh7Kuh8h
h
]
rn
(
h
~
)
ro
}
rp
(
h
X
MagicMock
rq
h
*
}
rr
(
h0
]
rs
h2
]
rt
h
.
]
ru
h
]
rv
h4
]
rw
uh
"
je
h
]
rx
hUX
MagicMockry
rz
}
r
{
(
h
U
h
"
jo
ubah
(
h
ubhUX
is
a
subclass
of
r
|
r
}
}
r
~
(
h
X
is
a
subclass
of
r
h
"
je
ubhe
)
r
}
r
(
h
X
:
class
:
Mock
r
h
"
je
h
#
h
&
h
(
hih
*
}
r
(
U
reftyper
X
classr
hm
hnX
Mockr
U
refdomainr
X
pyr
h
]
r
h
.
]
r
U
refexplicitr
h0
]
r
h2
]
r
h4
]
r
hxhyhzj
h
{
h
|
uh7Kuh
]
r
h
~
)
r
}
r
(
h
j
h
*
}
r
(
h0
]
r
h2
]
r
(
h
j
X
py
-
classr
eh
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
Mockr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubaubhUXH
with
default
implementations
of
most
of
the
magic
methods
.
You
can
use
r
r
}
r
(
h
XH
with
default
implementations
of
most
of
the
magic
methods
.
You
can
use
r
h
"
je
ubh
~
)
r
}
r
(
h
X
MagicMock
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
je
h
]
r
hUX
MagicMockr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX8
without
having
to
configure
the
magic
methods
yourself
.
r
r
}
r
(
h
X8
without
having
to
configure
the
magic
methods
yourself
.
r
h
"
je
ubeubhY
)
r
}
r
(
h
XF
The
constructor
parameters
have
the
same
meaning
as
for
:
class
:
Mock
.
r
h
"
j
[
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Kyh8h
h
]
r
(
hUX8
The
constructor
parameters
have
the
same
meaning
as
for
r
r
}
r
(
h
X8
The
constructor
parameters
have
the
same
meaning
as
for
r
h
"
j
ubhe
)
r
}
r
(
h
X
:
class
:
Mock
r
h
"
j
h
#
h
&
h
(
hih
*
}
r
(
U
reftyper
X
classr
hm
hnX
Mockr
U
refdomainr
X
pyr
h
]
r
h
.
]
r
U
refexplicitr
h0
]
r
h2
]
r
h4
]
r
hxhyhzj
h
{
h
|
uh7Kyh
]
r
h
~
)
r
}
r
(
h
j
h
*
}
r
(
h0
]
r
h2
]
r
(
h
j
X
py
-
classr
eh
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
Mockr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubaubhUX
.
r
}
r
(
h
X
.
h
"
j
ubeubhY
)
r
}
r
(
h
Xo
If
you
use
the
spec
or
spec_set
arguments
then
*
only
*
magic
methods
that
exist
in
the
spec
will
be
created
.
r
h
"
j
[
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
{
h8h
h
]
r
(
hUX
If
you
use
the
r
r
}
r
(
h
X
If
you
use
the
r
h
"
j
ubjP
)
r
}
r
(
h
X
spec
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
specr
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUX
or
r
r
}
r
(
h
X
or
r
h
"
j
ubjP
)
r
}
r
(
h
X
spec_set
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
spec_setr
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUX
arguments
then
r
r
}
r
(
h
X
arguments
then
r
h
"
j
ubh
)
r
}
r
(
h
X
*
only
*
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
onlyr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX6
magic
methods
that
exist
in
the
spec
will
be
created
.
r
r
}
r
(
h
X6
magic
methods
that
exist
in
the
spec
will
be
created
.
r
h
"
j
ubeubeubeubj
)
r
}
r
!
(
h
U
h
"
j
h
#
h
&
h
(
j
h
*
}
r
"
(
h
]
r
#
h
.
]
r
h0
]
r
%
h2
]
r
&
h4
]
r
'
U
entriesr
(
]
r
)
(
j
X
NonCallableMagicMock
(
class
in
mock
)
h
U
tr
*
auh7Nh8h
h
]
r
+
ubj
)
r
}
r
-
(
h
U
h
"
j
h
#
h
&
h
(
j
h
*
}
r
.
(
j
j
X
pyr
/
h
]
r0
h
.
]
r1
h0
]
r2
h2
]
r3
h4
]
r4
j
X
classr5
j
j5
uh7Nh8h
h
]
r6
(
j
)
r7
}
r8
(
h
X
!
NonCallableMagicMock
(
*
args
*
*
kw
)
r9
h
"
j
h
#
h
&
h
(
j
h
*
}
r
:
(
h
]
r
;
h
aj
h
|
h
.
]
r
<
h0
]
r
=
h2
]
r
>
h4
]
r
?
h
aj
X
NonCallableMagicMockr
j
U
j
uh7K
h8h
h
]
rA
(
j
)
rB
}
rC
(
h
X
class
rD
h
"
j7
h
#
h
&
h
(
j
h
*
}
rE
(
h0
]
rF
h2
]
rG
h
.
]
rH
h
]
rI
h4
]
rJ
uh7K
h8h
h
]
rK
hUX
class
rL
rM
}
rN
(
h
U
h
"
jB
ubaubj
%
)
rO
}
rP
(
h
j
h
"
j7
h
#
h
&
h
(
j
(
h
*
}
rQ
(
h0
]
rR
h2
]
rS
h
.
]
rT
h
]
rU
h4
]
rV
uh7K
h8h
h
]
rW
hUX
NonCallableMagicMockrX
rY
}
rZ
(
h
U
h
"
jO
ubaubj3
)
r
[
}
r
\
(
h
U
h
"
j7
h
#
h
&
h
(
j6
h
*
}
r
]
(
h0
]
r
^
h2
]
r_
h
.
]
r
h
]
ra
h4
]
rb
uh7K
h8h
h
]
rc
(
j
>
)
rd
}
re
(
h
X
*
argsrf
h
*
}
rg
(
h0
]
rh
h2
]
ri
h
.
]
rj
h
]
rk
h4
]
rl
uh
"
j
[
h
]
rm
hUX
*
argsrn
ro
}
rp
(
h
U
h
"
jd
ubah
(
jL
ubj
>
)
rq
}
rr
(
h
X
*
*
kwrs
h
*
}
rt
(
h0
]
ru
h2
]
rv
h
.
]
rw
h
]
rx
h4
]
ry
uh
"
j
[
h
]
rz
hUX
*
*
kwr
{
r
|
}
r
}
(
h
U
h
"
jq
ubah
(
jL
ubeubeubjZ
)
r
~
}
r
(
h
U
h
"
j
h
#
h
&
h
(
j
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h8h
h
]
r
(
hY
)
r
}
r
(
h
X
&
A
non
-
callable
version
of
MagicMock
.
r
h
"
j
~
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h8h
h
]
r
(
hUX
A
non
-
callable
version
of
r
r
}
r
(
h
X
A
non
-
callable
version
of
r
h
"
j
ubjP
)
r
}
r
(
h
X
MagicMock
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
MagicMockr
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUX
.
r
}
r
(
h
X
.
h
"
j
ubeubhY
)
r
}
r
(
h
X
The
constructor
parameters
have
the
same
meaning
as
for
:
class
:
MagicMock
with
the
exception
of
return_value
and
side_effect
which
have
no
meaning
on
a
non
-
callable
mock
.
r
h
"
j
~
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h8h
h
]
r
(
hUX8
The
constructor
parameters
have
the
same
meaning
as
for
r
r
}
r
(
h
X8
The
constructor
parameters
have
the
same
meaning
as
for
r
h
"
j
ubhe
)
r
}
r
(
h
X
:
class
:
MagicMock
r
h
"
j
h
#
h
&
h
(
hih
*
}
r
(
U
reftyper
X
classr
hm
hnX
MagicMockr
U
refdomainr
X
pyr
h
]
r
h
.
]
r
U
refexplicitr
h0
]
r
h2
]
r
h4
]
r
hxhyhzj
h
{
h
|
uh7K
h
]
r
h
~
)
r
}
r
(
h
j
h
*
}
r
(
h0
]
r
h2
]
r
(
h
j
X
py
-
classr
eh
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
MagicMockr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubaubhUX
with
the
exception
of
r
r
}
r
(
h
X
with
the
exception
of
r
h
"
j
ubjP
)
r
}
r
(
h
X
return_value
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
return_valuer
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
j
ubjP
)
r
}
r
(
h
X
side_effect
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
side_effectr
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUX
.
which
have
no
meaning
on
a
non
-
callable
mock
.
r
r
}
r
(
h
X
.
which
have
no
meaning
on
a
non
-
callable
mock
.
r
h
"
j
ubeubeubeubhY
)
r
}
r
(
h
Xn
The
magic
methods
are
setup
with
MagicMock
objects
so
you
can
configure
them
and
use
them
in
the
usual
way
:
r
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h8h
h
]
r
(
hUX
!
The
magic
methods
are
setup
with
r
r
}
r
(
h
X
!
The
magic
methods
are
setup
with
r
h
"
j
ubjP
)
r
}
r
(
h
X
MagicMock
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
MagicMockr
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUXB
objects
so
you
can
configure
them
and
use
them
in
the
usual
way
:
r
r
}
r
(
h
XB
objects
so
you
can
configure
them
and
use
them
in
the
usual
way
:
r
h
"
j
ubeubj
*
)
r
}
r
(
h
X
>
>
>
mock
=
MagicMock
(
)
>
>
>
mock
[
3
]
=
'
fish
'
>
>
>
mock
.
__setitem__
.
assert_called_with
(
3
'
fish
'
)
>
>
>
mock
.
__getitem__
.
return_value
=
'
result
'
>
>
>
mock
[
2
]
'
result
'
r
h
"
j
h
#
h
&
h
(
j
.
h
*
}
r
(
U
testnodetyper
X
doctestr
j2
j3
h
]
r
h
.
]
r
h0
]
r
h2
]
r
h4
]
r
U
groupsr
]
r
j
;
aj
<
}
r
!
uh7K
h8h
h
]
r
"
hUX
>
>
>
mock
=
MagicMock
(
)
>
>
>
mock
[
3
]
=
'
fish
'
>
>
>
mock
.
__setitem__
.
assert_called_with
(
3
'
fish
'
)
>
>
>
mock
.
__getitem__
.
return_value
=
'
result
'
>
>
>
mock
[
2
]
'
result
'
r
#
r
}
r
%
(
h
U
h
"
j
ubaubhY
)
r
&
}
r
'
(
h
XQ
By
default
many
of
the
protocol
methods
are
required
to
return
objects
of
a
specific
type
.
These
methods
are
preconfigured
with
a
default
return
value
so
that
they
can
be
used
without
you
having
to
do
anything
if
you
aren
'
t
interested
in
the
return
value
.
You
can
still
*
set
*
the
return
value
manually
if
you
want
to
change
the
default
.
r
(
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
)
(
h0
]
r
*
h2
]
r
+
h
.
]
r
h
]
r
-
h4
]
r
.
uh7K
h8h
h
]
r
/
(
hUX
By
default
many
of
the
protocol
methods
are
required
to
return
objects
of
a
specific
type
.
These
methods
are
preconfigured
with
a
default
return
value
so
that
they
can
be
used
without
you
having
to
do
anything
if
you
aren
'
t
interested
in
the
return
value
.
You
can
still
r0
r1
}
r2
(
h
X
By
default
many
of
the
protocol
methods
are
required
to
return
objects
of
a
specific
type
.
These
methods
are
preconfigured
with
a
default
return
value
so
that
they
can
be
used
without
you
having
to
do
anything
if
you
aren
'
t
interested
in
the
return
value
.
You
can
still
r3
h
"
j
&
ubh
)
r4
}
r5
(
h
X
*
set
*
r6
h
*
}
r7
(
h0
]
r8
h2
]
r9
h
.
]
r
:
h
]
r
;
h4
]
r
<
uh
"
j
&
h
]
r
=
hUX
setr
>
r
?
}
r
(
h
U
h
"
j4
ubah
(
h
ubhUX
=
the
return
value
manually
if
you
want
to
change
the
default
.
rA
rB
}
rC
(
h
X
=
the
return
value
manually
if
you
want
to
change
the
default
.
rD
h
"
j
&
ubeubhY
)
rE
}
rF
(
h
X
Methods
and
their
defaults
:
rG
h
"
j
h
#
h
&
h
(
h
]
h
*
}
rH
(
h0
]
rI
h2
]
rJ
h
.
]
rK
h
]
rL
h4
]
rM
uh7K
h8h
h
]
rN
hUX
Methods
and
their
defaults
:
rO
rP
}
rQ
(
h
jG
h
"
jE
ubaubj
)
rR
}
rS
(
h
U
h
"
j
h
#
h
&
h
(
j
h
*
}
rT
(
j
X
*
h
]
rU
h
.
]
rV
h0
]
rW
h2
]
rX
h4
]
rY
uh7K
h8h
h
]
rZ
(
j
)
r
[
}
r
\
(
h
X
__lt__
:
NotImplementedr
]
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
^
(
h0
]
r_
h2
]
r
h
.
]
ra
h
]
rb
h4
]
rc
uh7Nh8h
h
]
rd
hY
)
re
}
rf
(
h
j
]
h
"
j
[
h
#
h
&
h
(
h
]
h
*
}
rg
(
h0
]
rh
h2
]
ri
h
.
]
rj
h
]
rk
h4
]
rl
uh7K
h
]
rm
(
h
~
)
rn
}
ro
(
h
X
__lt__
rp
h
*
}
rq
(
h0
]
rr
h2
]
rs
h
.
]
rt
h
]
ru
h4
]
rv
uh
"
je
h
]
rw
hUX
__lt__rx
ry
}
rz
(
h
U
h
"
jn
ubah
(
h
ubhUX
:
NotImplementedr
{
r
|
}
r
}
(
h
X
:
NotImplementedr
~
h
"
je
ubeubaubj
)
r
}
r
(
h
X
__gt__
:
NotImplementedr
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__gt__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__gt__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
NotImplementedr
r
}
r
(
h
X
:
NotImplementedr
h
"
j
ubeubaubj
)
r
}
r
(
h
X
__le__
:
NotImplementedr
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__le__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__le__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
NotImplementedr
r
}
r
(
h
X
:
NotImplementedr
h
"
j
ubeubaubj
)
r
}
r
(
h
X
__ge__
:
NotImplementedr
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__ge__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__ge__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
NotImplementedr
r
}
r
(
h
X
:
NotImplementedr
h
"
j
ubeubaubj
)
r
}
r
(
h
X
__int__
:
1r
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__int__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__int__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
1r
r
}
r
(
h
X
:
1r
h
"
j
ubeubaubj
)
r
}
r
(
h
X
__contains__
:
Falser
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
!
(
h
~
)
r
"
}
r
#
(
h
X
__contains__
r
h
*
}
r
%
(
h0
]
r
&
h2
]
r
'
h
.
]
r
(
h
]
r
)
h4
]
r
*
uh
"
j
h
]
r
+
hUX
__contains__r
r
-
}
r
.
(
h
U
h
"
j
"
ubah
(
h
ubhUX
:
Falser
/
r0
}
r1
(
h
X
:
Falser2
h
"
j
ubeubaubj
)
r3
}
r4
(
h
X
__len__
:
1r5
h
"
jR
h
#
h
&
h
(
j
h
*
}
r6
(
h0
]
r7
h2
]
r8
h
.
]
r9
h
]
r
:
h4
]
r
;
uh7Nh8h
h
]
r
<
hY
)
r
=
}
r
>
(
h
j5
h
"
j3
h
#
h
&
h
(
h
]
h
*
}
r
?
(
h0
]
r
h2
]
rA
h
.
]
rB
h
]
rC
h4
]
rD
uh7K
h
]
rE
(
h
~
)
rF
}
rG
(
h
X
__len__
rH
h
*
}
rI
(
h0
]
rJ
h2
]
rK
h
.
]
rL
h
]
rM
h4
]
rN
uh
"
j
=
h
]
rO
hUX
__len__rP
rQ
}
rR
(
h
U
h
"
jF
ubah
(
h
ubhUX
:
1rS
rT
}
rU
(
h
X
:
1rV
h
"
j
=
ubeubaubj
)
rW
}
rX
(
h
X
__iter__
:
iter
(
[
]
)
rY
h
"
jR
h
#
h
&
h
(
j
h
*
}
rZ
(
h0
]
r
[
h2
]
r
\
h
.
]
r
]
h
]
r
^
h4
]
r_
uh7Nh8h
h
]
r
hY
)
ra
}
rb
(
h
jY
h
"
jW
h
#
h
&
h
(
h
]
h
*
}
rc
(
h0
]
rd
h2
]
re
h
.
]
rf
h
]
rg
h4
]
rh
uh7K
h
]
ri
(
h
~
)
rj
}
rk
(
h
X
__iter__
rl
h
*
}
rm
(
h0
]
rn
h2
]
ro
h
.
]
rp
h
]
rq
h4
]
rr
uh
"
ja
h
]
rs
hUX
__iter__rt
ru
}
rv
(
h
U
h
"
jj
ubah
(
h
ubhUX
:
iter
(
[
]
)
rw
rx
}
ry
(
h
X
:
iter
(
[
]
)
rz
h
"
ja
ubeubaubj
)
r
{
}
r
|
(
h
X
__exit__
:
Falser
}
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
~
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
}
h
"
j
{
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__exit__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__exit__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
Falser
r
}
r
(
h
X
:
Falser
h
"
j
ubeubaubj
)
r
}
r
(
h
X
__complex__
:
1jr
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__complex__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__complex__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
1jr
r
}
r
(
h
X
:
1jr
h
"
j
ubeubaubj
)
r
}
r
(
h
X
__float__
:
1
.
0r
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__float__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__float__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
1
.
0r
r
}
r
(
h
X
:
1
.
0r
h
"
j
ubeubaubj
)
r
}
r
(
h
X
__bool__
:
Truer
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__bool__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__bool__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
Truer
r
}
r
(
h
X
:
Truer
h
"
j
ubeubaubj
)
r
}
r
(
h
X
__nonzero__
:
Truer
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__nonzero__
r
h
*
}
r
!
(
h0
]
r
"
h2
]
r
#
h
.
]
r
h
]
r
%
h4
]
r
&
uh
"
j
h
]
r
'
hUX
__nonzero__r
(
r
)
}
r
*
(
h
U
h
"
j
ubah
(
h
ubhUX
:
Truer
+
r
}
r
-
(
h
X
:
Truer
.
h
"
j
ubeubaubj
)
r
/
}
r0
(
h
X
__oct__
:
'
1
'
r1
h
"
jR
h
#
h
&
h
(
j
h
*
}
r2
(
h0
]
r3
h2
]
r4
h
.
]
r5
h
]
r6
h4
]
r7
uh7Nh8h
h
]
r8
hY
)
r9
}
r
:
(
h
j1
h
"
j
/
h
#
h
&
h
(
h
]
h
*
}
r
;
(
h0
]
r
<
h2
]
r
=
h
.
]
r
>
h
]
r
?
h4
]
r
uh7K
h
]
rA
(
h
~
)
rB
}
rC
(
h
X
__oct__
rD
h
*
}
rE
(
h0
]
rF
h2
]
rG
h
.
]
rH
h
]
rI
h4
]
rJ
uh
"
j9
h
]
rK
hUX
__oct__rL
rM
}
rN
(
h
U
h
"
jB
ubah
(
h
ubhUX
:
'
1
'
rO
rP
}
rQ
(
h
X
:
'
1
'
rR
h
"
j9
ubeubaubj
)
rS
}
rT
(
h
X
__hex__
:
'
0x1
'
rU
h
"
jR
h
#
h
&
h
(
j
h
*
}
rV
(
h0
]
rW
h2
]
rX
h
.
]
rY
h
]
rZ
h4
]
r
[
uh7Nh8h
h
]
r
\
hY
)
r
]
}
r
^
(
h
jU
h
"
jS
h
#
h
&
h
(
h
]
h
*
}
r_
(
h0
]
r
h2
]
ra
h
.
]
rb
h
]
rc
h4
]
rd
uh7K
h
]
re
(
h
~
)
rf
}
rg
(
h
X
__hex__
rh
h
*
}
ri
(
h0
]
rj
h2
]
rk
h
.
]
rl
h
]
rm
h4
]
rn
uh
"
j
]
h
]
ro
hUX
__hex__rp
rq
}
rr
(
h
U
h
"
jf
ubah
(
h
ubhUX
:
'
0x1
'
rs
rt
}
ru
(
h
X
:
'
0x1
'
rv
h
"
j
]
ubeubaubj
)
rw
}
rx
(
h
X
__long__
:
long
(
1
)
ry
h
"
jR
h
#
h
&
h
(
j
h
*
}
rz
(
h0
]
r
{
h2
]
r
|
h
.
]
r
}
h
]
r
~
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
jy
h
"
jw
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__long__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__long__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
long
(
1
)
r
r
}
r
(
h
X
:
long
(
1
)
r
h
"
j
ubeubaubj
)
r
}
r
(
h
X
__index__
:
1r
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__index__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__index__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
1r
r
}
r
(
h
X
:
1r
h
"
j
ubeubaubj
)
r
}
r
(
h
X
(
__hash__
:
default
hash
for
the
mockr
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__hash__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__hash__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
default
hash
for
the
mockr
r
}
r
(
h
X
:
default
hash
for
the
mockr
h
"
j
ubeubaubj
)
r
}
r
(
h
X
&
__str__
:
default
str
for
the
mockr
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__str__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__str__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
:
default
str
for
the
mockr
r
}
r
(
h
X
:
default
str
for
the
mockr
h
"
j
ubeubaubj
)
r
}
r
(
h
X
.
__unicode__
:
default
unicode
for
the
mockr
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__unicode__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
!
h4
]
r
"
uh
"
j
h
]
r
#
hUX
__unicode__r
r
%
}
r
&
(
h
U
h
"
j
ubah
(
h
ubhUX
:
default
unicode
for
the
mockr
'
r
(
}
r
)
(
h
X
:
default
unicode
for
the
mockr
*
h
"
j
ubeubaubj
)
r
+
}
r
(
h
X
__sizeof__
:
default
sizeof
for
the
mock
r
-
h
"
jR
h
#
h
&
h
(
j
h
*
}
r
.
(
h0
]
r
/
h2
]
r0
h
.
]
r1
h
]
r2
h4
]
r3
uh7Nh8h
h
]
r4
hY
)
r5
}
r6
(
h
X
+
__sizeof__
:
default
sizeof
for
the
mockr7
h
"
j
+
h
#
h
&
h
(
h
]
h
*
}
r8
(
h0
]
r9
h2
]
r
:
h
.
]
r
;
h
]
r
<
h4
]
r
=
uh7K
h
]
r
>
(
h
~
)
r
?
}
r
(
h
X
__sizeof__
rA
h
*
}
rB
(
h0
]
rC
h2
]
rD
h
.
]
rE
h
]
rF
h4
]
rG
uh
"
j5
h
]
rH
hUX
__sizeof__rI
rJ
}
rK
(
h
U
h
"
j
?
ubah
(
h
ubhUX
:
default
sizeof
for
the
mockrL
rM
}
rN
(
h
X
:
default
sizeof
for
the
mockrO
h
"
j5
ubeubaubeubhY
)
rP
}
rQ
(
h
X
For
example
:
rR
h
"
j
h
#
h
&
h
(
h
]
h
*
}
rS
(
h0
]
rT
h2
]
rU
h
.
]
rV
h
]
rW
h4
]
rX
uh7K
h8h
h
]
rY
hUX
For
example
:
rZ
r
[
}
r
\
(
h
jR
h
"
jP
ubaubj
*
)
r
]
}
r
^
(
h
Xw
>
>
>
mock
=
MagicMock
(
)
>
>
>
int
(
mock
)
1
>
>
>
len
(
mock
)
0
>
>
>
hex
(
mock
)
'
0x1
'
>
>
>
list
(
mock
)
[
]
>
>
>
object
(
)
in
mock
Falser_
h
"
j
h
#
h
&
h
(
j
.
h
*
}
r
(
U
testnodetypera
X
doctestrb
j2
j3
h
]
rc
h
.
]
rd
h0
]
re
h2
]
rf
h4
]
rg
U
groupsrh
]
ri
j
;
aj
<
}
rj
uh7K
h8h
h
]
rk
hUXw
>
>
>
mock
=
MagicMock
(
)
>
>
>
int
(
mock
)
1
>
>
>
len
(
mock
)
0
>
>
>
hex
(
mock
)
'
0x1
'
>
>
>
list
(
mock
)
[
]
>
>
>
object
(
)
in
mock
Falserl
rm
}
rn
(
h
U
h
"
j
]
ubaubhY
)
ro
}
rp
(
h
X
The
two
equality
method
__eq__
and
__ne__
are
special
(
changed
in
0
.
7
.
2
)
.
They
do
the
default
equality
comparison
on
identity
using
a
side
effect
unless
you
change
their
return
value
to
return
something
else
:
rq
h
"
j
h
#
h
&
h
(
h
]
h
*
}
rr
(
h0
]
rs
h2
]
rt
h
.
]
ru
h
]
rv
h4
]
rw
uh7K
h8h
h
]
rx
(
hUX
The
two
equality
method
ry
rz
}
r
{
(
h
X
The
two
equality
method
r
|
h
"
jo
ubjP
)
r
}
}
r
~
(
h
X
__eq__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
jo
h
]
r
hUX
__eq__r
r
}
r
(
h
U
h
"
j
}
ubah
(
j
^
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
jo
ubjP
)
r
}
r
(
h
X
__ne__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
jo
h
]
r
hUX
__ne__r
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUX
are
special
(
changed
in
0
.
7
.
2
)
.
They
do
the
default
equality
comparison
on
identity
using
a
side
effect
unless
you
change
their
return
value
to
return
something
else
:
r
r
}
r
(
h
X
are
special
(
changed
in
0
.
7
.
2
)
.
They
do
the
default
equality
comparison
on
identity
using
a
side
effect
unless
you
change
their
return
value
to
return
something
else
:
r
h
"
jo
ubeubj
*
)
r
}
r
(
h
X
>
>
>
MagicMock
(
)
=
=
3
False
>
>
>
MagicMock
(
)
!
=
3
True
>
>
>
mock
=
MagicMock
(
)
>
>
>
mock
.
__eq__
.
return_value
=
True
>
>
>
mock
=
=
3
Truer
h
"
j
h
#
h
&
h
(
j
.
h
*
}
r
(
U
testnodetyper
X
doctestr
j2
j3
h
]
r
h
.
]
r
h0
]
r
h2
]
r
h4
]
r
U
groupsr
]
r
j
;
aj
<
}
r
uh7K
h8h
h
]
r
hUX
>
>
>
MagicMock
(
)
=
=
3
False
>
>
>
MagicMock
(
)
!
=
3
True
>
>
>
mock
=
MagicMock
(
)
>
>
>
mock
.
__eq__
.
return_value
=
True
>
>
>
mock
=
=
3
Truer
r
}
r
(
h
U
h
"
j
ubaubhY
)
r
}
r
(
h
X
In
0
.
8
the
__iter__
also
gained
special
handling
implemented
with
a
side
effect
.
The
return
value
of
MagicMock
.
__iter__
can
be
any
iterable
object
and
isn
'
t
required
to
be
an
iterator
:
r
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h8h
h
]
r
(
hUX
In
r
r
}
r
(
h
X
In
r
h
"
j
ubjP
)
r
}
r
(
h
X
0
.
8
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
0
.
8r
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUX
the
r
r
}
r
(
h
X
the
r
h
"
j
ubjP
)
r
}
r
(
h
X
__iter__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__iter__r
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUXR
also
gained
special
handling
implemented
with
a
side
effect
.
The
return
value
of
r
r
}
r
(
h
XR
also
gained
special
handling
implemented
with
a
side
effect
.
The
return
value
of
r
h
"
j
ubjP
)
r
}
r
(
h
X
MagicMock
.
__iter__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
MagicMock
.
__iter__r
r
}
r
(
h
U
h
"
j
ubah
(
j
^
ubhUXA
can
be
any
iterable
object
and
isn
'
t
required
to
be
an
iterator
:
r
r
}
r
(
h
XA
can
be
any
iterable
object
and
isn
'
t
required
to
be
an
iterator
:
r
h
"
j
ubeubj
*
)
r
}
r
(
h
X
>
>
>
mock
=
MagicMock
(
)
>
>
>
mock
.
__iter__
.
return_value
=
[
'
a
'
'
b
'
'
c
'
]
>
>
>
list
(
mock
)
[
'
a
'
'
b
'
'
c
'
]
>
>
>
list
(
mock
)
[
'
a
'
'
b
'
'
c
'
]
r
h
"
j
h
#
h
&
h
(
j
.
h
*
}
r
(
U
testnodetyper
X
doctestr
j2
j3
h
]
r
h
.
]
r
h0
]
r
h2
]
r
h4
]
r
U
groupsr
]
r
j
;
aj
<
}
r
uh7K
h8h
h
]
r
hUX
>
>
>
mock
=
MagicMock
(
)
>
>
>
mock
.
__iter__
.
return_value
=
[
'
a
'
'
b
'
'
c
'
]
>
>
>
list
(
mock
)
[
'
a
'
'
b
'
'
c
'
]
>
>
>
list
(
mock
)
[
'
a
'
'
b
'
'
c
'
]
r
r
}
r
(
h
U
h
"
j
ubaubhY
)
r
}
r
(
h
X
If
the
return
value
*
is
*
an
iterator
then
iterating
over
it
once
will
consume
it
and
subsequent
iterations
will
result
in
an
empty
list
:
r
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h8h
h
]
r
(
hUX
If
the
return
value
r
r
}
r
(
h
X
If
the
return
value
r
h
"
j
ubh
)
r
}
r
(
h
X
*
is
*
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
isr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUXq
an
iterator
then
iterating
over
it
once
will
consume
it
and
subsequent
iterations
will
result
in
an
empty
list
:
r
r
}
r
!
(
h
Xq
an
iterator
then
iterating
over
it
once
will
consume
it
and
subsequent
iterations
will
result
in
an
empty
list
:
r
"
h
"
j
ubeubj
*
)
r
#
}
r
(
h
Xg
>
>
>
mock
.
__iter__
.
return_value
=
iter
(
[
'
a
'
'
b
'
'
c
'
]
)
>
>
>
list
(
mock
)
[
'
a
'
'
b
'
'
c
'
]
>
>
>
list
(
mock
)
[
]
r
%
h
"
j
h
#
h
&
h
(
j
.
h
*
}
r
&
(
U
testnodetyper
'
X
doctestr
(
j2
j3
h
]
r
)
h
.
]
r
*
h0
]
r
+
h2
]
r
h4
]
r
-
U
groupsr
.
]
r
/
j
;
aj
<
}
r0
uh7K
h8h
h
]
r1
hUXg
>
>
>
mock
.
__iter__
.
return_value
=
iter
(
[
'
a
'
'
b
'
'
c
'
]
)
>
>
>
list
(
mock
)
[
'
a
'
'
b
'
'
c
'
]
>
>
>
list
(
mock
)
[
]
r2
r3
}
r4
(
h
U
h
"
j
#
ubaubhY
)
r5
}
r6
(
h
X
MagicMock
has
all
of
the
supported
magic
methods
configured
except
for
some
of
the
obscure
and
obsolete
ones
.
You
can
still
set
these
up
if
you
want
.
r7
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r8
(
h0
]
r9
h2
]
r
:
h
.
]
r
;
h
]
r
<
h4
]
r
=
uh7K
h8h
h
]
r
>
(
h
~
)
r
?
}
r
(
h
X
MagicMock
rA
h
*
}
rB
(
h0
]
rC
h2
]
rD
h
.
]
rE
h
]
rF
h4
]
rG
uh
"
j5
h
]
rH
hUX
MagicMockrI
rJ
}
rK
(
h
U
h
"
j
?
ubah
(
h
ubhUX
has
all
of
the
supported
magic
methods
configured
except
for
some
of
the
obscure
and
obsolete
ones
.
You
can
still
set
these
up
if
you
want
.
rL
rM
}
rN
(
h
X
has
all
of
the
supported
magic
methods
configured
except
for
some
of
the
obscure
and
obsolete
ones
.
You
can
still
set
these
up
if
you
want
.
rO
h
"
j5
ubeubhY
)
rP
}
rQ
(
h
XO
Magic
methods
that
are
supported
but
not
setup
by
default
in
MagicMock
are
:
rR
h
"
j
h
#
h
&
h
(
h
]
h
*
}
rS
(
h0
]
rT
h2
]
rU
h
.
]
rV
h
]
rW
h4
]
rX
uh7K
h8h
h
]
rY
(
hUX
=
Magic
methods
that
are
supported
but
not
setup
by
default
in
rZ
r
[
}
r
\
(
h
X
=
Magic
methods
that
are
supported
but
not
setup
by
default
in
r
]
h
"
jP
ubh
~
)
r
^
}
r_
(
h
X
MagicMock
r
h
*
}
ra
(
h0
]
rb
h2
]
rc
h
.
]
rd
h
]
re
h4
]
rf
uh
"
jP
h
]
rg
hUX
MagicMockrh
ri
}
rj
(
h
U
h
"
j
^
ubah
(
h
ubhUX
are
:
rk
rl
}
rm
(
h
X
are
:
rn
h
"
jP
ubeubj
)
ro
}
rp
(
h
U
h
"
j
h
#
h
&
h
(
j
h
*
}
rq
(
j
X
*
h
]
rr
h
.
]
rs
h0
]
rt
h2
]
ru
h4
]
rv
uh7K
h8h
h
]
rw
(
j
)
rx
}
ry
(
h
X
__cmp__
rz
h
"
jo
h
#
h
&
h
(
j
h
*
}
r
{
(
h0
]
r
|
h2
]
r
}
h
.
]
r
~
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
jz
h
"
jx
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
h
~
)
r
}
r
(
h
jz
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__cmp__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubaubaubj
)
r
}
r
(
h
X
%
__getslice__
and
__setslice__
r
h
"
jo
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__getslice__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__getslice__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__setslice__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__setslice__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubeubaubj
)
r
}
r
(
h
X
__coerce__
r
h
"
jo
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
h
~
)
r
}
r
(
h
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__coerce__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubaubaubj
)
r
}
r
(
h
X
__subclasses__
r
h
"
jo
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
h
~
)
r
}
r
(
h
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__subclasses__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubaubaubj
)
r
}
r
(
h
X
__dir__
r
h
"
jo
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
h
~
)
r
}
r
(
h
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
!
hUX
__dir__r
"
r
#
}
r
(
h
U
h
"
j
ubah
(
h
ubaubaubj
)
r
%
}
r
&
(
h
X
__format__
r
'
h
"
jo
h
#
h
&
h
(
j
h
*
}
r
(
(
h0
]
r
)
h2
]
r
*
h
.
]
r
+
h
]
r
h4
]
r
-
uh7Nh8h
h
]
r
.
hY
)
r
/
}
r0
(
h
j
'
h
"
j
%
h
#
h
&
h
(
h
]
h
*
}
r1
(
h0
]
r2
h2
]
r3
h
.
]
r4
h
]
r5
h4
]
r6
uh7K
h
]
r7
h
~
)
r8
}
r9
(
h
j
'
h
*
}
r
:
(
h0
]
r
;
h2
]
r
<
h
.
]
r
=
h
]
r
>
h4
]
r
?
uh
"
j
/
h
]
r
hUX
__format__rA
rB
}
rC
(
h
U
h
"
j8
ubah
(
h
ubaubaubj
)
rD
}
rE
(
h
X
+
__get__
__set__
and
__delete__
rF
h
"
jo
h
#
h
&
h
(
j
h
*
}
rG
(
h0
]
rH
h2
]
rI
h
.
]
rJ
h
]
rK
h4
]
rL
uh7Nh8h
h
]
rM
hY
)
rN
}
rO
(
h
jF
h
"
jD
h
#
h
&
h
(
h
]
h
*
}
rP
(
h0
]
rQ
h2
]
rR
h
.
]
rS
h
]
rT
h4
]
rU
uh7K
h
]
rV
(
h
~
)
rW
}
rX
(
h
X
__get__
rY
h
*
}
rZ
(
h0
]
r
[
h2
]
r
\
h
.
]
r
]
h
]
r
^
h4
]
r_
uh
"
jN
h
]
r
hUX
__get__ra
rb
}
rc
(
h
U
h
"
jW
ubah
(
h
ubhUX
rd
re
}
rf
(
h
X
rg
h
"
jN
ubh
~
)
rh
}
ri
(
h
X
__set__
rj
h
*
}
rk
(
h0
]
rl
h2
]
rm
h
.
]
rn
h
]
ro
h4
]
rp
uh
"
jN
h
]
rq
hUX
__set__rr
rs
}
rt
(
h
U
h
"
jh
ubah
(
h
ubhUX
and
ru
rv
}
rw
(
h
X
and
rx
h
"
jN
ubh
~
)
ry
}
rz
(
h
X
__delete__
r
{
h
*
}
r
|
(
h0
]
r
}
h2
]
r
~
h
.
]
r
h
]
r
h4
]
r
uh
"
jN
h
]
r
hUX
__delete__r
r
}
r
(
h
U
h
"
jy
ubah
(
h
ubeubaubj
)
r
}
r
(
h
X
__reversed__
and
__missing__
r
h
"
jo
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
j
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__reversed__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__reversed__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__missing__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__missing__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubeubaubj
)
r
}
r
(
h
Xq
__reduce__
__reduce_ex__
__getinitargs__
__getnewargs__
__getstate__
and
__setstate__
r
h
"
jo
h
#
h
&
h
(
j
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hY
)
r
}
r
(
h
Xq
__reduce__
__reduce_ex__
__getinitargs__
__getnewargs__
__getstate__
and
__setstate__
r
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
h
~
)
r
}
r
(
h
X
__reduce__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__reduce__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__reduce_ex__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__reduce_ex__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__getinitargs__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__getinitargs__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__getnewargs__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__getnewargs__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
r
r
}
r
(
h
X
r
h
"
j
ubh
~
)
r
}
r
(
h
X
__getstate__
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
__getstate__r
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
and
r
r
}
r
(
h
X
and
r
h
"
j
ubh
~
)
r
}
r
!
(
h
X
__setstate__
r
"
h
*
}
r
#
(
h0
]
r
h2
]
r
%
h
.
]
r
&
h
]
r
'
h4
]
r
(
uh
"
j
h
]
r
)
hUX
__setstate__r
*
r
+
}
r
(
h
U
h
"
j
ubah
(
h
ubeubaubj
)
r
-
}
r
.
(
h
X
*
__getformat__
and
__setformat__
r
/
h
"
jo
h
#
h
&
h
(
j
h
*
}
r0
(
h0
]
r1
h2
]
r2
h
.
]
r3
h
]
r4
h4
]
r5
uh7Nh8h
h
]
r6
hY
)
r7
}
r8
(
h
X
'
__getformat__
and
__setformat__
r9
h
"
j
-
h
#
h
&
h
(
h
]
h
*
}
r
:
(
h0
]
r
;
h2
]
r
<
h
.
]
r
=
h
]
r
>
h4
]
r
?
uh7K
h
]
r
(
h
~
)
rA
}
rB
(
h
X
__getformat__
rC
h
*
}
rD
(
h0
]
rE
h2
]
rF
h
.
]
rG
h
]
rH
h4
]
rI
uh
"
j7
h
]
rJ
hUX
__getformat__rK
rL
}
rM
(
h
U
h
"
jA
ubah
(
h
ubhUX
and
rN
rO
}
rP
(
h
X
and
rQ
h
"
j7
ubh
~
)
rR
}
rS
(
h
X
__setformat__
rT
h
*
}
rU
(
h0
]
rV
h2
]
rW
h
.
]
rX
h
]
rY
h4
]
rZ
uh
"
j7
h
]
r
[
hUX
__setformat__r
\
r
]
}
r
^
(
h
U
h
"
jR
ubah
(
h
ubeubaubeubcdocutils
.
nodes
transition
r_
)
r
}
ra
(
h
X
-
-
-
-
-
-
-
-
-
-
-
-
rb
h
"
j
h
#
h
&
h
(
U
transitionrc
h
*
}
rd
(
h0
]
re
h2
]
rf
h
.
]
rg
h
]
rh
h4
]
ri
uh7K
h8h
h
]
rj
ubcdocutils
.
nodes
footnote
rk
)
rl
}
rm
(
h
X
Magic
methods
*
should
*
be
looked
up
on
the
class
rather
than
the
instance
.
Different
versions
of
Python
are
inconsistent
about
applying
this
rule
.
The
supported
protocol
methods
should
work
with
all
supported
versions
of
Python
.
rn
h
"
j
h
#
h
&
h
(
U
footnotero
h
*
}
rp
(
h
K
h
]
rq
h
ah
.
]
rr
h
ah0
]
rs
h2
]
rt
h4
]
ru
U
1auh7K
h8h
h
]
rv
(
cdocutils
.
nodes
label
rw
)
rx
}
ry
(
h
U
h
"
jl
h
#
Nh
(
U
labelrz
h
*
}
r
{
(
h0
]
r
|
h2
]
r
}
h
.
]
r
~
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hUX
1
r
}
r
(
h
U
h
"
jx
ubaubhY
)
r
}
r
(
h
X
Magic
methods
*
should
*
be
looked
up
on
the
class
rather
than
the
instance
.
Different
versions
of
Python
are
inconsistent
about
applying
this
rule
.
The
supported
protocol
methods
should
work
with
all
supported
versions
of
Python
.
r
h
"
jl
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7K
h
]
r
(
hUX
Magic
methods
r
r
}
r
(
h
X
Magic
methods
r
h
"
j
ubh
)
r
}
r
(
h
X
*
should
*
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
shouldr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
be
looked
up
on
the
class
rather
than
the
instance
.
Different
versions
of
Python
are
inconsistent
about
applying
this
rule
.
The
supported
protocol
methods
should
work
with
all
supported
versions
of
Python
.
r
r
}
r
(
h
X
be
looked
up
on
the
class
rather
than
the
instance
.
Different
versions
of
Python
are
inconsistent
about
applying
this
rule
.
The
supported
protocol
methods
should
work
with
all
supported
versions
of
Python
.
r
h
"
j
ubeubeubjk
)
r
}
r
(
h
Xn
The
function
is
basically
hooked
up
to
the
class
but
each
Mock
instance
is
kept
isolated
from
the
others
.
r
h
"
j
h
#
h
&
h
(
jo
h
*
}
r
(
h
K
h
]
r
h
ah
.
]
r
j
ah0
]
r
h2
]
r
h4
]
r
U
2auh7M
h8h
h
]
r
(
jw
)
r
}
r
(
h
U
h
"
j
h
#
Nh
(
jz
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7Nh8h
h
]
r
hUX
2
r
}
r
(
h
U
h
"
j
ubaubhY
)
r
}
r
(
h
Xn
The
function
is
basically
hooked
up
to
the
class
but
each
Mock
instance
is
kept
isolated
from
the
others
.
r
h
"
j
h
#
h
&
h
(
h
]
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh7M
h
]
r
(
hUX
;
The
function
is
basically
hooked
up
to
the
class
but
each
r
r
}
r
(
h
X
;
The
function
is
basically
hooked
up
to
the
class
but
each
r
h
"
j
ubh
~
)
r
}
r
(
h
X
Mock
r
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX
Mockr
r
}
r
(
h
U
h
"
j
ubah
(
h
ubhUX
+
instance
is
kept
isolated
from
the
others
.
r
r
}
r
(
h
X
+
instance
is
kept
isolated
from
the
others
.
r
h
"
j
ubeubeubeubeh
U
U
transformerr
NU
footnote_refsr
}
r
U
refnamesr
}
r
U
symbol_footnotesr
]
r
U
autofootnote_refsr
]
r
(
h
j
eU
symbol_footnote_refsr
]
r
U
citationsr
]
r
h8h
U
current_liner
NU
transform_messagesr
]
r
cdocutils
.
nodes
system_message
r
)
r
}
r
(
h
U
h
*
}
r
(
h0
]
r
U
levelr
K
h
]
r
h
.
]
r
U
sourcer
h
&
h2
]
r
h4
]
r
U
liner
K
U
typer
U
INFOr
uh
]
r
hY
)
r
}
r
(
h
U
h
*
}
r
(
h0
]
r
h2
]
r
h
.
]
r
h
]
r
h4
]
r
uh
"
j
h
]
r
hUX3
Hyperlink
target
"
magic
-
methods
"
is
not
referenced
.
r
r
}
r
(
h
U
h
"
j
ubah
(
h
]
ubah
(
U
system_messager
ubaU
reporterr
NU
id_startr
K
U
autofootnotesr
]
r
(
jl
j
eU
citation_refsr
}
r
U
indirect_targetsr
]
r
U
settingsr
(
cdocutils
.
frontend
Values
r
or
}
r
(
U
footnote_backlinksr
K
U
record_dependenciesr
NU
rfc_base_urlr
U
http
:
/
/
tools
.
ietf
.
org
/
html
/
r
U
tracebackr
U
pep_referencesr
NU
strip_commentsr
NU
toc_backlinksr
U
entryr
U
language_coder
U
enr
U
datestampr
NU
report_levelr
K
U
_destinationr
NU
halt_levelr
K
U
strip_classesr
NhMNU
error_encoding_error_handlerr
U
backslashreplacer
U
debugr
!
NU
embed_stylesheetr
"
U
output_encoding_error_handlerr
#
U
strictr
U
sectnum_xformr
%
K
U
dump_transformsr
&
NU
docinfo_xformr
'
K
U
warning_streamr
(
NU
pep_file_url_templater
)
U
pep
-
%
04dr
*
U
exit_status_levelr
+
K
U
configr
NU
strict_visitorr
-
NU
cloak_email_addressesr
.
U
trim_footnote_reference_spacer
/
U
envr0
NU
dump_pseudo_xmlr1
NU
expose_internalsr2
NU
sectsubtitle_xformr3
U
source_linkr4
NU
rfc_referencesr5
NU
output_encodingr6
U
utf
-
8r7
U
source_urlr8
NU
input_encodingr9
U
utf
-
8
-
sigr
:
U
_disable_configr
;
NU
id_prefixr
<
U
U
tab_widthr
=
K
U
error_encodingr
>
U
mac
-
romanr
?
U
_sourcer
U
/
compile
/
mock
/
docs
/
magicmock
.
txtrA
U
gettext_compactrB
U
generatorrC
NU
dump_internalsrD
NU
pep_base_urlrE
U
http
:
/
/
www
.
python
.
org
/
dev
/
peps
/
rF
U
syntax_highlightrG
U
shortrH
U
input_encoding_error_handlerrI
j
U
auto_id_prefixrJ
U
idrK
U
doctitle_xformrL
U
strip_elements_with_classesrM
NU
_config_filesrN
]
rO
U
file_insertion_enabledrP
K
U
raw_enabledrQ
K
U
dump_settingsrR
NubU
symbol_footnote_startrS
K
U
idsrT
}
rU
(
h
j
h
j7
h
j
h
h
;
h
jl
h
j
h
h
j
j
h
h
h
h
;
uU
substitution_namesrV
}
rW
h
(
h8h
*
}
rX
(
h0
]
rY
h
]
rZ
h
.
]
r
[
U
sourcer
\
h
&
h2
]
r
]
h4
]
r
^
uU
footnotesr_
]
r
U
refidsra
}
rb
(
h
]
rc
h
ah
]
rd
h
ah
]
re
j
auub
.
