#
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
#
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
#
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
import
logging
import
contextlib
import
sys
from
six
import
StringIO
contextlib
.
contextmanager
def
silence
(
)
:
    
oldout
olderr
=
sys
.
stdout
sys
.
stderr
    
try
:
        
sys
.
stdout
sys
.
stderr
=
StringIO
(
)
StringIO
(
)
        
yield
    
finally
:
        
sys
.
stdout
sys
.
stderr
=
oldout
olderr
def
host_platform
(
)
:
    
is_64bits
=
sys
.
maxsize
>
2
*
*
32
    
if
sys
.
platform
.
startswith
(
"
win
"
)
:
        
if
is_64bits
:
            
return
"
win64
"
    
elif
sys
.
platform
.
startswith
(
"
linux
"
)
:
        
if
is_64bits
:
            
return
"
linux64
"
    
elif
sys
.
platform
.
startswith
(
"
darwin
"
)
:
        
return
"
darwin
"
    
raise
ValueError
(
"
sys
.
platform
is
not
yet
supported
:
{
}
"
.
format
(
sys
.
platform
)
)
class
MachLogger
:
    
"
"
"
Wrapper
around
the
mach
logger
to
make
logging
simpler
.
    
"
"
"
    
def
__init__
(
self
mach_cmd
)
:
        
self
.
_logger
=
mach_cmd
.
log
    
property
    
def
log
(
self
)
:
        
return
self
.
_logger
    
def
info
(
self
msg
name
=
"
mozperftest
"
*
*
kwargs
)
:
        
self
.
_logger
(
logging
.
INFO
name
kwargs
msg
)
    
def
debug
(
self
msg
name
=
"
mozperftest
"
*
*
kwargs
)
:
        
self
.
_logger
(
logging
.
DEBUG
name
kwargs
msg
)
    
def
warning
(
self
msg
name
=
"
mozperftest
"
*
*
kwargs
)
:
        
self
.
_logger
(
logging
.
WARNING
name
kwargs
msg
)
    
def
error
(
self
msg
name
=
"
mozperftest
"
*
*
kwargs
)
:
        
self
.
_logger
(
logging
.
ERROR
name
kwargs
msg
)
