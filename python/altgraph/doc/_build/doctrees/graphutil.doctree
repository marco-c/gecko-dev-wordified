cdocutils
.
nodes
document
q
)
q
}
q
(
U
nametypesq
}
q
(
X
(
altgraph
.
graphutil
-
-
-
utility
functionsq
NX
altgraph
.
GraphUtil
.
generate_scale_free_graphq
X
wolfram
mathworldq
X
altgraph
.
GraphUtil
.
filter_stackq
X
(
altgraph
.
GraphUtil
.
generate_random_graphq
uU
substitution_defsq
}
q
U
parse_messagesq
]
q
U
current_sourceq
NU
decorationq
NU
autofootnote_startq
K
U
nameidsq
}
q
(
h
U
altgraph
-
graphutil
-
utility
-
functionsq
h
h
h
U
wolfram
-
mathworldq
h
h
h
h
uU
childrenq
]
q
cdocutils
.
nodes
section
q
)
q
}
q
(
U
rawsourceq
U
U
parentq
h
U
sourceq
cdocutils
.
nodes
reprunicode
q
X
;
/
Users
/
ronald
/
Projects
/
pyobjc
-
hg
/
altgraph
/
doc
/
graphutil
.
rstq
q
}
q
!
bU
tagnameq
"
U
sectionq
#
U
attributesq
}
q
%
(
U
dupnamesq
&
]
U
classesq
'
]
U
backrefsq
(
]
U
idsq
)
]
q
*
(
X
module
-
altgraph
.
GraphUtilq
+
h
eU
namesq
]
q
-
h
auU
lineq
.
K
U
documentq
/
h
h
]
q0
(
cdocutils
.
nodes
title
q1
)
q2
}
q3
(
h
X
/
:
mod
:
altgraph
.
GraphUtil
-
-
-
Utility
functionsq4h
h
h
h
h
"
U
titleq5h
}
q6
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
q7
(
csphinx
.
addnodes
pending_xref
q8
)
q9
}
q
:
(
h
X
:
mod
:
altgraph
.
GraphUtil
q
;
h
h2h
h
h
"
U
pending_xrefq
<
h
}
q
=
(
U
reftypeX
modU
refwarnq
>
U
reftargetq
?
X
altgraph
.
GraphUtilU
refdomainX
pyq
h
)
]
h
(
]
U
refexplicit
h
&
]
h
'
]
h
]
U
refdocqAX
graphutilqBU
py
:
classqCNU
py
:
moduleqDNuh
.
K
h
]
qEcdocutils
.
nodes
literal
qF
)
qG
}
qH
(
h
h
;
h
}
qI
(
h
&
]
h
'
]
qJ
(
U
xrefqKh
X
py
-
modqLeh
(
]
h
)
]
h
]
uh
h9h
]
qMcdocutils
.
nodes
Text
qNX
altgraph
.
GraphUtilqO
qP
}
qQ
(
h
U
h
hGubah
"
U
literalqRubaubhNX
-
-
-
Utility
functionsqS
qT
}
qU
(
h
X
-
-
-
Utility
functionsqVh
h2ubeubcsphinx
.
addnodes
index
qW
)
qX
}
qY
(
h
U
h
h
h
h
h
"
U
indexqZh
}
q
[
(
h
)
]
h
(
]
h
&
]
h
'
]
h
]
U
entries
]
q
\
(
U
singleq
]
X
altgraph
.
GraphUtil
(
module
)
X
module
-
altgraph
.
GraphUtilU
tq
^
auh
.
Nh
/
h
h
]
ubcdocutils
.
nodes
paragraph
q_
)
q
}
qa
(
h
X
The
module
:
mod
:
altgraph
.
GraphUtil
performs
a
number
of
more
or
less
useful
utility
functions
.
h
h
h
h
h
"
U
paragraphqbh
}
qc
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
qd
(
hNX
The
module
qe
qf
}
qg
(
h
X
The
module
h
h
ubh8
)
qh
}
qi
(
h
X
:
mod
:
altgraph
.
GraphUtil
qjh
h
h
h
h
"
h
<
h
}
qk
(
U
reftypeX
modh
>
h
?
X
altgraph
.
GraphUtilU
refdomainX
pyqlh
)
]
h
(
]
U
refexplicit
h
&
]
h
'
]
h
]
hAhBhCNhDX
altgraph
.
GraphUtilqmuh
.
K
h
]
qnhF
)
qo
}
qp
(
h
hjh
}
qq
(
h
&
]
h
'
]
qr
(
hKhlX
py
-
modqseh
(
]
h
)
]
h
]
uh
hhh
]
qthNX
altgraph
.
GraphUtilqu
qv
}
qw
(
h
U
h
houbah
"
hRubaubhNX
<
performs
a
number
of
more
or
less
useful
utility
functions
.
qx
qy
}
qz
(
h
X
<
performs
a
number
of
more
or
less
useful
utility
functions
.
h
h
ubeubhW
)
q
{
}
q
|
(
h
U
h
h
h
h
h
"
hZh
}
q
}
(
h
)
]
h
(
]
h
&
]
h
'
]
h
]
U
entries
]
q
~
(
h
]
X6
generate_random_graph
(
)
(
in
module
altgraph
.
GraphUtil
)
h
U
tq
auh
.
Nh
/
h
h
]
ubcsphinx
.
addnodes
desc
q
)
q
}
q
(
h
U
h
h
h
h
h
"
U
descq
h
}
q
(
U
noindexq
U
domainq
X
pyh
)
]
h
(
]
h
&
]
h
'
]
h
]
U
objtypeq
X
functionq
U
desctypeq
h
uh
.
Nh
/
h
h
]
q
(
csphinx
.
addnodes
desc_signature
q
)
q
}
q
(
h
XE
generate_random_graph
(
node_num
edge_num
[
self_loops
[
multi_edges
]
)
h
h
h
h
h
"
U
desc_signatureq
h
}
q
(
h
)
]
q
h
aU
moduleq
hmh
(
]
h
&
]
h
'
]
h
]
q
h
aU
fullnameq
X
generate_random_graphq
U
classq
U
U
firstq
uh
.
K
h
/
h
h
]
q
(
csphinx
.
addnodes
desc_addname
q
)
q
}
q
(
h
X
altgraph
.
GraphUtil
.
h
h
h
h
h
"
U
desc_addnameq
h
}
q
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
q
hNX
altgraph
.
GraphUtil
.
q
q
}
q
(
h
U
h
h
ubaubcsphinx
.
addnodes
desc_name
q
)
q
}
q
(
h
h
h
h
h
h
h
"
U
desc_nameq
h
}
q
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
q
hNX
generate_random_graphq
q
}
q
(
h
U
h
h
ubaubcsphinx
.
addnodes
desc_parameterlist
q
)
q
}
q
(
h
U
h
h
h
h
h
"
U
desc_parameterlistq
h
}
q
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
q
csphinx
.
addnodes
desc_parameter
q
)
q
}
q
(
h
X
.
node_num
edge_num
[
self_loops
[
multi_edges
]
h
h
h
h
h
"
U
desc_parameterq
h
}
q
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
q
hNX
.
node_num
edge_num
[
self_loops
[
multi_edges
]
q
q
}
q
(
h
U
h
h
ubaubaubeubcsphinx
.
addnodes
desc_content
q
)
q
}
q
(
h
U
h
h
h
h
h
"
U
desc_contentq
h
}
q
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
q
(
h_
)
q
}
q
(
h
X
Generates
and
returns
a
:
class
:
Graph
<
altgraph
.
Graph
.
Graph
>
instance
with
*
node_num
*
nodes
randomly
connected
by
*
edge_num
*
edges
.
h
h
h
h
h
"
hbh
}
q
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
q
(
hNX
Generates
and
returns
a
q
q
}
q
(
h
X
Generates
and
returns
a
h
h
ubh8
)
q
}
q
(
h
X
%
:
class
:
Graph
<
altgraph
.
Graph
.
Graph
>
q
h
h
h
h
h
"
h
<
h
}
q
(
U
reftypeX
classh
>
h
?
X
altgraph
.
Graph
.
GraphU
refdomainX
pyq
h
)
]
h
(
]
U
refexplicit
h
&
]
h
'
]
h
]
hAhBhCNhDhmuh
.
K
h
]
q
hF
)
q
}
q
(
h
h
h
}
q
(
h
&
]
h
'
]
q
(
hKh
X
py
-
classq
eh
(
]
h
)
]
h
]
uh
h
h
]
q
hNX
Graphq
q
}
q
(
h
U
h
h
ubah
"
hRubaubhNX
instance
with
q
q
}
q
(
h
X
instance
with
h
h
ubcdocutils
.
nodes
emphasis
q
)
q
}
q
(
h
X
*
node_num
*
h
}
q
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
h
h
]
q
hNX
node_numq
q
}
q
(
h
U
h
h
ubah
"
U
emphasisq
ubhNX
nodes
randomly
connected
by
q
q
}
q
(
h
X
nodes
randomly
connected
by
h
h
ubh
)
q
}
q
(
h
X
*
edge_num
*
h
}
q
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
h
h
]
q
hNX
edge_numq
q
}
q
(
h
U
h
h
ubah
"
h
ubhNX
edges
.
q
q
}
q
(
h
X
edges
.
h
h
ubeubh_
)
q
}
q
(
h
XZ
When
*
self_loops
*
is
present
and
True
there
can
be
edges
that
point
from
a
node
to
itself
.
h
h
h
h
h
"
hbh
}
q
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
q
(
hNX
When
q
q
}
q
(
h
X
When
h
h
ubh
)
q
}
q
(
h
X
*
self_loops
*
h
}
q
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
h
h
]
q
hNX
self_loopsq
q
}
q
(
h
U
h
h
ubah
"
h
ubhNXI
is
present
and
True
there
can
be
edges
that
point
from
a
node
to
itself
.
q
q
}
q
(
h
XI
is
present
and
True
there
can
be
edges
that
point
from
a
node
to
itself
.
h
h
ubeubh_
)
q
}
r
(
h
XC
When
*
multi_edge
*
is
present
and
True
there
can
be
duplicate
edges
.
h
h
h
h
h
"
hbh
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
r
(
hNX
When
r
r
}
r
(
h
X
When
h
h
ubh
)
r
}
r
(
h
X
*
multi_edge
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
h
h
]
r
hNX
multi_edger
r
}
r
(
h
U
h
j
ubah
"
h
ubhNX2
is
present
and
True
there
can
be
duplicate
edges
.
r
r
}
r
(
h
X2
is
present
and
True
there
can
be
duplicate
edges
.
h
h
ubeubh_
)
r
}
r
(
h
X
|
This
method
raises
:
class
:
GraphError
<
altgraph
.
GraphError
when
a
graph
with
the
requested
configuration
cannot
be
created
.
h
h
h
h
h
"
hbh
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
r
(
hNX
This
method
raises
r
r
}
r
(
h
X
This
method
raises
h
j
ubh8
)
r
}
r
(
h
X
(
:
class
:
GraphError
<
altgraph
.
GraphError
r
h
j
h
h
h
"
h
<
h
}
r
(
U
reftypeX
classh
>
h
?
X
GraphError
<
altgraph
.
GraphErrorU
refdomainX
pyr
h
)
]
h
(
]
U
refexplicit
h
&
]
h
'
]
h
]
hAhBhCNhDhmuh
.
K
h
]
r
hF
)
r
}
r
(
h
j
h
}
r
(
h
&
]
h
'
]
r
(
hKj
X
py
-
classr
!
eh
(
]
h
)
]
h
]
uh
j
h
]
r
"
hNX
GraphError
<
altgraph
.
GraphErrorr
#
r
}
r
%
(
h
U
h
j
ubah
"
hRubaubhNXA
when
a
graph
with
the
requested
configuration
cannot
be
created
.
r
&
r
'
}
r
(
(
h
XA
when
a
graph
with
the
requested
configuration
cannot
be
created
.
h
j
ubeubeubeubhW
)
r
)
}
r
*
(
h
U
h
h
h
Nh
"
hZh
}
r
+
(
h
)
]
h
(
]
h
&
]
h
'
]
h
]
U
entries
]
r
(
h
]
X
:
generate_scale_free_graph
(
)
(
in
module
altgraph
.
GraphUtil
)
h
U
tr
-
auh
.
Nh
/
h
h
]
ubh
)
r
.
}
r
/
(
h
U
h
h
h
Nh
"
h
h
}
r0
(
h
h
X
pyh
)
]
h
(
]
h
&
]
h
'
]
h
]
h
X
functionr1
h
j1
uh
.
Nh
/
h
h
]
r2
(
h
)
r3
}
r4
(
h
XI
generate_scale_free_graph
(
steps
growth_num
[
self_loops
[
multi_edges
]
]
)
h
j
.
h
h
h
"
h
h
}
r5
(
h
)
]
r6
h
ah
hmh
(
]
h
&
]
h
'
]
h
]
r7
h
ah
X
generate_scale_free_graphr8
h
U
h
uh
.
K
&
h
/
h
h
]
r9
(
h
)
r
:
}
r
;
(
h
X
altgraph
.
GraphUtil
.
h
j3
h
h
h
"
h
h
}
r
<
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
&
h
/
h
h
]
r
=
hNX
altgraph
.
GraphUtil
.
r
>
r
?
}
r
(
h
U
h
j
:
ubaubh
)
rA
}
rB
(
h
j8
h
j3
h
h
h
"
h
h
}
rC
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
&
h
/
h
h
]
rD
hNX
generate_scale_free_graphrE
rF
}
rG
(
h
U
h
jA
ubaubh
)
rH
}
rI
(
h
U
h
j3
h
h
h
"
h
h
}
rJ
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
&
h
/
h
h
]
rK
(
h
)
rL
}
rM
(
h
X
stepsh
}
rN
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
jH
h
]
rO
hNX
stepsrP
rQ
}
rR
(
h
U
h
jL
ubah
"
h
ubh
)
rS
}
rT
(
h
X
growth_numh
}
rU
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
jH
h
]
rV
hNX
growth_numrW
rX
}
rY
(
h
U
h
jS
ubah
"
h
ubcsphinx
.
addnodes
desc_optional
rZ
)
r
[
}
r
\
(
h
U
h
}
r
]
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
jH
h
]
r
^
(
h
)
r_
}
r
(
h
X
self_loopsh
}
ra
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
[
h
]
rb
hNX
self_loopsrc
rd
}
re
(
h
U
h
j_
ubah
"
h
ubjZ
)
rf
}
rg
(
h
U
h
}
rh
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
[
h
]
ri
h
)
rj
}
rk
(
h
X
multi_edgesh
}
rl
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
jf
h
]
rm
hNX
multi_edgesrn
ro
}
rp
(
h
U
h
jj
ubah
"
h
ubah
"
U
desc_optionalrq
ubeh
"
jq
ubeubeubh
)
rr
}
rs
(
h
U
h
j
.
h
h
h
"
h
h
}
rt
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
&
h
/
h
h
]
ru
(
h_
)
rv
}
rw
(
h
X
Generates
and
returns
a
:
py
:
class
:
~
altgraph
.
Graph
.
Graph
instance
that
will
have
*
steps
*
growth_n
um
*
nodes
and
a
scale
free
(
powerlaw
)
connectivity
.
h
jr
h
h
h
"
hbh
}
rx
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
ry
(
hNX
Generates
and
returns
a
rz
r
{
}
r
|
(
h
X
Generates
and
returns
a
h
jv
ubh8
)
r
}
}
r
~
(
h
X
!
:
py
:
class
:
~
altgraph
.
Graph
.
Graph
r
h
jv
h
h
h
"
h
<
h
}
r
(
U
reftypeX
classh
>
h
?
X
altgraph
.
Graph
.
GraphU
refdomainX
pyr
h
)
]
h
(
]
U
refexplicit
h
&
]
h
'
]
h
]
hAhBhCNhDhmuh
.
K
h
]
r
hF
)
r
}
r
(
h
j
h
}
r
(
h
&
]
h
'
]
r
(
hKj
X
py
-
classr
eh
(
]
h
)
]
h
]
uh
j
}
h
]
r
hNX
Graphr
r
}
r
(
h
U
h
j
ubah
"
hRubaubhNX
instance
that
will
have
r
r
}
r
(
h
X
instance
that
will
have
h
jv
ubh
)
r
}
r
(
h
X
*
steps
*
growth_n
um
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
jv
h
]
r
hNX
steps
*
growth_n
umr
r
}
r
(
h
U
h
j
ubah
"
h
ubhNX0
nodes
and
a
scale
free
(
powerlaw
)
connectivity
.
r
r
}
r
(
h
X0
nodes
and
a
scale
free
(
powerlaw
)
connectivity
.
h
jv
ubeubh_
)
r
}
r
(
h
X
Starting
with
a
fully
connected
graph
with
*
growth_num
*
nodes
at
every
step
*
growth_num
*
nodes
are
added
to
the
graph
and
are
connected
to
existing
nodes
with
a
probability
proportional
to
the
degree
of
these
existing
nodes
.
h
jr
h
h
h
"
hbh
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
h
/
h
h
]
r
(
hNX
+
Starting
with
a
fully
connected
graph
with
r
r
}
r
(
h
X
+
Starting
with
a
fully
connected
graph
with
h
j
ubh
)
r
}
r
(
h
X
*
growth_num
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
growth_numr
r
}
r
(
h
U
h
j
ubah
"
h
ubhNX
nodes
at
every
step
r
r
}
r
(
h
X
nodes
at
every
step
h
j
ubh
)
r
}
r
(
h
X
*
growth_num
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
growth_numr
r
}
r
(
h
U
h
j
ubah
"
h
ubhNX
nodes
are
added
to
the
graph
and
are
connected
to
existing
nodes
with
a
probability
proportional
to
the
degree
of
these
existing
nodes
.
r
r
}
r
(
h
X
nodes
are
added
to
the
graph
and
are
connected
to
existing
nodes
with
a
probability
proportional
to
the
degree
of
these
existing
nodes
.
h
j
ubeubcdocutils
.
nodes
warning
r
)
r
}
r
(
h
X
The
current
implementation
is
basically
untested
although
code
inspection
seems
to
indicate
an
implementation
that
is
consistent
with
the
description
at
Wolfram
MathWorld
<
http
:
/
/
mathworld
.
wolfram
.
com
/
Scale
-
FreeNetwork
.
html
>
_h
jr
h
h
h
"
U
warningr
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
Nh
/
h
h
]
r
h_
)
r
}
r
(
h
X
The
current
implementation
is
basically
untested
although
code
inspection
seems
to
indicate
an
implementation
that
is
consistent
with
the
description
at
Wolfram
MathWorld
<
http
:
/
/
mathworld
.
wolfram
.
com
/
Scale
-
FreeNetwork
.
html
>
_h
j
h
h
h
"
hbh
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
"
h
]
r
(
hNX
The
current
implementation
is
basically
untested
although
code
inspection
seems
to
indicate
an
implementation
that
is
consistent
with
the
description
at
r
r
}
r
(
h
X
The
current
implementation
is
basically
untested
although
code
inspection
seems
to
indicate
an
implementation
that
is
consistent
with
the
description
at
h
j
ubcdocutils
.
nodes
reference
r
)
r
}
r
(
h
XJ
Wolfram
MathWorld
<
http
:
/
/
mathworld
.
wolfram
.
com
/
Scale
-
FreeNetwork
.
html
>
_h
}
r
(
U
nameX
Wolfram
MathWorldU
refurir
X3
http
:
/
/
mathworld
.
wolfram
.
com
/
Scale
-
FreeNetwork
.
htmlr
h
)
]
h
(
]
h
&
]
h
'
]
h
]
uh
j
h
]
r
hNX
Wolfram
MathWorldr
r
}
r
(
h
U
h
j
ubah
"
U
referencer
ubcdocutils
.
nodes
target
r
)
r
}
r
(
h
X6
<
http
:
/
/
mathworld
.
wolfram
.
com
/
Scale
-
FreeNetwork
.
html
>
U
referencedr
K
h
j
h
"
U
targetr
h
}
r
(
U
refurij
h
)
]
r
h
ah
(
]
h
&
]
h
'
]
h
]
r
h
auh
]
ubeubaubeubeubhW
)
r
}
r
(
h
U
h
h
h
Nh
"
hZh
}
r
(
h
)
]
h
(
]
h
&
]
h
'
]
h
]
U
entries
]
r
(
h
]
X
-
filter_stack
(
)
(
in
module
altgraph
.
GraphUtil
)
h
U
tr
auh
.
Nh
/
h
h
]
ubh
)
r
}
r
(
h
U
h
h
h
Nh
"
h
h
}
r
(
h
h
X
pyh
)
]
h
(
]
h
&
]
h
'
]
h
]
h
X
functionr
h
j
uh
.
Nh
/
h
h
]
r
(
h
)
r
}
r
(
h
X
"
filter_stack
(
graph
head
filters
)
h
j
h
h
h
"
h
h
}
r
(
h
)
]
r
h
ah
hmh
(
]
h
&
]
h
'
]
h
]
r
h
ah
X
filter_stackr
h
U
h
uh
.
K7h
/
h
h
]
r
(
h
)
r
}
r
(
h
X
altgraph
.
GraphUtil
.
h
j
h
h
h
"
h
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K7h
/
h
h
]
r
hNX
altgraph
.
GraphUtil
.
r
r
}
r
(
h
U
h
j
ubaubh
)
r
}
r
(
h
j
h
j
h
h
h
"
h
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K7h
/
h
h
]
r
hNX
filter_stackr
r
}
r
(
h
U
h
j
ubaubh
)
r
}
r
(
h
U
h
j
h
h
h
"
h
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K7h
/
h
h
]
r
(
h
)
r
}
r
(
h
X
graphh
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
graphr
r
}
r
(
h
U
h
j
ubah
"
h
ubh
)
r
}
r
(
h
X
headh
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
headr
r
}
r
(
h
U
h
j
ubah
"
h
ubh
)
r
}
r
(
h
X
filtersh
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
filtersr
r
}
r
(
h
U
h
j
ubah
"
h
ubeubeubh
)
r
}
r
(
h
U
h
j
h
h
h
"
h
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K7h
/
h
h
]
r
(
h_
)
r
}
r
(
h
X
Perform
a
depth
-
first
oder
walk
of
the
graph
starting
at
*
head
*
and
apply
all
filter
functions
in
*
filters
*
on
the
node
data
of
the
nodes
found
.
h
j
h
h
h
"
hbh
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
)
h
/
h
h
]
r
(
hNX9
Perform
a
depth
-
first
oder
walk
of
the
graph
starting
at
r
r
}
r
(
h
X9
Perform
a
depth
-
first
oder
walk
of
the
graph
starting
at
h
j
ubh
)
r
}
r
(
h
X
*
head
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
headr
r
}
r
(
h
U
h
j
ubah
"
h
ubhNX
#
and
apply
all
filter
functions
in
r
r
}
r
(
h
X
#
and
apply
all
filter
functions
in
h
j
ubh
)
r
!
}
r
"
(
h
X
*
filters
*
h
}
r
#
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
filtersr
%
r
&
}
r
'
(
h
U
h
j
!
ubah
"
h
ubhNX
%
on
the
node
data
of
the
nodes
found
.
r
(
r
)
}
r
*
(
h
X
%
on
the
node
data
of
the
nodes
found
.
h
j
ubeubh_
)
r
+
}
r
(
h
X0
Returns
(
*
visited
*
*
removes
*
*
orphans
*
)
wherer
-
h
j
h
h
h
"
hbh
}
r
.
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
-
h
/
h
h
]
r
/
(
hNX
Returns
(
r0
r1
}
r2
(
h
X
Returns
(
h
j
+
ubh
)
r3
}
r4
(
h
X
*
visited
*
h
}
r5
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
+
h
]
r6
hNX
visitedr7
r8
}
r9
(
h
U
h
j3
ubah
"
h
ubhNX
r
:
r
;
}
r
<
(
h
X
h
j
+
ubh
)
r
=
}
r
>
(
h
X
*
removes
*
h
}
r
?
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
+
h
]
r
hNX
removesrA
rB
}
rC
(
h
U
h
j
=
ubah
"
h
ubhNX
rD
rE
}
rF
(
h
X
h
j
+
ubh
)
rG
}
rH
(
h
X
*
orphans
*
h
}
rI
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
+
h
]
rJ
hNX
orphansrK
rL
}
rM
(
h
U
h
jG
ubah
"
h
ubhNX
)
whererN
rO
}
rP
(
h
X
)
whereh
j
+
ubeubcdocutils
.
nodes
bullet_list
rQ
)
rR
}
rS
(
h
U
h
j
h
h
h
"
U
bullet_listrT
h
}
rU
(
U
bulletrV
X
*
h
)
]
h
(
]
h
&
]
h
'
]
h
]
uh
.
K
/
h
/
h
h
]
rW
(
cdocutils
.
nodes
list_item
rX
)
rY
}
rZ
(
h
X
*
visited
*
:
the
set
of
visited
nodes
h
jR
h
h
h
"
U
list_itemr
[
h
}
r
\
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
Nh
/
h
h
]
r
]
h_
)
r
^
}
r_
(
h
X
#
*
visited
*
:
the
set
of
visited
nodesh
jY
h
h
h
"
hbh
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K
/
h
]
ra
(
h
)
rb
}
rc
(
h
X
*
visited
*
h
}
rd
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
^
h
]
re
hNX
visitedrf
rg
}
rh
(
h
U
h
jb
ubah
"
h
ubhNX
:
the
set
of
visited
nodesri
rj
}
rk
(
h
X
:
the
set
of
visited
nodesh
j
^
ubeubaubjX
)
rl
}
rm
(
h
XN
*
removes
*
:
the
list
of
nodes
where
the
node
data
doesn
'
t
match
all
*
filters
*
.
h
jR
h
h
h
"
j
[
h
}
rn
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
Nh
/
h
h
]
ro
h_
)
rp
}
rq
(
h
XM
*
removes
*
:
the
list
of
nodes
where
the
node
data
doesn
'
t
match
all
*
filters
*
.
h
jl
h
h
h
"
hbh
}
rr
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K1h
]
rs
(
h
)
rt
}
ru
(
h
X
*
removes
*
h
}
rv
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
jp
h
]
rw
hNX
removesrx
ry
}
rz
(
h
U
h
jt
ubah
"
h
ubhNX
:
:
the
list
of
nodes
where
the
node
data
doesn
'
t
match
all
r
{
r
|
}
r
}
(
h
X
:
:
the
list
of
nodes
where
the
node
data
doesn
'
t
match
all
h
jp
ubh
)
r
~
}
r
(
h
X
*
filters
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
jp
h
]
r
hNX
filtersr
r
}
r
(
h
U
h
j
~
ubah
"
h
ubhNX
.
r
}
r
(
h
X
.
h
jp
ubeubaubjX
)
r
}
r
(
h
X
*
orphans
*
:
list
of
tuples
(
*
last_good
*
*
node
*
)
where
node
is
not
in
*
removes
*
and
one
of
the
nodes
that
is
connected
by
an
incoming
edge
is
in
*
removes
*
.
*
Last_good
*
is
the
closest
upstream
node
that
is
not
in
*
removes
*
.
h
jR
h
h
h
"
j
[
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
Nh
/
h
h
]
r
h_
)
r
}
r
(
h
X
*
orphans
*
:
list
of
tuples
(
*
last_good
*
*
node
*
)
where
node
is
not
in
*
removes
*
and
one
of
the
nodes
that
is
connected
by
an
incoming
edge
is
in
*
removes
*
.
*
Last_good
*
is
the
closest
upstream
node
that
is
not
in
*
removes
*
.
h
j
h
h
h
"
hbh
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
.
K4h
]
r
(
h
)
r
}
r
(
h
X
*
orphans
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
orphansr
r
}
r
(
h
U
h
j
ubah
"
h
ubhNX
:
list
of
tuples
(
r
r
}
r
(
h
X
:
list
of
tuples
(
h
j
ubh
)
r
}
r
(
h
X
*
last_good
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
last_goodr
r
}
r
(
h
U
h
j
ubah
"
h
ubhNX
r
r
}
r
(
h
X
h
j
ubh
)
r
}
r
(
h
X
*
node
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
noder
r
}
r
(
h
U
h
j
ubah
"
h
ubhNX
)
where
node
is
not
in
r
r
}
r
(
h
X
)
where
node
is
not
in
h
j
ubh
)
r
}
r
(
h
X
*
removes
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
removesr
r
}
r
(
h
U
h
j
ubah
"
h
ubhNXB
and
one
of
the
nodes
that
is
connected
by
an
incoming
edge
is
in
r
r
}
r
(
h
XB
and
one
of
the
nodes
that
is
connected
by
an
incoming
edge
is
in
h
j
ubh
)
r
}
r
(
h
X
*
removes
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
removesr
r
}
r
(
h
U
h
j
ubah
"
h
ubhNX
.
r
r
}
r
(
h
X
.
h
j
ubh
)
r
}
r
(
h
X
*
Last_good
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
Last_goodr
r
}
r
(
h
U
h
j
ubah
"
h
ubhNX
-
is
the
closest
upstream
node
that
is
not
in
r
r
}
r
(
h
X
-
is
the
closest
upstream
node
that
is
not
in
h
j
ubh
)
r
}
r
(
h
X
*
removes
*
h
}
r
(
h
&
]
h
'
]
h
(
]
h
)
]
h
]
uh
j
h
]
r
hNX
removesr
r
}
r
(
h
U
h
j
ubah
"
h
ubhNX
.
r
}
r
(
h
X
.
h
j
ubeubaubeubeubeubeubah
U
U
transformerr
NU
footnote_refsr
}
r
U
refnamesr
}
r
U
symbol_footnotesr
]
r
U
autofootnote_refsr
]
r
U
symbol_footnote_refsr
]
r
U
citationsr
]
r
h
/
h
U
current_liner
NU
transform_messagesr
]
r
U
reporterr
NU
id_startr
K
U
autofootnotesr
]
r
U
citation_refsr
}
r
U
indirect_targetsr
]
r
U
settingsr
(
cdocutils
.
frontend
Values
r
or
}
r
(
U
footnote_backlinksr
K
U
record_dependenciesr
NU
rfc_base_urlr
U
http
:
/
/
tools
.
ietf
.
org
/
html
/
r
U
tracebackr
U
pep_referencesr
NU
strip_commentsr
NU
toc_backlinksr
U
entryr
U
language_coder
U
enr
U
datestampr
NU
report_levelr
K
U
_destinationr
NU
halt_levelr
K
U
strip_classesr
Nh5NU
error_encoding_error_handlerr
U
backslashreplacer
U
debugr
NU
embed_stylesheetr
U
output_encoding_error_handlerr
U
strictr
U
sectnum_xformr
K
U
dump_transformsr
NU
docinfo_xformr
K
U
warning_streamr
NU
pep_file_url_templater
U
pep
-
%
04dr
U
exit_status_levelr
K
U
configr
NU
strict_visitorr
NU
cloak_email_addressesr
U
trim_footnote_reference_spacer
U
envr
NU
dump_pseudo_xmlr
NU
expose_internalsr
NU
sectsubtitle_xformr
U
source_linkr
NU
rfc_referencesr
NU
output_encodingr
U
utf
-
8r
U
source_urlr
NU
input_encodingr
U
utf
-
8
-
sigr
U
_disable_configr
NU
id_prefixr
U
U
tab_widthr
K
U
error_encodingr
U
UTF
-
8r
U
_sourcer
!
U
;
/
Users
/
ronald
/
Projects
/
pyobjc
-
hg
/
altgraph
/
doc
/
graphutil
.
rstr
"
U
gettext_compactr
#
U
generatorr
NU
dump_internalsr
%
NU
smart_quotesr
&
U
pep_base_urlr
'
U
http
:
/
/
www
.
python
.
org
/
dev
/
peps
/
r
(
U
syntax_highlightr
)
U
longr
*
U
input_encoding_error_handlerr
+
j
U
auto_id_prefixr
U
idr
-
U
doctitle_xformr
.
U
strip_elements_with_classesr
/
NU
_config_filesr0
]
U
file_insertion_enabledr1
U
raw_enabledr2
K
U
dump_settingsr3
NubU
symbol_footnote_startr4
K
U
idsr5
}
r6
(
h
h
h
j
h
j
h
j3
h
h
h
+
j
)
r7
}
r8
(
h
U
h
h
h
h
h
"
j
h
}
r9
(
h
&
]
h
)
]
r
:
h
+
ah
(
]
U
ismod
h
'
]
h
]
uh
.
Nh
/
h
h
]
ubuU
substitution_namesr
;
}
r
<
h
"
h
/
h
}
r
=
(
h
&
]
h
)
]
h
(
]
U
sourceh
h
'
]
h
]
uU
footnotesr
>
]
r
?
U
refidsr
}
rA
ub
.
