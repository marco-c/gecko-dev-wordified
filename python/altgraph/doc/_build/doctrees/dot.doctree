cdocutils
.
nodes
document
q
)
q
}
q
(
U
nametypesq
}
q
(
X
altgraph
.
Dot
.
save_imageq
X
customizing
the
outputq
NX
altgraph
.
Dot
.
edge_styleq
X
graphviz
referenceq
X
class
interfaceq
NX
altgraph
.
Dot
.
Dot
.
displayq
X
altgraph
.
Dot
.
Dot
.
styleq
X
altgraph
.
Dot
.
Dot
.
node_styleq
X
altgraph
.
Dot
.
Dotq
X
graphvizq
X
altgraph
.
Dot
.
save_dotq
X
valid
attributesq
NX
graphviz
colorsq
X
%
directed
graph
and
non
-
directed
graphq
NX
altgraph
.
Dot
.
__iter__q
X
example
usageq
NX
emitting
outputq
NX
updating
graph
attributesq
NX
altgraph
.
Dot
.
Dot
.
all_node_styleq
X
altgraph
.
Dot
.
iterdotq
X
.
altgraph
.
dot
-
-
-
interface
to
the
dot
languageq
NuU
substitution_defsq
}
q
U
parse_messagesq
]
q
U
current_sourceq
NU
decorationq
NU
autofootnote_startq
!
K
U
nameidsq
"
}
q
#
(
h
h
h
U
customizing
-
the
-
outputq
h
h
h
U
graphviz
-
referenceq
%
h
U
class
-
interfaceq
&
h
h
h
h
h
h
h
h
h
U
graphvizq
'
h
h
h
U
valid
-
attributesq
(
h
U
graphviz
-
colorsq
)
h
U
%
directed
-
graph
-
and
-
non
-
directed
-
graphq
*
h
h
h
U
example
-
usageq
+
h
U
emitting
-
outputq
h
U
updating
-
graph
-
attributesq
-
h
h
h
h
h
U
*
altgraph
-
dot
-
interface
-
to
-
the
-
dot
-
languageq
.
uU
childrenq
/
]
q0cdocutils
.
nodes
section
q1
)
q2
}
q3
(
U
rawsourceq4U
U
parentq5h
U
sourceq6cdocutils
.
nodes
reprunicode
q7X5
/
Users
/
ronald
/
Projects
/
pyobjc
-
hg
/
altgraph
/
doc
/
dot
.
rstq8
q9
}
q
:
bU
tagnameq
;
U
sectionq
<
U
attributesq
=
}
q
>
(
U
dupnamesq
?
]
U
classesq
]
U
backrefsqA
]
U
idsqB
]
qC
(
X
module
-
altgraph
.
DotqDh
.
eU
namesqE
]
qFh
auU
lineqGK
U
documentqHh
h
/
]
qI
(
cdocutils
.
nodes
title
qJ
)
qK
}
qL
(
h4X5
:
mod
:
altgraph
.
Dot
-
-
-
Interface
to
the
dot
languageqMh5h2h6h9h
;
U
titleqNh
=
}
qO
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
qP
(
csphinx
.
addnodes
pending_xref
qQ
)
qR
}
qS
(
h4X
:
mod
:
altgraph
.
Dot
qTh5hKh6h9h
;
U
pending_xrefqUh
=
}
qV
(
U
reftypeX
modU
refwarnqW
U
reftargetqXX
altgraph
.
DotU
refdomainX
pyqYhB
]
hA
]
U
refexplicit
h
?
]
h
]
hE
]
U
refdocqZX
dotq
[
U
py
:
classq
\
NU
py
:
moduleq
]
NuhGK
h
/
]
q
^
cdocutils
.
nodes
literal
q_
)
q
}
qa
(
h4hTh
=
}
qb
(
h
?
]
h
]
qc
(
U
xrefqdhYX
py
-
modqeehA
]
hB
]
hE
]
uh5hRh
/
]
qfcdocutils
.
nodes
Text
qgX
altgraph
.
Dotqh
qi
}
qj
(
h4U
h5h
ubah
;
U
literalqkubaubhgX
"
-
-
-
Interface
to
the
dot
languageql
qm
}
qn
(
h4X
"
-
-
-
Interface
to
the
dot
languageqoh5hKubeubcsphinx
.
addnodes
index
qp
)
qq
}
qr
(
h4U
h5h2h6h9h
;
U
indexqsh
=
}
qt
(
hB
]
hA
]
h
?
]
h
]
hE
]
U
entries
]
qu
(
U
singleqvX
altgraph
.
Dot
(
module
)
X
module
-
altgraph
.
DotU
tqwauhGNhHh
h
/
]
ubcdocutils
.
nodes
paragraph
qx
)
qy
}
qz
(
h4X
The
:
py
:
mod
:
~
altgraph
.
Dot
module
provides
a
simple
interface
to
the
file
format
used
in
the
graphviz
_
program
.
The
module
is
intended
to
offload
the
most
tedious
part
of
the
process
(
the
*
*
dot
*
*
file
generation
)
while
transparently
exposing
most
of
its
features
.
h5h2h6h9h
;
U
paragraphq
{
h
=
}
q
|
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
q
}
(
hgX
The
q
~
q
}
q
(
h4X
The
h5hyubhQ
)
q
}
q
(
h4X
:
py
:
mod
:
~
altgraph
.
Dot
q
h5hyh6h9h
;
hUh
=
}
q
(
U
reftypeX
modhW
hXX
altgraph
.
DotU
refdomainX
pyq
hB
]
hA
]
U
refexplicit
h
?
]
h
]
hE
]
hZh
[
h
\
Nh
]
X
altgraph
.
Dotq
uhGK
h
/
]
q
h_
)
q
}
q
(
h4h
h
=
}
q
(
h
?
]
h
]
q
(
hdh
X
py
-
modq
ehA
]
hB
]
hE
]
uh5h
h
/
]
q
hgX
Dotq
q
}
q
(
h4U
h5h
ubah
;
hkubaubhgXC
module
provides
a
simple
interface
to
the
file
format
used
in
the
q
q
}
q
(
h4XC
module
provides
a
simple
interface
to
the
file
format
used
in
the
h5hyubcdocutils
.
nodes
reference
q
)
q
}
q
(
h4X
graphviz
_U
resolvedq
K
h5hyh
;
U
referenceq
h
=
}
q
(
U
nameX
graphvizq
U
refuriq
X2
<
http
:
/
/
www
.
research
.
att
.
com
/
sw
/
tools
/
graphviz
/
>
_q
hB
]
hA
]
h
?
]
h
]
hE
]
uh
/
]
q
hgX
graphvizq
q
}
q
(
h4U
h5h
ubaubhgXV
program
.
The
module
is
intended
to
offload
the
most
tedious
part
of
the
process
(
the
q
q
}
q
(
h4XV
program
.
The
module
is
intended
to
offload
the
most
tedious
part
of
the
process
(
the
h5hyubcdocutils
.
nodes
strong
q
)
q
}
q
(
h4X
*
*
dot
*
*
h
=
}
q
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5hyh
/
]
q
hgX
dotq
q
}
q
(
h4U
h5h
ubah
;
U
strongq
ubhgXD
file
generation
)
while
transparently
exposing
most
of
its
features
.
q
q
}
q
(
h4XD
file
generation
)
while
transparently
exposing
most
of
its
features
.
h5hyubeubcdocutils
.
nodes
target
q
)
q
}
q
(
h4XB
.
.
_
graphviz
:
<
http
:
/
/
www
.
research
.
att
.
com
/
sw
/
tools
/
graphviz
/
>
_U
referencedq
K
h5h2h6h9h
;
U
targetq
h
=
}
q
(
h
h
hB
]
q
h
'
ahA
]
h
?
]
h
]
hE
]
q
h
auhGK
hHh
h
/
]
ubhx
)
q
}
q
(
h4X
To
display
the
graphs
or
to
generate
image
files
the
graphviz
_
package
needs
to
be
installed
on
the
system
moreover
the
:
command
:
dot
and
:
command
:
dotty
programs
must
be
accesible
in
the
program
path
so
that
they
can
be
ran
from
processes
spawned
within
the
module
.
h5h2h6h9h
;
h
{
h
=
}
q
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
q
(
hgX5
To
display
the
graphs
or
to
generate
image
files
the
q
q
}
q
(
h4X5
To
display
the
graphs
or
to
generate
image
files
the
h5h
ubh
)
q
}
q
(
h4X
graphviz
_h
K
h5h
h
;
h
h
=
}
q
(
U
nameX
graphvizh
h
hB
]
hA
]
h
?
]
h
]
hE
]
uh
/
]
q
hgX
graphvizq
q
}
q
(
h4U
h5h
ubaubhgX
;
package
needs
to
be
installed
on
the
system
moreover
the
q
q
}
q
(
h4X
;
package
needs
to
be
installed
on
the
system
moreover
the
h5h
ubh
)
q
}
q
(
h4X
:
command
:
dot
h
=
}
q
(
h
?
]
h
]
q
U
commandq
ahA
]
hB
]
hE
]
uh5h
h
/
]
q
hgX
dotq
q
}
q
(
h4U
h5h
ubah
;
h
ubhgX
and
q
q
}
q
(
h4X
and
h5h
ubh
)
q
}
q
(
h4X
:
command
:
dotty
h
=
}
q
(
h
?
]
h
]
q
h
ahA
]
hB
]
hE
]
uh5h
h
/
]
q
hgX
dottyq
q
}
q
(
h4U
h5h
ubah
;
h
ubhgXq
programs
must
be
accesible
in
the
program
path
so
that
they
can
be
ran
from
processes
spawned
within
the
module
.
q
q
}
q
(
h4Xq
programs
must
be
accesible
in
the
program
path
so
that
they
can
be
ran
from
processes
spawned
within
the
module
.
h5h
ubeubh1
)
q
}
q
(
h4U
h5h2h6h9h
;
h
<
h
=
}
q
(
h
?
]
h
]
hA
]
hB
]
q
h
+
ahE
]
q
h
auhGK
hHh
h
/
]
q
(
hJ
)
q
}
q
(
h4X
Example
usageq
h5h
h6h9h
;
hNh
=
}
q
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
q
hgX
Example
usageq
q
}
q
(
h4h
h5h
ubaubhx
)
q
}
q
(
h4X
Here
is
a
typical
usage
:
:
q
h5h
h6h9h
;
h
{
h
=
}
q
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
q
hgX
Here
is
a
typical
usage
:
q
q
}
q
(
h4X
Here
is
a
typical
usage
:
h5h
ubaubcdocutils
.
nodes
literal_block
q
)
q
}
q
(
h4X
from
altgraph
import
Graph
Dot
#
create
a
graph
edges
=
[
(
1
2
)
(
1
3
)
(
3
4
)
(
3
5
)
(
4
5
)
(
5
4
)
]
graph
=
Graph
.
Graph
(
edges
)
#
create
a
dot
representation
of
the
graph
dot
=
Dot
.
Dot
(
graph
)
#
display
the
graph
dot
.
display
(
)
#
save
the
dot
representation
into
the
mydot
.
dot
file
dot
.
save_dot
(
file_name
=
'
mydot
.
dot
'
)
#
save
dot
file
as
gif
image
into
the
graph
.
gif
file
dot
.
save_img
(
file_name
=
'
graph
'
file_type
=
'
gif
'
)
h5h
h6h9h
;
U
literal_blockq
h
=
}
q
(
U
xml
:
spaceq
U
preserveq
hB
]
hA
]
h
?
]
h
]
hE
]
uhGK
hHh
h
/
]
q
hgX
from
altgraph
import
Graph
Dot
#
create
a
graph
edges
=
[
(
1
2
)
(
1
3
)
(
3
4
)
(
3
5
)
(
4
5
)
(
5
4
)
]
graph
=
Graph
.
Graph
(
edges
)
#
create
a
dot
representation
of
the
graph
dot
=
Dot
.
Dot
(
graph
)
#
display
the
graph
dot
.
display
(
)
#
save
the
dot
representation
into
the
mydot
.
dot
file
dot
.
save_dot
(
file_name
=
'
mydot
.
dot
'
)
#
save
dot
file
as
gif
image
into
the
graph
.
gif
file
dot
.
save_img
(
file_name
=
'
graph
'
file_type
=
'
gif
'
)
q
q
}
r
(
h4U
h5h
ubaubeubh1
)
r
}
r
(
h4U
h5h2h6h9h
;
h
<
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
r
h
*
ahE
]
r
h
auhGK
hHh
h
/
]
r
(
hJ
)
r
}
r
(
h4X
%
Directed
graph
and
non
-
directed
graphr
h5j
h6h9h
;
hNh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
%
Directed
graph
and
non
-
directed
graphr
r
}
r
(
h4j
h5j
ubaubhx
)
r
}
r
(
h4Xb
Dot
class
can
use
for
both
directed
graph
and
non
-
directed
graph
by
passing
*
graphtype
*
parameter
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
.
hHh
h
/
]
r
(
hgXL
Dot
class
can
use
for
both
directed
graph
and
non
-
directed
graph
by
passing
r
r
}
r
(
h4XL
Dot
class
can
use
for
both
directed
graph
and
non
-
directed
graph
by
passing
h5j
ubcdocutils
.
nodes
emphasis
r
)
r
}
r
(
h4X
*
graphtype
*
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
graphtyper
r
}
r
(
h4U
h5j
ubah
;
U
emphasisr
ubhgX
parameter
.
r
r
}
r
!
(
h4X
parameter
.
h5j
ubeubhx
)
r
"
}
r
#
(
h4X
Example
:
:
r
h5j
h6h9h
;
h
{
h
=
}
r
%
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK1hHh
h
/
]
r
&
hgX
Example
:
r
'
r
(
}
r
)
(
h4X
Example
:
h5j
"
ubaubh
)
r
*
}
r
+
(
h4X
#
create
directed
graph
(
default
)
dot
=
Dot
.
Dot
(
graph
graphtype
=
"
digraph
"
)
#
create
non
-
directed
graph
dot
=
Dot
.
Dot
(
graph
graphtype
=
"
graph
"
)
h5j
h6h9h
;
h
h
=
}
r
(
h
h
hB
]
hA
]
h
?
]
h
]
hE
]
uhGK3hHh
h
/
]
r
-
hgX
#
create
directed
graph
(
default
)
dot
=
Dot
.
Dot
(
graph
graphtype
=
"
digraph
"
)
#
create
non
-
directed
graph
dot
=
Dot
.
Dot
(
graph
graphtype
=
"
graph
"
)
r
.
r
/
}
r0
(
h4U
h5j
*
ubaubeubh1
)
r1
}
r2
(
h4U
h5h2h6h9h
;
h
<
h
=
}
r3
(
h
?
]
h
]
hA
]
hB
]
r4
h
ahE
]
r5
h
auhGK
;
hHh
h
/
]
r6
(
hJ
)
r7
}
r8
(
h4X
Customizing
the
outputr9
h5j1
h6h9h
;
hNh
=
}
r
:
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
;
hHh
h
/
]
r
;
hgX
Customizing
the
outputr
<
r
=
}
r
>
(
h4j9
h5j7
ubaubhx
)
r
?
}
r
(
h4X
The
graph
drawing
process
may
be
customized
by
passing
valid
:
command
:
dot
parameters
for
the
nodes
and
edges
.
For
a
list
of
all
parameters
see
the
graphviz
_
documentation
.
h5j1
h6h9h
;
h
{
h
=
}
rA
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
=
hHh
h
/
]
rB
(
hgX
=
The
graph
drawing
process
may
be
customized
by
passing
valid
rC
rD
}
rE
(
h4X
=
The
graph
drawing
process
may
be
customized
by
passing
valid
h5j
?
ubh
)
rF
}
rG
(
h4X
:
command
:
dot
h
=
}
rH
(
h
?
]
h
]
rI
h
ahA
]
hB
]
hE
]
uh5j
?
h
/
]
rJ
hgX
dotrK
rL
}
rM
(
h4U
h5jF
ubah
;
h
ubhgXJ
parameters
for
the
nodes
and
edges
.
For
a
list
of
all
parameters
see
the
rN
rO
}
rP
(
h4XJ
parameters
for
the
nodes
and
edges
.
For
a
list
of
all
parameters
see
the
h5j
?
ubh
)
rQ
}
rR
(
h4X
graphviz
_h
K
h5j
?
h
;
h
h
=
}
rS
(
U
nameX
graphvizh
h
hB
]
hA
]
h
?
]
h
]
hE
]
uh
/
]
rT
hgX
graphvizrU
rV
}
rW
(
h4U
h5jQ
ubaubhgX
documentation
.
rX
rY
}
rZ
(
h4X
documentation
.
h5j
?
ubeubhx
)
r
[
}
r
\
(
h4X
Example
:
:
r
]
h5j1
h6h9h
;
h
{
h
=
}
r
^
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGKAhHh
h
/
]
r_
hgX
Example
:
r
ra
}
rb
(
h4X
Example
:
h5j
[
ubaubh
)
rc
}
rd
(
h4Xz
#
customizing
the
way
the
overall
graph
is
drawn
dot
.
style
(
size
=
'
10
10
'
rankdir
=
'
RL
'
page
=
'
5
5
'
ranksep
=
0
.
75
)
#
customizing
node
drawing
dot
.
node_style
(
1
label
=
'
BASE_NODE
'
shape
=
'
box
'
color
=
'
blue
'
)
dot
.
node_style
(
2
style
=
'
filled
'
fillcolor
=
'
red
'
)
#
customizing
edge
drawing
dot
.
edge_style
(
1
2
style
=
'
dotted
'
)
dot
.
edge_style
(
3
5
arrowhead
=
'
dot
'
label
=
'
binds
'
labelangle
=
'
90
'
)
dot
.
edge_style
(
4
5
arrowsize
=
2
style
=
'
bold
'
)
.
.
note
:
:
dotty
(
invoked
via
:
py
:
func
:
~
altgraph
.
Dot
.
display
)
may
not
be
able
to
display
all
graphics
styles
.
To
verify
the
output
save
it
to
an
image
file
and
look
at
it
that
way
.
h5j1
h6h9h
;
h
h
=
}
re
(
h
h
hB
]
hA
]
h
?
]
h
]
hE
]
uhGKChHh
h
/
]
rf
hgXz
#
customizing
the
way
the
overall
graph
is
drawn
dot
.
style
(
size
=
'
10
10
'
rankdir
=
'
RL
'
page
=
'
5
5
'
ranksep
=
0
.
75
)
#
customizing
node
drawing
dot
.
node_style
(
1
label
=
'
BASE_NODE
'
shape
=
'
box
'
color
=
'
blue
'
)
dot
.
node_style
(
2
style
=
'
filled
'
fillcolor
=
'
red
'
)
#
customizing
edge
drawing
dot
.
edge_style
(
1
2
style
=
'
dotted
'
)
dot
.
edge_style
(
3
5
arrowhead
=
'
dot
'
label
=
'
binds
'
labelangle
=
'
90
'
)
dot
.
edge_style
(
4
5
arrowsize
=
2
style
=
'
bold
'
)
.
.
note
:
:
dotty
(
invoked
via
:
py
:
func
:
~
altgraph
.
Dot
.
display
)
may
not
be
able
to
display
all
graphics
styles
.
To
verify
the
output
save
it
to
an
image
file
and
look
at
it
that
way
.
rg
rh
}
ri
(
h4U
h5jc
ubaubeubh1
)
rj
}
rk
(
h4U
h
K
h5h2h6h9h
;
h
<
h
=
}
rl
(
h
?
]
h
]
hA
]
hB
]
rm
h
(
ahE
]
rn
h
auhGKWhHh
h
/
]
ro
(
hJ
)
rp
}
rq
(
h4X
Valid
attributesrr
h5jj
h6h9h
;
hNh
=
}
rs
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGKWhHh
h
/
]
rt
hgX
Valid
attributesru
rv
}
rw
(
h4jr
h5jp
ubaubcdocutils
.
nodes
bullet_list
rx
)
ry
}
rz
(
h4U
h5jj
h6h9h
;
U
bullet_listr
{
h
=
}
r
|
(
U
bulletr
}
X
-
hB
]
hA
]
h
?
]
h
]
hE
]
uhGKYhHh
h
/
]
r
~
(
cdocutils
.
nodes
list_item
r
)
r
}
r
(
h4X
dot
styles
passed
via
the
:
py
:
meth
:
Dot
.
style
method
:
:
rankdir
=
'
LR
'
(
draws
the
graph
horizontally
left
to
right
)
ranksep
=
number
(
rank
separation
in
inches
)
h5jy
h6h9h
;
U
list_itemr
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGNhHh
h
/
]
r
(
hx
)
r
}
r
(
h4X8
dot
styles
passed
via
the
:
py
:
meth
:
Dot
.
style
method
:
:
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGKYh
/
]
r
(
hgX
dot
styles
passed
via
the
r
r
}
r
(
h4X
dot
styles
passed
via
the
h5j
ubhQ
)
r
}
r
(
h4X
:
py
:
meth
:
Dot
.
style
r
h5j
h6h9h
;
hUh
=
}
r
(
U
reftypeX
methhW
hXX
Dot
.
styleU
refdomainX
pyr
hB
]
hA
]
U
refexplicit
h
?
]
h
]
hE
]
hZh
[
h
\
Nh
]
h
uhGKYh
/
]
r
h_
)
r
}
r
(
h4j
h
=
}
r
(
h
?
]
h
]
r
(
hdj
X
py
-
methr
ehA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
Dot
.
style
(
)
r
r
}
r
(
h4U
h5j
ubah
;
hkubaubhgX
method
:
r
r
}
r
(
h4X
method
:
h5j
ubeubh
)
r
}
r
(
h4Xk
rankdir
=
'
LR
'
(
draws
the
graph
horizontally
left
to
right
)
ranksep
=
number
(
rank
separation
in
inches
)
h5j
h
;
h
h
=
}
r
(
h
h
hB
]
hA
]
h
?
]
h
]
hE
]
uhGK
[
h
/
]
r
hgXk
rankdir
=
'
LR
'
(
draws
the
graph
horizontally
left
to
right
)
ranksep
=
number
(
rank
separation
in
inches
)
r
r
}
r
(
h4U
h5j
ubaubeubj
)
r
}
r
(
h4X
node
attributes
passed
via
the
:
py
:
meth
:
Dot
.
node_style
method
:
:
style
=
'
filled
'
|
'
invisible
'
|
'
diagonals
'
|
'
rounded
'
shape
=
'
box
'
|
'
ellipse
'
|
'
circle
'
|
'
point
'
|
'
triangle
'
h5jy
h6h9h
;
j
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGNhHh
h
/
]
r
(
hx
)
r
}
r
(
h4XB
node
attributes
passed
via
the
:
py
:
meth
:
Dot
.
node_style
method
:
:
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
^
h
/
]
r
(
hgX
node
attributes
passed
via
the
r
r
}
r
(
h4X
node
attributes
passed
via
the
h5j
ubhQ
)
r
}
r
(
h4X
:
py
:
meth
:
Dot
.
node_style
r
h5j
h6h9h
;
hUh
=
}
r
(
U
reftypeX
methhW
hXX
Dot
.
node_styleU
refdomainX
pyr
hB
]
hA
]
U
refexplicit
h
?
]
h
]
hE
]
hZh
[
h
\
Nh
]
h
uhGK
^
h
/
]
r
h_
)
r
}
r
(
h4j
h
=
}
r
(
h
?
]
h
]
r
(
hdj
X
py
-
methr
ehA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
Dot
.
node_style
(
)
r
r
}
r
(
h4U
h5j
ubah
;
hkubaubhgX
method
:
r
r
}
r
(
h4X
method
:
h5j
ubeubh
)
r
}
r
(
h4Xt
style
=
'
filled
'
|
'
invisible
'
|
'
diagonals
'
|
'
rounded
'
shape
=
'
box
'
|
'
ellipse
'
|
'
circle
'
|
'
point
'
|
'
triangle
'
h5j
h
;
h
h
=
}
r
(
h
h
hB
]
hA
]
h
?
]
h
]
hE
]
uhGK
h
/
]
r
hgXt
style
=
'
filled
'
|
'
invisible
'
|
'
diagonals
'
|
'
rounded
'
shape
=
'
box
'
|
'
ellipse
'
|
'
circle
'
|
'
point
'
|
'
triangle
'
r
r
}
r
(
h4U
h5j
ubaubeubj
)
r
}
r
(
h4X
"
edge
attributes
passed
via
the
:
py
:
meth
:
Dot
.
edge_style
method
:
:
style
=
'
dashed
'
|
'
dotted
'
|
'
solid
'
|
'
invis
'
|
'
bold
'
arrowhead
=
'
box
'
|
'
crow
'
|
'
diamond
'
|
'
dot
'
|
'
inv
'
|
'
none
'
|
'
tee
'
|
'
vee
'
weight
=
number
(
the
larger
the
number
the
closer
the
nodes
will
be
)
h5jy
h6h9h
;
j
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGNhHh
h
/
]
r
(
hx
)
r
}
r
(
h4XB
edge
attributes
passed
via
the
:
py
:
meth
:
Dot
.
edge_style
method
:
:
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGKch
/
]
r
(
hgX
edge
attributes
passed
via
the
r
r
}
r
(
h4X
edge
attributes
passed
via
the
h5j
ubhQ
)
r
}
r
(
h4X
:
py
:
meth
:
Dot
.
edge_style
r
h5j
h6h9h
;
hUh
=
}
r
(
U
reftypeX
methhW
hXX
Dot
.
edge_styleU
refdomainX
pyr
hB
]
hA
]
U
refexplicit
h
?
]
h
]
hE
]
hZh
[
h
\
Nh
]
h
uhGKch
/
]
r
h_
)
r
}
r
(
h4j
h
=
}
r
(
h
?
]
h
]
r
(
hdj
X
py
-
methr
ehA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
Dot
.
edge_style
(
)
r
r
}
r
(
h4U
h5j
ubah
;
hkubaubhgX
method
:
r
r
}
r
(
h4X
method
:
h5j
ubeubh
)
r
}
r
(
h4X
style
=
'
dashed
'
|
'
dotted
'
|
'
solid
'
|
'
invis
'
|
'
bold
'
arrowhead
=
'
box
'
|
'
crow
'
|
'
diamond
'
|
'
dot
'
|
'
inv
'
|
'
none
'
|
'
tee
'
|
'
vee
'
weight
=
number
(
the
larger
the
number
the
closer
the
nodes
will
be
)
h5j
h
;
h
h
=
}
r
(
h
h
hB
]
hA
]
h
?
]
h
]
hE
]
uhGKeh
/
]
r
hgX
style
=
'
dashed
'
|
'
dotted
'
|
'
solid
'
|
'
invis
'
|
'
bold
'
arrowhead
=
'
box
'
|
'
crow
'
|
'
diamond
'
|
'
dot
'
|
'
inv
'
|
'
none
'
|
'
tee
'
|
'
vee
'
weight
=
number
(
the
larger
the
number
the
closer
the
nodes
will
be
)
r
r
}
r
(
h4U
h5j
ubaubeubj
)
r
}
r
(
h4XV
valid
graphviz
colors
<
http
:
/
/
www
.
research
.
att
.
com
/
~
erg
/
graphviz
/
info
/
colors
.
html
>
_
h5jy
h6h9h
;
j
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGNhHh
h
/
]
r
hx
)
r
}
r
(
h4XU
valid
graphviz
colors
<
http
:
/
/
www
.
research
.
att
.
com
/
~
erg
/
graphviz
/
info
/
colors
.
html
>
_h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGKih
/
]
r
(
hgX
valid
r
r
}
r
(
h4X
valid
h5j
ubh
)
r
}
r
(
h4XO
graphviz
colors
<
http
:
/
/
www
.
research
.
att
.
com
/
~
erg
/
graphviz
/
info
/
colors
.
html
>
_h
=
}
r
(
U
nameX
graphviz
colorsh
X
:
http
:
/
/
www
.
research
.
att
.
com
/
~
erg
/
graphviz
/
info
/
colors
.
htmlr
hB
]
hA
]
h
?
]
h
]
hE
]
uh5j
h
/
]
r
hgX
graphviz
colorsr
r
}
r
(
h4U
h5j
ubah
;
h
ubh
)
r
}
r
(
h4X
=
<
http
:
/
/
www
.
research
.
att
.
com
/
~
erg
/
graphviz
/
info
/
colors
.
html
>
h
K
h5j
h
;
h
h
=
}
r
(
U
refurij
hB
]
r
h
)
ahA
]
h
?
]
h
]
hE
]
r
h
auh
/
]
ubeubaubj
)
r
}
r
(
h4X
for
more
details
on
how
to
control
the
graph
drawing
process
see
the
graphviz
reference
<
http
:
/
/
www
.
research
.
att
.
com
/
sw
/
tools
/
graphviz
/
refs
.
html
>
_
.
h5jy
h6h9h
;
j
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGNhHh
h
/
]
r
hx
)
r
}
r
(
h4X
for
more
details
on
how
to
control
the
graph
drawing
process
see
the
graphviz
reference
<
http
:
/
/
www
.
research
.
att
.
com
/
sw
/
tools
/
graphviz
/
refs
.
html
>
_
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGKkh
/
]
r
(
hgXE
for
more
details
on
how
to
control
the
graph
drawing
process
see
the
r
r
}
r
(
h4XE
for
more
details
on
how
to
control
the
graph
drawing
process
see
the
h5j
ubh
)
r
}
r
(
h4XO
graphviz
reference
<
http
:
/
/
www
.
research
.
att
.
com
/
sw
/
tools
/
graphviz
/
refs
.
html
>
_h
=
}
r
(
U
nameX
graphviz
referenceh
X7
http
:
/
/
www
.
research
.
att
.
com
/
sw
/
tools
/
graphviz
/
refs
.
htmlr
hB
]
hA
]
h
?
]
h
]
hE
]
uh5j
h
/
]
r
hgX
graphviz
referencer
r
}
r
(
h4U
h5j
ubah
;
h
ubh
)
r
}
r
(
h4X
:
<
http
:
/
/
www
.
research
.
att
.
com
/
sw
/
tools
/
graphviz
/
refs
.
html
>
h
K
h5j
h
;
h
h
=
}
r
(
U
refurij
hB
]
r
h
%
ahA
]
h
?
]
h
]
hE
]
r
h
auh
/
]
ubhgX
.
r
}
r
(
h4X
.
h5j
ubeubaubeubeubh1
)
r
}
r
(
h4U
h5h2h6h9h
;
h
<
h
=
}
r
!
(
h
?
]
h
]
hA
]
hB
]
r
"
h
&
ahE
]
r
#
h
auhGKphHh
h
/
]
r
(
hJ
)
r
%
}
r
&
(
h4X
Class
interfacer
'
h5j
h6h9h
;
hNh
=
}
r
(
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGKphHh
h
/
]
r
)
hgX
Class
interfacer
*
r
+
}
r
(
h4j
'
h5j
%
ubaubhp
)
r
-
}
r
.
(
h4U
h5j
h6h9h
;
hsh
=
}
r
/
(
hB
]
hA
]
h
?
]
h
]
hE
]
U
entries
]
r0
(
hvX
Dot
(
class
in
altgraph
.
Dot
)
h
U
tr1
auhGNhHh
h
/
]
ubcsphinx
.
addnodes
desc
r2
)
r3
}
r4
(
h4U
h5j
h6h9h
;
U
descr5
h
=
}
r6
(
U
noindexr7
U
domainr8
X
pyhB
]
hA
]
h
?
]
h
]
hE
]
U
objtyper9
X
classr
:
U
desctyper
;
j
:
uhGNhHh
h
/
]
r
<
(
csphinx
.
addnodes
desc_signature
r
=
)
r
>
}
r
?
(
h4Xi
Dot
(
graph
[
nodes
[
edgefn
[
nodevisitor
[
edgevisitor
[
name
[
dot
[
dotty
[
neato
[
graphtype
]
]
]
]
]
]
]
]
]
)
h5j3
h6h9h
;
U
desc_signaturer
h
=
}
rA
(
hB
]
rB
h
aU
modulerC
h
hA
]
h
?
]
h
]
hE
]
rD
h
aU
fullnamerE
X
DotrF
U
classrG
U
U
firstrH
uhGK
hHh
h
/
]
rI
(
csphinx
.
addnodes
desc_annotation
rJ
)
rK
}
rL
(
h4X
class
h5j
>
h6h9h
;
U
desc_annotationrM
h
=
}
rN
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
rO
hgX
class
rP
rQ
}
rR
(
h4U
h5jK
ubaubcsphinx
.
addnodes
desc_addname
rS
)
rT
}
rU
(
h4X
altgraph
.
Dot
.
h5j
>
h6h9h
;
U
desc_addnamerV
h
=
}
rW
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
rX
hgX
altgraph
.
Dot
.
rY
rZ
}
r
[
(
h4U
h5jT
ubaubcsphinx
.
addnodes
desc_name
r
\
)
r
]
}
r
^
(
h4jF
h5j
>
h6h9h
;
U
desc_namer_
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
ra
hgX
Dotrb
rc
}
rd
(
h4U
h5j
]
ubaubcsphinx
.
addnodes
desc_parameterlist
re
)
rf
}
rg
(
h4U
h5j
>
h6h9h
;
U
desc_parameterlistrh
h
=
}
ri
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
rj
(
csphinx
.
addnodes
desc_parameter
rk
)
rl
}
rm
(
h4X
graphh
=
}
rn
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jf
h
/
]
ro
hgX
graphrp
rq
}
rr
(
h4U
h5jl
ubah
;
U
desc_parameterrs
ubcsphinx
.
addnodes
desc_optional
rt
)
ru
}
rv
(
h4U
h
=
}
rw
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jf
h
/
]
rx
(
jk
)
ry
}
rz
(
h4X
nodesh
=
}
r
{
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5ju
h
/
]
r
|
hgX
nodesr
}
r
~
}
r
(
h4U
h5jy
ubah
;
js
ubjt
)
r
}
r
(
h4U
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5ju
h
/
]
r
(
jk
)
r
}
r
(
h4X
edgefnh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
edgefnr
r
}
r
(
h4U
h5j
ubah
;
js
ubjt
)
r
}
r
(
h4U
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
(
jk
)
r
}
r
(
h4X
nodevisitorh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
nodevisitorr
r
}
r
(
h4U
h5j
ubah
;
js
ubjt
)
r
}
r
(
h4U
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
(
jk
)
r
}
r
(
h4X
edgevisitorh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
edgevisitorr
r
}
r
(
h4U
h5j
ubah
;
js
ubjt
)
r
}
r
(
h4U
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
(
jk
)
r
}
r
(
h4X
nameh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
namer
r
}
r
(
h4U
h5j
ubah
;
js
ubjt
)
r
}
r
(
h4U
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
(
jk
)
r
}
r
(
h4X
doth
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
dotr
r
}
r
(
h4U
h5j
ubah
;
js
ubjt
)
r
}
r
(
h4U
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
(
jk
)
r
}
r
(
h4X
dottyh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
dottyr
r
}
r
(
h4U
h5j
ubah
;
js
ubjt
)
r
}
r
(
h4U
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
(
jk
)
r
}
r
(
h4X
neatoh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
neator
r
}
r
(
h4U
h5j
ubah
;
js
ubjt
)
r
}
r
(
h4U
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
jk
)
r
}
r
(
h4X
graphtypeh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
graphtyper
r
}
r
(
h4U
h5j
ubah
;
js
ubah
;
U
desc_optionalr
ubeh
;
j
ubeh
;
j
ubeh
;
j
ubeh
;
j
ubeh
;
j
ubeh
;
j
ubeh
;
j
ubeh
;
j
ubeubeubcsphinx
.
addnodes
desc_content
r
)
r
}
r
(
h4U
h5j3
h6h9h
;
U
desc_contentr
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hx
)
r
}
r
(
h4X
Creates
a
new
Dot
generator
based
on
the
specified
:
class
:
Graph
<
altgraph
.
Graph
.
Graph
>
.
The
Dot
generator
won
'
t
reference
the
*
graph
*
once
it
is
constructed
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGKthHh
h
/
]
r
(
hgX3
Creates
a
new
Dot
generator
based
on
the
specified
r
r
}
r
(
h4X3
Creates
a
new
Dot
generator
based
on
the
specified
h5j
ubhQ
)
r
}
r
(
h4X
%
:
class
:
Graph
<
altgraph
.
Graph
.
Graph
>
r
h5j
h6h9h
;
hUh
=
}
r
(
U
reftypeX
classhW
hXX
altgraph
.
Graph
.
GraphU
refdomainX
pyr
hB
]
hA
]
U
refexplicit
h
?
]
h
]
hE
]
hZh
[
h
\
jF
h
]
h
uhGKth
/
]
r
h_
)
r
}
r
(
h4j
h
=
}
r
(
h
?
]
h
]
r
(
hdj
X
py
-
classr
ehA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
Graphr
r
}
r
(
h4U
h5j
ubah
;
hkubaubhgX
)
.
The
Dot
generator
won
'
t
reference
the
r
r
}
r
(
h4X
)
.
The
Dot
generator
won
'
t
reference
the
h5j
ubj
)
r
}
r
(
h4X
*
graph
*
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
graphr
r
}
r
(
h4U
h5j
ubah
;
j
ubhgX
once
it
is
constructed
.
r
r
}
r
(
h4X
once
it
is
constructed
.
h5j
ubeubhx
)
r
}
r
(
h4X
If
the
*
nodes
*
argument
is
present
it
is
the
list
of
nodes
to
include
in
the
graph
otherwise
all
nodes
in
*
graph
*
are
included
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGKxhHh
h
/
]
r
(
hgX
If
the
r
r
}
r
(
h4X
If
the
h5j
ubj
)
r
}
r
(
h4X
*
nodes
*
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
nodesr
r
}
r
(
h4U
h5j
ubah
;
j
ubhgX
]
argument
is
present
it
is
the
list
of
nodes
to
include
in
the
graph
otherwise
all
nodes
in
r
r
}
r
(
h4X
]
argument
is
present
it
is
the
list
of
nodes
to
include
in
the
graph
otherwise
all
nodes
in
h5j
ubj
)
r
}
r
(
h4X
*
graph
*
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
graphr
r
}
r
(
h4U
h5j
ubah
;
j
ubhgX
are
included
.
r
r
}
r
(
h4X
are
included
.
h5j
ubeubhx
)
r
}
r
(
h4X
If
the
*
edgefn
*
argument
is
present
it
is
a
function
that
yields
the
nodes
connected
to
another
node
this
defaults
to
:
meth
:
graph
.
out_nbr
<
altgraph
.
Graph
.
Graph
.
out_nbr
>
.
The
constructor
won
'
t
add
edges
to
the
dot
file
unless
both
the
head
and
tail
of
the
edge
are
in
*
nodes
*
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
{
hHh
h
/
]
r
(
hgX
If
the
r
!
r
"
}
r
#
(
h4X
If
the
h5j
ubj
)
r
}
r
%
(
h4X
*
edgefn
*
h
=
}
r
&
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
'
hgX
edgefnr
(
r
)
}
r
*
(
h4U
h5j
ubah
;
j
ubhgXh
argument
is
present
it
is
a
function
that
yields
the
nodes
connected
to
another
node
this
defaults
to
r
+
r
}
r
-
(
h4Xh
argument
is
present
it
is
a
function
that
yields
the
nodes
connected
to
another
node
this
defaults
to
h5j
ubhQ
)
r
.
}
r
/
(
h4X4
:
meth
:
graph
.
out_nbr
<
altgraph
.
Graph
.
Graph
.
out_nbr
>
r0
h5j
h6h9h
;
hUh
=
}
r1
(
U
reftypeX
methhW
hXX
altgraph
.
Graph
.
Graph
.
out_nbrU
refdomainX
pyr2
hB
]
hA
]
U
refexplicit
h
?
]
h
]
hE
]
hZh
[
h
\
jF
h
]
h
uhGK
{
h
/
]
r3
h_
)
r4
}
r5
(
h4j0
h
=
}
r6
(
h
?
]
h
]
r7
(
hdj2
X
py
-
methr8
ehA
]
hB
]
hE
]
uh5j
.
h
/
]
r9
hgX
graph
.
out_nbrr
:
r
;
}
r
<
(
h4U
h5j4
ubah
;
hkubaubhgXc
.
The
constructor
won
'
t
add
edges
to
the
dot
file
unless
both
the
head
and
tail
of
the
edge
are
in
r
=
r
>
}
r
?
(
h4Xc
.
The
constructor
won
'
t
add
edges
to
the
dot
file
unless
both
the
head
and
tail
of
the
edge
are
in
h5j
ubj
)
r
}
rA
(
h4X
*
nodes
*
h
=
}
rB
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
rC
hgX
nodesrD
rE
}
rF
(
h4U
h5j
ubah
;
j
ubhgX
.
rG
}
rH
(
h4X
.
h5j
ubeubhx
)
rI
}
rJ
(
h4Xn
If
the
*
name
*
is
present
it
specifies
the
name
of
the
graph
in
the
resulting
dot
file
.
The
default
is
"
G
"
.
h5j
h6h9h
;
h
{
h
=
}
rK
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
rL
(
hgX
If
the
rM
rN
}
rO
(
h4X
If
the
h5jI
ubj
)
rP
}
rQ
(
h4X
*
name
*
h
=
}
rR
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jI
h
/
]
rS
hgX
namerT
rU
}
rV
(
h4U
h5jP
ubah
;
j
ubhgXY
is
present
it
specifies
the
name
of
the
graph
in
the
resulting
dot
file
.
The
default
is
rW
rX
}
rY
(
h4XY
is
present
it
specifies
the
name
of
the
graph
in
the
resulting
dot
file
.
The
default
is
h5jI
ubh_
)
rZ
}
r
[
(
h4X
"
G
"
h
=
}
r
\
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jI
h
/
]
r
]
hgX
"
G
"
r
^
r_
}
r
(
h4U
h5jZ
ubah
;
hkubhgX
.
ra
}
rb
(
h4X
.
h5jI
ubeubhx
)
rc
}
rd
(
h4X
The
functions
*
nodevisitor
*
and
*
edgevisitor
*
return
the
default
style
for
a
given
edge
or
node
(
both
default
to
functions
that
return
an
empty
style
)
.
h5j
h6h9h
;
h
{
h
=
}
re
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
rf
(
hgX
The
functions
rg
rh
}
ri
(
h4X
The
functions
h5jc
ubj
)
rj
}
rk
(
h4X
*
nodevisitor
*
h
=
}
rl
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jc
h
/
]
rm
hgX
nodevisitorrn
ro
}
rp
(
h4U
h5jj
ubah
;
j
ubhgX
and
rq
rr
}
rs
(
h4X
and
h5jc
ubj
)
rt
}
ru
(
h4X
*
edgevisitor
*
h
=
}
rv
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jc
h
/
]
rw
hgX
edgevisitorrx
ry
}
rz
(
h4U
h5jt
ubah
;
j
ubhgXj
return
the
default
style
for
a
given
edge
or
node
(
both
default
to
functions
that
return
an
empty
style
)
.
r
{
r
|
}
r
}
(
h4Xj
return
the
default
style
for
a
given
edge
or
node
(
both
default
to
functions
that
return
an
empty
style
)
.
h5jc
ubeubhx
)
r
~
}
r
(
h4Xl
The
arguments
*
dot
*
*
dotty
*
and
*
neato
*
are
used
to
pass
the
path
to
the
corresponding
graphviz
_
command
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hgX
The
arguments
r
r
}
r
(
h4X
The
arguments
h5j
~
ubj
)
r
}
r
(
h4X
*
dot
*
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
~
h
/
]
r
hgX
dotr
r
}
r
(
h4U
h5j
ubah
;
j
ubhgX
r
r
}
r
(
h4X
h5j
~
ubj
)
r
}
r
(
h4X
*
dotty
*
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
~
h
/
]
r
hgX
dottyr
r
}
r
(
h4U
h5j
ubah
;
j
ubhgX
and
r
r
}
r
(
h4X
and
h5j
~
ubj
)
r
}
r
(
h4X
*
neato
*
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
~
h
/
]
r
hgX
neator
r
}
r
(
h4U
h5j
ubah
;
j
ubhgX0
are
used
to
pass
the
path
to
the
corresponding
r
r
}
r
(
h4X0
are
used
to
pass
the
path
to
the
corresponding
h5j
~
ubh
)
r
}
r
(
h4X
graphviz
_h
K
h5j
~
h
;
h
h
=
}
r
(
U
nameX
graphvizh
h
hB
]
hA
]
h
?
]
h
]
hE
]
uh
/
]
r
hgX
graphvizr
r
}
r
(
h4U
h5j
ubaubhgX
command
.
r
r
}
r
(
h4X
command
.
h5j
~
ubeubeubeubh1
)
r
}
r
(
h4U
h5j
h6h9h
;
h
<
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
r
h
-
ahE
]
r
h
auhGK
hHh
h
/
]
r
(
hJ
)
r
}
r
(
h4X
Updating
graph
attributesr
h5j
h6h9h
;
hNh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
Updating
graph
attributesr
r
}
r
(
h4j
h5j
ubaubhp
)
r
}
r
(
h4U
h5j
h6h9h
;
hsh
=
}
r
(
hB
]
hA
]
h
?
]
h
]
hE
]
U
entries
]
r
(
hvX
!
style
(
)
(
altgraph
.
Dot
.
Dot
method
)
h
U
tr
auhGNhHh
h
/
]
ubj2
)
r
}
r
(
h4U
h5j
h6h9h
;
j5
h
=
}
r
(
j7
j8
X
pyhB
]
hA
]
h
?
]
h
]
hE
]
j9
X
methodr
j
;
j
uhGNhHh
h
/
]
r
(
j
=
)
r
}
r
(
h4X
Dot
.
style
(
*
*
attr
)
h5j
h6h9h
;
j
h
=
}
r
(
hB
]
r
h
ajC
h
hA
]
h
?
]
h
]
hE
]
r
h
ajE
X
Dot
.
stylejG
X
DotjH
uhGK
hHh
h
/
]
r
(
jS
)
r
}
r
(
h4X
Dot
.
h5j
h6h9h
;
jV
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
Dot
.
r
r
}
r
(
h4U
h5j
ubaubj
\
)
r
}
r
(
h4X
styleh5j
h6h9h
;
j_
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
styler
r
}
r
(
h4U
h5j
ubaubje
)
r
}
r
(
h4U
h5j
h6h9h
;
jh
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
jk
)
r
}
r
(
h4X
*
*
attrh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
*
*
attrr
r
}
r
(
h4U
h5j
ubah
;
js
ubaubeubj
)
r
}
r
(
h4U
h5j
h6h9h
;
j
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hx
)
r
}
r
(
h4XB
Sets
the
overall
style
(
graph
attributes
)
to
the
given
attributes
.
r
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgXB
Sets
the
overall
style
(
graph
attributes
)
to
the
given
attributes
.
r
r
}
r
(
h4j
h5j
ubaubhx
)
r
}
r
(
h4XB
See
Valid
Attributes
_
for
more
information
about
the
attributes
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hgX
See
r
r
}
r
(
h4X
See
h5j
ubh
)
r
}
r
(
h4X
Valid
Attributes
_h
K
h5j
h
;
h
h
=
}
r
(
U
nameX
Valid
AttributeshB
]
hA
]
h
?
]
h
]
hE
]
U
refidr
h
(
uh
/
]
r
hgX
Valid
Attributesr
r
}
r
(
h4U
h5j
ubaubhgX
+
for
more
information
about
the
attributes
.
r
r
}
r
(
h4X
+
for
more
information
about
the
attributes
.
h5j
ubeubeubeubhp
)
r
}
r
(
h4U
h5j
h6h9h
;
hsh
=
}
r
(
hB
]
hA
]
h
?
]
h
]
hE
]
U
entries
]
r
(
hvX
&
node_style
(
)
(
altgraph
.
Dot
.
Dot
method
)
h
U
tr
auhGNhHh
h
/
]
ubj2
)
r
}
r
(
h4U
h5j
h6h9h
;
j5
h
=
}
r
(
j7
j8
X
pyhB
]
hA
]
h
?
]
h
]
hE
]
j9
X
methodr
j
;
j
uhGNhHh
h
/
]
r
(
j
=
)
r
}
r
(
h4X
Dot
.
node_style
(
node
*
*
attr
)
h5j
h6h9h
;
j
h
=
}
r
(
hB
]
r
h
ajC
h
hA
]
h
?
]
h
]
hE
]
r
h
ajE
X
Dot
.
node_stylejG
X
DotjH
uhGK
hHh
h
/
]
r
(
jS
)
r
}
r
(
h4X
Dot
.
h5j
h6h9h
;
jV
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
Dot
.
r
r
}
r
(
h4U
h5j
ubaubj
\
)
r
}
r
(
h4X
node_styleh5j
h6h9h
;
j_
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
node_styler
r
}
r
(
h4U
h5j
ubaubje
)
r
}
r
!
(
h4U
h5j
h6h9h
;
jh
h
=
}
r
"
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
#
(
jk
)
r
}
r
%
(
h4X
nodeh
=
}
r
&
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
'
hgX
noder
(
r
)
}
r
*
(
h4U
h5j
ubah
;
js
ubjk
)
r
+
}
r
(
h4X
*
*
attrh
=
}
r
-
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
.
hgX
*
*
attrr
/
r0
}
r1
(
h4U
h5j
+
ubah
;
js
ubeubeubj
)
r2
}
r3
(
h4U
h5j
h6h9h
;
j
h
=
}
r4
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r5
(
hx
)
r6
}
r7
(
h4X2
Sets
the
style
for
*
node
*
to
the
given
attributes
.
h5j2
h6h9h
;
h
{
h
=
}
r8
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r9
(
hgX
Sets
the
style
for
r
:
r
;
}
r
<
(
h4X
Sets
the
style
for
h5j6
ubj
)
r
=
}
r
>
(
h4X
*
node
*
h
=
}
r
?
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j6
h
/
]
r
hgX
noderA
rB
}
rC
(
h4U
h5j
=
ubah
;
j
ubhgX
to
the
given
attributes
.
rD
rE
}
rF
(
h4X
to
the
given
attributes
.
h5j6
ubeubhx
)
rG
}
rH
(
h4XG
This
method
will
add
*
node
*
to
the
graph
when
it
isn
'
t
already
present
.
h5j2
h6h9h
;
h
{
h
=
}
rI
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
rJ
(
hgX
This
method
will
add
rK
rL
}
rM
(
h4X
This
method
will
add
h5jG
ubj
)
rN
}
rO
(
h4X
*
node
*
h
=
}
rP
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jG
h
/
]
rQ
hgX
noderR
rS
}
rT
(
h4U
h5jN
ubah
;
j
ubhgX
to
the
graph
when
it
isn
'
t
already
present
.
rU
rV
}
rW
(
h4X
to
the
graph
when
it
isn
'
t
already
present
.
h5jG
ubeubhx
)
rX
}
rY
(
h4XB
See
Valid
Attributes
_
for
more
information
about
the
attributes
.
h5j2
h6h9h
;
h
{
h
=
}
rZ
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
[
(
hgX
See
r
\
r
]
}
r
^
(
h4X
See
h5jX
ubh
)
r_
}
r
(
h4X
Valid
Attributes
_h
K
h5jX
h
;
h
h
=
}
ra
(
U
nameX
Valid
AttributeshB
]
hA
]
h
?
]
h
]
hE
]
j
h
(
uh
/
]
rb
hgX
Valid
Attributesrc
rd
}
re
(
h4U
h5j_
ubaubhgX
+
for
more
information
about
the
attributes
.
rf
rg
}
rh
(
h4X
+
for
more
information
about
the
attributes
.
h5jX
ubeubeubeubhp
)
ri
}
rj
(
h4U
h5j
h6h9h
;
hsh
=
}
rk
(
hB
]
hA
]
h
?
]
h
]
hE
]
U
entries
]
rl
(
hvX
*
all_node_style
(
)
(
altgraph
.
Dot
.
Dot
method
)
h
U
trm
auhGNhHh
h
/
]
ubj2
)
rn
}
ro
(
h4U
h5j
h6h9h
;
j5
h
=
}
rp
(
j7
j8
X
pyhB
]
hA
]
h
?
]
h
]
hE
]
j9
X
methodrq
j
;
jq
uhGNhHh
h
/
]
rr
(
j
=
)
rs
}
rt
(
h4X
Dot
.
all_node_style
(
*
*
attr
)
h5jn
h6h9h
;
j
h
=
}
ru
(
hB
]
rv
h
ajC
h
hA
]
h
?
]
h
]
hE
]
rw
h
ajE
X
Dot
.
all_node_stylejG
X
DotjH
uhGK
hHh
h
/
]
rx
(
jS
)
ry
}
rz
(
h4X
Dot
.
h5js
h6h9h
;
jV
h
=
}
r
{
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
|
hgX
Dot
.
r
}
r
~
}
r
(
h4U
h5jy
ubaubj
\
)
r
}
r
(
h4X
all_node_styleh5js
h6h9h
;
j_
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
all_node_styler
r
}
r
(
h4U
h5j
ubaubje
)
r
}
r
(
h4U
h5js
h6h9h
;
jh
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
jk
)
r
}
r
(
h4X
*
*
attrh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
*
*
attrr
r
}
r
(
h4U
h5j
ubah
;
js
ubaubeubj
)
r
}
r
(
h4U
h5jn
h6h9h
;
j
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hx
)
r
}
r
(
h4X
(
Replaces
the
current
style
for
all
nodesr
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
(
Replaces
the
current
style
for
all
nodesr
r
}
r
(
h4j
h5j
ubaubaubeubhp
)
r
}
r
(
h4U
h5j
h6h9h
;
hsh
=
}
r
(
hB
]
hA
]
h
?
]
h
]
hE
]
U
entries
]
r
(
hvX
%
edge_style
(
)
(
in
module
altgraph
.
Dot
)
h
U
tr
auhGNhHh
h
/
]
ubj2
)
r
}
r
(
h4U
h5j
h6h9h
;
j5
h
=
}
r
(
j7
j8
X
pyhB
]
hA
]
h
?
]
h
]
hE
]
j9
X
methodr
j
;
j
uhGNhHh
h
/
]
r
(
j
=
)
r
}
r
(
h4X
edge_style
(
head
tail
*
*
attr
)
h5j
h6h9h
;
j
h
=
}
r
(
hB
]
r
h
ajC
h
hA
]
h
?
]
h
]
hE
]
r
h
ajE
X
edge_styler
jG
U
jH
uhGK
hHh
h
/
]
r
(
jS
)
r
}
r
(
h4X
altgraph
.
Dot
.
h5j
h6h9h
;
jV
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
altgraph
.
Dot
.
r
r
}
r
(
h4U
h5j
ubaubj
\
)
r
}
r
(
h4j
h5j
h6h9h
;
j_
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
edge_styler
r
}
r
(
h4U
h5j
ubaubje
)
r
}
r
(
h4U
h5j
h6h9h
;
jh
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
jk
)
r
}
r
(
h4X
headh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
headr
r
}
r
(
h4U
h5j
ubah
;
js
ubjk
)
r
}
r
(
h4X
tailh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
tailr
r
}
r
(
h4U
h5j
ubah
;
js
ubjk
)
r
}
r
(
h4X
*
*
attrh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
*
*
attrr
r
}
r
(
h4U
h5j
ubah
;
js
ubeubeubj
)
r
}
r
(
h4U
h5j
h6h9h
;
j
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hx
)
r
}
r
(
h4X
Sets
the
style
of
an
edge
to
the
given
attributes
.
The
edge
will
be
added
to
the
graph
when
it
isn
'
t
already
present
but
*
head
*
and
*
tail
*
must
both
be
valid
nodes
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hgXz
Sets
the
style
of
an
edge
to
the
given
attributes
.
The
edge
will
be
added
to
the
graph
when
it
isn
'
t
already
present
but
r
r
}
r
(
h4Xz
Sets
the
style
of
an
edge
to
the
given
attributes
.
The
edge
will
be
added
to
the
graph
when
it
isn
'
t
already
present
but
h5j
ubj
)
r
}
r
(
h4X
*
head
*
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
headr
r
}
r
(
h4U
h5j
ubah
;
j
ubhgX
and
r
r
}
r
(
h4X
and
h5j
ubj
)
r
}
r
(
h4X
*
tail
*
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
tailr
r
}
r
(
h4U
h5j
ubah
;
j
ubhgX
must
both
be
valid
nodes
.
r
r
}
r
(
h4X
must
both
be
valid
nodes
.
h5j
ubeubhx
)
r
}
r
(
h4XB
See
Valid
Attributes
_
for
more
information
about
the
attributes
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hgX
See
r
r
}
r
(
h4X
See
h5j
ubh
)
r
}
r
(
h4X
Valid
Attributes
_h
K
h5j
h
;
h
h
=
}
r
(
U
nameX
Valid
AttributeshB
]
hA
]
h
?
]
h
]
hE
]
j
h
(
uh
/
]
r
hgX
Valid
Attributesr
r
}
r
(
h4U
h5j
ubaubhgX
+
for
more
information
about
the
attributes
.
r
r
}
r
(
h4X
+
for
more
information
about
the
attributes
.
h5j
ubeubeubeubeubh1
)
r
}
r
(
h4U
h5j
h6h9h
;
h
<
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
r
h
ahE
]
r
h
auhGK
hHh
h
/
]
r
(
hJ
)
r
}
r
(
h4X
Emitting
outputr
h5j
h6h9h
;
hNh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
Emitting
outputr
r
}
r
(
h4j
h5j
ubaubhp
)
r
}
r
(
h4U
h5j
h6h9h
;
hsh
=
}
r
(
hB
]
hA
]
h
?
]
h
]
hE
]
U
entries
]
r
(
hvX
#
display
(
)
(
altgraph
.
Dot
.
Dot
method
)
h
U
tr
auhGNhHh
h
/
]
ubj2
)
r
}
r
(
h4U
h5j
h6h9h
;
j5
h
=
}
r
(
j7
j8
X
pyhB
]
hA
]
h
?
]
h
]
hE
]
j9
X
methodr
j
;
j
uhGNhHh
h
/
]
r
(
j
=
)
r
}
r
(
h4X
Dot
.
display
(
[
mode
]
)
h5j
h6h9h
;
j
h
=
}
r
(
hB
]
r
!
h
ajC
h
hA
]
h
?
]
h
]
hE
]
r
"
h
ajE
X
Dot
.
displayjG
X
DotjH
uhGK
hHh
h
/
]
r
#
(
jS
)
r
}
r
%
(
h4X
Dot
.
h5j
h6h9h
;
jV
h
=
}
r
&
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
'
hgX
Dot
.
r
(
r
)
}
r
*
(
h4U
h5j
ubaubj
\
)
r
+
}
r
(
h4X
displayh5j
h6h9h
;
j_
h
=
}
r
-
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
.
hgX
displayr
/
r0
}
r1
(
h4U
h5j
+
ubaubje
)
r2
}
r3
(
h4U
h5j
h6h9h
;
jh
h
=
}
r4
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r5
jt
)
r6
}
r7
(
h4U
h
=
}
r8
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j2
h
/
]
r9
jk
)
r
:
}
r
;
(
h4X
modeh
=
}
r
<
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j6
h
/
]
r
=
hgX
moder
>
r
?
}
r
(
h4U
h5j
:
ubah
;
js
ubah
;
j
ubaubeubj
)
rA
}
rB
(
h4U
h5j
h6h9h
;
j
h
=
}
rC
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
rD
(
hx
)
rE
}
rF
(
h4X
%
Displays
the
current
graph
via
dotty
.
rG
h5jA
h6h9h
;
h
{
h
=
}
rH
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
rI
hgX
%
Displays
the
current
graph
via
dotty
.
rJ
rK
}
rL
(
h4jG
h5jE
ubaubhx
)
rM
}
rN
(
h4X
If
the
*
mode
*
is
"
neato
"
the
dot
file
is
processed
with
the
neato
command
before
displaying
.
h5jA
h6h9h
;
h
{
h
=
}
rO
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
rP
(
hgX
If
the
rQ
rR
}
rS
(
h4X
If
the
h5jM
ubj
)
rT
}
rU
(
h4X
*
mode
*
h
=
}
rV
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jM
h
/
]
rW
hgX
moderX
rY
}
rZ
(
h4U
h5jT
ubah
;
j
ubhgX
is
r
[
r
\
}
r
]
(
h4X
is
h5jM
ubh_
)
r
^
}
r_
(
h4X
"
neato
"
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jM
h
/
]
ra
hgX
"
neato
"
rb
rc
}
rd
(
h4U
h5j
^
ubah
;
hkubhgXD
the
dot
file
is
processed
with
the
neato
command
before
displaying
.
re
rf
}
rg
(
h4XD
the
dot
file
is
processed
with
the
neato
command
before
displaying
.
h5jM
ubeubhx
)
rh
}
ri
(
h4X7
This
method
won
'
t
return
until
the
dotty
command
exits
.
rj
h5jA
h6h9h
;
h
{
h
=
}
rk
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
rl
hgX7
This
method
won
'
t
return
until
the
dotty
command
exits
.
rm
rn
}
ro
(
h4jj
h5jh
ubaubeubeubhp
)
rp
}
rq
(
h4U
h5j
h6Nh
;
hsh
=
}
rr
(
hB
]
hA
]
h
?
]
h
]
hE
]
U
entries
]
rs
(
hvX
#
save_dot
(
)
(
in
module
altgraph
.
Dot
)
h
U
trt
auhGNhHh
h
/
]
ubj2
)
ru
}
rv
(
h4U
h5j
h6Nh
;
j5
h
=
}
rw
(
j7
j8
X
pyhB
]
hA
]
h
?
]
h
]
hE
]
j9
X
methodrx
j
;
jx
uhGNhHh
h
/
]
ry
(
j
=
)
rz
}
r
{
(
h4X
save_dot
(
filename
)
h5ju
h6h9h
;
j
h
=
}
r
|
(
hB
]
r
}
h
ajC
h
hA
]
h
?
]
h
]
hE
]
r
~
h
ajE
X
save_dotr
jG
U
jH
uhGK
hHh
h
/
]
r
(
jS
)
r
}
r
(
h4X
altgraph
.
Dot
.
h5jz
h6h9h
;
jV
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
altgraph
.
Dot
.
r
r
}
r
(
h4U
h5j
ubaubj
\
)
r
}
r
(
h4j
h5jz
h6h9h
;
j_
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
save_dotr
r
}
r
(
h4U
h5j
ubaubje
)
r
}
r
(
h4U
h5jz
h6h9h
;
jh
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
jk
)
r
}
r
(
h4X
filenameh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
filenamer
r
}
r
(
h4U
h5j
ubah
;
js
ubaubeubj
)
r
}
r
(
h4U
h5ju
h6h9h
;
j
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hx
)
r
}
r
(
h4X
;
Saves
the
current
graph
representation
into
the
given
file
.
r
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
;
Saves
the
current
graph
representation
into
the
given
file
.
r
r
}
r
(
h4j
h5j
ubaubcdocutils
.
nodes
note
r
)
r
}
r
(
h4X
For
backward
compatibility
reasons
this
method
can
also
be
called
without
an
argument
it
will
then
write
the
graph
into
a
fixed
filename
(
present
in
the
attribute
:
data
:
Graph
.
temp_dot
)
.
This
feature
is
deprecated
and
should
not
be
used
.
h5j
h6h9h
;
U
noter
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGNhHh
h
/
]
r
(
hx
)
r
}
r
(
h4X
For
backward
compatibility
reasons
this
method
can
also
be
called
without
an
argument
it
will
then
write
the
graph
into
a
fixed
filename
(
present
in
the
attribute
:
data
:
Graph
.
temp_dot
)
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
h
/
]
r
(
hgX
For
backward
compatibility
reasons
this
method
can
also
be
called
without
an
argument
it
will
then
write
the
graph
into
a
fixed
filename
(
present
in
the
attribute
r
r
}
r
(
h4X
For
backward
compatibility
reasons
this
method
can
also
be
called
without
an
argument
it
will
then
write
the
graph
into
a
fixed
filename
(
present
in
the
attribute
h5j
ubhQ
)
r
}
r
(
h4X
:
data
:
Graph
.
temp_dot
r
h5j
h6h9h
;
hUh
=
}
r
(
U
reftypeX
datahW
hXX
Graph
.
temp_dotU
refdomainX
pyr
hB
]
hA
]
U
refexplicit
h
?
]
h
]
hE
]
hZh
[
h
\
Nh
]
h
uhGK
h
/
]
r
h_
)
r
}
r
(
h4j
h
=
}
r
(
h
?
]
h
]
r
(
hdj
X
py
-
datar
ehA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
Graph
.
temp_dotr
r
}
r
(
h4U
h5j
ubah
;
hkubaubhgX
)
.
r
r
}
r
(
h4X
)
.
h5j
ubeubhx
)
r
}
r
(
h4X2
This
feature
is
deprecated
and
should
not
be
used
.
r
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
h
/
]
r
hgX2
This
feature
is
deprecated
and
should
not
be
used
.
r
r
}
r
(
h4j
h5j
ubaubeubeubeubhp
)
r
}
r
(
h4U
h5j
h6Nh
;
hsh
=
}
r
(
hB
]
hA
]
h
?
]
h
]
hE
]
U
entries
]
r
(
hvX
%
save_image
(
)
(
in
module
altgraph
.
Dot
)
h
U
tr
auhGNhHh
h
/
]
ubj2
)
r
}
r
(
h4U
h5j
h6Nh
;
j5
h
=
}
r
(
j7
j8
X
pyhB
]
hA
]
h
?
]
h
]
hE
]
j9
X
methodr
j
;
j
uhGNhHh
h
/
]
r
(
j
=
)
r
}
r
(
h4X
*
save_image
(
file_name
[
file_type
[
mode
]
]
)
h5j
h6h9h
;
j
h
=
}
r
(
hB
]
r
h
ajC
h
hA
]
h
?
]
h
]
hE
]
r
h
ajE
X
save_imager
jG
U
jH
uhGK
hHh
h
/
]
r
(
jS
)
r
}
r
(
h4X
altgraph
.
Dot
.
h5j
h6h9h
;
jV
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
altgraph
.
Dot
.
r
r
}
r
(
h4U
h5j
ubaubj
\
)
r
}
r
(
h4j
h5j
h6h9h
;
j_
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
save_imager
r
}
r
(
h4U
h5j
ubaubje
)
r
}
r
(
h4U
h5j
h6h9h
;
jh
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
jk
)
r
}
r
(
h4X
file_nameh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
file_namer
r
}
r
(
h4U
h5j
ubah
;
js
ubjt
)
r
}
r
(
h4U
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
(
jk
)
r
}
r
(
h4X
file_typeh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
file_typer
r
}
r
(
h4U
h5j
ubah
;
js
ubjt
)
r
}
r
(
h4U
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
jk
)
r
}
r
(
h4X
modeh
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
moder
r
}
r
(
h4U
h5j
ubah
;
js
ubah
;
j
ubeh
;
j
ubeubeubj
)
r
}
r
(
h4U
h5j
h6h9h
;
j
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hx
)
r
}
r
(
h4X
Saves
the
current
graph
representation
as
an
image
file
.
The
output
is
written
into
a
file
whose
basename
is
*
file_name
*
and
whose
suffix
is
*
file_type
*
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hgXm
Saves
the
current
graph
representation
as
an
image
file
.
The
output
is
written
into
a
file
whose
basename
is
r
r
}
r
(
h4Xm
Saves
the
current
graph
representation
as
an
image
file
.
The
output
is
written
into
a
file
whose
basename
is
h5j
ubj
)
r
}
r
(
h4X
*
file_name
*
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
file_namer
r
}
r
(
h4U
h5j
ubah
;
j
ubhgX
and
whose
suffix
is
r
r
}
r
!
(
h4X
and
whose
suffix
is
h5j
ubj
)
r
"
}
r
#
(
h4X
*
file_type
*
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
h
/
]
r
%
hgX
file_typer
&
r
'
}
r
(
(
h4U
h5j
"
ubah
;
j
ubhgX
.
r
)
}
r
*
(
h4X
.
h5j
ubeubhx
)
r
+
}
r
(
h4XN
The
*
file_type
*
specifies
the
type
of
file
to
write
the
default
is
"
gif
"
.
h5j
h6h9h
;
h
{
h
=
}
r
-
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
.
(
hgX
The
r
/
r0
}
r1
(
h4X
The
h5j
+
ubj
)
r2
}
r3
(
h4X
*
file_type
*
h
=
}
r4
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
+
h
/
]
r5
hgX
file_typer6
r7
}
r8
(
h4U
h5j2
ubah
;
j
ubhgX5
specifies
the
type
of
file
to
write
the
default
is
r9
r
:
}
r
;
(
h4X5
specifies
the
type
of
file
to
write
the
default
is
h5j
+
ubh_
)
r
<
}
r
=
(
h4X
"
gif
"
h
=
}
r
>
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5j
+
h
/
]
r
?
hgX
"
gif
"
r
rA
}
rB
(
h4U
h5j
<
ubah
;
hkubhgX
.
rC
}
rD
(
h4X
.
h5j
+
ubeubhx
)
rE
}
rF
(
h4X
If
the
*
mode
*
is
"
neato
"
the
dot
file
is
processed
with
the
neato
command
before
displaying
.
h5j
h6h9h
;
h
{
h
=
}
rG
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
rH
(
hgX
If
the
rI
rJ
}
rK
(
h4X
If
the
h5jE
ubj
)
rL
}
rM
(
h4X
*
mode
*
h
=
}
rN
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jE
h
/
]
rO
hgX
moderP
rQ
}
rR
(
h4U
h5jL
ubah
;
j
ubhgX
is
rS
rT
}
rU
(
h4X
is
h5jE
ubh_
)
rV
}
rW
(
h4X
"
neato
"
h
=
}
rX
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jE
h
/
]
rY
hgX
"
neato
"
rZ
r
[
}
r
\
(
h4U
h5jV
ubah
;
hkubhgXD
the
dot
file
is
processed
with
the
neato
command
before
displaying
.
r
]
r
^
}
r_
(
h4XD
the
dot
file
is
processed
with
the
neato
command
before
displaying
.
h5jE
ubeubj
)
r
}
ra
(
h4X
For
backward
compatibility
reasons
this
method
can
also
be
called
without
an
argument
it
will
then
write
the
graph
with
a
fixed
basename
(
"
out
"
)
.
This
feature
is
deprecated
and
should
not
be
used
.
h5j
h6h9h
;
j
h
=
}
rb
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGNhHh
h
/
]
rc
(
hx
)
rd
}
re
(
h4X
For
backward
compatibility
reasons
this
method
can
also
be
called
without
an
argument
it
will
then
write
the
graph
with
a
fixed
basename
(
"
out
"
)
.
h5j
h6h9h
;
h
{
h
=
}
rf
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
h
/
]
rg
(
hgX
For
backward
compatibility
reasons
this
method
can
also
be
called
without
an
argument
it
will
then
write
the
graph
with
a
fixed
basename
(
rh
ri
}
rj
(
h4X
For
backward
compatibility
reasons
this
method
can
also
be
called
without
an
argument
it
will
then
write
the
graph
with
a
fixed
basename
(
h5jd
ubh_
)
rk
}
rl
(
h4X
"
out
"
h
=
}
rm
(
h
?
]
h
]
hA
]
hB
]
hE
]
uh5jd
h
/
]
rn
hgX
"
out
"
ro
rp
}
rq
(
h4U
h5jk
ubah
;
hkubhgX
)
.
rr
rs
}
rt
(
h4X
)
.
h5jd
ubeubhx
)
ru
}
rv
(
h4X2
This
feature
is
deprecated
and
should
not
be
used
.
rw
h5j
h6h9h
;
h
{
h
=
}
rx
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
h
/
]
ry
hgX2
This
feature
is
deprecated
and
should
not
be
used
.
rz
r
{
}
r
|
(
h4jw
h5ju
ubaubeubeubeubhp
)
r
}
}
r
~
(
h4U
h5j
h6h9h
;
hsh
=
}
r
(
hB
]
hA
]
h
?
]
h
]
hE
]
U
entries
]
r
(
hvX
"
iterdot
(
)
(
in
module
altgraph
.
Dot
)
h
U
tr
auhGNhHh
h
/
]
ubj2
)
r
}
r
(
h4U
h5j
h6h9h
;
j5
h
=
}
r
(
j7
j8
X
pyhB
]
hA
]
h
?
]
h
]
hE
]
j9
X
methodr
j
;
j
uhGNhHh
h
/
]
r
(
j
=
)
r
}
r
(
h4X
iterdot
(
)
h5j
h6h9h
;
j
h
=
}
r
(
hB
]
r
h
ajC
h
hA
]
h
?
]
h
]
hE
]
r
h
ajE
X
iterdotr
jG
U
jH
uhGK
hHh
h
/
]
r
(
jS
)
r
}
r
(
h4X
altgraph
.
Dot
.
h5j
h6h9h
;
jV
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
altgraph
.
Dot
.
r
r
}
r
(
h4U
h5j
ubaubj
\
)
r
}
r
(
h4j
h5j
h6h9h
;
j_
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
iterdotr
r
}
r
(
h4U
h5j
ubaubje
)
r
}
r
(
h4U
h5j
h6h9h
;
jh
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
ubeubj
)
r
}
r
(
h4U
h5j
h6h9h
;
j
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hx
)
r
}
r
(
h4XF
Yields
all
lines
of
a
graphviz
_
input
file
(
including
line
endings
)
.
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hgX
Yields
all
lines
of
a
r
r
}
r
(
h4X
Yields
all
lines
of
a
h5j
ubh
)
r
}
r
(
h4X
graphviz
_h
K
h5j
h
;
h
h
=
}
r
(
U
nameX
graphvizh
h
hB
]
hA
]
h
?
]
h
]
hE
]
uh
/
]
r
hgX
graphvizr
r
}
r
(
h4U
h5j
ubaubhgX
%
input
file
(
including
line
endings
)
.
r
r
}
r
(
h4X
%
input
file
(
including
line
endings
)
.
h5j
ubeubaubeubhp
)
r
}
r
(
h4U
h5j
h6h9h
;
hsh
=
}
r
(
hB
]
hA
]
h
?
]
h
]
hE
]
U
entries
]
r
(
hvX
#
__iter__
(
)
(
in
module
altgraph
.
Dot
)
h
U
tr
auhGNhHh
h
/
]
ubj2
)
r
}
r
(
h4U
h5j
h6h9h
;
j5
h
=
}
r
(
j7
j8
X
pyhB
]
hA
]
h
?
]
h
]
hE
]
j9
X
methodr
j
;
j
uhGNhHh
h
/
]
r
(
j
=
)
r
}
r
(
h4X
__iter__
(
)
r
h5j
h6h9h
;
j
h
=
}
r
(
hB
]
r
h
ajC
h
hA
]
h
?
]
h
]
hE
]
r
h
ajE
X
__iter__r
jG
U
jH
uhGK
hHh
h
/
]
r
(
jS
)
r
}
r
(
h4X
altgraph
.
Dot
.
h5j
h6h9h
;
jV
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
altgraph
.
Dot
.
r
r
}
r
(
h4U
h5j
ubaubj
\
)
r
}
r
(
h4j
h5j
h6h9h
;
j_
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hgX
__iter__r
r
}
r
(
h4U
h5j
ubaubje
)
r
}
r
(
h4U
h5j
h6h9h
;
jh
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
ubeubj
)
r
}
r
(
h4U
h5j
h6h9h
;
j
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
hx
)
r
}
r
(
h4X
%
Alias
for
the
:
meth
:
iterdot
method
.
r
h5j
h6h9h
;
h
{
h
=
}
r
(
h
?
]
h
]
hA
]
hB
]
hE
]
uhGK
hHh
h
/
]
r
(
hgX
Alias
for
the
r
r
}
r
(
h4X
Alias
for
the
h5j
ubhQ
)
r
}
r
(
h4X
:
meth
:
iterdot
r
h5j
h6h9h
;
hUh
=
}
r
(
U
reftypeX
methhW
hXX
iterdotU
refdomainX
pyr
hB
]
hA
]
U
refexplicit
h
?
]
h
]
hE
]
hZh
[
h
\
Nh
]
h
uhGK
h
/
]
r
h_
)
r
}
r
(
h4j
h
=
}
r
(
h
?
]
h
]
r
(
hdj
X
py
-
methr
ehA
]
hB
]
hE
]
uh5j
h
/
]
r
hgX
iterdot
(
)
r
r
}
r
(
h4U
h5j
ubah
;
hkubaubhgX
method
.
r
r
}
r
(
h4X
method
.
h5j
ubeubaubeubeubeubeubah4U
U
transformerr
NU
footnote_refsr
}
r
U
refnamesr
}
r
(
X
valid
attributes
]
r
(
j
j_
j
eh
]
r
(
h
h
jQ
j
j
euU
symbol_footnotesr
]
r
U
autofootnote_refsr
]
r
U
symbol_footnote_refsr
]
r
U
citationsr
]
r
hHh
U
current_liner
NU
transform_messagesr
]
r
U
reporterr
NU
id_startr
K
U
autofootnotesr
]
r
U
citation_refsr
}
r
U
indirect_targetsr
]
r
U
settingsr
(
cdocutils
.
frontend
Values
r
or
}
r
(
U
footnote_backlinksr
K
U
record_dependenciesr
NU
rfc_base_urlr
U
http
:
/
/
tools
.
ietf
.
org
/
html
/
r
U
tracebackr
U
pep_referencesr
NU
strip_commentsr
NU
toc_backlinksr
U
entryr
U
language_coder
U
enr
U
datestampr
NU
report_levelr
K
U
_destinationr
NU
halt_levelr
!
K
U
strip_classesr
"
NhNNU
error_encoding_error_handlerr
#
U
backslashreplacer
U
debugr
%
NU
embed_stylesheetr
&
U
output_encoding_error_handlerr
'
U
strictr
(
U
sectnum_xformr
)
K
U
dump_transformsr
*
NU
docinfo_xformr
+
K
U
warning_streamr
NU
pep_file_url_templater
-
U
pep
-
%
04dr
.
U
exit_status_levelr
/
K
U
configr0
NU
strict_visitorr1
NU
cloak_email_addressesr2
U
trim_footnote_reference_spacer3
U
envr4
NU
dump_pseudo_xmlr5
NU
expose_internalsr6
NU
sectsubtitle_xformr7
U
source_linkr8
NU
rfc_referencesr9
NU
output_encodingr
:
U
utf
-
8r
;
U
source_urlr
<
NU
input_encodingr
=
U
utf
-
8
-
sigr
>
U
_disable_configr
?
NU
id_prefixr
U
U
tab_widthrA
K
U
error_encodingrB
U
UTF
-
8rC
U
_sourcerD
U5
/
Users
/
ronald
/
Projects
/
pyobjc
-
hg
/
altgraph
/
doc
/
dot
.
rstrE
U
gettext_compactrF
U
generatorrG
NU
dump_internalsrH
NU
smart_quotesrI
U
pep_base_urlrJ
U
http
:
/
/
www
.
python
.
org
/
dev
/
peps
/
rK
U
syntax_highlightrL
U
longrM
U
input_encoding_error_handlerrN
j
(
U
auto_id_prefixrO
U
idrP
U
doctitle_xformrQ
U
strip_elements_with_classesrR
NU
_config_filesrS
]
U
file_insertion_enabledrT
U
raw_enabledrU
K
U
dump_settingsrV
NubU
symbol_footnote_startrW
K
U
idsrX
}
rY
(
h
.
h2h
j
h
'
h
h
*
j
h
-
j
h
j
h
j
>
h
jz
h
)
j
h
j
h
j
h
j
h
%
j
h
+
h
h
j
h
(
jj
h
j1
h
j
h
j
hDh
)
rZ
}
r
[
(
h4U
h5h2h6h9h
;
h
h
=
}
r
\
(
h
?
]
hB
]
r
]
hDahA
]
U
ismod
h
]
hE
]
uhGNhHh
h
/
]
ubh
&
j
h
js
uU
substitution_namesr
^
}
r_
h
;
hHh
=
}
r
(
h
?
]
hB
]
hA
]
U
sourceh9h
]
hE
]
uU
footnotesra
]
rb
U
refidsrc
}
rd
ub
.
