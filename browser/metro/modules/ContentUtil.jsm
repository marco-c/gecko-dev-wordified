/
*
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
*
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
*
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
*
/
"
use
strict
"
;
this
.
EXPORTED_SYMBOLS
=
[
"
ContentUtil
"
]
;
this
.
ContentUtil
=
{
/
/
Pass
several
objects
in
and
it
will
combine
them
all
into
the
first
object
and
return
it
.
/
/
NOTE
:
Deep
copy
is
not
supported
extend
:
function
extend
(
)
{
/
/
copy
reference
to
target
object
let
target
=
arguments
[
0
]
|
|
{
}
;
let
length
=
arguments
.
length
;
if
(
length
=
=
=
1
)
{
return
target
;
}
/
/
Handle
case
when
target
is
a
string
or
something
if
(
typeof
target
!
=
"
object
"
&
&
typeof
target
!
=
"
function
"
)
{
target
=
{
}
;
}
for
(
let
i
=
1
;
i
<
length
;
i
+
+
)
{
/
/
Only
deal
with
non
-
null
/
undefined
values
let
options
=
arguments
[
i
]
;
if
(
options
!
=
null
)
{
/
/
Extend
the
base
object
for
(
let
name
in
options
)
{
let
copy
=
options
[
name
]
;
/
/
Prevent
never
-
ending
loop
if
(
target
=
=
=
copy
)
continue
;
if
(
copy
!
=
=
undefined
)
target
[
name
]
=
copy
;
}
}
}
/
/
Return
the
modified
object
return
target
;
}
}
;
