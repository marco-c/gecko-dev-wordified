.
(
#
iW
U
k
9
B
.
?
&
{
?
+
eG
?
-
DT
!
;
f
?
;
f
?
A
M
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
DescribeType
.
as
value
"
avmplus
:
getQualifiedSuperclassName
String
avmplus
:
getQualifiedClassName
avmplus
:
getDefinitionByName
Object
XML
flags
o
x
oi
describeTypeJSON
builtin
.
as
0
avmplus
!
http
:
/
/
adobe
.
com
/
AS3
/
2006
/
builtin
typeXml
copy
name
traits
bases
length
base
isDynamic
isFinal
isStatic
describeTraits
USE_ITRAITS
e
factoryXml
type
appendChild
avmplus
:
describeType
uint
c
i
XMLList
extendsXml
interfaces
interf
implementsXml
constructor
constructorXml
describeParams
variables
variable
access
readonly
constantXml
variableXml
finish
accessors
accessor
accessorXml
declaredBy
methods
method
methodXml
returnType
parameters
describeMetadata
metadata
avmplus
:
describeTraits
void
uri
avmplus
:
finish
md
m
metadataXml
a
argXml
key
avmplus
:
describeMetadata
Array
p
f
parameterXml
index
optional
avmplus
:
describeParams
avmplus
:
describeTypeJSONQ
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
shumway
.
toplevel
.
as
s
debugBreak
notImplemented
print
traceR
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
actionscript
.
lang
.
as
str
isXMLName
Boolean
unescape
undefined
escape
parseFloat
Number
NaN
radix
parseInt
int
n
isFinite
isNaN
encodeURIComponent
encodeURI
decodeURIComponent
decodeURI
bugzillaG
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Object
.
as
V
Object
/
private
:
_hasOwnProperty
Object
/
private
:
_propertyIsEnumerable
enumerable
)
Object
/
protected
:
_setPropertyIsEnumerable
Object
/
private
:
_isPrototypeOf
Object
/
private
:
_toString
proto
_setPropertyIsEnumerable
#
Object
/
protected
:
_dontEnumPrototype
Object
/
init
hasOwnProperty
propertyIsEnumerable
_init
0
prototype
setPropertyIsEnumerable
unsafeJSNative
Object
.
prototype
.
isPrototypeOf
isPrototypeOf
original
.
Object
.
toString
toString
original
.
Object
.
valueOf
valueOf
_dontEnumPrototype
Object
/
_init
Object
/
length
/
get
newLength
Object
/
length
/
set
Object
/
AS3
:
isPrototypeOf
Object
/
AS3
:
hasOwnProperty
Object
/
AS3
:
propertyIsEnumerable
Object
/
Object
_hasOwnProperty
compat
_propertyIsEnumerable
_isPrototypeOf
_toString
init
_init
ClassF
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Class
.
as
Class
/
prototype
/
get
Class
/
Class
Function
toLocaleString
Function
.
prototype
.
call
call
Function
.
prototype
.
apply
applyI
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Function
.
as
createEmptyFunction
0
Function
/
createEmptyFunction
function
Function
(
)
{
}
Function
/
prototype
/
get
Function
/
prototype
/
set
Function
/
length
/
get
thisArg
args
Function
/
AS3
:
call
argArray
Function
/
AS3
:
apply
Function
/
Function
createEmptyFunction
NamespaceJ
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Namespace
.
as
Namespace
/
prefix
/
get
Namespace
/
uri
/
get
Namespace
/
AS3
:
valueOf
Namespace
/
AS3
:
toString
prefix
Namespace
/
Namespace
Boolean
.
prototype
.
toString
Boolean
.
prototype
.
valueOfH
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Boolean
.
as
Boolean
/
AS3
:
toString
Boolean
/
AS3
:
valueOf
Boolean
/
Boolean
NEGATIVE_INFINITY
POSITIVE_INFINITY
MIN_VALUE
Number
.
MIN_VALUE
MAX_VALUE
Number
.
MAX_VALUE
E
LN10
LN2
LOG10E
LOG2E
PI
SQRT1_2
SQRT2
DTOSTR_FIXED
DTOSTR_PRECISION
DTOSTR_EXPONENTIAL
Number
.
prototype
.
toLocaleString
Number
.
prototype
.
toString
Number
.
prototype
.
valueOf
Number
.
prototype
.
toExponential
toExponential
Number
.
prototype
.
toPrecision
toPrecision
Number
.
prototype
.
toFixed
toFixedG
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Number
.
as
Number
/
abs
Number
/
acos
Number
/
asin
Number
/
atan
Number
/
ceil
Number
/
cos
Number
/
exp
Number
/
floor
Number
/
log
Number
/
round
Number
/
sin
Number
/
sqrt
Number
/
tan
y
Number
/
atan2
Number
/
pow
rest
Number
/
max
Number
/
min
Number
/
random
Number
/
private
:
_numberToString
precision
mode
Number
/
private
:
_convert
Number
/
private
:
_minValue
Number
/
AS3
:
toString
Number
/
AS3
:
valueOf
Number
/
AS3
:
toExponential
Number
/
AS3
:
toPrecision
Number
/
AS3
:
toFixed
Number
/
Number
abs
Math
.
abs
acos
Math
.
acos
asin
Math
.
asin
atan
Math
.
atan
ceil
Math
.
ceil
cos
Math
.
cos
exp
Math
.
exp
floor
Math
.
floor
log
Math
.
log
round
Math
.
round
sin
Math
.
sin
sqrt
Math
.
sqrt
tan
Math
.
tan
atan2
Math
.
atan2
pow
Math
.
pow
max
Math
.
max
min
Math
.
min
random
Math
.
random
_numberToString
_convert
_minValue
int
/
int
uint
/
uint
String
.
fromCharCode
fromCharCode
String
.
prototype
.
indexOf
indexOf
String
.
prototype
.
lastIndexOf
lastIndexOf
String
.
prototype
.
charAt
charAt
String
.
prototype
.
charCodeAt
charCodeAt
String
.
prototype
.
concat
concat
String
.
prototype
.
localeCompare
localeCompare
String
.
prototype
.
match
match
String
.
prototype
.
replace
replace
String
.
prototype
.
search
search
String
.
prototype
.
slice
slice
String
.
prototype
.
split
split
String
.
prototype
.
substring
substring
String
.
prototype
.
substr
substr
String
.
prototype
.
toLowerCase
toLocaleLowerCase
toLowerCase
String
.
prototype
.
toUpperCase
toLocaleUpperCase
toUpperCase
String
.
prototype
.
toString
String
.
prototype
.
valueOfG
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
String
.
as
charcodes
String
/
AS3
:
fromCharCode
String
/
private
:
_match
repl
String
/
private
:
_replace
String
/
private
:
_search
delim
limit
String
/
private
:
_split
String
/
length
/
get
String
/
private
:
_indexOf
String
/
AS3
:
indexOf
String
/
private
:
_lastIndexOf
String
/
AS3
:
lastIndexOf
String
/
AS3
:
charAt
String
/
AS3
:
charCodeAt
String
/
AS3
:
concat
other
String
/
AS3
:
localeCompare
String
/
AS3
:
match
String
/
AS3
:
replace
String
/
AS3
:
search
start
end
String
/
private
:
_slice
String
/
AS3
:
slice
String
/
AS3
:
split
String
/
private
:
_substring
String
/
AS3
:
substring
String
/
private
:
_substr
len
String
/
AS3
:
substr
String
/
AS3
:
toLowerCase
String
/
AS3
:
toLocaleLowerCase
String
/
AS3
:
toUpperCase
String
/
AS3
:
toLocaleUpperCase
String
/
AS3
:
toString
String
/
AS3
:
valueOf
String
/
String
_match
_replace
_search
_split
_indexOf
_lastIndexOf
_slice
_substring
_substr
CASEINSENSITIVE
DESCENDING
UNIQUESORT
RETURNINDEXEDARRAY
NUMERIC
join
pop
push
reverse
shift
unshift
splice
sort
sortOn
every
filter
forEach
map
someF
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Array
.
as
sep
out
Array
/
private
:
_join
Array
/
private
:
_pop
Array
/
private
:
_reverse
Array
/
private
:
_concat
Array
/
private
:
_shift
A
B
Array
/
private
:
_slice
Array
/
private
:
_unshift
Array
/
private
:
_splice
Array
/
private
:
_sort
names
options
Array
/
private
:
_sortOn
searchElement
fromIndex
Array
/
private
:
_indexOf
Array
/
private
:
_lastIndexOf
callback
thisObject
Array
/
private
:
_every
Array
/
private
:
_filter
Array
/
private
:
_forEach
Array
/
private
:
_map
Array
/
private
:
_some
_join
_pop
argc
_reverse
_concat
_shift
k
_unshift
d
_splice
_sort
ignored
_sortOn
_every
_filter
_forEach
_map
_some
Array
/
length
/
get
Array
/
length
/
set
altLength
Error
RangeError
throwError
Array
/
private
:
set_length
dlen
ulen
Array
/
Array
Array
/
AS3
:
join
Array
/
AS3
:
pop
Array
/
AS3
:
push
Array
/
AS3
:
reverse
Array
/
AS3
:
concat
Array
/
AS3
:
shift
Array
/
AS3
:
slice
Array
/
AS3
:
unshift
Array
/
AS3
:
splice
Array
/
AS3
:
sort
Array
/
AS3
:
sortOn
Array
/
AS3
:
indexOf
Array
/
AS3
:
lastIndexOf
Array
/
AS3
:
every
Array
/
AS3
:
filter
Array
/
AS3
:
forEach
Array
/
AS3
:
map
Array
/
AS3
:
some
set_length
__AS3__
.
vec
:
VectorG
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Vector
.
as
__AS3__
.
vec
:
Vector
/
Vector
__AS3__
.
vec
Vector
__AS3__
.
vec
:
Vector
object
item0__AS3__
.
vec
:
Vector
object
/
private
:
castToThisType
Vector
objectK
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
VectorImpl
.
as
(
__AS3__
.
vec
:
Vector
object
/
private
:
_every
*
__AS3__
.
vec
:
Vector
object
/
private
:
_forEach
'
__AS3__
.
vec
:
Vector
object
/
private
:
_some
'
__AS3__
.
vec
:
Vector
object
/
private
:
_sort
v
castToThisType
fixed
separator
items
checker
thisObj
eacher
from
Infinity
mapper
comparefn
deleteCount
'
__AS3__
.
vec
:
Vector
object
/
Vector
object
-
__AS3__
.
vec
:
Vector
object
/
private
:
newThisType
__AS3__
.
vec
:
Vector
object
/
length
/
get
__AS3__
.
vec
:
Vector
object
/
length
/
set
#
__AS3__
.
vec
:
Vector
object
/
fixed
/
set
#
__AS3__
.
vec
:
Vector
object
/
fixed
/
get
&
__AS3__
.
vec
:
Vector
object
/
AS3
:
toString
__AS3__
.
vec
:
Vector
object
/
AS3
:
toLocaleString
"
__AS3__
.
vec
:
Vector
object
/
AS3
:
join
bug504525
j
newThisType
_spliceHelper
insertPoint
)
__AS3__
.
vec
:
Vector
object
/
private
:
_concat
#
__AS3__
.
vec
:
Vector
object
/
AS3
:
every
%
__AS3__
.
vec
:
Vector
object
/
AS3
:
forEach
result
!
__AS3__
.
vec
:
Vector
object
/
AS3
:
map
"
__AS3__
.
vec
:
Vector
object
/
AS3
:
push
*
__AS3__
.
vec
:
Vector
object
/
private
:
_reverse
"
__AS3__
.
vec
:
Vector
object
/
AS3
:
some
first
clamp
(
__AS3__
.
vec
:
Vector
object
/
private
:
_slice
delcnt
)
__AS3__
.
vec
:
Vector
object
/
private
:
_splice
insertpoint
insertcount
offset
/
__AS3__
.
vec
:
Vector
object
/
private
:
_spliceHelper
%
__AS3__
.
vec
:
Vector
object
/
AS3
:
unshift
)
__AS3__
.
vec
:
Vector
object
/
private
:
_filter
&
__AS3__
.
vec
:
Vector
object
/
private
:
_map
val
'
__AS3__
.
vec
:
Vector
object
/
private
:
clamp
__AS3__
.
vec
:
Vector
object
/
AS3
:
concat
__AS3__
.
vec
:
Vector
object
/
AS3
:
filter
!
__AS3__
.
vec
:
Vector
object
/
AS3
:
pop
%
__AS3__
.
vec
:
Vector
object
/
AS3
:
reverse
#
__AS3__
.
vec
:
Vector
object
/
AS3
:
shift
#
__AS3__
.
vec
:
Vector
object
/
AS3
:
slice
"
__AS3__
.
vec
:
Vector
object
/
AS3
:
sort
__AS3__
.
vec
:
Vector
object
/
AS3
:
splice
%
__AS3__
.
vec
:
Vector
object
/
AS3
:
indexOf
)
__AS3__
.
vec
:
Vector
object
/
AS3
:
lastIndexOf
__AS3__
.
vec
:
Vector
int
-
__AS3__
.
vec
:
Vector
int
/
private
:
castToThisType
Vector
int
%
__AS3__
.
vec
:
Vector
int
/
private
:
_every
'
__AS3__
.
vec
:
Vector
int
/
private
:
_forEach
__AS3__
.
vec
:
Vector
int
/
private
:
_some
__AS3__
.
vec
:
Vector
int
/
private
:
_sort
!
__AS3__
.
vec
:
Vector
int
/
Vector
int
*
__AS3__
.
vec
:
Vector
int
/
private
:
newThisType
!
__AS3__
.
vec
:
Vector
int
/
length
/
get
!
__AS3__
.
vec
:
Vector
int
/
length
/
set
__AS3__
.
vec
:
Vector
int
/
fixed
/
set
__AS3__
.
vec
:
Vector
int
/
fixed
/
get
#
__AS3__
.
vec
:
Vector
int
/
AS3
:
toString
)
__AS3__
.
vec
:
Vector
int
/
AS3
:
toLocaleString
__AS3__
.
vec
:
Vector
int
/
AS3
:
join
&
__AS3__
.
vec
:
Vector
int
/
private
:
_concat
__AS3__
.
vec
:
Vector
int
/
AS3
:
every
"
__AS3__
.
vec
:
Vector
int
/
AS3
:
forEach
__AS3__
.
vec
:
Vector
int
/
AS3
:
map
__AS3__
.
vec
:
Vector
int
/
AS3
:
push
'
__AS3__
.
vec
:
Vector
int
/
private
:
_reverse
__AS3__
.
vec
:
Vector
int
/
AS3
:
some
%
__AS3__
.
vec
:
Vector
int
/
private
:
_slice
&
__AS3__
.
vec
:
Vector
int
/
private
:
_splice
__AS3__
.
vec
:
Vector
int
/
private
:
_spliceHelper
"
__AS3__
.
vec
:
Vector
int
/
AS3
:
unshift
&
__AS3__
.
vec
:
Vector
int
/
private
:
_filter
#
__AS3__
.
vec
:
Vector
int
/
private
:
_map
__AS3__
.
vec
:
Vector
int
/
private
:
clamp
!
__AS3__
.
vec
:
Vector
int
/
AS3
:
concat
!
__AS3__
.
vec
:
Vector
int
/
AS3
:
filter
__AS3__
.
vec
:
Vector
int
/
AS3
:
pop
"
__AS3__
.
vec
:
Vector
int
/
AS3
:
reverse
__AS3__
.
vec
:
Vector
int
/
AS3
:
shift
__AS3__
.
vec
:
Vector
int
/
AS3
:
slice
__AS3__
.
vec
:
Vector
int
/
AS3
:
sort
!
__AS3__
.
vec
:
Vector
int
/
AS3
:
splice
"
__AS3__
.
vec
:
Vector
int
/
AS3
:
indexOf
&
__AS3__
.
vec
:
Vector
int
/
AS3
:
lastIndexOf
__AS3__
.
vec
:
Vector
uint
.
__AS3__
.
vec
:
Vector
uint
/
private
:
castToThisType
Vector
uint
&
__AS3__
.
vec
:
Vector
uint
/
private
:
_every
(
__AS3__
.
vec
:
Vector
uint
/
private
:
_forEach
%
__AS3__
.
vec
:
Vector
uint
/
private
:
_some
%
__AS3__
.
vec
:
Vector
uint
/
private
:
_sort
#
__AS3__
.
vec
:
Vector
uint
/
Vector
uint
+
__AS3__
.
vec
:
Vector
uint
/
private
:
newThisType
"
__AS3__
.
vec
:
Vector
uint
/
length
/
get
"
__AS3__
.
vec
:
Vector
uint
/
length
/
set
!
__AS3__
.
vec
:
Vector
uint
/
fixed
/
set
!
__AS3__
.
vec
:
Vector
uint
/
fixed
/
get
__AS3__
.
vec
:
Vector
uint
/
AS3
:
toString
*
__AS3__
.
vec
:
Vector
uint
/
AS3
:
toLocaleString
__AS3__
.
vec
:
Vector
uint
/
AS3
:
join
'
__AS3__
.
vec
:
Vector
uint
/
private
:
_concat
!
__AS3__
.
vec
:
Vector
uint
/
AS3
:
every
#
__AS3__
.
vec
:
Vector
uint
/
AS3
:
forEach
__AS3__
.
vec
:
Vector
uint
/
AS3
:
map
__AS3__
.
vec
:
Vector
uint
/
AS3
:
push
(
__AS3__
.
vec
:
Vector
uint
/
private
:
_reverse
__AS3__
.
vec
:
Vector
uint
/
AS3
:
some
&
__AS3__
.
vec
:
Vector
uint
/
private
:
_slice
'
__AS3__
.
vec
:
Vector
uint
/
private
:
_splice
-
__AS3__
.
vec
:
Vector
uint
/
private
:
_spliceHelper
#
__AS3__
.
vec
:
Vector
uint
/
AS3
:
unshift
'
__AS3__
.
vec
:
Vector
uint
/
private
:
_filter
__AS3__
.
vec
:
Vector
uint
/
private
:
_map
%
__AS3__
.
vec
:
Vector
uint
/
private
:
clamp
"
__AS3__
.
vec
:
Vector
uint
/
AS3
:
concat
"
__AS3__
.
vec
:
Vector
uint
/
AS3
:
filter
__AS3__
.
vec
:
Vector
uint
/
AS3
:
pop
#
__AS3__
.
vec
:
Vector
uint
/
AS3
:
reverse
!
__AS3__
.
vec
:
Vector
uint
/
AS3
:
shift
!
__AS3__
.
vec
:
Vector
uint
/
AS3
:
slice
__AS3__
.
vec
:
Vector
uint
/
AS3
:
sort
"
__AS3__
.
vec
:
Vector
uint
/
AS3
:
splice
#
__AS3__
.
vec
:
Vector
uint
/
AS3
:
indexOf
'
__AS3__
.
vec
:
Vector
uint
/
AS3
:
lastIndexOf
__AS3__
.
vec
:
Vector
double0__AS3__
.
vec
:
Vector
double
/
private
:
castToThisType
Vector
double
(
__AS3__
.
vec
:
Vector
double
/
private
:
_every
*
__AS3__
.
vec
:
Vector
double
/
private
:
_forEach
'
__AS3__
.
vec
:
Vector
double
/
private
:
_some
'
__AS3__
.
vec
:
Vector
double
/
private
:
_sort
'
__AS3__
.
vec
:
Vector
double
/
Vector
double
-
__AS3__
.
vec
:
Vector
double
/
private
:
newThisType
__AS3__
.
vec
:
Vector
double
/
length
/
get
__AS3__
.
vec
:
Vector
double
/
length
/
set
#
__AS3__
.
vec
:
Vector
double
/
fixed
/
set
#
__AS3__
.
vec
:
Vector
double
/
fixed
/
get
&
__AS3__
.
vec
:
Vector
double
/
AS3
:
toString
__AS3__
.
vec
:
Vector
double
/
AS3
:
toLocaleString
"
__AS3__
.
vec
:
Vector
double
/
AS3
:
join
)
__AS3__
.
vec
:
Vector
double
/
private
:
_concat
#
__AS3__
.
vec
:
Vector
double
/
AS3
:
every
%
__AS3__
.
vec
:
Vector
double
/
AS3
:
forEach
!
__AS3__
.
vec
:
Vector
double
/
AS3
:
map
"
__AS3__
.
vec
:
Vector
double
/
AS3
:
push
*
__AS3__
.
vec
:
Vector
double
/
private
:
_reverse
"
__AS3__
.
vec
:
Vector
double
/
AS3
:
some
(
__AS3__
.
vec
:
Vector
double
/
private
:
_slice
)
__AS3__
.
vec
:
Vector
double
/
private
:
_splice
/
__AS3__
.
vec
:
Vector
double
/
private
:
_spliceHelper
%
__AS3__
.
vec
:
Vector
double
/
AS3
:
unshift
)
__AS3__
.
vec
:
Vector
double
/
private
:
_filter
&
__AS3__
.
vec
:
Vector
double
/
private
:
_map
'
__AS3__
.
vec
:
Vector
double
/
private
:
clamp
__AS3__
.
vec
:
Vector
double
/
AS3
:
concat
__AS3__
.
vec
:
Vector
double
/
AS3
:
filter
!
__AS3__
.
vec
:
Vector
double
/
AS3
:
pop
%
__AS3__
.
vec
:
Vector
double
/
AS3
:
reverse
#
__AS3__
.
vec
:
Vector
double
/
AS3
:
shift
#
__AS3__
.
vec
:
Vector
double
/
AS3
:
slice
"
__AS3__
.
vec
:
Vector
double
/
AS3
:
sort
__AS3__
.
vec
:
Vector
double
/
AS3
:
splice
%
__AS3__
.
vec
:
Vector
double
/
AS3
:
indexOf
)
__AS3__
.
vec
:
Vector
double
/
AS3
:
lastIndexOf
JSON
as3ns
AS3E
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
JSON
.
as
text
JSON
/
private
:
parseCore
replacerArray
replacerFunction
gap
)
JSON
/
private
:
stringifySpecializedToString
reviver
unfiltered
SyntaxError
parseCore
Walker
walk
JSON
/
parse
replacer
space
isfloat
TypeError
Math
stringifySpecializedToString
computePropertyList
JSON
/
stringify
r
propertyList
alreadyAdded
ilim
JSON
/
private
:
computePropertyList
JSON
/
JSON
parse
stringify
Walker
/
Walker
holder
newElement
Walker
/
walk
builtin
.
as
0
:
MethodClosure
(
builtin
.
as
0
:
MethodClosure
/
prototype
/
get
ReferenceError
MethodClosure
(
builtin
.
as
0
:
MethodClosure
/
prototype
/
set
(
builtin
.
as
0
:
MethodClosure
/
MethodClosure
<
extendsClass
/
>
<
implementsInterface
/
>
<
constructor
/
>
<
constant
/
>
<
variable
/
>
<
accessor
/
>
<
method
/
>
<
parameter
/
>
<
metadata
/
>
<
arg
/
>
<
type
/
>
<
factory
/
>
HIDE_NSURI_METHODS
INCLUDE_BASES
INCLUDE_INTERFACES
INCLUDE_VARIABLES
INCLUDE_ACCESSORS
INCLUDE_METHODS
INCLUDE_METADATA
INCLUDE_CONSTRUCTOR
INCLUDE_TRAITS
HIDE_OBJECT
FLASH10_FLAGSH
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
builtin
.
as
native
cls
ObjectClass
FunctionClass
MethodClosureClass
NamespaceClass
BooleanClass
NumberClass
intClass
uintClass
StringClass
ArrayClass
VectorClass
ObjectVectorClass
IntVectorClass
UIntVectorClass
DoubleVectorClass
describeType
getDefinitionByName
getQualifiedClassName
getQualifiedSuperclassName
JSONClass
classgc
exact
auto
construct
none
API
674
NegInfinityE
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Math
.
as
Math
/
private
:
_min
Math
/
private
:
_max
Math
/
abs
Math
/
acos
Math
/
asin
Math
/
atan
Math
/
ceil
Math
/
cos
Math
/
exp
Math
/
floor
Math
/
log
Math
/
round
Math
/
sin
Math
/
sqrt
Math
/
tan
Math
/
atan2
Math
/
pow
Math
/
max
Math
/
min
Math
/
random
Math
/
Math
_min
_max
Math
.
as
1
MathClass
Error
.
as
2
messageF
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Error
.
as
Error
/
getErrorMessage
pos
string
arg_num
1
2
3
4
5
6
throwError
0
getErrorMessage
RegExp
%
[
0
-
9
]
g
Error
/
throwError
:
id
_errorID
Error
/
Error
Error
/
getStackTrace
Error
/
errorID
/
get
getStackTrace
errorID
DefinitionError
DefinitionError
/
DefinitionError
EvalError
EvalError
/
EvalError
RangeError
/
RangeError
ReferenceError
/
ReferenceError
SecurityError
SecurityError
/
SecurityError
SyntaxError
/
SyntaxError
TypeError
/
TypeError
URIError
URIError
/
URIError
VerifyError
VerifyError
/
VerifyError
UninitializedError
%
UninitializedError
/
UninitializedError
ArgumentError
ArgumentError
/
ArgumentError
flash
.
errors
:
IOError
flash
.
errors
:
IOError
/
IOError
flash
.
errors
IOError
flash
.
errors
:
MemoryError
flash
.
errors
:
MemoryError
/
MemoryError
MemoryError
"
flash
.
errors
:
IllegalOperationError8flash
.
errors
:
IllegalOperationError
/
IllegalOperationError
IllegalOperationError
flash
.
errors
:
EOFError
flash
.
errors
:
EOFError
/
EOFError
EOFError
ErrorClass
DefinitionErrorClass
EvalErrorClass
RangeErrorClass
ReferenceErrorClass
SecurityErrorClass
SyntaxErrorClass
TypeErrorClass
URIErrorClass
VerifyErrorClass
UninitializedErrorClass
ArgumentErrorClass
Date
Date
.
as
3
Date
.
prototype
.
setTime
setTime
Date
.
prototype
.
valueOf
Date
.
prototype
.
toString
Date
.
prototype
.
toDateString
toDateString
Date
.
prototype
.
toTimeString
toTimeString
Date
.
prototype
.
toLocaleString
!
Date
.
prototype
.
toLocaleDateString
toLocaleDateString
!
Date
.
prototype
.
toLocaleTimeString
toLocaleTimeString
Date
.
prototype
.
toUTCString
toUTCString
Date
.
prototype
.
toJSON
toJSON
Date
.
prototype
.
getUTCFullYear
getUTCFullYear
Date
.
prototype
.
getUTCMonth
getUTCMonth
Date
.
prototype
.
getUTCDate
getUTCDate
Date
.
prototype
.
getUTCDay
getUTCDay
Date
.
prototype
.
getUTCHours
getUTCHours
Date
.
prototype
.
getUTCMinutes
getUTCMinutes
Date
.
prototype
.
getUTCSeconds
getUTCSeconds
!
Date
.
prototype
.
getUTCMilliseconds
getUTCMilliseconds
Date
.
prototype
.
getFullYear
getFullYear
Date
.
prototype
.
getMonth
getMonth
Date
.
prototype
.
getDate
getDate
Date
.
prototype
.
getDay
getDay
Date
.
prototype
.
getHours
getHours
Date
.
prototype
.
getMinutes
getMinutes
Date
.
prototype
.
getSeconds
getSeconds
Date
.
prototype
.
getMilliseconds
getMilliseconds
Date
.
prototype
.
getTimezoneOffset
getTimezoneOffset
Date
.
prototype
.
getTime
getTime
Date
.
prototype
.
setFullYear
setFullYear
Date
.
prototype
.
setMonth
setMonth
Date
.
prototype
.
setDate
setDate
Date
.
prototype
.
setHours
setHours
Date
.
prototype
.
setMinutes
setMinutes
Date
.
prototype
.
setSeconds
setSeconds
Date
.
prototype
.
setMilliseconds
setMilliseconds
Date
.
prototype
.
setUTCFullYear
setUTCFullYear
Date
.
prototype
.
setUTCMonth
setUTCMonth
Date
.
prototype
.
setUTCDate
setUTCDate
Date
.
prototype
.
setUTCHours
setUTCHours
Date
.
prototype
.
setUTCMinutes
setUTCMinutes
Date
.
prototype
.
setUTCSeconds
setUTCSeconds
!
Date
.
prototype
.
setUTCMilliseconds
setUTCMillisecondsE
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Date
.
as
Date
/
parse
year
month
date
hours
minutes
seconds
ms
Date
/
UTC
Date
/
AS3
:
valueOf
Date
/
private
:
_toString
Date
/
private
:
_setTime
Date
/
private
:
_get
t
Date
/
AS3
:
setTime
Date
/
AS3
:
toString
Date
/
AS3
:
toDateString
Date
/
AS3
:
toTimeString
Date
/
AS3
:
toLocaleString
Date
/
AS3
:
toLocaleDateString
Date
/
AS3
:
toLocaleTimeString
Date
/
AS3
:
toUTCString
Date
/
AS3
:
getUTCFullYear
Date
/
AS3
:
getUTCMonth
Date
/
AS3
:
getUTCDate
Date
/
AS3
:
getUTCDay
Date
/
AS3
:
getUTCHours
Date
/
AS3
:
getUTCMinutes
Date
/
AS3
:
getUTCSeconds
Date
/
AS3
:
getUTCMilliseconds
Date
/
AS3
:
getFullYear
Date
/
AS3
:
getMonth
Date
/
AS3
:
getDate
Date
/
AS3
:
getDay
Date
/
AS3
:
getHours
Date
/
AS3
:
getMinutes
Date
/
AS3
:
getSeconds
Date
/
AS3
:
getMilliseconds
Date
/
AS3
:
getTimezoneOffset
Date
/
AS3
:
getTime
Date
/
private
:
_setFullYear
Date
/
private
:
_setMonth
Date
/
private
:
_setDate
Date
/
private
:
_setHours
Date
/
private
:
_setMinutes
Date
/
private
:
_setSeconds
Date
/
private
:
_setMilliseconds
rest0
Date
/
private
:
_setUTCFullYear
Date
/
private
:
_setUTCMonth
Date
/
private
:
_setUTCDate
Date
/
private
:
_setUTCHours
Date
/
private
:
_setUTCMinutes
Date
/
private
:
_setUTCSeconds
Date
/
private
:
_setUTCMilliseconds
Date
/
AS3
:
setFullYear
Date
/
AS3
:
setMonth
Date
/
AS3
:
setDate
hour
sec
Date
/
AS3
:
setHours
Date
/
AS3
:
setMinutes
Date
/
AS3
:
setSeconds
Date
/
AS3
:
setMilliseconds
Date
/
AS3
:
setUTCFullYear
Date
/
AS3
:
setUTCMonth
Date
/
AS3
:
setUTCDate
Date
/
AS3
:
setUTCHours
Date
/
AS3
:
setUTCMinutes
Date
/
AS3
:
setUTCSeconds
Date
/
AS3
:
setUTCMilliseconds
Date
/
fullYear
/
get
Date
/
fullYear
/
set
Date
/
month
/
get
Date
/
month
/
set
Date
/
date
/
get
Date
/
date
/
set
Date
/
hours
/
get
Date
/
hours
/
set
Date
/
minutes
/
get
Date
/
minutes
/
set
Date
/
seconds
/
get
Date
/
seconds
/
set
Date
/
milliseconds
/
get
Date
/
milliseconds
/
set
Date
/
fullYearUTC
/
get
Date
/
fullYearUTC
/
set
Date
/
monthUTC
/
get
Date
/
monthUTC
/
set
Date
/
dateUTC
/
get
Date
/
dateUTC
/
set
Date
/
hoursUTC
/
get
Date
/
hoursUTC
/
set
Date
/
minutesUTC
/
get
Date
/
minutesUTC
/
set
Date
/
secondsUTC
/
get
Date
/
secondsUTC
/
set
Date
/
millisecondsUTC
/
get
Date
/
millisecondsUTC
/
set
Date
/
time
/
get
Date
/
time
/
set
Date
/
timezoneOffset
/
get
Date
/
day
/
get
Date
/
dayUTC
/
get
Date
/
Date
UTC
_setTime
_get
_setFullYear
_setMonth
_setDate
_setHours
_setMinutes
_setSeconds
_setMilliseconds
_setUTCFullYear
_setUTCMonth
_setUTCDate
_setUTCHours
_setUTCMinutes
_setUTCSeconds
_setUTCMilliseconds
fullYear
milliseconds
fullYearUTC
monthUTC
dateUTC
hoursUTC
minutesUTC
secondsUTC
millisecondsUTC
time
timezoneOffset
day
dayUTC
DateClass
RegExp
.
as
4
RegExpClass
.
exec
exec
RegExpClass
.
test
testG
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
RegExp
.
as
/
source
global
ignoreCase
multiline
dotall
extended
RegExp
/
source
/
get
RegExp
/
global
/
get
RegExp
/
ignoreCase
/
get
RegExp
/
multiline
/
get
RegExp
/
lastIndex
/
get
RegExp
/
lastIndex
/
set
RegExp
/
dotall
/
get
RegExp
/
extended
/
get
RegExp
/
AS3
:
exec
RegExp
/
AS3
:
test
pattern
RegExp
/
RegExp
lastIndex
RegExpClassK
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
IDataInput
.
as
bytes7flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readBytes
flash
.
utils
ByteArray9flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readBoolean6flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readByte
>
flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readUnsignedByte7flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readShort
?
flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readUnsignedShort5flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readInt
=
flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readUnsignedInt7flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readFloat8flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readDouble
charSet
;
flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readMultiByte5flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readUTF
:
flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readUTFBytes
flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
bytesAvailable
/
get8flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
readObject
flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
objectEncoding
/
get
version
flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
objectEncoding
/
set8flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
endian
/
get8flash
.
utils
:
IDataInput
/
flash
.
utils
:
IDataInput
:
endian
/
set
!
flash
.
utils
:
IDataInput
/
IDataInput
flash
.
utils
:
IDataInput
readBytes
readBoolean
readByte
readUnsignedByte
readShort
readUnsignedShort
readInt
readUnsignedInt
readFloat
readDouble
readMultiByte
readUTF
readUTFBytes
bytesAvailable
readObject
objectEncoding
endian
IDataInputL
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
IDataOutput
.
as
:
flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeBytes
<
flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeBoolean9flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeByte
:
flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeShort8flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeInt
flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeUnsignedInt
:
flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeFloat
;
flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeDouble
>
flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeMultiByte8flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeUTF
=
flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeUTFBytes
object
;
flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
writeObjectBflash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
objectEncoding
/
getBflash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
objectEncoding
/
set
:
flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
endian
/
get
:
flash
.
utils
:
IDataOutput
/
flash
.
utils
:
IDataOutput
:
endian
/
set
#
flash
.
utils
:
IDataOutput
/
IDataOutput
flash
.
utils
:
IDataOutput
writeBytes
writeBoolean
writeByte
writeShort
writeInt
writeUnsignedInt
writeFloat
writeDouble
writeMultiByte
writeUTF
writeUTFBytes
writeObject
IDataOutput
flash
.
utils
:
ProxyF
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Proxy
.
as
Proxy
.
as
8
)
flash
.
utils
:
Proxy
/
flash_proxy
:
getProperty
)
flash
.
utils
:
Proxy
/
flash_proxy
:
setProperty
*
flash
.
utils
:
Proxy
/
flash_proxy
:
callProperty
)
flash
.
utils
:
Proxy
/
flash_proxy
:
hasProperty
flash
.
utils
:
Proxy
/
flash_proxy
:
deleteProperty
flash
.
utils
:
Proxy
/
flash_proxy
:
getDescendants
+
flash
.
utils
:
Proxy
/
flash_proxy
:
nextNameIndex
&
flash
.
utils
:
Proxy
/
flash_proxy
:
nextName
'
flash
.
utils
:
Proxy
/
flash_proxy
:
nextValue
)
flash
.
utils
:
Proxy
/
flash_proxy
:
isAttribute
flash
.
utils
:
Proxy
/
Proxy2http
:
/
/
www
.
adobe
.
com
/
2006
/
actionscript
/
flash
/
proxy
getProperty
setProperty
callProperty
hasProperty
deleteProperty
getDescendants
nextNameIndex
nextName
nextValue
isAttribute
Proxy
flash_proxy
ProxyClass
gc
instance
ProxyObject
settings
XML
.
as
9
setSettings
defaultSettings
addNamespace
attribute
attributes
child
childIndex
children
comments
contains
descendants
elements
hasComplexContent
hasSimpleContent
inScopeNamespaces
insertChildAfter
insertChildBefore
localName
namespace
namespaceDeclarations
nodeKind
normalize
parent
processingInstructions
prependChild
removeNamespace
setChildren
setLocalName
setName
setNamespace
toXMLStringD
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
XML
.
as
XML
/
ignoreComments
/
get
newIgnore
XML
/
ignoreComments
/
set
XML
/
ignoreProcessingInstructions
/
get
XML
/
ignoreProcessingInstructions
/
set
XML
/
ignoreWhitespace
/
get
XML
/
ignoreWhitespace
/
set
XML
/
prettyPrinting
/
get
newPretty
XML
/
prettyPrinting
/
set
XML
/
prettyIndent
/
get
newIndent
XML
/
prettyIndent
/
set
ignoreComments
ignoreProcessingInstructions
ignoreWhitespace
prettyPrinting
prettyIndent
XML
/
AS3
:
settings
XML
/
AS3
:
setSettings
XML
/
AS3
:
defaultSettings
P
ns
arg
propertyName
*
child1
child2
XML
/
AS3
:
toString
XML
/
AS3
:
hasOwnProperty
XML
/
AS3
:
propertyIsEnumerable
XML
/
AS3
:
addNamespace
XML
/
AS3
:
appendChild
XML
/
AS3
:
attribute
XML
/
AS3
:
attributes
XML
/
AS3
:
child
XML
/
AS3
:
childIndex
XML
/
AS3
:
children
XML
/
AS3
:
comments
XML
/
AS3
:
contains
XML
/
AS3
:
copy
XML
/
AS3
:
descendants
XML
/
AS3
:
elements
XML
/
AS3
:
hasComplexContent
XML
/
AS3
:
hasSimpleContent
XML
/
AS3
:
inScopeNamespaces
XML
/
AS3
:
insertChildAfter
XML
/
AS3
:
insertChildBefore
XML
/
AS3
:
length
XML
/
AS3
:
localName
XML
/
AS3
:
name
XML
/
private
:
_namespace
_namespace
XML
/
AS3
:
namespace
XML
/
AS3
:
namespaceDeclarations
XML
/
AS3
:
nodeKind
XML
/
AS3
:
normalize
XML
/
AS3
:
parent
XML
/
AS3
:
processingInstructions
XML
/
AS3
:
prependChild
XML
/
AS3
:
removeNamespace
XML
/
AS3
:
replace
XML
/
AS3
:
setChildren
XML
/
AS3
:
setLocalName
XML
/
AS3
:
setName
XML
/
AS3
:
setNamespace
XML
/
AS3
:
text
XML
/
AS3
:
toXMLString
XML
/
AS3
:
notification
XML
/
AS3
:
setNotification
XML
/
AS3
:
toJSON
XML
/
XML
XML
/
AS3
:
valueOf
notification
setNotification
XMLList
/
AS3
:
toString
XMLList
/
AS3
:
valueOf
XMLList
/
AS3
:
hasOwnProperty
XMLList
/
AS3
:
propertyIsEnumerable
XMLList
/
AS3
:
attribute
XMLList
/
AS3
:
attributes
XMLList
/
AS3
:
child
XMLList
/
AS3
:
children
XMLList
/
AS3
:
comments
XMLList
/
AS3
:
contains
XMLList
/
AS3
:
copy
XMLList
/
AS3
:
descendants
XMLList
/
AS3
:
elements
XMLList
/
AS3
:
hasComplexContent
XMLList
/
AS3
:
hasSimpleContent
XMLList
/
AS3
:
length
XMLList
/
AS3
:
name
XMLList
/
AS3
:
normalize
XMLList
/
AS3
:
parent
"
XMLList
/
AS3
:
processingInstructions
XMLList
/
AS3
:
text
XMLList
/
AS3
:
toXMLString
XMLList
/
AS3
:
addNamespace
XMLList
/
AS3
:
appendChild
XMLList
/
AS3
:
childIndex
XMLList
/
AS3
:
inScopeNamespaces
XMLList
/
AS3
:
insertChildAfter
XMLList
/
AS3
:
insertChildBefore
XMLList
/
AS3
:
nodeKind
XMLList
/
private
:
_namespace
XMLList
/
AS3
:
namespace
XMLList
/
AS3
:
localName
!
XMLList
/
AS3
:
namespaceDeclarations
XMLList
/
AS3
:
prependChild
XMLList
/
AS3
:
removeNamespace
XMLList
/
AS3
:
replace
XMLList
/
AS3
:
setChildren
XMLList
/
AS3
:
setLocalName
XMLList
/
AS3
:
setName
XMLList
/
AS3
:
setNamespace
XMLList
/
AS3
:
toJSON
XMLList
/
XMLList
QName
q
QName
.
prototype
.
toString
QName
/
localName
/
get
QName
/
uri
/
get
QName
/
AS3
:
valueOf
cc
base_uri
*
:
:
:
:
QName
/
AS3
:
toString
QName
/
QName
XMLClass
XMLObject
override
XMLListClass
XMLListObject
QNameClass
QNameObject
flash
.
utils
:
Dictionary
Dictionary
.
as
10
DictionaryK
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
Dictionary
.
as
weakKeys
#
flash
.
utils
:
Dictionary
/
private
:
init
!
flash
.
utils
:
Dictionary
/
Dictionary
DictionaryClass
DictionaryObject
flash
.
utils
:
CompressionAlgorithm
ZLIB
zlib
DEFLATE
deflate
LZMA
lzmaJ
/
Users
/
tschneider
/
Projects
/
shumway
/
src
/
avm2
/
generated
/
builtin
/
ByteArray
.
as5flash
.
utils
:
CompressionAlgorithm
/
CompressionAlgorithm
CompressionAlgorithm
#
flash
.
utils
:
IDataInput2
/
IDataInput2
ByteArray
.
as
7
IDataInput2
%
flash
.
utils
:
IDataOutput2
/
IDataOutput2
IDataOutput2
flash
.
utils
:
ByteArray
_defaultObjectEncoding
/
flash
.
utils
:
ByteArray
/
defaultObjectEncoding
/
get
/
flash
.
utils
:
ByteArray
/
defaultObjectEncoding
/
set
flash
.
utils
:
ByteArray
/
ByteArray
flash
.
utils
:
ByteArray
/
readBytes
flash
.
utils
:
ByteArray
/
writeBytes
"
flash
.
utils
:
ByteArray
/
writeBoolean
flash
.
utils
:
ByteArray
/
writeByte
flash
.
utils
:
ByteArray
/
writeShort
flash
.
utils
:
ByteArray
/
writeInt
&
flash
.
utils
:
ByteArray
/
writeUnsignedInt
flash
.
utils
:
ByteArray
/
writeFloat
!
flash
.
utils
:
ByteArray
/
writeDouble
flash
.
utils
:
ByteArray
/
writeMultiByte
flash
.
utils
:
ByteArray
/
writeUTF
#
flash
.
utils
:
ByteArray
/
writeUTFBytes
!
flash
.
utils
:
ByteArray
/
readBoolean
flash
.
utils
:
ByteArray
/
readByte
&
flash
.
utils
:
ByteArray
/
readUnsignedByte
flash
.
utils
:
ByteArray
/
readShort
'
flash
.
utils
:
ByteArray
/
readUnsignedShort
flash
.
utils
:
ByteArray
/
readInt
%
flash
.
utils
:
ByteArray
/
readUnsignedInt
flash
.
utils
:
ByteArray
/
readFloat
flash
.
utils
:
ByteArray
/
readDouble
#
flash
.
utils
:
ByteArray
/
readMultiByte
flash
.
utils
:
ByteArray
/
readUTF
"
flash
.
utils
:
ByteArray
/
readUTFBytes
flash
.
utils
:
ByteArray
/
length
/
get
flash
.
utils
:
ByteArray
/
length
/
set
!
flash
.
utils
:
ByteArray
/
writeObject
flash
.
utils
:
ByteArray
/
readObject
_compress
flash
.
utils
:
ByteArray
/
deflate
algorithm
'
flash
.
utils
:
ByteArray
/
private
:
_compress
flash
.
utils
:
ByteArray
/
compress
_uncompress
flash
.
utils
:
ByteArray
/
inflate
)
flash
.
utils
:
ByteArray
/
private
:
_uncompress
flash
.
utils
:
ByteArray
/
uncompress
flash
.
utils
:
ByteArray
/
toString
(
flash
.
utils
:
ByteArray
/
bytesAvailable
/
get
"
flash
.
utils
:
ByteArray
/
position
/
get
"
flash
.
utils
:
ByteArray
/
position
/
set
(
flash
.
utils
:
ByteArray
/
objectEncoding
/
get
(
flash
.
utils
:
ByteArray
/
objectEncoding
/
set
flash
.
utils
:
ByteArray
/
endian
/
get
flash
.
utils
:
ByteArray
/
endian
/
set
flash
.
utils
:
ByteArray
/
clear
defaultObjectEncoding
compress
inflate
uncompress
position
clear
ByteArrayClass
\
\
\
a
a
a
e
e
e
#
#
#
K
K
K
&
&
&
=
!
"
#
%
'
(
)
*
%
(
+
-
%
(
.
/
0
%
(
123
456
789
:
;
<
%
%
(
(
?
ABC
ACDEF
ACGHI
ACJKL
ACMNO
ACPQR
ACSTU
ACVWX
ACYZ
[
AC
\
]
^
AC_
a
ACbcd
A
f
Afn
opqr
p
stuv
t
w
wz
{
|
}
~
fwz
{
|
}
~
w
{
|
w
|
w
|
w
|
w
|
|
!
#
&
'
(
*
+
-
.
0
2
3
4
5
7
0
8
8
9
;
<
<
=
>
?
A
B
B
F
H
I
I
K
N
O
P
P
\
a
e
w
z
{
}
z
{
~
w
}
}
}
B
B
}
b
}
}
}
}
}
^
#
a
K
e
m
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
!
%
}
(
^
'
a
'
'
m
#
'
'
'
'
'
'
'
'
'
'
'
}
(
^
+
a
+
+
m
#
+
+
+
+
+
+
+
+
+
+
+
}
(
^
.
a
.
.
m
#
.
.
.
.
.
.
.
.
.
.
.
}
(
^
1
a
1
1
m
#
1
1
1
1
1
1
1
1
1
1
1
4
^
K
a
4
4
4
K
^
\
a
\
a
e
#
K
b
^
^
'
'
*
*
2
2
3
3
7
7
;
;
N
N
F
F
H
H
m
l
k
j
i
h
g
d
_
]
[
X
W
V
U
-
>
4
=
=
=
}
w
O
%
M
}
}
}
}
!
!
}
"
"
}
#
#
}
}
%
%
}
&
&
}
'
'
}
(
(
f
f
f
f
)
)
*
+
*
+
*
*
}
+
+
+
+
+
}
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
-
}
.
.
.
.
.
.
.
.
.
.
.
.
/
w
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
w
0
y
y
y
y
y
y
y
y
y
y
y
y
y
y
w
0
1
2
1
w
3
w
4
4
4
}
4
4
4
z4
{
4
4
4
!
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
\
4
a4
4
}
5
5
5
z5
{
5
5
5
!
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
}
6
6
6
6
6
6
6
B6
6
6
6
6
7
&
}
8
8
8
8
w
9
w
:
|
:
|
}
;
;
;
;
;
:
:
0
:
<
<
0
"
5
5
C
%
5
>
J
?
5
Q
=
R
U
T
V
T
W
T
X
T
C
[
Z
]
^
T
_
^
T
D
b
Z
D
Ed
b
Tc
CDg
f
CDh
f
i
^
B
j
^
B
k
^
B
l
^
B
CEm
f
C
p
o
C
q
o
5
Cs
or
C
t
o
u
5
x
v
y
C
o
o
5
C
r
C
o
C
o
C
o
e
L
B
DD
DD
DD
DD
DD
DD
DD
DD
DD
DD
DD
DD
DD
DDD
DDD
DDD
DDD
D
DE
fc
DEE
f
D
c
D
L
L
L
>
TL
TL
E
TL
>
T
E
E
T
%
E
D
^
T
%
E
E
T
%
E
D
^
T
%
D
%
DD
%
E
>
L
L
E
L
EE
DD
>
EE
DD
EE
DD
>
>
E
E
Ce
>
e
5e
>
e
Ce
>
>
>
DD
>
>
>
>
E
E
E
E
C
e
>
e
5
e
>
e
C
e
>
>
>
E
E
Ce
>
e
5e
>
e
Ce
C
C
C
e
5
e
C
e
>
C
C
M
C
>
Ce
5e
e
5
C
DD
>
5
e
e
D
e
DD
DD
D
D
D
D
C
C
C
e
5
e
C
e
>
C
C
M
C
>
Ce
5e
e
5
C
DD
>
5
e
e
D
e
E
E
DD
DD
DED
DED
C
C
C
e
5
e
C
e
>
C
C
M
C
>
Ce
5e
e
5
C
DD
>
5
e
e
D
e
DD
DD
D
D
D
D
C
C
C
e
5
e
C
e
>
C
C
M
C
>
Ce
5e
e
5
C
DD
>
5
e
e
D
e
D
D
DD
DD
DDD
DDD
>
e
e
>
>
e
L
DDD
DDD
DD
DD
DD
DD
DD
DD
DD
DD
DD
DD
DD
DD
DD
DDD
DDD
DDD
DDD
D
E
O
]
O
E
E
E
E
E
D
T
D
D
E
O
DD
DE
O
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
D
C
C
C
E
E
%
C
C
T
T
5
C
E
E
E
D
D
5
5
5
5C
5E
5E
5E
5
5D
5D
5
5
5
5
5
5
5
C
C
EE
O
E
O
E
O
C
5
C
C
E
C
C
C
>
E
>
5
5
5
C
C
C
C
C
C
C
C
E
E
5
C
C
E
C
C
C
>
E
E
>
5
5
5
e
e
M
C
C
E
C
C
C
>
E
>
5
5
5
C
C
C
C
C
E
E
>
E
>
5
5
5
5C
C
5
5
5
5C
5E
5E
5E
5
5D
5D
5
5
5
C
E
E
E
D
D
5
5
5
5
5
5
5
5
5
5
5
M
m
l
k
j
i
h
g
d
_
]
[
W
V
U
9
9
9
9
9
9
0
*
F
%
F
&
[
'
H
(
I
)
]
-
\
e
7
\
2
\
3F
"
4g
5h
6m
?
p
;
q
<
r
=
o
>
C
C
o
Ar
BD
_
o
Zr
[
\
]
^
E
a
c
F
"
j
A
k
l
A
m
n
o
p
q
r
s
t
u
A
v
w
x
A
y
z
A
{
|
}
~
o
r
>
"
F
"
F
#
&
)
F
"
F
#
o
!
"
#
F
"
F
#
o
!
"
#
/
F
"
F
#
o
!
"
#
2
F
"
F
#
o
!
"
#
5
8
e
e
;
\
"
\
#
>
B
E
E
H
K
N
Q
T
W
Z
]
c
g
i
k
m
q
[
r
A
A
A
o
!
"
#
A
%
A
&
A
'
A
(
A
)
A
*
A
+
A
A
-
A
.
A
/
A0
A1
A2
3
4
5
6
7
8
9
:
;
<
=
>
?
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
[
\
]
^
_
a
u
}
+
o
H
!
I
!
!
"
#
%
&
'
(
)
*
+
-
.
r
/
)
o
r
H
!
I
!
!
"
#
%
&
'
(
)
*
+
-
q
r
o
+
F
"
F
#
!
"
#
%
&
'
(
)
*
+
-
.
/
F
E
SQ
TQ
U
VQ
WQ
X
Y
Z
+
F
E
.
F
E
fQ
1
8
F
F
E
D
&
F
E
x
D
y
D
z
D
{
D
}
D
~
D
D
D
D
D
D
D
D
Q
E
Q
F
Q
G
Q
H
Q
I
Q
J
Q
K
Q
L
Q
M
Q
N
Q
O
Q
P
Q
Q
Q
R
Q
S
Q
T
Q
U
Q
V
F
E
F
E
F
E
Q
W
Q
X
Q
Y
{
E
}
E
F
E
b
{
}
F
E
d
F
E
e
Q
f
Q
g
Q
h
Q
i
F
E
m
~
D
D
D
D
D
D
D
D
Q
Q
D
F
E
F
E
F
E
F
E
F
E
F
E
F
E
F
E
F
E
F
E
F
E
F
E
F
E
F
E
F
F
F
D
8
D
9
D
:
D
;
D
<
D
=
D
>
D
?
D
D
A
D
B
D
C
D
D
"
!
D
#
E
D
F
%
&
D
'
G
D
(
H
D
)
I
D
*
J
D
+
K
-
.
D
/
L
G
D
]
D
eD
D
mD
CD
DD
ED
D
D
>
D
A
A
A
A
!
A
"
A
#
A
A
%
A
&
A
'
A
(
A
)
x
D
D
A
*
A
*
A
+
A
D
-
D
.
D
/
D
0
D
1
A
2
A
3
A
4
A
5
D
67
0
c
]
F
]
f
F
c
b
f
a
f
f
f
v
b
f
f
f
a
b
f
a
b
f
a
b
f
a
]
b
f
F
)
]
]
f
F
c
b
9
]
f
F
c
b
b
f
a
]
b
b
f
F
)
b
b
F
)
b
H
g
0
!
c
c
c
c
c
c
c
g
g
i
%
j
%
s
%
%
%
i
f
j
c
f
c
:
b
b
#
c
l
n
lb
c
n
]
f
F
c
ob
b
a
q
F
b
a
j2
s
c
f
c
:
b
b
#
c
)
u
w
ub
c
w
]
f
F
c
xb
b
a
z
F
b
a
s2
|
f
+
~
~
]
!
f
!
F
c
]
"
b
f
F
"
)
F
b
a
c
f
#
c
t
b
b
#
c
/
b
c
b
f
1
]
%
f
%
F
]
&
f
&
F
c
b
b
f
a
b
b
f
'
a
]
(
b
b
F
(
)
F
b
a
2
c
f
)
c
q
b
b
#
c
6
b
c
]
*
f
*
F
c
b
b
f
a
b
b
f
a
+
b
b
f
'
a
b
b
f
a
-
]
(
b
b
F
(
)
F
b
a
2
c
f
.
c
u
b
b
#
c
:
b
c
]
/
f
/
F
c
b
b
f
a
b
b
f
a
-
b
b
f0a1
]
"
b
b
f2F
"
)
]
(
b
b
F
(
)
F
b
a
2
]
3
f4F3
)
G
7
a
0
a
%
a
c
f6
f6a7
d
f4
]
3
f4F3
)
eG
N
0
!
c
c
!
c
c
N
?
N
P
D
Q
P
f
Q
c
c
b
b
#
c
E
S
%
U
S
]
8f8F
c
Tb
b
f
a
U
c
b
f9
c
9
b
b
#
c
G
W
W
]
:
f
:
F
c
Xb
b
f
;
a
<
Yb
b
f9a
=
[
b
b
F
)
U2
]
F
b
a
Q2
k
_G
?
0
!
c
!
c
c
?
=
?
A
%
B
A
f
B
c
c
T
b
b
c
L
D
M
E
D
b
f
c
E
]
?
f
?
F
c
Fb
b
a
Gb
b
f
'
a
Hb
b
fAaB
J
F
b
a
B2
LG
0
4
^
F
hFG
B
n
E
0
v
E
G
G
c
b
I
]
G
'
FG
)
G2
KG
n
R
0
UG
!
o
\
n
]
FH
H
"
o
a
n
b
FI
H
#
e
r
e
n
g
]
G
FG
)
hG
v
n
Y
0W
*
0
|
Y
[
]
JfJ
n
\
!
aK
]
JfJ
n
a
"
aL
e
]
JfJ
#
aM
n
j
]
JfJ
]
N
FN
aO
k
]
JfJ
]
N
FN
aP
l
]
JfJ
]
N
FN
aQ
m
]
R
]
JfJFR
)
nG
*
0
n
tG
+
0
2
^
F
hFG
-
0
I
5G
.
G
0
.
^
F
hF
]
^
f
^
]
^
f
^
/
*
a_
a
]
^
f
^
]
a
Fa
ab
]
^
f
^
]
a
Fa
ac
]
d
]
^
f
^
Fd
)
G
0
<
G
1
:
0W
*
0
:
<
0H
/
AH
7
0
I
YG
8
(
0
.
^
F
hF
]
ifi
9aj
]
ifi
:
ak
]
l
]
ifiFl
)
G
9
f
;
:
]
ifi
:
H
;
m
<
fnH
:
%
f
G
F
]
ifi
FH
G
m
H
Fo
H
=
6
0
fnH
>
?
0
A
fnH
?
L
0
L
B
L
L
I
G
4
0
.
^
F
hF
]
sfs
]
t
Ft
au
]
sfs
]
t
Ft
av
]
w
]
sfsFw
)
G
C
7
0
7
7
I
G
D
0
.
^
F
hF
b
1
^
x
hx
2
^
y
hy
3
^
z
hz
4
^
{
]
|
F
|
h
{
5
^
}
]
|
F
|
h
}
:
^
~
/
h
~
<
^
/
h
>
^
/
h
^
/
h
B
^
/
h
D
^
/
h
F
^
/
h
H
^
/
h
^
h
^
h
^
h
]
f
]
|
F
|
a
]
f
]
|
F
|
a
]
f
]
|
F
|
a
]
f
]
|
F
|
a
]
f
]
|
F
|
a
]
f
]
|
F
|
a
]
]
f
F
)
G
_
0
I
G
7
0
^
{
-
h
{
^
}
-
h
}
^
F
hF
]
]
f
F
)
G
a
0
I
G
b
7
0
^
{
h
{
^
}
/
h
}
^
F
hF
]
]
f
F
)
G
c
0
I
G
d
0
.
^
F
hF
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
f
]
F
*
a
a
]
f
]
f
]
F
*
a
a
]
f
]
F
a
]
f
]
F
a
]
]
f
F
)
G
0
I
G
0
^
h
^
h
^
h
^
h
^
h
+
^
F
hF
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
]
f
F
)
G
Y
0
!
c
Y
Y
T
[
\
%
]
f
]
[
]
f
]
F
\
c
]
tc
]
f
F
tc
B
_
_
b
f
c
b
ab
b
c
bb
b
cb
c
]
b
tc
b
b
eb
H
l
m
]
F
H
t
]
F
H
G
>
]
F
H
!
c
G
%
f
>
t
f
tc
G
f
c
b
b
F
b
t
b
H
s
f
%
]
f
F
t
t
f
tc
u
*
t
c
b
f
a
t
b
a
H
]
F
H
]
F
H
]
F
H
-
]
]
F
]
F
F
H
tc
tc
%
]
f
]
F
H
]
f
F
t
f
t
tc
F
b
tc
b
tc
b
b
b
f
a
b
j
)
b
tc
%
b
u
*
tc
c
b
b
f
a
b
tc
b
t
a
H
-
f
]
f
H
]
F
H
]
F
H
&
]
F
H
&
]
]
F
F
H
&
]
]
F
F
H
]
F
H
]
F
H
#
]
F
)
G
]
F
H
]
F
H
d
0
!
]
f
"
a
5
#
]
-
F
]
f
]
f
%
%
F
)
'
a
(
G
.
0
(
tc
tc
.
/
I
f
0
0
f
t
1
v
*
v
)
f
]
f
v
H
3
4
3
f
u
4
tc
5b
6
]
f
]
f
%
F
)
7
b
h
5
%
=
<
h
=
tc
>
b
b
f
h
=
b
tc
b
G
g
0
g
i
]
F
H
0
]
F
H
0
]
F
H
0
]
F
H
2
0
]
]
F
]
F
F
H
2
0
f
]
f
H
]
F
H
0
]
F
H
+
0
]
F
H
+
0
]
]
F
F
H
+
0
]
]
F
F
H
0
]
F
H
0
]
F
H
(
0
]
F
)
G
0
]
F
H
0
]
F
H
0G
0
I
G
0
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
]
f
F
)
G
8
0
8
9
H
C
H
f
R
%
S
T
E
]
F
)
H
L
f
M
]
f
]
f
%
F
)
R
f
t
S
tc
T
f
tc
W
b
f
a
Xb
tc
Y
t
Ub
b
[
a
\
H
]
F
Fo
H
]
F
F
H
7
]
F
]
f
]
F
F
H
]
F
F
H
9
]
]
F
]
f
F
H
6
]
F
]
f
F
H
=
]
]
F
]
f
F
)
G
)
]
F
]
F
F
H
A
]
F
]
f
]
f
u
]
F
uF
H
6
]
F
]
f
F
H
]
F
F
H
]
F
F
H
]
F
F
H
_
]
F
]
f
u
]
F
u
]
f
-
u
]
F
uF
H
9
]
]
F
]
f
F
H
-
G
V
>
]
]
F
F
H
9
]
F
]
F
]
F
F
H
]
F
f
Fh
H
2
0
2
2
3
I
4G
/
0
0
F
H
3
0
!
c
4
5
T
6
%
7
4
f
t
5
6
7
tc
9
a
V
;
;
b
f
c
<
b
]
f
v
*
v
)
b
v
=
b
F
>
b
*
tc
?
:
&
C
H
F
0
tc
F
G
T
H
%
I
G
f
t
H
I
sc
J
G
<
L
Lb
tc
M
b
f
Nb
*
sc
tc
Ob
P
Q
K
&
T
H
W
0
!
c
tc
W
X
Z
[
[
X
F
Y
f
F
)
Z
]
-
F
v
[
tc
f
c
T
\
]
\
]
b
f
F
c
]
f
t
f
ttc
^
b
b
f
b
F
)
[
b
tc
b
b
a
H
3
d
0
d
d
e
]
]
f
F
H
6
h
0
h
h
i
]
]
f
F
)
jG
T
l
0
l
l
m
m
]
f
F
n
]
-
F
]
f
H
3
u
0
u
u
v
]
]
f
F
H
t
y
0
y
y
z
{
~
z
f
F
t
{
f
F
tc
|
b
}
tc
~
F
c
b
b
F
)
b
H
0
f
F
tc
f
b
F
tc
F
c
b
b
b
F
)
b
f
b
F
)
b
H
0
t
/
*
/
t
]
F
t
7
f
t
!
t
]
F
t
H
e
0
e
f
F
H
i
0
i
i
j
F
H
o
0
p
F
)
q
H
v
0
v
v
w
F
H
*
z
0
z
G
{
{
V
>
|
]
F
)
}
H
%
0
F
H
v
0
%
f
F
t
tc
f
tc
b
f
b
H
b
tc
b
b
H
{
0
%
f
F
t
f
t
sc
b
f
b
H
b
sc
b
H
0
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
]
f
F
)
G
0
H
f
%
]
F
)
f
]
f
]
f
%
F
)
f
t
tc
f
tc
b
f
a
b
tc
t
b
b
a
H
]
F
Fo
H
]
F
F
H
7
]
F
]
f
]
F
F
H
]
F
F
H
9
]
]
F
]
f
F
H
6
]
F
]
f
F
H
=
]
]
F
]
f
F
)
G
)
]
F
]
F
F
H
A
]
F
]
f
]
f
u
]
F
uF
H
6
]
F
]
f
F
H
]
F
F
H
]
F
F
H
]
F
F
H
_
]
F
]
f
u
]
F
u
]
f
-
u
]
F
uF
H
9
]
]
F
]
f
F
H
-
G
V
>
]
]
F
F
H
9
]
F
]
F
]
F
F
H
]
F
f
Fh
H
"
0
I
G
/
0
0
F
H
3
0
!
c
4
5
T
6
%
7
4
f
t
5
6
7
tc
9
a
V
;
;
b
f
c
<
b
]
f
v
*
v
)
b
v
=
b
F
>
b
*
tc
?
:
&
C
H
F
0
tc
F
G
T
H
%
I
G
f
t
H
I
sc
J
G
<
L
Lb
tc
M
b
f
Nb
*
sc
tc
Ob
P
Q
K
&
T
H
W
0
!
c
tc
W
X
Z
[
[
X
F
Y
f
F
)
Z
]
-
F
v
[
tc
f
c
T
\
]
\
]
b
f
F
c
]
f
t
f
ttc
^
b
b
f
b
F
)
[
b
tc
b
b
a
H
3
d
0
d
d
e
]
]
f
F
H
6
h
0
h
h
i
]
]
f
F
)
jG
T
l
0
l
l
m
m
]
f
F
n
]
-
F
]
f
H
3
u
0
u
u
v
]
]
f
F
H
t
y
0
y
y
z
{
~
z
f
F
t
{
f
F
tc
|
b
}
tc
~
F
c
b
b
F
)
b
H
0
f
F
tc
f
b
F
tc
F
c
b
b
b
F
)
b
f
b
F
)
b
H
0
t
/
*
/
t
]
F
t
7
f
t
!
t
]
F
t
H
0
F
H
!
0
F
H
0
F
)
H
!
0
F
H
0
0
G
V
>
]
F
)
H
)
0
F
H
v
0
%
f
F
t
tc
f
tc
b
f
b
H
b
tc
b
b
H
{
0
%
f
F
t
f
t
sc
b
f
b
H
b
sc
b
H
0
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
]
f
F
)
G
0
H
f
%
]
F
)
f
]
f
]
f
%
F
)
f
t
tc
f
tc
b
f
a
b
tc
t
b
b
a
H
]
F
Fo
H
]
F
F
H
7
]
F
]
f
]
F
F
H
]
F
F
H
9
]
]
F
]
f
F
H
6
]
F
]
f
F
H
=
]
]
F
]
f
F
)
G
)
]
F
]
F
F
H
A
]
F
]
f
]
f
u
]
F
uF
H
6
]
F
]
f
F
H
]
F
F
H
]
F
F
H
]
F
F
H
_
]
F
]
f
u
]
F
u
]
f
-
u
]
F
uF
H
9
]
]
F
]
f
F
H
-
G
V
>
]
]
F
F
H
9
]
F
]
F
]
F
F
H
]
F
f
Fh
H
"
0
I
G
/
0
0
F
H
3
0
!
c
4
5
T
6
%
7
4
f
t
5
6
7
tc
9
a
V
;
;
b
f
c
<
b
]
f
v
*
v
)
b
v
=
b
F
>
b
*
tc
?
:
&
C
H
F
0
tc
F
G
T
H
%
I
G
f
t
H
I
sc
J
G
<
L
Lb
tc
M
b
f
Nb
*
sc
tc
Ob
P
Q
K
&
T
H
W
0
!
c
tc
W
X
Z
[
[
X
F
Y
f
F
)
Z
]
-
F
v
[
tc
f
c
T
\
]
\
]
b
f
F
c
]
f
t
f
ttc
^
b
b
f
b
F
)
[
b
tc
b
b
a
H
3
d
0
d
d
e
]
]
f
F
H
6
h
0
h
h
i
]
]
f
F
)
jG
T
l
0
l
l
m
m
]
f
F
n
]
-
F
]
f
H
3
u
0
u
u
v
]
]
f
F
H
t
y
0
y
y
z
{
~
z
f
F
t
{
f
F
tc
|
b
}
tc
~
F
c
b
b
F
)
b
H
0
f
F
tc
f
b
F
tc
F
c
b
b
b
F
)
b
f
b
F
)
b
H
0
t
/
*
/
t
]
F
t
7
f
t
!
t
]
F
t
H
0
F
H
!
0
F
H
0
F
)
H
!
0
F
H
0
0
G
V
>
]
F
)
H
)
0
F
H
v
0
%
f
F
t
tc
f
tc
b
f
b
H
b
tc
b
b
H
{
0
%
f
F
t
f
t
sc
b
f
b
H
b
sc
b
H
0
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
]
f
F
)
G
0
H
f
%
]
F
)
f
]
f
]
f
%
F
)
f
t
tc
f
tc
b
f
a
b
tc
t
b
b
a
H
]
F
Fo
H
]
F
F
H
7
]
F
]
f
]
F
F
H
]
F
F
H
9
]
]
F
]
f
F
H
6
]
F
]
f
F
H
=
]
]
F
]
f
F
)
G
)
]
F
]
F
F
H
A
]
F
]
f
]
f
u
]
F
uF
H
6
]
F
]
f
F
H
]
F
F
H
]
F
F
H
]
F
F
H
_
]
F
]
f
u
]
F
u
]
f
-
u
]
F
uF
H
9
]
]
F
]
f
F
H
-
G
V
>
]
]
F
F
H
9
]
F
]
F
]
F
F
H
]
F
f
Fh
H
"
0
I
G
/
0
0
F
H
3
0
!
c
4
5
T
6
%
7
4
f
t
5
6
7
tc
9
a
V
;
;
b
f
c
<
b
]
f
v
*
v
)
b
v
=
b
F
>
b
*
tc
?
:
&
C
H
F
0
tc
F
G
T
H
%
I
G
f
t
H
I
sc
J
G
<
L
Lb
tc
M
b
f
Nb
*
sc
tc
Ob
P
Q
K
&
T
H
W
0
!
c
tc
W
X
Z
[
[
X
F
Y
f
F
)
Z
]
-
F
v
[
tc
f
c
T
\
]
\
]
b
f
F
c
]
f
t
f
ttc
^
b
b
f
b
F
)
[
b
tc
b
b
a
H
3
d
0
d
d
e
]
]
f
F
H
6
h
0
h
h
i
]
]
f
F
)
jG
T
l
0
l
l
m
m
]
f
F
n
]
-
F
]
f
H
3
u
0
u
u
v
]
]
f
F
H
t
y
0
y
y
z
{
~
z
f
F
t
{
f
F
tc
|
b
}
tc
~
F
c
b
b
F
)
b
H
0
f
F
tc
f
b
F
tc
F
c
b
b
b
F
)
b
f
b
F
)
b
H
0
t
/
*
/
t
]
F
t
7
f
t
!
t
]
F
t
H
0
F
H
!
0
F
H
0
F
)
H
!
0
F
H
0
0
G
V
>
]
F
)
H
)
0
F
H
v
0
%
f
F
t
tc
f
tc
b
f
b
H
b
tc
b
b
H
{
0
%
f
F
t
f
t
sc
b
f
b
H
b
sc
b
H
0
W
^
]
f
h
G
0
v
*
v
)
]
f
v
]
f
]
f
%
F
)
]
F
H
]
J
p
U
F
H
0
v
*
v
)
]
f
v
*
v
)
]
f
v
]
f
]
f
%
F
)
'
vc
v
*
v
)
]
f
v
*
v
)
]
f
v
*
v
)
b
v
c
]
f
%
f
F
c
]
f
v
*
v
)
b
v
&
]
f
]
f
F
F
F
c
]
b
F
H
]
f
]
]
F
b
F
H
]
b
F
H
0
!
c
c
'
c
%
V
U
tc
f
tc
b
FH
b
f
c
c
'
vc
b
]
f
b
c
*
b
]
f
v
*
v
)
b
v
]
b
F
c
b
v
*
v
)
b
f
v
b
&
a
f
b
a
b
tc
b
b
1
H
0
I
G
0G
!
0
I
h
G
0
>
c
tc
tc
!
c
c
f
]
f
%
]
f
>
c
tc
b
f
tc
Q
b
]
b
F
F
c
b
]
f
b
b
j
)
b
b
b
a
b
tc
b
b
v
*
v
)
]
f
v
*
v
)
]
f
v
*
v
)
]
f
v
~
L
c
c
[
b
b
c
b
FH
b
F
c
b
]
f
b
j
)
b
b
a
2
f
Fg
H
0G
Q
0
R
H
*
U
0
L
U
V
]
f
]
f
%
}
F
)
WG
0
I
YG
0
n
]
X
h
+
]
]
f
0
]
f
X
h
]
*
]
]
f
0
]
f
X
he
O
]
]
f
0
]
efe0
]
f
X
h
*
]
]
f
0
]
f
X
hm
*
]
]
f
0
]
f
X
hC
*
]
]
f
0
]
f
X
hD
]
]
f
0
]
f
X
hE
]
]
f
0
]
f
X
h
*
]
]
f
0
]
f
X
h
]
]
f
0
]
f
X
h
>
*
]
]
f
0
]
f
X
h
/
]
]
f
0
]
f
X
h
]
]
f
0
]
f
X
h
]
]
f
0
]
f
X
h
]
]
f
0
]
f
X
h
U
]
]
f
0
]
f
X
h
]
]
f
0
]
f
X
h
n
r
]
f
F
Y
p
]
hx
u
]
h
z
]
!
h
1
]
]
f
B
h
2
]
]
f
B
h
3
]
]
f
B
h
4
]
]
f
B
h
5
]
]
f
B
h
6
]
]
f
B
h
7
]
]
f
B
h
8
]
]
f
B
h
9
]
]
f
B
h
:
]
]
f
B
h
;
]
]
f
B
h
<
]
]
f
B
h
]
h
]
h
]
h
]
h
]
h
]
h
]
h
]
%
h
]
%
h
]
%
h
]
%
h
]
]
f
]
f
]
f
]
f
]
f
]
f
]
f
]
f
]
f
]
f
h
/
H
0
.
^
~
/
h
~
/
^
/
h
0
^
/
h
1
^
/
h
2
^
/
h
3
^
/
h
4
^
/
h
5
^
/
h
M
^
h
G
0
I
UG
!
0
+
]
]
f
0
]
f
X
h
*
G
D
0
0
^
F
hF
]
f
a
]
f
a
]
f
a
]
]
f
'
F
)
G
V
V
V
W
W
c
X
F
c
Zb
?
]
b
C
b
G
cb
K
fb
O
ib
S
\
Z
[
c
\
K
]
^
c
_
<
a
c
b
-
c
d
c
e
f
g
c
h
i
j
c
k
mb
v
*
v
)
]
f
f
b
v
n
]
f
b
f
H
pH
z
O
0W
*
c
0
Oe
m
e
m
e
m
O
O
O
O
Te
m
Ue
V
m
re
l
]
f
e
l
F
]
f
B
e
l
F
e
l
B
]
>
5
E
E
F
f
f
f
f
H
8
<
0
<
<
=
I
>
h
?
h
]
f
f
h
AG
w
0
y
f
H
0
^
F
hF
]
f
a
G
2
0
I
]
f
f
h
G
0
^
F
hF
]
f
a
G
2
0
I
]
f
f
h
G
0
^
F
hF
]
f
a
G
2
0
I
]
f
f
h
G
0
^
F
hF
]
f
a
G
2
0
I
]
f
f
h
G
0
^
F
hF
]
f
a
G
2
0
I
]
f
f
h
G
0
^
F
hF
]
f
a
G
2
0
I
]
f
f
h
G
0
^
F
hF
]
f
a
G
2
0
I
]
f
f
h
G
0
^
F
hF
]
f
a
G
2
0
I
]
f
f
h
G
0
^
F
hF
]
f
a
G
2
0
I
]
f
f
h
G
0
^
F
hF
]
f
a
G
2
0
I
]
f
f
h
G
0
^
F
hF
]
f
a
G
2
0
I
]
f
f
h
G
0G
"
0
I
G
0G
"
0
I
G
0G
"
0
I
G
0G
"
0
I
G
0
)
]
]
f
0
]
f
X
h
~
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
0
]
f
X
"
h
]
]
f
0
]
f
0
]
f
X
h
]
]
f
0
]
f
0
]
f
X
!
h
]
f
f
a
]
f
f
a
]
f
f
a
]
f
f
*
a
H
0
-
^
F
hF
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
f
]
F
a
]
]
f
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
)
G
0
F
H
0
F
H
0
F
H
0
I
G
0
)
e
]
f
0
]
f
X
#
h
(
G
N
0
.
^
F
hF
]
f
a
]
f
]
F
a
]
f
]
F
a
]
]
f
F
)
G
{
A
A
f
B
f
C
f
%
D
f
E
E
f
T
F
f
G
H
Q
0
Q
Q
Q
I
G
0
)
e
]
f
0
]
f
X
h
(
G
G
0
+
]
X
%
h
&
G
G
0
+
]
X
&
h
&
G
0G
&
0
]
f
]
f
%
F
)
H
*
0
]
f
]
f
%
F
)
G
0
"
]
f
]
f
%
F
)
#
H
&
&
0
&
(
]
f
]
f
%
F
)
)
H
&
0
.
]
f
]
f
%
F
)
/
H
&
2
0
2
4
]
f
]
f
%
F
)
5
H
&
8
0
O
8
:
]
f
]
f
%
F
)
;
H
&
>
0
O
>
]
f
]
f
%
F
)
A
H
&
D
0
O
D
F
]
f
]
f
%
F
)
G
H
0
I
NG
0
e
]
f
0
]
f
X
'
h
G
0
0
^
F
hF
a
a
a
]
f
]
f
f
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
]
f
F
)
G
P
F
0
I
]
f
f
J
]
f
f
K
]
f
f
L
]
f
f
M
]
f
f
U
H
Q
0
Q
S
U
]
f
&
a
V
]
f
&
a
W
]
f
&
a
X
]
f
&
a
Y
]
f
a
ZG
]
v
*
v
)
f
]
f
v
^
]
f
f
a
_
v
*
v
)
f
]
f
v
]
f
f
a
a
v
*
v
)
f
]
f
v
b
]
f
f
a
c
v
*
v
)
f
]
f
v
d
]
f
f
a
e
v
*
v
)
f
]
f
v
f
]
f
f
a
gG
)
i
0
l
&
m
&
n
&
o
&
p
U
H
]
F
H
]
F
)
G
]
F
H
7
]
f
FH
H
FH
H
7
]
f
FI
H
FI
H
]
f
H
Fo
H
!
F
H
F
H
!
F
H
F
H
!
F
H
F
H
F
H
F
H
F
H
F
H
F
H
F
H
F
H
F
H
F
H
)
F
H
)
F
H
F
H
F
H
F
H
f
Fh
H
F
H
F
H
F
H
F
H
F
H
F
H
!
F
H
(
F
H
F
H
F
)
G
F
)
G
%
F
)
G
F
H
F
H
H
0
H
2
0
f
v
F
F
H
0
F
H
0
I
G
0
H
0
^
F
hF
]
f
]
f
f
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
f
a
]
]
f
F
)
G
7
]
f
FH
H
FH
H
7
]
f
FI
H
FI
H
]
f
H
Fo
H
!
F
H
F
H
!
F
H
F
H
!
F
H
F
H
F
H
F
H
F
H
F
H
F
H
F
H
F
H
F
H
F
H
)
F
H
)
F
H
F
H
F
H
F
H
f
Fh
H
F
H
F
H
F
H
F
H
F
H
F
H
!
F
H
(
F
H
F
H
F
)
G
F
)
G
%
F
)
G
F
H
F
H
&
H
0
H
2
0
f
v
F
F
H
0
F
H
0
I
G
)
0
^
F
hF
]
f
a
]
]
f
F
)
G
X
]
f
H
]
f
]
f
]
f
%
F
)
Fo
H
0
H
0
f
f
H
f
f
H
f
f
f
F
t
f
-
v
*
v
)
-
v
f
f
f
F
f
H
f
H
0
I
G
T
0
-
]
]
f
0
]
f
X
(
h
]
]
f
0
]
f
X
)
h
]
]
f
0
]
f
X
*
h
G
0
]
f
a
]
]
f
F
)
G
_
_H
Y
0
Y
Z
I
[
F
)
\
G
0
Je
]
f
0
]
f
X
+
h
(
G
0
0
-
^
h
.
^
h
/
^
h
G
0
I
G
G
G
0
]
f
a
]
]
f
F
)
G
H
G
0
G
I
G
s
0
u
F
)
vG
y
0
y
{
F
)
|
G
0
F
)
G
0
F
)
G
S
0
+
]
]
f
0
]
f
X
h
8
]
X
-
h
<
]
X
.
h
D
]
]
f
0
]
f
X
/
h
&
G
