<
?
xml
version
=
"
1
.
0
"
?
>
<
!
-
-
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
-
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
-
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
-
-
>
<
bindings
id
=
"
browserPanelUIBindings
"
xmlns
=
"
http
:
/
/
www
.
mozilla
.
org
/
xbl
"
xmlns
:
xul
=
"
http
:
/
/
www
.
mozilla
.
org
/
keymaster
/
gatekeeper
/
there
.
is
.
only
.
xul
"
xmlns
:
xbl
=
"
http
:
/
/
www
.
mozilla
.
org
/
xbl
"
>
<
binding
id
=
"
panelmultiview
"
>
<
resources
>
<
stylesheet
src
=
"
chrome
:
/
/
browser
/
content
/
customizableui
/
panelUI
.
css
"
/
>
<
/
resources
>
<
content
>
<
xul
:
box
anonid
=
"
viewContainer
"
class
=
"
panel
-
viewcontainer
"
xbl
:
inherits
=
"
panelopen
viewtype
transitioning
"
>
<
xul
:
stack
anonid
=
"
viewStack
"
xbl
:
inherits
=
"
viewtype
transitioning
"
viewtype
=
"
main
"
class
=
"
panel
-
viewstack
"
>
<
xul
:
vbox
anonid
=
"
mainViewContainer
"
class
=
"
panel
-
mainview
"
xbl
:
inherits
=
"
viewtype
"
/
>
<
!
-
-
Used
to
capture
click
events
over
the
PanelUI
-
mainView
if
we
'
re
in
subview
mode
.
That
way
any
click
on
the
PanelUI
-
mainView
causes
us
to
revert
to
the
mainView
mode
whereupon
PanelUI
-
click
-
capture
then
allows
click
events
to
go
through
it
.
-
-
>
<
xul
:
vbox
anonid
=
"
clickCapturer
"
class
=
"
panel
-
clickcapturer
"
/
>
<
!
-
-
We
manually
set
display
:
none
(
via
a
CSS
attribute
selector
)
on
the
subviews
that
are
not
being
displayed
.
We
'
re
using
this
over
a
deck
because
a
deck
assumes
the
size
of
its
largest
child
regardless
of
whether
or
not
it
is
shown
.
That
'
s
not
good
for
our
case
since
we
want
to
allow
each
subview
to
be
uniquely
sized
.
-
-
>
<
xul
:
vbox
anonid
=
"
subViews
"
class
=
"
panel
-
subviews
"
xbl
:
inherits
=
"
panelopen
"
>
<
children
includes
=
"
panelview
"
/
>
<
/
xul
:
vbox
>
<
/
xul
:
stack
>
<
/
xul
:
box
>
<
/
content
>
<
implementation
>
<
constructor
>
<
!
[
CDATA
[
const
{
PanelMultiView
}
=
Components
.
utils
.
import
(
"
resource
:
/
/
/
modules
/
PanelMultiView
.
jsm
"
{
}
)
;
this
.
instance
=
new
PanelMultiView
(
this
)
;
]
]
>
<
/
constructor
>
<
destructor
>
<
!
[
CDATA
[
this
.
instance
.
destructor
(
)
;
]
]
>
<
/
destructor
>
<
/
implementation
>
<
/
binding
>
<
binding
id
=
"
panelview
"
>
<
implementation
>
<
property
name
=
"
panelMultiView
"
readonly
=
"
true
"
>
<
getter
>
<
!
[
CDATA
[
if
(
this
.
parentNode
.
localName
!
=
"
panelmultiview
"
)
{
return
document
.
getBindingParent
(
this
.
parentNode
)
;
}
return
this
.
parentNode
;
]
]
>
<
/
getter
>
<
/
property
>
<
/
implementation
>
<
/
binding
>
<
/
bindings
>
