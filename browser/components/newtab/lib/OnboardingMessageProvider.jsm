/
*
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
*
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
*
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
*
/
"
use
strict
"
;
/
*
globals
Localization
*
/
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
L10N
=
new
Localization
(
[
"
branding
/
brand
.
ftl
"
"
browser
/
branding
/
brandings
.
ftl
"
"
browser
/
branding
/
sync
-
brand
.
ftl
"
"
browser
/
newtab
/
onboarding
.
ftl
"
]
)
;
const
ONBOARDING_MESSAGES
=
(
)
=
>
[
{
id
:
"
FXA_ACCOUNTS_BADGE
"
template
:
"
toolbar_badge
"
content
:
{
delay
:
10000
/
/
delay
for
10
seconds
target
:
"
fxa
-
toolbar
-
menu
-
button
"
}
targeting
:
"
false
"
trigger
:
{
id
:
"
toolbarBadgeUpdate
"
}
}
{
id
:
"
PROTECTIONS_PANEL_1
"
template
:
"
protections_panel
"
content
:
{
title
:
{
string_id
:
"
cfr
-
protections
-
panel
-
header
"
}
body
:
{
string_id
:
"
cfr
-
protections
-
panel
-
body
"
}
link_text
:
{
string_id
:
"
cfr
-
protections
-
panel
-
link
-
text
"
}
cta_url
:
{
Services
.
urlFormatter
.
formatURLPref
(
"
app
.
support
.
baseURL
"
)
}
etp
-
promotions
?
as
=
u
&
utm_source
=
inproduct
cta_type
:
"
OPEN_URL
"
}
trigger
:
{
id
:
"
protectionsPanelOpen
"
}
}
{
id
:
"
PB_NEWTAB_FOCUS_PROMO
"
template
:
"
pb_newtab
"
groups
:
[
"
pbNewtab
"
]
content
:
{
infoBody
:
"
fluent
:
about
-
private
-
browsing
-
info
-
description
-
simplified
"
infoEnabled
:
true
infoIcon
:
"
chrome
:
/
/
global
/
skin
/
icons
/
indicator
-
private
-
browsing
.
svg
"
infoLinkText
:
"
fluent
:
about
-
private
-
browsing
-
learn
-
more
-
link
"
infoTitle
:
"
"
infoTitleEnabled
:
false
promoEnabled
:
true
promoHeader
:
"
fluent
:
about
-
private
-
browsing
-
focus
-
promo
-
header
"
promoImageLarge
:
"
chrome
:
/
/
browser
/
content
/
assets
/
focus
-
promo
.
png
"
promoLinkText
:
"
fluent
:
about
-
private
-
browsing
-
focus
-
promo
-
cta
"
promoLinkType
:
"
button
"
promoSectionStyle
:
"
below
-
search
"
promoTitle
:
"
fluent
:
about
-
private
-
browsing
-
focus
-
promo
-
text
"
promoTitleEnabled
:
true
promoButton
:
{
action
:
{
type
:
"
SHOW_SPOTLIGHT
"
data
:
{
content
:
{
id
:
"
FOCUS_PROMO
"
template
:
"
multistage
"
modal
:
"
tab
"
metrics
:
"
block
"
backdrop
:
"
transparent
"
screens
:
[
{
id
:
"
DEFAULT_MODAL_UI
"
order
:
0
content
:
{
logo
:
{
imageURL
:
"
chrome
:
/
/
browser
/
content
/
assets
/
focus
-
logo
.
svg
"
height
:
"
48px
"
}
title
:
{
string_id
:
"
spotlight
-
focus
-
promo
-
title
"
}
subtitle
:
{
string_id
:
"
spotlight
-
focus
-
promo
-
subtitle
"
}
dismiss_button
:
{
action
:
{
navigate
:
true
}
}
ios
:
{
action
:
{
data
:
{
args
:
"
https
:
/
/
app
.
adjust
.
com
/
167k4ih
?
campaign
=
firefox
-
desktop
&
adgroup
=
pb
&
creative
=
focus
-
omc172
&
redirect
=
https
%
3A
%
2F
%
2Fapps
.
apple
.
com
%
2Fus
%
2Fapp
%
2Ffirefox
-
focus
-
privacy
-
browser
%
2Fid1055677337
"
where
:
"
tabshifted
"
}
type
:
"
OPEN_URL
"
navigate
:
true
}
}
android
:
{
action
:
{
data
:
{
args
:
"
https
:
/
/
app
.
adjust
.
com
/
167k4ih
?
campaign
=
firefox
-
desktop
&
adgroup
=
pb
&
creative
=
focus
-
omc172
&
redirect
=
https
%
3A
%
2F
%
2Fplay
.
google
.
com
%
2Fstore
%
2Fapps
%
2Fdetails
%
3Fid
%
3Dorg
.
mozilla
.
focus
"
where
:
"
tabshifted
"
}
type
:
"
OPEN_URL
"
navigate
:
true
}
}
tiles
:
{
type
:
"
mobile_downloads
"
data
:
{
QR_code
:
{
image_url
:
"
chrome
:
/
/
browser
/
content
/
assets
/
focus
-
qr
-
code
.
svg
"
alt_text
:
{
string_id
:
"
spotlight
-
focus
-
promo
-
qr
-
code
"
}
image_overrides
:
{
de
:
"
chrome
:
/
/
browser
/
content
/
assets
/
klar
-
qr
-
code
.
svg
"
}
}
marketplace_buttons
:
[
"
ios
"
"
android
"
]
}
}
}
}
]
}
}
}
}
}
priority
:
2
frequency
:
{
custom
:
[
{
cap
:
1
period
:
604800000
/
/
Max
1
per
week
}
]
lifetime
:
3
}
targeting
:
"
true
"
}
{
id
:
"
PB_NEWTAB_INFO_SECTION
"
template
:
"
pb_newtab
"
content
:
{
promoEnabled
:
false
infoEnabled
:
true
infoIcon
:
"
"
infoTitle
:
"
"
infoBody
:
"
fluent
:
about
-
private
-
browsing
-
info
-
description
-
private
-
window
"
infoLinkText
:
"
fluent
:
about
-
private
-
browsing
-
learn
-
more
-
link
"
infoTitleEnabled
:
false
}
targeting
:
"
true
"
}
]
;
const
OnboardingMessageProvider
=
{
async
getExtraAttributes
(
)
{
const
[
header
button_label
]
=
await
L10N
.
formatMessages
(
[
{
id
:
"
onboarding
-
welcome
-
header
"
}
{
id
:
"
onboarding
-
start
-
browsing
-
button
-
label
"
}
]
)
;
return
{
header
:
header
.
value
button_label
:
button_label
.
value
}
;
}
async
getMessages
(
)
{
const
messages
=
await
this
.
translateMessages
(
await
ONBOARDING_MESSAGES
(
)
)
;
return
messages
;
}
async
getUntranslatedMessages
(
)
{
/
/
This
is
helpful
for
jsonSchema
testing
-
since
we
are
localizing
in
the
provider
const
messages
=
await
ONBOARDING_MESSAGES
(
)
;
return
messages
;
}
async
translateMessages
(
messages
)
{
let
translatedMessages
=
[
]
;
for
(
const
msg
of
messages
)
{
let
translatedMessage
=
{
.
.
.
msg
}
;
/
/
If
the
message
has
no
content
do
not
attempt
to
translate
it
if
(
!
translatedMessage
.
content
)
{
translatedMessages
.
push
(
translatedMessage
)
;
continue
;
}
/
/
Translate
any
secondary
buttons
separately
if
(
msg
.
content
.
secondary_button
)
{
const
[
secondary_button_string
]
=
await
L10N
.
formatMessages
(
[
{
id
:
msg
.
content
.
secondary_button
.
label
.
string_id
}
]
)
;
translatedMessage
.
content
.
secondary_button
.
label
=
secondary_button_string
.
value
;
}
if
(
msg
.
content
.
header
)
{
const
[
header_string
]
=
await
L10N
.
formatMessages
(
[
{
id
:
msg
.
content
.
header
.
string_id
}
]
)
;
translatedMessage
.
content
.
header
=
header_string
.
value
;
}
translatedMessages
.
push
(
translatedMessage
)
;
}
return
translatedMessages
;
}
}
;
this
.
OnboardingMessageProvider
=
OnboardingMessageProvider
;
const
EXPORTED_SYMBOLS
=
[
"
OnboardingMessageProvider
"
]
;
