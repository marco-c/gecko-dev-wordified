/
*
Any
copyright
is
dedicated
to
the
Public
Domain
.
https
:
/
/
creativecommons
.
org
/
publicdomain
/
zero
/
1
.
0
/
*
/
"
use
strict
"
;
/
*
*
*
This
test
case
verifies
the
counts
and
extra
data
sent
from
telemetry
events
when
interacting
*
with
the
SelectTranslationsPanel
'
s
translation
-
failure
UI
states
.
*
/
add_task
(
async
function
test_select_translations_panel_telemetry_translation_failure_ui
(
)
{
const
{
cleanup
runInPage
rejectDownloads
resolveDownloads
}
=
await
loadTestPage
(
{
page
:
SELECT_TEST_PAGE_URL
languagePairs
:
LANGUAGE_PAIRS
prefs
:
[
[
"
browser
.
translations
.
select
.
enable
"
true
]
]
}
)
;
await
SelectTranslationsTestUtils
.
openPanel
(
runInPage
{
selectFrenchSection
:
true
openAtFrenchSection
:
true
expectedFromLanguage
:
"
fr
"
expectedToLanguage
:
"
en
"
downloadHandler
:
rejectDownloads
onOpenPanel
:
SelectTranslationsTestUtils
.
assertPanelViewTranslationFailure
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
open
{
expectedEventCount
:
1
expectNewFlowId
:
true
finalValuePredicates
:
[
value
=
>
value
.
extra
.
document_language
=
=
=
"
es
"
value
=
>
value
.
extra
.
from_language
=
=
=
"
fr
"
value
=
>
value
.
extra
.
to_language
=
=
=
"
en
"
value
=
>
value
.
extra
.
top_preferred_language
=
=
=
"
en
"
]
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translations
.
translationRequest
{
expectedEventCount
:
1
finalValuePredicates
:
[
value
=
>
value
.
extra
.
document_language
=
=
=
"
es
"
value
=
>
value
.
extra
.
from_language
=
=
=
"
fr
"
value
=
>
value
.
extra
.
to_language
=
=
=
"
en
"
value
=
>
value
.
extra
.
top_preferred_language
=
=
=
"
en
"
value
=
>
value
.
extra
.
request_target
=
=
=
"
select
"
value
=
>
value
.
extra
.
auto_translate
=
=
=
"
false
"
value
=
>
value
.
extra
.
source_text_code_units
=
=
=
(
AppConstants
.
platform
=
=
=
"
win
"
?
"
1616
"
/
/
With
carriage
returns
:
"
1607
"
)
/
/
No
carriage
returns
value
=
>
value
.
extra
.
source_text_word_count
=
=
=
"
257
"
]
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
translationFailureMessage
{
expectedEventCount
:
1
finalValuePredicates
:
[
value
=
>
value
.
extra
.
from_language
=
=
=
"
fr
"
value
=
>
value
.
extra
.
to_language
=
=
=
"
en
"
]
}
)
;
await
SelectTranslationsTestUtils
.
clickTryAgainButton
(
{
downloadHandler
:
rejectDownloads
viewAssertion
:
SelectTranslationsTestUtils
.
assertPanelViewTranslationFailure
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
tryAgainButton
{
expectedEventCount
:
1
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translations
.
translationRequest
{
expectedEventCount
:
2
finalValuePredicates
:
[
value
=
>
value
.
extra
.
document_language
=
=
=
"
es
"
value
=
>
value
.
extra
.
from_language
=
=
=
"
fr
"
value
=
>
value
.
extra
.
to_language
=
=
=
"
en
"
value
=
>
value
.
extra
.
top_preferred_language
=
=
=
"
en
"
value
=
>
value
.
extra
.
request_target
=
=
=
"
select
"
value
=
>
value
.
extra
.
auto_translate
=
=
=
"
false
"
value
=
>
value
.
extra
.
source_text_code_units
=
=
=
(
AppConstants
.
platform
=
=
=
"
win
"
?
"
1616
"
/
/
With
carriage
returns
:
"
1607
"
)
/
/
No
carriage
returns
value
=
>
value
.
extra
.
source_text_word_count
=
=
=
"
257
"
]
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
translationFailureMessage
{
expectedEventCount
:
2
finalValuePredicates
:
[
value
=
>
value
.
extra
.
from_language
=
=
=
"
fr
"
value
=
>
value
.
extra
.
to_language
=
=
=
"
en
"
]
}
)
;
await
SelectTranslationsTestUtils
.
clickCancelButton
(
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
cancelButton
{
expectedEventCount
:
1
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
close
{
expectedEventCount
:
1
}
)
;
await
SelectTranslationsTestUtils
.
openPanel
(
runInPage
{
selectFrenchSection
:
true
openAtFrenchSection
:
true
expectedFromLanguage
:
"
fr
"
expectedToLanguage
:
"
en
"
downloadHandler
:
rejectDownloads
onOpenPanel
:
SelectTranslationsTestUtils
.
assertPanelViewTranslationFailure
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
open
{
expectedEventCount
:
2
expectNewFlowId
:
true
finalValuePredicates
:
[
value
=
>
value
.
extra
.
document_language
=
=
=
"
es
"
value
=
>
value
.
extra
.
from_language
=
=
=
"
fr
"
value
=
>
value
.
extra
.
to_language
=
=
=
"
en
"
value
=
>
value
.
extra
.
top_preferred_language
=
=
=
"
en
"
]
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translations
.
translationRequest
{
expectedEventCount
:
3
finalValuePredicates
:
[
value
=
>
value
.
extra
.
document_language
=
=
=
"
es
"
value
=
>
value
.
extra
.
from_language
=
=
=
"
fr
"
value
=
>
value
.
extra
.
to_language
=
=
=
"
en
"
value
=
>
value
.
extra
.
top_preferred_language
=
=
=
"
en
"
value
=
>
value
.
extra
.
request_target
=
=
=
"
select
"
value
=
>
value
.
extra
.
auto_translate
=
=
=
"
false
"
value
=
>
value
.
extra
.
source_text_code_units
=
=
=
(
AppConstants
.
platform
=
=
=
"
win
"
?
"
1616
"
/
/
With
carriage
returns
:
"
1607
"
)
/
/
No
carriage
returns
value
=
>
value
.
extra
.
source_text_word_count
=
=
=
"
257
"
]
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
translationFailureMessage
{
expectedEventCount
:
3
finalValuePredicates
:
[
value
=
>
value
.
extra
.
from_language
=
=
=
"
fr
"
value
=
>
value
.
extra
.
to_language
=
=
=
"
en
"
]
}
)
;
await
SelectTranslationsTestUtils
.
clickTryAgainButton
(
{
downloadHandler
:
resolveDownloads
viewAssertion
:
SelectTranslationsTestUtils
.
assertPanelViewTranslated
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
tryAgainButton
{
expectedEventCount
:
2
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translations
.
translationRequest
{
expectedEventCount
:
4
finalValuePredicates
:
[
value
=
>
value
.
extra
.
document_language
=
=
=
"
es
"
value
=
>
value
.
extra
.
from_language
=
=
=
"
fr
"
value
=
>
value
.
extra
.
to_language
=
=
=
"
en
"
value
=
>
value
.
extra
.
top_preferred_language
=
=
=
"
en
"
value
=
>
value
.
extra
.
request_target
=
=
=
"
select
"
value
=
>
value
.
extra
.
auto_translate
=
=
=
"
false
"
value
=
>
value
.
extra
.
source_text_code_units
=
=
=
(
AppConstants
.
platform
=
=
=
"
win
"
?
"
1616
"
/
/
With
carriage
returns
:
"
1607
"
)
/
/
No
carriage
returns
value
=
>
value
.
extra
.
source_text_word_count
=
=
=
"
257
"
]
}
)
;
await
SelectTranslationsTestUtils
.
clickDoneButton
(
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
doneButton
{
expectedEventCount
:
1
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
close
{
expectedEventCount
:
2
}
)
;
await
cleanup
(
)
;
}
)
;
