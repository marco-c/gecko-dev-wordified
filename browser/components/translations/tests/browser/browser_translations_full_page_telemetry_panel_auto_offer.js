/
*
Any
copyright
is
dedicated
to
the
Public
Domain
.
http
:
/
/
creativecommons
.
org
/
publicdomain
/
zero
/
1
.
0
/
*
/
"
use
strict
"
;
/
*
*
*
Tests
that
the
popup
is
automatically
offered
.
*
/
add_task
(
async
function
test_translations_panel_auto_offer
(
)
{
const
{
cleanup
}
=
await
loadTestPage
(
{
page
:
SPANISH_PAGE_URL
languagePairs
:
LANGUAGE_PAIRS
autoOffer
:
true
}
)
;
await
FullPageTranslationsTestUtils
.
clickCancelButton
(
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsPanel
.
open
{
expectedEventCount
:
1
expectNewFlowId
:
true
assertForAllEvents
:
{
auto_show
:
true
view_name
:
"
defaultView
"
opened_from
:
"
translationsButton
"
document_language
:
"
es
"
}
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsPanel
.
cancelButton
{
expectedEventCount
:
1
expectNewFlowId
:
false
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsPanel
.
close
{
expectedEventCount
:
1
expectNewFlowId
:
false
}
)
;
await
navigate
(
"
Navigate
to
another
page
on
the
same
domain
.
"
{
url
:
SPANISH_PAGE_URL_2
}
)
;
await
FullPageTranslationsTestUtils
.
assertTranslationsButton
(
{
button
:
true
}
"
The
button
is
still
shown
.
"
)
;
await
navigate
(
"
Navigate
to
a
page
on
a
different
domain
.
"
{
url
:
SPANISH_PAGE_URL_DOT_ORG
onOpenPanel
:
FullPageTranslationsTestUtils
.
assertPanelViewIntro
}
)
;
await
FullPageTranslationsTestUtils
.
clickCancelButton
(
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsPanel
.
open
{
expectedEventCount
:
2
expectNewFlowId
:
true
assertForAllEvents
:
{
auto_show
:
true
view_name
:
"
defaultView
"
opened_from
:
"
translationsButton
"
document_language
:
"
es
"
}
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsPanel
.
cancelButton
{
expectedEventCount
:
2
expectNewFlowId
:
false
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsPanel
.
close
{
expectedEventCount
:
2
expectNewFlowId
:
false
}
)
;
await
TestTranslationsTelemetry
.
assertTranslationsEnginePerformance
(
{
expectedEventCount
:
0
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translations
.
identifyPageLanguage
{
expectedEventCount
:
3
assertForAllEvents
:
{
html_lang_attribute
:
"
es
"
identified_language
:
"
es
"
lang_tags_match
:
true
is_lang_attribute_valid
:
true
extracted_code_units
:
2132
extraction_time
:
ms
=
>
0
<
ms
&
&
ms
<
250
identification_time
:
ms
=
>
0
<
ms
&
&
ms
<
250
total_time
:
ms
=
>
0
<
ms
&
&
ms
<
500
confident
:
true
}
}
)
;
await
cleanup
(
)
;
}
)
;
