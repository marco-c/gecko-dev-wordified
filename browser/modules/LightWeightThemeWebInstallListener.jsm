/
*
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
*
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
*
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
*
/
var
LightWeightThemeWebInstallListener
=
{
_previewWindow
:
null
init
(
)
{
addEventListener
(
"
InstallBrowserTheme
"
this
false
true
)
;
addEventListener
(
"
PreviewBrowserTheme
"
this
false
true
)
;
addEventListener
(
"
ResetBrowserThemePreview
"
this
false
true
)
;
}
handleEvent
(
event
)
{
switch
(
event
.
type
)
{
case
"
InstallBrowserTheme
"
:
{
sendAsyncMessage
(
"
LightWeightThemeWebInstaller
:
Install
"
{
baseURI
:
event
.
target
.
baseURI
principal
:
event
.
target
.
nodePrincipal
themeData
:
event
.
target
.
getAttribute
(
"
data
-
browsertheme
"
)
}
)
;
break
;
}
case
"
PreviewBrowserTheme
"
:
{
sendAsyncMessage
(
"
LightWeightThemeWebInstaller
:
Preview
"
{
baseURI
:
event
.
target
.
baseURI
principal
:
event
.
target
.
nodePrincipal
themeData
:
event
.
target
.
getAttribute
(
"
data
-
browsertheme
"
)
}
)
;
this
.
_previewWindow
=
event
.
target
.
ownerGlobal
;
this
.
_previewWindow
.
addEventListener
(
"
pagehide
"
this
true
)
;
break
;
}
case
"
pagehide
"
:
{
sendAsyncMessage
(
"
LightWeightThemeWebInstaller
:
ResetPreview
"
)
;
this
.
_resetPreviewWindow
(
)
;
break
;
}
case
"
ResetBrowserThemePreview
"
:
{
if
(
this
.
_previewWindow
)
{
sendAsyncMessage
(
"
LightWeightThemeWebInstaller
:
ResetPreview
"
{
principal
:
event
.
target
.
nodePrincipal
}
)
;
this
.
_resetPreviewWindow
(
)
;
}
break
;
}
}
}
_resetPreviewWindow
(
)
{
this
.
_previewWindow
.
removeEventListener
(
"
pagehide
"
this
true
)
;
this
.
_previewWindow
=
null
;
}
}
;
LightWeightThemeWebInstallListener
.
init
(
)
;
