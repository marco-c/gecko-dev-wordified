/
/
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
/
/
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
/
/
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
"
use
strict
"
;
this
.
EXPORTED_SYMBOLS
=
[
"
BrowserUITelemetry
"
]
;
const
Cu
=
Components
.
utils
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
UITelemetry
"
"
resource
:
/
/
gre
/
modules
/
UITelemetry
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
RecentWindow
"
"
resource
:
/
/
/
modules
/
RecentWindow
.
jsm
"
)
;
this
.
BrowserUITelemetry
=
{
init
:
function
(
)
{
UITelemetry
.
addSimpleMeasureFunction
(
"
toolbars
"
this
.
getToolbarMeasures
.
bind
(
this
)
)
;
}
getToolbarMeasures
:
function
(
)
{
/
/
Grab
the
most
recent
non
-
popup
non
-
private
browser
window
for
us
to
/
/
analyze
the
toolbars
in
.
.
.
let
win
=
RecentWindow
.
getMostRecentBrowserWindow
(
{
private
:
false
allowPopups
:
false
}
)
;
/
/
If
there
are
no
such
windows
we
'
re
out
of
luck
.
:
(
if
(
!
win
)
{
return
{
}
;
}
let
document
=
win
.
document
;
let
result
=
{
}
;
return
result
;
}
}
;
