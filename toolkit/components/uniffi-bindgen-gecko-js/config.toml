#
Configure
UniFFI
sources
#
#
Each
key
is
the
UDL
namespace
of
the
component
.
#
#
#
IMPORTANT
:
Please
Request
review
from
a
DOM
peer
before
#
committing
to
using
UniFFI
.
There
are
other
ways
to
consume
Rust
from
#
JavaScript
that
might
fit
your
use
case
better
.
#
TODO
:
Upgrade
the
TOML
crate
and
switch
to
array
of
tables
syntax
.
[
context_id
.
async_wrappers
]
enable
=
true
main_thread
=
[
"
ContextIDComponent
.
new
"
]
[
search
.
async_wrappers
]
#
All
functions
/
methods
are
wrapped
to
be
async
by
default
and
must
be
await
ed
.
enable
=
true
#
These
are
exceptions
to
the
async
wrapping
.
These
functions
must
not
be
await
ed
.
main_thread
=
[
"
SearchEngineSelector
.
new
"
"
SearchEngineSelector
.
clear_search_config
"
"
SearchEngineSelector
.
filter_engine_configuration
"
"
SearchEngineSelector
.
set_search_config
"
"
SearchEngineSelector
.
set_config_overrides
"
]
[
suggest
.
async_wrappers
]
#
All
functions
/
methods
are
wrapped
to
be
async
by
default
and
must
be
await
ed
.
enable
=
true
#
These
are
exceptions
to
the
async
wrapping
.
These
functions
must
not
be
await
ed
.
main_thread
=
[
"
raw_suggestion_url_matches
"
"
SuggestStore
.
new
"
"
SuggestStore
.
interrupt
"
"
SuggestStoreBuilder
.
new
"
"
SuggestStoreBuilder
.
data_path
"
"
SuggestStoreBuilder
.
load_extension
"
"
SuggestStoreBuilder
.
remote_settings_bucket_name
"
"
SuggestStoreBuilder
.
remote_settings_server
"
"
SuggestStoreBuilder
.
remote_settings_service
"
"
SuggestStoreBuilder
.
build
"
]
[
relevancy
.
async_wrappers
]
#
All
functions
/
methods
are
wrapped
to
be
async
by
default
and
must
be
await
ed
.
enable
=
true
#
These
are
exceptions
to
the
async
wrapping
.
These
functions
must
not
be
await
ed
.
main_thread
=
[
"
RelevancyStore
.
new
"
"
RelevancyStore
.
close
"
"
RelevancyStore
.
interrupt
"
"
score
"
]
[
remote_settings
.
async_wrappers
]
#
All
functions
/
methods
are
wrapped
to
be
async
by
default
and
must
be
await
ed
.
enable
=
true
#
These
are
exceptions
to
the
async
wrapping
.
These
functions
must
not
be
await
ed
.
main_thread
=
[
"
RemoteSettings
.
new
"
"
RemoteSettingsService
.
new
"
"
RemoteSettingsService
.
update_config
"
]
[
error_support
.
async_wrappers
]
#
All
functions
/
methods
are
wrapped
to
be
async
by
default
and
must
be
await
ed
.
enable
=
true
[
tabs
.
async_wrappers
]
#
All
functions
/
methods
are
wrapped
to
be
async
by
default
and
must
be
await
ed
.
enable
=
true
[
webext_storage
.
async_wrappers
]
enable
=
true
[
uniffi_bindings_tests
.
async_wrappers
]
enable
=
true
main_thread
=
[
"
clone_interface
"
"
func_with_default
"
"
func_with_error
"
"
func_with_flat_error
"
"
func_roundtrip_custom_type
"
"
swap_test_interfaces
"
"
invoke_test_callback_interface_method
"
"
roundtrip_u8
"
"
roundtrip_i8
"
"
roundtrip_u16
"
"
roundtrip_i16
"
"
roundtrip_u32
"
"
roundtrip_i32
"
"
roundtrip_u64
"
"
roundtrip_i64
"
"
roundtrip_f32
"
"
roundtrip_f64
"
"
roundtrip_bool
"
"
roundtrip_custom_type
"
"
roundtrip_string
"
"
sum_with_many_types
"
"
test_func
"
"
func_with_multi_word_arg
"
"
roundtrip_option
"
"
roundtrip_vec
"
"
roundtrip_hash_map
"
"
roundtrip_complex_compound
"
"
roundtrip_complex_rec
"
"
roundtrip_enum_no_data
"
"
roundtrip_enum_with_data
"
"
roundtrip_complex_enum
"
"
AsyncInterface
.
new
"
"
ComplexMethods
.
method_with_default
"
"
ComplexMethods
.
method_with_multi_word_arg
"
"
ComplexMethods
.
new
"
"
TestInterface
.
new
"
"
TestInterface
.
get_value
"
"
TestInterface
.
ref_count
"
]
