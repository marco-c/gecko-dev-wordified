/
*
-
*
-
Mode
:
C
+
+
;
c
-
basic
-
offset
:
2
;
indent
-
tabs
-
mode
:
nil
;
tab
-
width
:
8
-
*
-
*
/
/
*
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
*
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
*
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
*
/
#
include
"
nsISupports
.
idl
"
[
scriptable
uuid
(
05b89d2a
-
d57c
-
11ea
-
82da
-
3f63399a6f5a
)
]
interface
nsIGleanCounter
:
nsISupports
{
/
*
*
Increases
the
counter
by
amount
.
*
*
param
amount
The
amount
to
increase
by
.
Should
be
positive
.
*
/
[
implicit_jscontext
]
void
add
(
in
uint32_t
amount
)
;
/
*
*
*
*
*
Test
-
only
API
*
*
*
*
Tests
whether
a
value
is
stored
for
the
metric
.
*
*
This
function
will
attempt
to
await
the
last
parent
-
process
task
(
if
any
)
*
writing
to
the
the
metric
'
s
storage
engine
before
returning
a
value
.
*
This
function
will
not
wait
for
data
from
child
processes
.
*
*
Parent
process
only
.
Panics
in
child
processes
.
*
*
param
aStorageName
the
name
of
the
ping
to
retrieve
the
metric
for
.
*
return
true
if
metric
value
exists
otherwise
false
*
/
[
implicit_jscontext
]
bool
testHasValue
(
in
ACString
aStorageName
)
;
/
*
*
*
*
*
Test
-
only
API
*
*
*
*
Gets
the
currently
stored
value
as
an
integer
.
*
*
This
function
will
attempt
to
await
the
last
parent
-
process
task
(
if
any
)
*
writing
to
the
the
metric
'
s
storage
engine
before
returning
a
value
.
*
This
function
will
not
wait
for
data
from
child
processes
.
*
*
This
doesn
'
t
clear
the
stored
value
.
*
Parent
process
only
.
Panics
in
child
processes
.
*
*
return
value
of
the
stored
metric
.
*
/
[
implicit_jscontext
]
long
testGetValue
(
in
ACString
aStorageName
)
;
}
;
