/
/
Generated
by
uniffi
-
bindgen
-
gecko
-
js
.
DO
NOT
EDIT
.
#
include
"
nsString
.
h
"
#
include
"
nsPrintfCString
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
dom
/
UniFFIScaffolding
.
h
"
#
include
"
mozilla
/
dom
/
ScaffoldingCall
.
h
"
namespace
mozilla
:
:
uniffi
{
using
dom
:
:
ArrayBuffer
;
using
dom
:
:
GlobalObject
;
using
dom
:
:
RootedDictionary
;
using
dom
:
:
Promise
;
using
dom
:
:
ScaffoldingType
;
using
dom
:
:
Sequence
;
using
dom
:
:
UniFFIPointer
;
using
dom
:
:
UniFFIScaffoldingCallResult
;
/
/
Define
scaffolding
functions
from
UniFFI
extern
"
C
"
{
}
/
/
Define
pointer
types
Maybe
<
already_AddRefed
<
Promise
>
>
UniFFICallAsync
(
const
GlobalObject
&
aGlobal
uint64_t
aId
const
Sequence
<
ScaffoldingType
>
&
aArgs
ErrorResult
&
aError
)
{
switch
(
aId
)
{
}
return
Nothing
(
)
;
}
bool
UniFFICallSync
(
const
GlobalObject
&
aGlobal
uint64_t
aId
const
Sequence
<
ScaffoldingType
>
&
aArgs
RootedDictionary
<
UniFFIScaffoldingCallResult
>
&
aReturnValue
ErrorResult
&
aError
)
{
switch
(
aId
)
{
}
return
false
;
}
Maybe
<
already_AddRefed
<
UniFFIPointer
>
>
UniFFIReadPointer
(
const
GlobalObject
&
aGlobal
uint64_t
aId
const
ArrayBuffer
&
aArrayBuff
long
aPosition
ErrorResult
&
aError
)
{
return
Nothing
(
)
;
}
bool
UniFFIWritePointer
(
const
GlobalObject
&
aGlobal
uint64_t
aId
const
UniFFIPointer
&
aPtr
const
ArrayBuffer
&
aArrayBuff
long
aPosition
ErrorResult
&
aError
)
{
return
false
;
}
}
/
/
namespace
mozilla
:
:
uniffi
