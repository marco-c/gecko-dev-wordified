:
host
{
-
-
info
-
icon
-
url
:
url
(
"
chrome
:
/
/
global
/
skin
/
icons
/
info
.
svg
"
)
;
-
-
warn
-
icon
-
url
:
url
(
"
chrome
:
/
/
global
/
skin
/
icons
/
warning
.
svg
"
)
;
-
-
check
-
icon
-
url
:
url
(
"
chrome
:
/
/
global
/
skin
/
icons
/
check
.
svg
"
)
;
-
-
error
-
icon
-
url
:
url
(
"
chrome
:
/
/
global
/
skin
/
icons
/
error
.
svg
"
)
;
-
-
close
-
icon
-
url
:
url
(
"
chrome
:
/
/
global
/
skin
/
icons
/
close
.
svg
"
)
;
-
-
icon
-
size
:
16px
;
}
/
*
MessageBar
colors
by
message
type
*
/
:
host
(
[
type
=
warning
]
)
{
background
-
color
:
var
(
-
-
yellow
-
50
)
;
color
:
var
(
-
-
yellow
-
90
)
;
}
:
host
(
[
type
=
success
]
)
{
background
-
color
:
#
30e60b
;
color
:
#
003706
;
}
:
host
(
[
type
=
error
]
)
{
background
:
#
d70022
;
color
:
#
ffffff
;
}
:
host
{
border
-
radius
:
4px
;
/
*
Colors
used
by
default
and
for
[
type
=
generic
]
message
bars
.
*
/
background
-
color
:
var
(
-
-
grey
-
20
)
;
color
:
var
(
-
-
grey
-
90
)
;
}
/
*
Make
the
host
to
behave
as
a
block
by
default
but
allow
hidden
to
hide
it
.
*
/
:
host
(
:
not
(
[
hidden
]
)
)
{
display
:
block
;
}
.
container
{
background
:
inherit
;
color
:
inherit
;
}
/
*
MessageBar
Grid
Layout
*
/
.
container
{
padding
-
top
:
2px
;
padding
-
bottom
:
2px
;
padding
-
inline
-
start
:
4px
;
min
-
height
:
32px
;
border
-
radius
:
4px
;
font
-
size
:
13px
;
font
-
weight
:
400
;
line
-
height
:
1
.
4
;
display
:
flex
;
/
*
Ensure
that
the
message
bar
shadow
dom
elements
are
vertically
aligned
.
*
/
align
-
items
:
center
;
}
:
host
(
[
dismissable
]
)
.
container
{
/
*
Add
padding
on
the
end
of
the
container
when
the
bar
is
dismissable
.
*
/
padding
-
inline
-
end
:
4px
;
}
.
icon
{
flex
-
shrink
:
0
;
}
.
content
{
margin
-
inline
-
end
:
4px
;
flex
-
grow
:
1
;
display
:
flex
;
/
*
Ensure
that
the
message
bar
content
is
vertically
aligned
.
*
/
align
-
items
:
center
;
/
*
Ensure
that
the
message
bar
content
is
wrapped
.
*
/
word
-
break
:
break
-
word
;
}
button
.
close
{
flex
-
shrink
:
0
;
}
:
:
slotted
(
button
)
{
/
*
Enforce
micro
-
button
width
.
*
/
min
-
width
:
-
moz
-
fit
-
content
!
important
;
}
/
*
MessageBar
icon
style
*
/
.
icon
{
padding
:
4px
;
width
:
var
(
-
-
icon
-
size
)
;
height
:
var
(
-
-
icon
-
size
)
;
}
.
icon
{
-
moz
-
appearance
:
none
;
-
moz
-
context
-
properties
:
fill
fill
-
opacity
;
color
:
inherit
!
important
;
fill
:
currentColor
;
fill
-
opacity
:
0
;
}
:
host
(
[
type
=
success
]
)
.
icon
{
fill
-
opacity
:
1
;
}
:
host
(
:
not
(
[
type
]
)
)
.
icon
:
:
after
:
host
(
[
type
=
generic
]
)
.
icon
:
:
after
{
content
:
var
(
-
-
info
-
icon
-
url
)
;
}
:
host
(
[
type
=
warning
]
)
.
icon
:
:
after
{
content
:
var
(
-
-
warn
-
icon
-
url
)
;
}
:
host
(
[
type
=
success
]
)
.
icon
:
:
after
{
content
:
var
(
-
-
check
-
icon
-
url
)
;
}
:
host
(
[
type
=
error
]
)
.
icon
:
:
after
{
content
:
var
(
-
-
error
-
icon
-
url
)
;
}
/
*
Close
icon
styles
*
/
:
host
(
:
not
(
[
dismissable
]
)
)
button
.
close
{
display
:
none
;
}
button
.
close
{
padding
:
4px
;
width
:
var
(
-
-
icon
-
size
)
;
height
:
var
(
-
-
icon
-
size
)
;
min
-
width
:
-
moz
-
fit
-
content
;
}
button
.
close
{
background
:
var
(
-
-
close
-
icon
-
url
)
no
-
repeat
center
center
;
-
moz
-
context
-
properties
:
fill
fill
-
opacity
;
color
:
inherit
!
important
;
fill
:
currentColor
;
fill
-
opacity
:
0
;
min
-
width
:
auto
;
min
-
height
:
auto
;
width
:
var
(
-
-
icon
-
size
)
;
height
:
var
(
-
-
icon
-
size
)
;
margin
:
0
;
padding
:
0
;
}
button
.
close
:
hover
{
fill
-
opacity
:
0
.
1
;
}
button
.
close
:
hover
:
active
{
fill
-
opacity
:
0
.
2
;
}
