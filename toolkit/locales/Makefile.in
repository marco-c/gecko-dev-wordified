#
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
#
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
#
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
include
(
topsrcdir
)
/
config
/
rules
.
mk
ifdef
LOCALE_MERGEDIR
vpath
crashreporter
.
%
(
LOCALE_MERGEDIR
)
/
toolkit
/
crashreporter
endif
vpath
crashreporter
.
%
(
LOCALE_SRCDIR
)
/
crashreporter
ifdef
LOCALE_MERGEDIR
vpath
crashreporter
.
%
srcdir
/
en
-
US
/
crashreporter
endif
libs
-
%
:
(
MAKE
)
-
C
.
.
/
.
.
/
netwerk
/
locales
/
libs
AB_CD
=
*
XPI_NAME
=
locale
-
*
(
MAKE
)
-
C
.
.
/
.
.
/
dom
/
locales
/
libs
AB_CD
=
*
XPI_NAME
=
locale
-
*
(
MAKE
)
-
C
.
.
/
.
.
/
security
/
manager
/
locales
/
libs
AB_CD
=
*
XPI_NAME
=
locale
-
*
(
MAKE
)
-
C
.
.
/
.
.
/
devtools
/
shared
/
locales
/
libs
AB_CD
=
*
XPI_NAME
=
locale
-
*
(
MAKE
)
libs
AB_CD
=
*
XPI_NAME
=
locale
-
*
#
target
to
be
used
by
multi
-
locale
l10n
builds
just
add
this
locale
#
like
regular
chrome
code
chrome
-
%
:
(
MAKE
)
-
C
(
DEPTH
)
/
netwerk
/
locales
/
chrome
AB_CD
=
*
(
MAKE
)
-
C
(
DEPTH
)
/
dom
/
locales
/
chrome
AB_CD
=
*
(
MAKE
)
-
C
(
DEPTH
)
/
security
/
manager
/
locales
/
chrome
AB_CD
=
*
(
MAKE
)
chrome
AB_CD
=
*
libs
:
:
update
.
locale
sed
-
e
'
s
/
%
AB_CD
%
/
(
AB_CD
)
/
'
<
>
(
FINAL_TARGET
)
/
update
.
locale
ifdef
MOZ_CRASHREPORTER
libs
:
:
crashreporter
.
ini
ifeq
(
cocoa
(
MOZ_WIDGET_TOOLKIT
)
)
(
SYSINSTALL
)
(
IFLAGS1
)
^
(
FINAL_TARGET
)
/
crashreporter
.
app
/
Contents
/
Resources
else
(
SYSINSTALL
)
(
IFLAGS1
)
^
(
FINAL_TARGET
)
endif
endif
libs
:
:
locale
-
manifest
.
in
MOZ_CHROME_MULTILOCALE
?
=
en
-
US
#
Firefox
uses
RESPATH
.
#
Fennec
uses
BINPATH
and
doesn
'
t
have
the
RESPATH
variable
defined
.
ifeq
(
(
MOZ_BUILD_APP
)
mobile
/
android
)
BASE_PATH
:
=
BINPATH
else
BASE_PATH
:
=
RESPATH
endif
locale
-
manifest
.
in
:
(
GLOBAL_DEPS
)
FORCE
printf
'
\
n
[
multilocale
]
\
n
'
>
printf
'
(
BASE_PATH
)
/
res
/
multilocale
.
json
\
n
'
>
>
for
LOCALE
in
(
MOZ_CHROME_MULTILOCALE
)
;
\
do
\
printf
'
(
BASE_PATH
)
/
chrome
/
'
"
LOCALE
"
'
JAREXT
\
n
'
>
>
;
\
printf
'
(
BASE_PATH
)
/
chrome
/
'
"
LOCALE
"
'
.
manifest
\
n
'
>
>
;
\
done
COMMA
=
#
XXX
:
It
would
be
nice
to
not
duplicate
en
-
US
here
but
makefile
makes
it
hard
.
echo
'
{
"
locales
"
:
[
(
foreach
l
(
MOZ_CHROME_MULTILOCALE
)
"
(
l
)
"
(
COMMA
)
)
"
en
-
US
"
]
}
'
\
>
(
DIST
)
/
bin
/
res
/
multilocale
.
json
GARBAGE
+
=
locale
-
manifest
.
in
